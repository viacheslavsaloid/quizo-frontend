(window.webpackJsonp = window.webpackJsonp || []).push([
  [3],
  {
    '+97Q': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return u;
      });
      var i = n('fXoL'),
        r = n('lDzL'),
        s = n('ofXK');
      const o = ['expandedRow'];
      function a(t, e) {}
      const c = function (t) {
        return { row: t };
      };
      function l(t, e) {
        if ((1 & t && i.Kc(0, a, 0, 0, 'ng-template', 5), 2 & t)) {
          const t = e.row,
            n = i.nc();
          i.vc('ngTemplateOutlet', n.expandedRow)('ngTemplateOutletContext', i.xc(2, c, t));
        }
      }
      let u = (() => {
        class t {
          constructor() {
            (this.paged = new i.p()),
              (this.activated = new i.p()),
              (this.selected = new i.p()),
              (this.rows = []),
              (this.columns = []),
              (this.columnMode = r.a.force),
              (this.headerHeight = 50),
              (this.footerHeight = 50),
              (this.scrollbarH = !0),
              (this.select = []),
              (this.offset = 0),
              (this.displayCheck = (t) => {});
          }
          onPage(t) {
            this.paged.emit(t);
          }
          onActivate(t) {
            this.activated.emit(t);
          }
          onSelect(t) {
            this.selected.emit(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-table']],
            contentQueries: function (t, e, n) {
              var r;
              1 & t && i.Ob(n, o, !0), 2 & t && i.Ac((r = i.kc())) && (e.expandedRow = r.first);
            },
            inputs: {
              rows: 'rows',
              columns: 'columns',
              loadingIndicator: 'loadingIndicator',
              reorderable: 'reorderable',
              columnMode: 'columnMode',
              headerHeight: 'headerHeight',
              footerHeight: 'footerHeight',
              rowHeight: 'rowHeight',
              scrollbarH: 'scrollbarH',
              scrollbarV: 'scrollbarV',
              selectionType: 'selectionType',
              limit: 'limit',
              select: 'select',
              externalPaging: 'externalPaging',
              externalSorting: 'externalSorting',
              count: 'count',
              offset: 'offset',
              selectAllRowsOnPage: 'selectAllRowsOnPage',
              displayCheck: 'displayCheck',
            },
            outputs: { paged: 'paged', activated: 'activated', selected: 'selected' },
            decls: 5,
            vars: 20,
            consts: [
              [
                1,
                'material',
                3,
                'rows',
                'columns',
                'loadingIndicator',
                'columnMode',
                'headerHeight',
                'footerHeight',
                'rowHeight',
                'scrollbarH',
                'scrollbarV',
                'reorderable',
                'selectionType',
                'selected',
                'limit',
                'externalPaging',
                'externalSorting',
                'count',
                'offset',
                'selectAllRowsOnPage',
                'displayCheck',
                'activate',
                'select',
                'page',
              ],
              ['myTable', ''],
              [3, 'rowHeight'],
              ['myDetailRow', ''],
              ['ngx-datatable-row-detail-template', ''],
              [3, 'ngTemplateOutlet', 'ngTemplateOutletContext'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.bc(0, 'ngx-datatable', 0, 1),
                i.jc('activate', function (t) {
                  return e.onActivate(t);
                })('select', function (t) {
                  return e.onSelect(t);
                })('page', function (t) {
                  return e.onPage(t);
                }),
                i.bc(2, 'ngx-datatable-row-detail', 2, 3),
                i.Kc(4, l, 1, 4, 'ng-template', 4),
                i.ac(),
                i.ac()),
                2 & t &&
                  (i.vc('rows', e.rows)('columns', e.columns)('loadingIndicator', e.loadingIndicator)(
                    'columnMode',
                    e.columnMode
                  )('headerHeight', e.headerHeight)('footerHeight', e.footerHeight)('rowHeight', e.rowHeight)(
                    'scrollbarH',
                    e.scrollbarH
                  )('scrollbarV', e.scrollbarV)('reorderable', e.reorderable)('selectionType', e.selectionType)(
                    'selected',
                    e.select
                  )('limit', e.limit)('externalPaging', e.externalPaging)('externalSorting', e.externalSorting)(
                    'count',
                    e.count
                  )('offset', e.offset)('selectAllRowsOnPage', e.selectAllRowsOnPage)('displayCheck', e.displayCheck),
                  i.Ib(2),
                  i.vc('rowHeight', 150));
            },
            directives: [r.b, r.c, r.d, s.q],
            styles: [
              'ngx-datatable[_ngcontent-%COMP%]{max-height:100%}ngx-datatable.ngx-datatable.scroll-vertical[_ngcontent-%COMP%]{height:60vh}ngx-datatable.ngx-datatable.scroll-vertical[_ngcontent-%COMP%]   .datatable-body[_ngcontent-%COMP%]{display:block}ngx-datatable.ngx-datatable.scroll-vertical[_ngcontent-%COMP%]   .datatable-row-detail[_ngcontent-%COMP%]{height:150px!important}ngx-datatable.ngx-datatable.scroll-vertical[_ngcontent-%COMP%]   datatable-pager[_ngcontent-%COMP%]{display:none}ngx-datatable[_ngcontent-%COMP%]   .visible[_ngcontent-%COMP%]{height:100%}ngx-datatable[_ngcontent-%COMP%]   mat-chip[_ngcontent-%COMP%]{display:flex;padding:5px 7.5px;border-radius:13px}ngx-datatable[_ngcontent-%COMP%]   datatable-progress[_ngcontent-%COMP%]{width:100%;position:fixed}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    '+AvP': function (t, e, n) {
      'use strict';
      n.d(e, 'b', function () {
        return s;
      }),
        n.d(e, 'a', function () {
          return a;
        });
      var i = n('XNiG'),
        r = n('fXoL');
      let s = (() => {
        class t extends i.a {
          ngOnDestroy() {
            this.next(null), this.complete();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return o(e || t);
          }),
          (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const o = r.dc(s),
        a = [s];
    },
    '+fa1': function (t, e, n) {
      'use strict';
      n.d(e, 'd', function () {
        return m;
      }),
        n.d(e, 'e', function () {
          return y;
        }),
        n.d(e, 'b', function () {
          return _;
        }),
        n.d(e, 'c', function () {
          return w;
        }),
        n.d(e, 'a', function () {
          return x;
        });
      var i = n('mrSG'),
        r = n('lJxs');
      const s = ({ data: t, filter: e = {} }) =>
        t.filter((t) =>
          Object.keys(e)
            .filter((t) => e[t])
            .every((n) => {
              const [i, ...r] = n.split('.'),
                s = ((t, e) => e.reduce((t, e) => t[e], t))(t[i], r);
              return s === e[n] || s.id === e[n];
            })
        );
      var o = n('Mjy2'),
        a = n('LvDl'),
        c = n('fXoL'),
        l = n('ptKI'),
        u = n('Blkl'),
        h = n('tyNb');
      let d = (() => {
        class t {
          constructor(t, e, n, i, r, s, o) {
            (this._apiService = t),
              (this._appPopupService = e),
              (this._state = n),
              (this._router = i),
              (this._apiEndpoint = r),
              (this._url = s),
              (this._form = o),
              (this.getCount = (t) =>
                this._state.total ||
                this._apiService.get(
                  this._apiEndpoint +
                    'count' +
                    ((t) =>
                      t
                        ? `?${((t) =>
                            Object.keys(t)
                              .filter((e) => t[e])
                              .map((e) => `${e}=${t[e]}`)
                              .join('&'))(t)}`
                        : '')(t)
                ));
          }
          navigateToItem(t) {
            this._router.navigateByUrl(`${this._url}/${t}`);
          }
          getMany$(t = {}) {
            const { filter: e = {} } = t;
            return this.compareStoreAndApi(t), this._state.values$.pipe(Object(r.a)((t) => s({ data: t, filter: e })));
          }
          getOne$(t) {
            const { id: e } = t;
            return this.getOne(t), this._state.values$.pipe(Object(r.a)((t) => t.find((t) => t.id === e)));
          }
          compareStoreAndApi(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const { filter: e = {} } = t,
                { length: n } = s({ data: this._state.values, filter: e }),
                { data: i } = yield this.getCount(e);
              (n && n === i) || this.addManyToStoreFromApi(t);
            });
          }
          getMany(t = {}) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const { filter: e } = t,
                { values: n } = this._state;
              return yield this.compareStoreAndApi(t), s({ data: n, filter: e });
            });
          }
          getOne(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const { id: e } = t,
                n = this._state.selectOne(e) || (yield this.addOneToStoreFromApi(t));
              return a.cloneDeep(n);
            });
          }
          addManyToStoreFromApi(t = {}) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const e = yield this.getManyFromApi(t);
              return this.addToStore(e);
            });
          }
          addOneToStoreFromApi(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const e = yield this.getOneFromApi(t);
              if (e) return this.addToStore({ data: [e.data] }), e.data;
            });
          }
          getOneFromApi(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                const { id: e } = t;
                return yield this._apiService.get(this._apiEndpoint + e);
              } catch (e) {
                console.error(e);
              }
            });
          }
          getManyFromApi(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                const { filter: e } = t,
                  n = yield this._apiService.get(
                    this._apiEndpoint +
                      ((t) =>
                        t
                          ? `?filter=${((t) =>
                              Object.keys(t)
                                .filter((e) => t[e])
                                .map((e) => `${e}||$eq||${t[e]}`)
                                .join('&filter='))(t)}`
                          : '')(e)
                  );
                return this._state.setTotal(n.total), n;
              } catch (e) {
                console.error(e);
              }
            });
          }
          addToStore(t) {
            const { data: e } = t;
            return this._state.addMany(e), this._state;
          }
          addOne(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                const { value: e } = t,
                  { data: n } = yield this._apiService.post(this._apiEndpoint, e);
                return this._state.addOne(n), n;
              } catch (e) {
                console.error(e);
              }
            });
          }
          removeOne(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const { id: e } = t;
              yield this._apiService.delete(this._apiEndpoint + e),
                this._state.removeOne(e),
                this._router.navigateByUrl(this._url);
            });
          }
          updateOne(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                const { id: e, changes: n, local: i } = t;
                return (
                  i || (yield this._apiService.patch(this._apiEndpoint + e, n)),
                  this._state.updateOne({ id: e, changes: n }),
                  n
                );
              } catch (e) {
                console.error(e);
              }
            });
          }
          sort(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                this._state.setMany(t.map((t, e) => Object.assign(Object.assign({}, t), { order: e + 1 })));
                const e = yield this._apiService.post(this._apiEndpoint + 'sort', { data: t });
                this._state.setMany(e.data);
              } catch (e) {
                console.error(e);
              }
            });
          }
          openPopup(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const { translateTitle: e, fields: n, type: i, model: r } = t || {};
              return this._appPopupService.openPopupForm({
                translateTitle: e || this._form.toUpperCase(),
                fields: n || this._form,
                type: i,
                model: r,
              });
            });
          }
          openPopupAndAddOne(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const { addToValue: e = {} } = t,
                n = yield this.openPopup(t);
              if ((null == n ? void 0 : n.action) === o.a.SUBMIT)
                return this.addOne({ value: Object.assign(Object.assign({}, n.data), e) });
            });
          }
          openPopupAndUpdateOne(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              const { translateTitle: e, fields: n, model: i } = t || {},
                r = yield this.openPopup({
                  type: o.b.EDIT,
                  translateTitle: e || this._form.toUpperCase(),
                  fields: n || this._form,
                  model: i,
                });
              switch (r ? r.action : o.a.CLOSE) {
                case o.a.DELETE:
                  return this.removeOne({ id: i.id });
                case o.a.SUBMIT:
                  return this.updateOne({ id: i.id, changes: r.data });
              }
            });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(c.fc(l.a), c.fc(l.f), c.fc(u.a), c.fc(h.c), c.fc(String), c.fc(String), c.fc(String));
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      var p = n('AytR'),
        f = n('xQIH');
      let m = (() => {
        class t extends d {
          constructor(t, e, n, i) {
            super(t, i, n, e, p.a.questionsEndpoint, '', 'questions'),
              (this._apiService = t),
              (this._router = e),
              (this._questionsState = n),
              (this._appPopupService = i);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(c.fc(l.a), c.fc(h.c), c.fc(f.c), c.fc(l.f));
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      var g = n('A7QW'),
        b = n('o80G');
      let _ = (() => {
          class t extends d {
            constructor(t, e, n, i) {
              super(t, i, n, e, p.a.gamesEndpoint, '', 'game'),
                (this._apiService = t),
                (this._router = e),
                (this._gamesState = n),
                (this._appPopupService = i);
            }
            registerToGame(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                try {
                  const { id: e, token: n } = t,
                    { data: i } = yield this._apiService.post(this._apiEndpoint + e + '/signup', { token: n });
                  return i;
                } catch (e) {
                  console.error(e);
                }
              });
            }
            giveAccess(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                try {
                  const { game: e, user: n } = t,
                    { data: i } = yield this._apiService.post(this._apiEndpoint + e.id + '/access', n);
                  return i;
                } catch (e) {
                  console.error(e);
                }
              });
            }
            generatePlayerToken(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                try {
                  const { id: e } = t,
                    { data: n } = yield this._apiService.post(this._apiEndpoint + e + '/generate-player', {});
                  return n;
                } catch (e) {
                  console.error(e);
                }
              });
            }
            generateTeammateToken(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                try {
                  const { id: e, userId: n } = t,
                    { data: i } = yield this._apiService.post(this._apiEndpoint + e + '/generate-teammate', {
                      userId: n,
                    });
                  return i;
                } catch (e) {
                  console.error(e);
                }
              });
            }
            hasAccess(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                try {
                  const { id: e } = t,
                    n = yield this._apiService.get(this._apiEndpoint + e + '/access');
                  return null == n ? void 0 : n.data;
                } catch (e) {
                  console.error(e);
                }
              });
            }
            navigateToAdminGame(t) {
              const { type: e, id: n } = t;
              this._router.navigate([g.a[e.toUpperCase()].fullPath.replace(':id', n)]);
            }
            navigateToGame(t) {
              this._router.navigate([b.a.GAME.fullPath.replace(':id', t.id)]);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(c.fc(l.a), c.fc(h.c), c.fc(f.b), c.fc(l.f));
            }),
            (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        y = (() => {
          class t extends d {
            constructor(t, e, n, i, r) {
              super(t, i, n, e, p.a.roundsEndpoint, '', 'round'),
                (this._apiService = t),
                (this._router = e),
                (this._roundState = n),
                (this._appPopupService = i),
                (this._gamesService = r);
            }
            toogle(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                try {
                  const e = yield this.getOne({ id: t }),
                    { data: n } = yield this._apiService.post(`${this._apiEndpoint + t}/toogle`, {});
                  this._gamesService.updateOne({
                    id: e.game.id,
                    changes: Object.assign(Object.assign({}, e.game), n),
                    local: !0,
                  });
                } catch (e) {
                  console.error(e);
                }
              });
            }
            navigateToRound(t, e) {
              this._router.navigate([
                g.a[`${t.type.toUpperCase()}_ROUND`].fullPath.replace(':gameId', t.id).replace(':roundId', e.id),
              ]);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(c.fc(l.a), c.fc(h.c), c.fc(f.d), c.fc(l.f), c.fc(_));
            }),
            (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      var v = n('aVjK');
      let w = (() => {
        class t extends d {
          constructor(t, e, n, i) {
            super(t, i, n, e, p.a.playersEndpoint, '', 'player'),
              (this._apiService = t),
              (this._router = e),
              (this._playersState = n),
              (this._appPopupService = i);
          }
          registerToGame(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                const { id: e, token: n } = t,
                  { data: i } = yield this._apiService.post(this._apiEndpoint + e + '/signup', { token: n });
                return i;
              } catch (e) {
                console.error(e);
              }
            });
          }
          giveAccess(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                const { game: e, user: n } = t,
                  { data: i } = yield this._apiService.post(this._apiEndpoint + e.id + '/access', n);
                return i;
              } catch (e) {
                console.error(e);
              }
            });
          }
          generateToken(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                const { id: e } = t,
                  { data: n } = yield this._apiService.post(this._apiEndpoint + e + '/generate', {});
                return n;
              } catch (e) {
                console.error(e);
              }
            });
          }
          hasAccess(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              try {
                const { id: e } = t,
                  n = yield this._apiService.get(this._apiEndpoint + e + '/access');
                return null == n ? void 0 : n.data;
              } catch (e) {
                console.error(e);
              }
            });
          }
          navigateToAdminGame(t) {
            const { type: e, id: n } = t;
            this._router.navigate([g.a[e.toUpperCase()].fullPath.replace(':id', n)]);
          }
          navigateToGame(t) {
            this._router.navigate([b.a.GAME.fullPath.replace(':id', t.id)]);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(c.fc(l.a), c.fc(h.c), c.fc(v.a), c.fc(l.f));
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const x = [_, y, m, w];
    },
    '+rOU': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return u;
      }),
        n.d(e, 'b', function () {
          return d;
        }),
        n.d(e, 'c', function () {
          return p;
        }),
        n.d(e, 'd', function () {
          return a;
        }),
        n.d(e, 'e', function () {
          return h;
        }),
        n.d(e, 'f', function () {
          return f;
        }),
        n.d(e, 'g', function () {
          return g;
        }),
        n.d(e, 'h', function () {
          return c;
        });
      var i = n('fXoL'),
        r = n('ofXK');
      function s() {
        throw Error('Host already has a portal attached');
      }
      class o {
        attach(t) {
          return (
            null == t &&
              (function () {
                throw Error('Attempting to attach a portal to a null PortalOutlet');
              })(),
            t.hasAttached() && s(),
            (this._attachedHost = t),
            t.attach(this)
          );
        }
        detach() {
          let t = this._attachedHost;
          null == t
            ? (function () {
                throw Error('Attempting to detach a portal that is not attached to a host');
              })()
            : ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class a extends o {
        constructor(t, e, n, i) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = n),
            (this.componentFactoryResolver = i);
        }
      }
      class c extends o {
        constructor(t, e, n) {
          super(), (this.templateRef = t), (this.viewContainerRef = e), (this.context = n);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class l extends o {
        constructor(t) {
          super(), (this.element = t instanceof i.m ? t.nativeElement : t);
        }
      }
      class u {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return (
            t ||
              (function () {
                throw Error('Must provide a portal to attach');
              })(),
            this.hasAttached() && s(),
            this._isDisposed &&
              (function () {
                throw Error('This PortalOutlet has already been disposed');
              })(),
            t instanceof a
              ? ((this._attachedPortal = t), this.attachComponentPortal(t))
              : t instanceof c
              ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
              : this.attachDomPortal && t instanceof l
              ? ((this._attachedPortal = t), this.attachDomPortal(t))
              : void (function () {
                  throw Error(
                    'Attempting to attach an unknown Portal type. BasePortalOutlet accepts either a ComponentPortal or a TemplatePortal.'
                  );
                })()
          );
        }
        detach() {
          this._attachedPortal && (this._attachedPortal.setAttachedHost(null), (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(), this._invokeDisposeFn(), (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class h extends u {
        constructor(t, e, n, i, r) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = n),
            (this._defaultInjector = i),
            (this.attachDomPortal = (t) => {
              if (!this._document) throw Error('Cannot attach DOM portal without _document constructor parameter');
              const e = t.element;
              if (!e.parentNode) throw Error('DOM portal content must be attached to a parent node.');
              const n = this._document.createComment('dom-portal');
              e.parentNode.insertBefore(n, e),
                this.outletElement.appendChild(e),
                super.setDisposeFn(() => {
                  n.parentNode && n.parentNode.replaceChild(e, n);
                });
            }),
            (this._document = r);
        }
        attachComponentPortal(t) {
          const e = (t.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(t.component);
          let n;
          return (
            t.viewContainerRef
              ? ((n = t.viewContainerRef.createComponent(
                  e,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector
                )),
                this.setDisposeFn(() => n.destroy()))
              : ((n = e.create(t.injector || this._defaultInjector)),
                this._appRef.attachView(n.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(n.hostView), n.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(n)),
            n
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            n = e.createEmbeddedView(t.templateRef, t.context);
          return (
            n.detectChanges(),
            n.rootNodes.forEach((t) => this.outletElement.appendChild(t)),
            this.setDisposeFn(() => {
              let t = e.indexOf(n);
              -1 !== t && e.remove(t);
            }),
            n
          );
        }
        dispose() {
          super.dispose(),
            null != this.outletElement.parentNode && this.outletElement.parentNode.removeChild(this.outletElement);
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let d = (() => {
          class t extends c {
            constructor(t, e) {
              super(t, e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.O), i.Vb(i.S));
            }),
            (t.ɵdir = i.Qb({ type: t, selectors: [['', 'cdkPortal', '']], exportAs: ['cdkPortal'], features: [i.Fb] })),
            t
          );
        })(),
        p = (() => {
          class t extends u {
            constructor(t, e, n) {
              super(),
                (this._componentFactoryResolver = t),
                (this._viewContainerRef = e),
                (this._isInitialized = !1),
                (this.attached = new i.p()),
                (this.attachDomPortal = (t) => {
                  if (!this._document) throw Error('Cannot attach DOM portal without _document constructor parameter');
                  const e = t.element;
                  if (!e.parentNode) throw Error('DOM portal content must be attached to a parent node.');
                  const n = this._document.createComment('dom-portal');
                  t.setAttachedHost(this),
                    e.parentNode.insertBefore(n, e),
                    this._getRootNode().appendChild(e),
                    super.setDisposeFn(() => {
                      n.parentNode && n.parentNode.replaceChild(e, n);
                    });
                }),
                (this._document = n);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(t) {
              (!this.hasAttached() || t || this._isInitialized) &&
                (this.hasAttached() && super.detach(), t && super.attach(t), (this._attachedPortal = t));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(), (this._attachedPortal = null), (this._attachedRef = null);
            }
            attachComponentPortal(t) {
              t.setAttachedHost(this);
              const e = null != t.viewContainerRef ? t.viewContainerRef : this._viewContainerRef,
                n = (t.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(t.component),
                i = e.createComponent(n, e.length, t.injector || e.injector);
              return (
                e !== this._viewContainerRef && this._getRootNode().appendChild(i.hostView.rootNodes[0]),
                super.setDisposeFn(() => i.destroy()),
                (this._attachedPortal = t),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            attachTemplatePortal(t) {
              t.setAttachedHost(this);
              const e = this._viewContainerRef.createEmbeddedView(t.templateRef, t.context);
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = t),
                (this._attachedRef = e),
                this.attached.emit(e),
                e
              );
            }
            _getRootNode() {
              const t = this._viewContainerRef.element.nativeElement;
              return t.nodeType === t.ELEMENT_NODE ? t : t.parentNode;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.k), i.Vb(i.S), i.Vb(r.d));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [i.Fb],
            })),
            t
          );
        })(),
        f = (() => {
          class t extends p {}
          return (
            (t.ɵfac = function (e) {
              return m(e || t);
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'cdkPortalHost', ''],
                ['', 'portalHost', ''],
              ],
              inputs: { portal: ['cdkPortalHost', 'portal'] },
              exportAs: ['cdkPortalHost'],
              features: [i.Hb([{ provide: p, useExisting: t }]), i.Fb],
            })),
            t
          );
        })();
      const m = i.dc(f);
      let g = (() => {
        class t {}
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
          })),
          t
        );
      })();
    },
    '/1cH': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return F;
      }),
        n.d(e, 'b', function () {
          return z;
        }),
        n.d(e, 'c', function () {
          return H;
        });
      var i = n('u47x'),
        r = n('8LU1'),
        s = n('fXoL'),
        o = n('FKr1'),
        a = n('quSY'),
        c = n('XNiG'),
        l = n('NXyV'),
        u = n('VRyK'),
        h = n('LRne'),
        d = n('xgIS'),
        p = n('ofXK'),
        f = n('rDax'),
        m = n('vxfF'),
        g = n('FtGj'),
        b = n('nLfN'),
        _ = n('+rOU'),
        y = n('3Pt+'),
        v = n('kmnG'),
        w = n('IzEk'),
        x = n('eIep'),
        C = n('pLZG'),
        k = n('lJxs'),
        O = n('vkgz'),
        S = n('3E0/'),
        E = n('cH1L');
      const T = ['panel'];
      function I(t, e) {
        if ((1 & t && (s.bc(0, 'div', 0, 1), s.tc(2), s.ac()), 2 & t)) {
          const t = s.nc();
          s.vc('id', t.id)('ngClass', t._classList);
        }
      }
      const A = ['*'];
      let D = 0;
      class j {
        constructor(t, e) {
          (this.source = t), (this.option = e);
        }
      }
      class R {}
      const P = Object(o.w)(R),
        M = new s.s('mat-autocomplete-default-options', {
          providedIn: 'root',
          factory: function () {
            return { autoActiveFirstOption: !1 };
          },
        });
      let F = (() => {
        class t extends P {
          constructor(t, e, n) {
            super(),
              (this._changeDetectorRef = t),
              (this._elementRef = e),
              (this._activeOptionChanges = a.a.EMPTY),
              (this.showPanel = !1),
              (this._isOpen = !1),
              (this.displayWith = null),
              (this.optionSelected = new s.p()),
              (this.opened = new s.p()),
              (this.closed = new s.p()),
              (this.optionActivated = new s.p()),
              (this._classList = {}),
              (this.id = `mat-autocomplete-${D++}`),
              (this._autoActiveFirstOption = !!n.autoActiveFirstOption);
          }
          get isOpen() {
            return this._isOpen && this.showPanel;
          }
          get autoActiveFirstOption() {
            return this._autoActiveFirstOption;
          }
          set autoActiveFirstOption(t) {
            this._autoActiveFirstOption = Object(r.c)(t);
          }
          set classList(t) {
            (this._classList = t && t.length ? t.split(' ').reduce((t, e) => ((t[e.trim()] = !0), t), {}) : {}),
              this._setVisibilityClasses(this._classList),
              (this._elementRef.nativeElement.className = '');
          }
          ngAfterContentInit() {
            (this._keyManager = new i.b(this.options).withWrap()),
              (this._activeOptionChanges = this._keyManager.change.subscribe((t) => {
                this.optionActivated.emit({ source: this, option: this.options.toArray()[t] || null });
              })),
              this._setVisibility();
          }
          ngOnDestroy() {
            this._activeOptionChanges.unsubscribe();
          }
          _setScrollTop(t) {
            this.panel && (this.panel.nativeElement.scrollTop = t);
          }
          _getScrollTop() {
            return this.panel ? this.panel.nativeElement.scrollTop : 0;
          }
          _setVisibility() {
            (this.showPanel = !!this.options.length),
              this._setVisibilityClasses(this._classList),
              this._changeDetectorRef.markForCheck();
          }
          _emitSelectEvent(t) {
            const e = new j(this, t);
            this.optionSelected.emit(e);
          }
          _setVisibilityClasses(t) {
            (t['mat-autocomplete-visible'] = this.showPanel), (t['mat-autocomplete-hidden'] = !this.showPanel);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Vb(s.i), s.Vb(s.m), s.Vb(M));
          }),
          (t.ɵcmp = s.Pb({
            type: t,
            selectors: [['mat-autocomplete']],
            contentQueries: function (t, e, n) {
              var i;
              1 & t && (s.Ob(n, o.l, !0), s.Ob(n, o.k, !0)),
                2 & t && (s.Ac((i = s.kc())) && (e.options = i), s.Ac((i = s.kc())) && (e.optionGroups = i));
            },
            viewQuery: function (t, e) {
              var n;
              1 & t && (s.Ic(s.O, !0), s.Rc(T, !0)),
                2 & t && (s.Ac((n = s.kc())) && (e.template = n.first), s.Ac((n = s.kc())) && (e.panel = n.first));
            },
            hostAttrs: [1, 'mat-autocomplete'],
            inputs: {
              disableRipple: 'disableRipple',
              displayWith: 'displayWith',
              autoActiveFirstOption: 'autoActiveFirstOption',
              classList: ['class', 'classList'],
              panelWidth: 'panelWidth',
            },
            outputs: {
              optionSelected: 'optionSelected',
              opened: 'opened',
              closed: 'closed',
              optionActivated: 'optionActivated',
            },
            exportAs: ['matAutocomplete'],
            features: [s.Hb([{ provide: o.e, useExisting: t }]), s.Fb],
            ngContentSelectors: A,
            decls: 1,
            vars: 0,
            consts: [
              ['role', 'listbox', 1, 'mat-autocomplete-panel', 3, 'id', 'ngClass'],
              ['panel', ''],
            ],
            template: function (t, e) {
              1 & t && (s.uc(), s.Kc(0, I, 3, 2, 'ng-template'));
            },
            directives: [p.i],
            styles: [
              '.mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const N = new s.s('mat-autocomplete-scroll-strategy'),
        V = {
          provide: N,
          deps: [f.c],
          useFactory: function (t) {
            return () => t.scrollStrategies.reposition();
          },
        },
        L = { provide: y.l, useExisting: Object(s.Y)(() => H), multi: !0 };
      let H = (() => {
          class t {
            constructor(t, e, n, i, r, s, o, h, d, p) {
              (this._element = t),
                (this._overlay = e),
                (this._viewContainerRef = n),
                (this._zone = i),
                (this._changeDetectorRef = r),
                (this._dir = o),
                (this._formField = h),
                (this._document = d),
                (this._viewportRuler = p),
                (this._componentDestroyed = !1),
                (this._autocompleteDisabled = !1),
                (this._manuallyFloatingLabel = !1),
                (this._viewportSubscription = a.a.EMPTY),
                (this._canOpenOnNextFocus = !0),
                (this._closeKeyEventStream = new c.a()),
                (this._windowBlurHandler = () => {
                  this._canOpenOnNextFocus =
                    this._document.activeElement !== this._element.nativeElement || this.panelOpen;
                }),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this.position = 'auto'),
                (this.autocompleteAttribute = 'off'),
                (this._overlayAttached = !1),
                (this.optionSelections = Object(l.a)(() =>
                  this.autocomplete && this.autocomplete.options
                    ? Object(u.a)(...this.autocomplete.options.map((t) => t.onSelectionChange))
                    : this._zone.onStable.asObservable().pipe(
                        Object(w.a)(1),
                        Object(x.a)(() => this.optionSelections)
                      )
                )),
                (this._scrollStrategy = s);
            }
            get autocompleteDisabled() {
              return this._autocompleteDisabled;
            }
            set autocompleteDisabled(t) {
              this._autocompleteDisabled = Object(r.c)(t);
            }
            ngAfterViewInit() {
              const t = this._getWindow();
              void 0 !== t && this._zone.runOutsideAngular(() => t.addEventListener('blur', this._windowBlurHandler));
            }
            ngOnChanges(t) {
              t.position &&
                this._positionStrategy &&
                (this._setStrategyPositions(this._positionStrategy),
                this.panelOpen && this._overlayRef.updatePosition());
            }
            ngOnDestroy() {
              const t = this._getWindow();
              void 0 !== t && t.removeEventListener('blur', this._windowBlurHandler),
                this._viewportSubscription.unsubscribe(),
                (this._componentDestroyed = !0),
                this._destroyPanel(),
                this._closeKeyEventStream.complete();
            }
            get panelOpen() {
              return this._overlayAttached && this.autocomplete.showPanel;
            }
            openPanel() {
              this._attachOverlay(), this._floatLabel();
            }
            closePanel() {
              this._resetLabel(),
                this._overlayAttached &&
                  (this.panelOpen && this.autocomplete.closed.emit(),
                  (this.autocomplete._isOpen = this._overlayAttached = !1),
                  this._overlayRef &&
                    this._overlayRef.hasAttached() &&
                    (this._overlayRef.detach(), this._closingActionsSubscription.unsubscribe()),
                  this._componentDestroyed || this._changeDetectorRef.detectChanges());
            }
            updatePosition() {
              this._overlayAttached && this._overlayRef.updatePosition();
            }
            get panelClosingActions() {
              return Object(u.a)(
                this.optionSelections,
                this.autocomplete._keyManager.tabOut.pipe(Object(C.a)(() => this._overlayAttached)),
                this._closeKeyEventStream,
                this._getOutsideClickStream(),
                this._overlayRef
                  ? this._overlayRef.detachments().pipe(Object(C.a)(() => this._overlayAttached))
                  : Object(h.a)()
              ).pipe(Object(k.a)((t) => (t instanceof o.n ? t : null)));
            }
            get activeOption() {
              return this.autocomplete && this.autocomplete._keyManager
                ? this.autocomplete._keyManager.activeItem
                : null;
            }
            _getOutsideClickStream() {
              return Object(u.a)(Object(d.a)(this._document, 'click'), Object(d.a)(this._document, 'touchend')).pipe(
                Object(C.a)((t) => {
                  const e = this._isInsideShadowRoot && t.composedPath ? t.composedPath()[0] : t.target,
                    n = this._formField ? this._formField._elementRef.nativeElement : null;
                  return (
                    this._overlayAttached &&
                    e !== this._element.nativeElement &&
                    (!n || !n.contains(e)) &&
                    !!this._overlayRef &&
                    !this._overlayRef.overlayElement.contains(e)
                  );
                })
              );
            }
            writeValue(t) {
              Promise.resolve(null).then(() => this._setTriggerValue(t));
            }
            registerOnChange(t) {
              this._onChange = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            setDisabledState(t) {
              this._element.nativeElement.disabled = t;
            }
            _handleKeydown(t) {
              const e = t.keyCode;
              if ((e === g.g && t.preventDefault(), this.activeOption && e === g.f && this.panelOpen))
                this.activeOption._selectViaInteraction(), this._resetActiveItem(), t.preventDefault();
              else if (this.autocomplete) {
                const n = this.autocomplete._keyManager.activeItem,
                  i = e === g.p || e === g.d;
                this.panelOpen || e === g.o
                  ? this.autocomplete._keyManager.onKeydown(t)
                  : i && this._canOpen() && this.openPanel(),
                  (i || this.autocomplete._keyManager.activeItem !== n) && this._scrollToOption();
              }
            }
            _handleInput(t) {
              let e = t.target,
                n = e.value;
              'number' === e.type && (n = '' == n ? null : parseFloat(n)),
                this._previousValue !== n &&
                  ((this._previousValue = n),
                  this._onChange(n),
                  this._canOpen() && this._document.activeElement === t.target && this.openPanel());
            }
            _handleFocus() {
              this._canOpenOnNextFocus
                ? this._canOpen() &&
                  ((this._previousValue = this._element.nativeElement.value),
                  this._attachOverlay(),
                  this._floatLabel(!0))
                : (this._canOpenOnNextFocus = !0);
            }
            _floatLabel(t = !1) {
              this._formField &&
                'auto' === this._formField.floatLabel &&
                (t ? this._formField._animateAndLockLabel() : (this._formField.floatLabel = 'always'),
                (this._manuallyFloatingLabel = !0));
            }
            _resetLabel() {
              this._manuallyFloatingLabel &&
                ((this._formField.floatLabel = 'auto'), (this._manuallyFloatingLabel = !1));
            }
            _scrollToOption() {
              const t = this.autocomplete._keyManager.activeItemIndex || 0,
                e = Object(o.t)(t, this.autocomplete.options, this.autocomplete.optionGroups);
              if (0 === t && 1 === e) this.autocomplete._setScrollTop(0);
              else {
                const n = Object(o.u)(t + e, 48, this.autocomplete._getScrollTop(), 256);
                this.autocomplete._setScrollTop(n);
              }
            }
            _subscribeToClosingActions() {
              const t = this._zone.onStable.asObservable().pipe(Object(w.a)(1)),
                e = this.autocomplete.options.changes.pipe(
                  Object(O.a)(() => this._positionStrategy.reapplyLastPosition()),
                  Object(S.a)(0)
                );
              return Object(u.a)(t, e)
                .pipe(
                  Object(x.a)(() => {
                    const t = this.panelOpen;
                    return (
                      this._resetActiveItem(),
                      this.autocomplete._setVisibility(),
                      this.panelOpen &&
                        (this._overlayRef.updatePosition(), t !== this.panelOpen && this.autocomplete.opened.emit()),
                      this.panelClosingActions
                    );
                  }),
                  Object(w.a)(1)
                )
                .subscribe((t) => this._setValueAndClose(t));
            }
            _destroyPanel() {
              this._overlayRef && (this.closePanel(), this._overlayRef.dispose(), (this._overlayRef = null));
            }
            _setTriggerValue(t) {
              const e = this.autocomplete && this.autocomplete.displayWith ? this.autocomplete.displayWith(t) : t,
                n = null != e ? e : '';
              this._formField ? (this._formField._control.value = n) : (this._element.nativeElement.value = n),
                (this._previousValue = n);
            }
            _setValueAndClose(t) {
              t &&
                t.source &&
                (this._clearPreviousSelectedOption(t.source),
                this._setTriggerValue(t.source.value),
                this._onChange(t.source.value),
                this._element.nativeElement.focus(),
                this.autocomplete._emitSelectEvent(t.source)),
                this.closePanel();
            }
            _clearPreviousSelectedOption(t) {
              this.autocomplete.options.forEach((e) => {
                e != t && e.selected && e.deselect();
              });
            }
            _attachOverlay() {
              if (!this.autocomplete)
                throw Error(
                  "Attempting to open an undefined instance of `mat-autocomplete`. Make sure that the id passed to the `matAutocomplete` is correct and that you're attempting to open it after the ngAfterContentInit hook."
                );
              null == this._isInsideShadowRoot &&
                (this._isInsideShadowRoot = !!Object(b.c)(this._element.nativeElement));
              let t = this._overlayRef;
              t
                ? (this._positionStrategy.setOrigin(this._getConnectedElement()),
                  t.updateSize({ width: this._getPanelWidth() }))
                : ((this._portal = new _.h(this.autocomplete.template, this._viewContainerRef)),
                  (t = this._overlay.create(this._getOverlayConfig())),
                  (this._overlayRef = t),
                  t.keydownEvents().subscribe((t) => {
                    (t.keyCode === g.g || (t.keyCode === g.p && t.altKey)) &&
                      (this._resetActiveItem(),
                      this._closeKeyEventStream.next(),
                      t.stopPropagation(),
                      t.preventDefault());
                  }),
                  this._viewportRuler &&
                    (this._viewportSubscription = this._viewportRuler.change().subscribe(() => {
                      this.panelOpen && t && t.updateSize({ width: this._getPanelWidth() });
                    }))),
                t &&
                  !t.hasAttached() &&
                  (t.attach(this._portal), (this._closingActionsSubscription = this._subscribeToClosingActions()));
              const e = this.panelOpen;
              this.autocomplete._setVisibility(),
                (this.autocomplete._isOpen = this._overlayAttached = !0),
                this.panelOpen && e !== this.panelOpen && this.autocomplete.opened.emit();
            }
            _getOverlayConfig() {
              return new f.d({
                positionStrategy: this._getOverlayPosition(),
                scrollStrategy: this._scrollStrategy(),
                width: this._getPanelWidth(),
                direction: this._dir,
              });
            }
            _getOverlayPosition() {
              const t = this._overlay
                .position()
                .flexibleConnectedTo(this._getConnectedElement())
                .withFlexibleDimensions(!1)
                .withPush(!1);
              return this._setStrategyPositions(t), (this._positionStrategy = t), t;
            }
            _setStrategyPositions(t) {
              const e = [
                  { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },
                  { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },
                ],
                n = [
                  {
                    originX: 'start',
                    originY: 'top',
                    overlayX: 'start',
                    overlayY: 'bottom',
                    panelClass: 'mat-autocomplete-panel-above',
                  },
                  {
                    originX: 'end',
                    originY: 'top',
                    overlayX: 'end',
                    overlayY: 'bottom',
                    panelClass: 'mat-autocomplete-panel-above',
                  },
                ];
              let i;
              (i = 'above' === this.position ? n : 'below' === this.position ? e : [...e, ...n]), t.withPositions(i);
            }
            _getConnectedElement() {
              return this.connectedTo
                ? this.connectedTo.elementRef
                : this._formField
                ? this._formField.getConnectedOverlayOrigin()
                : this._element;
            }
            _getPanelWidth() {
              return this.autocomplete.panelWidth || this._getHostWidth();
            }
            _getHostWidth() {
              return this._getConnectedElement().nativeElement.getBoundingClientRect().width;
            }
            _resetActiveItem() {
              this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);
            }
            _canOpen() {
              const t = this._element.nativeElement;
              return !t.readOnly && !t.disabled && !this._autocompleteDisabled;
            }
            _getWindow() {
              var t;
              return (null === (t = this._document) || void 0 === t ? void 0 : t.defaultView) || window;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                s.Vb(s.m),
                s.Vb(f.c),
                s.Vb(s.S),
                s.Vb(s.B),
                s.Vb(s.i),
                s.Vb(N),
                s.Vb(E.b, 8),
                s.Vb(v.a, 9),
                s.Vb(p.d, 8),
                s.Vb(m.e)
              );
            }),
            (t.ɵdir = s.Qb({
              type: t,
              selectors: [
                ['input', 'matAutocomplete', ''],
                ['textarea', 'matAutocomplete', ''],
              ],
              hostAttrs: [1, 'mat-autocomplete-trigger'],
              hostVars: 7,
              hostBindings: function (t, e) {
                1 & t &&
                  s.jc('focusin', function () {
                    return e._handleFocus();
                  })('blur', function () {
                    return e._onTouched();
                  })('input', function (t) {
                    return e._handleInput(t);
                  })('keydown', function (t) {
                    return e._handleKeydown(t);
                  }),
                  2 & t &&
                    s.Jb('autocomplete', e.autocompleteAttribute)('role', e.autocompleteDisabled ? null : 'combobox')(
                      'aria-autocomplete',
                      e.autocompleteDisabled ? null : 'list'
                    )('aria-activedescendant', e.panelOpen && e.activeOption ? e.activeOption.id : null)(
                      'aria-expanded',
                      e.autocompleteDisabled ? null : e.panelOpen.toString()
                    )(
                      'aria-owns',
                      e.autocompleteDisabled || !e.panelOpen || null == e.autocomplete ? null : e.autocomplete.id
                    )('aria-haspopup', !e.autocompleteDisabled);
              },
              inputs: {
                position: ['matAutocompletePosition', 'position'],
                autocompleteAttribute: ['autocomplete', 'autocompleteAttribute'],
                autocompleteDisabled: ['matAutocompleteDisabled', 'autocompleteDisabled'],
                autocomplete: ['matAutocomplete', 'autocomplete'],
                connectedTo: ['matAutocompleteConnectedTo', 'connectedTo'],
              },
              exportAs: ['matAutocompleteTrigger'],
              features: [s.Hb([L]), s.Gb],
            })),
            t
          );
        })(),
        z = (() => {
          class t {}
          return (
            (t.ɵmod = s.Tb({ type: t })),
            (t.ɵinj = s.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [V],
              imports: [[o.m, f.f, o.g, p.c], m.b, o.m, o.g],
            })),
            t
          );
        })();
    },
    '/bhW': function (t, e, n) {
      'use strict';
      n.d(e, 'd', function () {
        return i.a;
      }),
        n.d(e, 'b', function () {
          return o.e;
        }),
        n.d(e, 'c', function () {
          return u.c;
        }),
        n.d(e, 'f', function () {
          return u.d;
        }),
        n.d(e, 'a', function () {
          return u.a;
        }),
        n.d(e, 'e', function () {
          return h;
        });
      var i = n('zO53'),
        r = n('sT+k');
      const s = [i.a, r.a];
      var o = n('tmyf'),
        a = n('PLFS'),
        c = n('iQeY');
      const l = [n('PnYb').a, a.a, c.a];
      var u = n('eEy1');
      const h = [...l, ...s, ...o.a, ...u.b];
    },
    '/t3+': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return d;
      }),
        n.d(e, 'b', function () {
          return p;
        }),
        n.d(e, 'c', function () {
          return h;
        });
      var i = n('fXoL'),
        r = n('FKr1'),
        s = n('ofXK'),
        o = n('nLfN');
      const a = ['*', [['mat-toolbar-row']]],
        c = ['*', 'mat-toolbar-row'];
      class l {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const u = Object(r.v)(l);
      let h = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['mat-toolbar-row']],
              hostAttrs: [1, 'mat-toolbar-row'],
              exportAs: ['matToolbarRow'],
            })),
            t
          );
        })(),
        d = (() => {
          class t extends u {
            constructor(t, e, n) {
              super(t), (this._platform = e), (this._document = n);
            }
            ngAfterViewInit() {
              Object(i.bb)() &&
                this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes()));
            }
            _checkToolbarMixedModes() {
              this._toolbarRows.length &&
                Array.from(this._elementRef.nativeElement.childNodes)
                  .filter((t) => !(t.classList && t.classList.contains('mat-toolbar-row')))
                  .filter((t) => t.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))
                  .some((t) => !(!t.textContent || !t.textContent.trim())) &&
                (function () {
                  throw Error(
                    'MatToolbar: Attempting to combine different toolbar modes. Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content inside of a `<mat-toolbar>` for a single row.'
                  );
                })();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(o.a), i.Vb(s.d));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['mat-toolbar']],
              contentQueries: function (t, e, n) {
                var r;
                1 & t && i.Ob(n, h, !0), 2 & t && i.Ac((r = i.kc())) && (e._toolbarRows = r);
              },
              hostAttrs: [1, 'mat-toolbar'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  i.Mb('mat-toolbar-multiple-rows', e._toolbarRows.length > 0)(
                    'mat-toolbar-single-row',
                    0 === e._toolbarRows.length
                  );
              },
              inputs: { color: 'color' },
              exportAs: ['matToolbar'],
              features: [i.Fb],
              ngContentSelectors: c,
              decls: 2,
              vars: 0,
              template: function (t, e) {
                1 & t && (i.uc(a), i.tc(0), i.tc(1, 1));
              },
              styles: [
                '.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        p = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.g], r.g],
            })),
            t
          );
        })();
    },
    '/uUt': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('7o/Q');
      function r(t, e) {
        return (n) => n.lift(new s(t, e));
      }
      class s {
        constructor(t, e) {
          (this.compare = t), (this.keySelector = e);
        }
        call(t, e) {
          return e.subscribe(new o(t, this.compare, this.keySelector));
        }
      }
      class o extends i.a {
        constructor(t, e, n) {
          super(t), (this.keySelector = n), (this.hasKey = !1), 'function' == typeof e && (this.compare = e);
        }
        compare(t, e) {
          return t === e;
        }
        _next(t) {
          let e;
          try {
            const { keySelector: n } = this;
            e = n ? n(t) : t;
          } catch (i) {
            return this.destination.error(i);
          }
          let n = !1;
          if (this.hasKey)
            try {
              const { compare: t } = this;
              n = t(this.key, e);
            } catch (i) {
              return this.destination.error(i);
            }
          else this.hasKey = !0;
          n || ((this.key = e), this.destination.next(t));
        }
      }
    },
    0: function (t, e, n) {
      t.exports = n('zUnb');
    },
    '0AZg': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('c2SN'),
        r = n('fXoL'),
        s = n('qFsG'),
        o = n('3Pt+'),
        a = n('r3oX'),
        c = n('0FS3');
      let l = (() => {
        class t extends i.a {}
        return (
          (t.ɵfac = function (e) {
            return u(e || t);
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['app-formly-time-picker']],
            features: [r.Fb],
            decls: 3,
            vars: 5,
            consts: [
              [
                'matInput',
                '',
                'readonly',
                '',
                3,
                'placeholder',
                'ngxTimepicker',
                'format',
                'formControl',
                'formlyAttributes',
              ],
              ['timePicker', ''],
            ],
            template: function (t, e) {
              if ((1 & t && (r.Wb(0, 'input', 0), r.Wb(1, 'ngx-material-timepicker', null, 1)), 2 & t)) {
                const t = r.Bc(2);
                r.vc('placeholder', e.placeholder)('ngxTimepicker', t)('format', 24)('formControl', e.formControl)(
                  'formlyAttributes',
                  e.field
                );
              }
            },
            directives: [s.b, o.c, a.c, o.n, o.f, c.e, a.a],
            styles: [''],
          })),
          t
        );
      })();
      const u = r.dc(l);
    },
    '0EQZ': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      }),
        n.d(e, 'b', function () {
          return a;
        }),
        n.d(e, 'c', function () {
          return u;
        }),
        n.d(e, 'd', function () {
          return h;
        }),
        n.d(e, 'e', function () {
          return c;
        });
      var i = n('7+OI'),
        r = n('LRne'),
        s = n('XNiG'),
        o = n('fXoL');
      class a {}
      function c(t) {
        return t && 'function' == typeof t.connect;
      }
      class l extends a {
        constructor(t) {
          super(), (this._data = t);
        }
        connect() {
          return Object(i.a)(this._data) ? this._data : Object(r.a)(this._data);
        }
        disconnect() {}
      }
      class u {
        constructor(t = !1, e, n = !0) {
          (this._multiple = t),
            (this._emitChanges = n),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new s.a()),
            e &&
              e.length &&
              (t ? e.forEach((t) => this._markSelected(t)) : this._markSelected(e[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return this._selected || (this._selected = Array.from(this._selection.values())), this._selected;
        }
        select(...t) {
          this._verifyValueAssignment(t), t.forEach((t) => this._markSelected(t)), this._emitChangeEvent();
        }
        deselect(...t) {
          this._verifyValueAssignment(t), t.forEach((t) => this._unmarkSelected(t)), this._emitChangeEvent();
        }
        toggle(t) {
          this.isSelected(t) ? this.deselect(t) : this.select(t);
        }
        clear() {
          this._unmarkAll(), this._emitChangeEvent();
        }
        isSelected(t) {
          return this._selection.has(t);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(t) {
          this._multiple && this.selected && this._selected.sort(t);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({ source: this, added: this._selectedToEmit, removed: this._deselectedToEmit }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(t) {
          this.isSelected(t) ||
            (this._multiple || this._unmarkAll(),
            this._selection.add(t),
            this._emitChanges && this._selectedToEmit.push(t));
        }
        _unmarkSelected(t) {
          this.isSelected(t) && (this._selection.delete(t), this._emitChanges && this._deselectedToEmit.push(t));
        }
        _unmarkAll() {
          this.isEmpty() || this._selection.forEach((t) => this._unmarkSelected(t));
        }
        _verifyValueAssignment(t) {
          if (t.length > 1 && !this._multiple)
            throw Error('Cannot pass multiple values into SelectionModel with single-value mode.');
        }
      }
      let h = (() => {
        class t {
          constructor() {
            this._listeners = [];
          }
          notify(t, e) {
            for (let n of this._listeners) n(t, e);
          }
          listen(t) {
            return (
              this._listeners.push(t),
              () => {
                this._listeners = this._listeners.filter((e) => t !== e);
              }
            );
          }
          ngOnDestroy() {
            this._listeners = [];
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = Object(o.Rb)({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
    },
    '0EUg': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('bHdf');
      function r() {
        return Object(i.a)(1);
      }
    },
    '0FS3': function (t, e, n) {
      'use strict';
      n.d(e, 'h', function () {
        return z;
      }),
        n.d(e, 'g', function () {
          return B;
        }),
        n.d(e, 'e', function () {
          return U;
        }),
        n.d(e, 'a', function () {
          return V;
        }),
        n.d(e, 'f', function () {
          return L;
        }),
        n.d(e, 'c', function () {
          return W;
        }),
        n.d(e, 'b', function () {
          return K;
        }),
        n.d(e, 'd', function () {
          return Y;
        }),
        n.d(e, 'i', function () {
          return ct;
        }),
        n.d(e, 'k', function () {
          return M;
        }),
        n.d(e, 'l', function () {
          return F;
        }),
        n.d(e, 'j', function () {
          return tt;
        });
      var i = n('ofXK'),
        r = n('eIep'),
        s = n('IzEk'),
        o = n('/uUt'),
        a = n('Kj3r'),
        c = n('JX91'),
        l = n('lJxs'),
        u = n('fXoL'),
        h = n('3Pt+'),
        d = n('7+OI'),
        p = n('XNiG'),
        f = n('HDdC'),
        m = n('LRne'),
        g = n('jhN1');
      const b = ['content'];
      function _(t, e) {
        if ((1 & t && u.Wb(0, 'formly-field', 2), 2 & t)) {
          const t = e.$implicit;
          u.vc('form', t.form)('options', t.options)('model', t.model)('field', t);
        }
      }
      const y = ['*'],
        v = ['container'];
      function w(t, e) {}
      const x = ['fieldComponent'];
      function C(t, e) {
        1 & t && u.Wb(0, 'formly-field', 1), 2 & t && u.vc('field', e.$implicit);
      }
      function k(t, e, n) {
        if (e.id) return e.id;
        let i = e.type;
        return !i && e.template && (i = 'template'), [t, i, e.key, n].join('_');
      }
      function O(t) {
        if (!t.key) return [];
        if (!t._keyPath || t._keyPath.key !== t.key) {
          const e = -1 === t.key.indexOf('[') ? t.key : t.key.replace(/\[(\w+)\]/g, '.$1');
          t._keyPath = { key: t.key, path: -1 !== e.indexOf('.') ? e.split('.') : [e] };
        }
        return t._keyPath.path.slice(0);
      }
      const S = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];
      function E(t, e, n) {
        for (let i = 0; i < e.length - 1; i++) {
          const n = e[i];
          (t[n] && R(t[n])) || (t[n] = /^\d+$/.test(e[i + 1]) ? [] : {}), (t = t[n]);
        }
        t[e[e.length - 1]] = P(n);
      }
      function T(t) {
        let e = t.parent.model;
        for (const n of O(t)) {
          if (!e) return e;
          e = e[n];
        }
        return e;
      }
      function I(t, ...e) {
        return (
          e.forEach((e) => {
            for (let r in e)
              A(t[r]) || '' === t[r]
                ? (t[r] = P(e[r]))
                : ((i = e[r]),
                  R((n = t[r])) &&
                    R(i) &&
                    Object.getPrototypeOf(n) === Object.getPrototypeOf(i) &&
                    !Array.isArray(n) &&
                    !Array.isArray(i) &&
                    I(t[r], e[r]));
            var n, i;
          }),
          t
        );
      }
      function A(t) {
        return null == t;
      }
      function D(t) {
        return void 0 === t;
      }
      function j(t) {
        return 'function' == typeof t;
      }
      function R(t) {
        return null != t && 'object' == typeof t;
      }
      function P(t) {
        if (
          !R(t) ||
          Object(d.a)(t) ||
          t.changingThisBreaksApplicationSecurity ||
          -1 !== ['RegExp', 'FileList', 'File', 'Blob'].indexOf(t.constructor.name)
        )
          return t;
        if (t._isAMomentObject && j(t.clone)) return t.clone();
        if (t instanceof h.a) return null;
        if (t instanceof Date) return new Date(t.getTime());
        if (Array.isArray(t)) return t.slice(0).map((t) => P(t));
        const e = Object.getPrototypeOf(t);
        let n = Object.create(e);
        return (
          (n = Object.setPrototypeOf(n, e)),
          Object.keys(t).reduce((e, n) => {
            const i = Object.getOwnPropertyDescriptor(t, n);
            return i.get ? Object.defineProperty(e, n, i) : (e[n] = P(t[n])), e;
          }, n)
        );
      }
      function M(t, e, n) {
        Object.defineProperty(t, e, { enumerable: !1, writable: !0, configurable: !0 }), (t[e] = n);
      }
      function F(t, e, n) {
        t._observers || M(t, '_observers', {}), t._observers[e] || (t._observers[e] = []);
        let i = t._observers[e];
        return (
          -1 === i.indexOf(n) &&
            (i.push(n),
            n({ currentValue: t[e], firstChange: !0 }),
            1 === i.length &&
              (M(t, `___$${e}`, t[e]),
              Object.defineProperty(t, e, {
                configurable: !0,
                get: () => t[`___$${e}`],
                set: (n) => {
                  if (n !== t[`___$${e}`]) {
                    const r = t[`___$${e}`];
                    (t[`___$${e}`] = n), i.forEach((t) => t({ previousValue: r, currentValue: n, firstChange: !1 }));
                  }
                },
              }))),
          () => i.splice(i.indexOf(n), 1)
        );
      }
      function N(t, e) {
        const n = t._updateTreeValidity.bind(t);
        let i = null;
        (t._updateTreeValidity = (...t) => (i = t)), e(), i && n(i), (t._updateTreeValidity = n);
      }
      const V = new u.s('FORMLY_CONFIG');
      let L = (() => {
          class t {
            constructor() {
              (this.types = {}),
                (this.validators = {}),
                (this.wrappers = {}),
                (this.messages = {}),
                (this.templateManipulators = { preWrapper: [], postWrapper: [] }),
                (this.extras = {
                  checkExpressionOn: 'changeDetectionCheck',
                  showError: function (t) {
                    return (
                      t.formControl &&
                      t.formControl.invalid &&
                      (t.formControl.touched ||
                        (t.options.parentForm && t.options.parentForm.submitted) ||
                        !(!t.field.validation || !t.field.validation.show))
                    );
                  },
                }),
                (this.extensions = {});
            }
            addConfig(t) {
              t.types && t.types.forEach((t) => this.setType(t)),
                t.validators && t.validators.forEach((t) => this.setValidator(t)),
                t.wrappers && t.wrappers.forEach((t) => this.setWrapper(t)),
                t.manipulators &&
                  (console.warn(
                    "NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead."
                  ),
                  t.manipulators.forEach((t) => this.setManipulator(t))),
                t.validationMessages &&
                  t.validationMessages.forEach((t) => this.addValidatorMessage(t.name, t.message)),
                t.extensions && t.extensions.forEach((t) => (this.extensions[t.name] = t.extension)),
                t.extras && (this.extras = Object.assign({}, this.extras, t.extras));
            }
            setType(t) {
              Array.isArray(t)
                ? t.forEach((t) => this.setType(t))
                : (this.types[t.name] || (this.types[t.name] = { name: t.name }),
                  ['component', 'extends', 'defaultOptions'].forEach((e) => {
                    t.hasOwnProperty(e) && (this.types[t.name][e] = t[e]);
                  }),
                  t.wrappers && t.wrappers.forEach((e) => this.setTypeWrapper(t.name, e)));
            }
            getType(t) {
              if (!this.types[t]) throw new Error(`[Formly Error] There is no type by the name of "${t}"`);
              return this.mergeExtendedType(t), this.types[t];
            }
            getMergedField(t = {}) {
              const e = this.getType(t.type);
              e.defaultOptions && I(t, e.defaultOptions);
              const n = e.extends && this.getType(e.extends).defaultOptions;
              n && I(t, n),
                t &&
                  t.optionsTypes &&
                  t.optionsTypes.forEach((e) => {
                    const n = this.getType(e).defaultOptions;
                    n && I(t, n);
                  });
              const i = this.resolveFieldTypeRef(t);
              i && i.instance && i.instance.defaultOptions && I(t, i.instance.defaultOptions),
                !t.wrappers && e.wrappers && (t.wrappers = [...e.wrappers]);
            }
            resolveFieldTypeRef(t = {}) {
              if (!t.type) return null;
              const e = this.getType(t.type);
              if (!e.component || e._componentRef) return e._componentRef;
              const { _resolver: n, _injector: i } = t.parent.options;
              return M(e, '_componentRef', n.resolveComponentFactory(e.component).create(i)), e._componentRef;
            }
            setWrapper(t) {
              (this.wrappers[t.name] = t),
                t.types &&
                  t.types.forEach((e) => {
                    this.setTypeWrapper(e, t.name);
                  });
            }
            getWrapper(t) {
              if (!this.wrappers[t]) throw new Error(`[Formly Error] There is no wrapper by the name of "${t}"`);
              return this.wrappers[t];
            }
            setTypeWrapper(t, e) {
              this.types[t] || (this.types[t] = {}),
                this.types[t].wrappers || (this.types[t].wrappers = []),
                -1 === this.types[t].wrappers.indexOf(e) && this.types[t].wrappers.push(e);
            }
            setValidator(t) {
              this.validators[t.name] = t;
            }
            getValidator(t) {
              if (!this.validators[t]) throw new Error(`[Formly Error] There is no validator by the name of "${t}"`);
              return this.validators[t];
            }
            addValidatorMessage(t, e) {
              this.messages[t] = e;
            }
            getValidatorMessage(t) {
              return this.messages[t];
            }
            setManipulator(t) {
              new t.class()[t.method](this);
            }
            mergeExtendedType(t) {
              if (!this.types[t].extends) return;
              const e = this.getType(this.types[t].extends);
              this.types[t].component || (this.types[t].component = e.component),
                this.types[t].wrappers || (this.types[t].wrappers = e.wrappers);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = u.Rb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            (t.ngInjectableDef = Object(u.W)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        H = (() => {
          class t {
            constructor(t, e, n) {
              (this.formlyConfig = t), (this.componentFactoryResolver = e), (this.injector = n);
            }
            buildForm(t, e = [], n, i) {
              if (!this.formlyConfig.extensions.core)
                throw new Error(
                  'NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.'
                );
              const r = { fieldGroup: e, model: n, formControl: t, options: this._setOptions(i) };
              N(t, () => this._buildForm(r)), r.options._checkField(r, !0);
            }
            _buildForm(t) {
              this.getExtensions().forEach((e) => e.prePopulate && e.prePopulate(t)),
                this.getExtensions().forEach((e) => e.onPopulate && e.onPopulate(t)),
                t.fieldGroup && t.fieldGroup.forEach((t) => this._buildForm(t)),
                this.getExtensions().forEach((e) => e.postPopulate && e.postPopulate(t));
            }
            getExtensions() {
              return Object.keys(this.formlyConfig.extensions).map((t) => this.formlyConfig.extensions[t]);
            }
            _setOptions(t) {
              return (
                ((t = t || {}).formState = t.formState || {}),
                t.showError || (t.showError = this.formlyConfig.extras.showError),
                t.fieldChanges || M(t, 'fieldChanges', new p.a()),
                t._resolver || M(t, '_resolver', this.componentFactoryResolver),
                t._injector || M(t, '_injector', this.injector),
                t._hiddenFieldsForCheck || (t._hiddenFieldsForCheck = []),
                t._markForCheck ||
                  (t._markForCheck = (e) => {
                    e._componentRefs &&
                      e._componentRefs.forEach((t) => {
                        t.injector.get(u.i).markForCheck();
                      }),
                      e.fieldGroup && e.fieldGroup.forEach((e) => t._markForCheck(e));
                  }),
                t
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(u.fc(L), u.fc(u.k), u.fc(u.t));
            }),
            (t.ɵprov = u.Rb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            (t.ngInjectableDef = Object(u.W)({
              factory: function () {
                return new t(Object(u.ab)(L), Object(u.ab)(u.k), Object(u.ab)(u.q));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        z = (() => {
          class t {
            constructor(t, e, n, i, o) {
              (this.formlyBuilder = t),
                (this.formlyConfig = e),
                (this.ngZone = n),
                (this.parentFormGroup = o),
                (this.modelChange = new u.p()),
                (this.immutable = !1),
                (this._modelChangeValue = {}),
                (this.modelChangeSubs = []),
                (this.modelChange$ = new p.a()),
                (this.modelChangeSub = this.modelChange$
                  .pipe(Object(r.a)(() => this.ngZone.onStable.asObservable().pipe(Object(s.a)(1))))
                  .subscribe(() =>
                    this.ngZone.runGuarded(() => {
                      this.checkExpressionChange(), this.modelChange.emit((this._modelChangeValue = P(this.model)));
                    })
                  )),
                null !== i &&
                  console.warn(
                    "NgxFormly: passing 'immutable' attribute to 'formly-form' component is deprecated since v5.5, enable immutable mode through NgModule declaration instead."
                  ),
                (this.immutable = null !== i || !!e.extras.immutable);
            }
            set model(t) {
              this._model = this.immutable ? P(t) : t;
            }
            get model() {
              return this._model || {};
            }
            set fields(t) {
              this._fields = this.immutable ? P(t) : t;
            }
            get fields() {
              return this._fields || [];
            }
            set options(t) {
              this._options = this.immutable ? P(t) : t;
            }
            get options() {
              return this._options;
            }
            set content(t) {
              t &&
                t.nativeElement.nextSibling &&
                console.warn(
                  "NgxFormly: content projection for 'formly-form' component is deprecated since v5.5, you should avoid passing content inside the 'formly-form' tag."
                );
            }
            ngDoCheck() {
              'changeDetectionCheck' === this.formlyConfig.extras.checkExpressionOn && this.checkExpressionChange();
            }
            ngOnChanges(t) {
              (t.fields || t.form || (t.model && this._modelChangeValue !== t.model.currentValue)) &&
                ((this.form = this.form || new h.g({})),
                this.setOptions(),
                this.options.updateInitialValue(),
                this.clearModelSubscriptions(),
                this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options),
                this.trackModelChanges(this.fields));
            }
            ngOnDestroy() {
              this.modelChangeSub.unsubscribe(), this.clearModelSubscriptions();
            }
            changeModel({ key: t, value: e, field: n }) {
              if (null == e && n.autoClear && !n.formControl.parent) {
                const e = t.split('.'),
                  n = e.pop();
                delete e.reduce((t, e) => t[e] || {}, this.model)[n];
              } else E(this.model, t.split('.'), e);
              this.modelChange$.next();
            }
            setOptions() {
              this.options || (this.options = {}),
                this.options.resetModel ||
                  (this.options.resetModel = (t) => {
                    (t = P(A(t) ? this.options._initialModel : t)),
                      this.model &&
                        (Object.keys(this.model).forEach((t) => delete this.model[t]),
                        Object.assign(this.model, t || {})),
                      this.options._buildForm(),
                      this.options.parentForm && this.options.parentForm.control === this.form
                        ? this.options.parentForm.resetForm(t)
                        : this.form.reset(t);
                  }),
                !this.options.parentForm &&
                  this.parentFormGroup &&
                  (M(this.options, 'parentForm', this.parentFormGroup),
                  F(this.options.parentForm, 'submitted', ({ firstChange: t }) => {
                    t ||
                      (this.checkExpressionChange(),
                      this.options._markForCheck({
                        fieldGroup: this.fields,
                        model: this.model,
                        formControl: this.form,
                        options: this.options,
                      }));
                  })),
                this.options.updateInitialValue ||
                  (this.options.updateInitialValue = () => (this.options._initialModel = P(this.model))),
                this.options._buildForm ||
                  (this.options._buildForm = (t = !1) => {
                    this.clearModelSubscriptions(),
                      this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options),
                      this.trackModelChanges(this.fields),
                      t && this.modelChange.emit((this._modelChangeValue = P(this.model)));
                  });
            }
            checkExpressionChange() {
              this.options &&
                this.options._checkField &&
                this.options._checkField({
                  fieldGroup: this.fields,
                  model: this.model,
                  formControl: this.form,
                  options: this.options,
                });
            }
            trackModelChanges(t, e = []) {
              t.forEach((t) => {
                if (t.key && !t.fieldGroup) {
                  const n = t.formControl;
                  let i = n.valueChanges.pipe(Object(o.a)());
                  const { updateOn: r, debounce: s } = t.modelOptions;
                  (!r || 'change' === r) && s && s.default > 0 && (i = n.valueChanges.pipe(Object(a.a)(s.default))),
                    this.modelChangeSubs.push(
                      i.subscribe((i) => {
                        n instanceof h.e &&
                          n._fields &&
                          n._fields.length > 1 &&
                          n.patchValue(i, { emitEvent: !1, onlySelf: !0 }),
                          t.parsers && t.parsers.length > 0 && t.parsers.forEach((t) => (i = t(i))),
                          this.changeModel({ key: [...e, ...O(t)].join('.'), value: i, field: t });
                      })
                    );
                  const c = n.valueChanges.observers;
                  c && c.length > 1 && c.unshift(c.pop());
                }
                t.fieldGroup &&
                  t.fieldGroup.length > 0 &&
                  this.trackModelChanges(t.fieldGroup, t.key ? [...e, ...O(t)] : e);
              });
            }
            clearModelSubscriptions() {
              this.modelChangeSubs.forEach((t) => t.unsubscribe()), (this.modelChangeSubs = []);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(u.Vb(H), u.Vb(L), u.Vb(u.B), u.gc('immutable'), u.Vb(h.h, 8));
            }),
            (t.ɵcmp = u.Pb({
              type: t,
              selectors: [['formly-form']],
              viewQuery: function (t, e) {
                var n;
                1 & t && u.Rc(b, !0), 2 & t && u.Ac((n = u.kc())) && (e.content = n.first);
              },
              inputs: { model: 'model', fields: 'fields', options: 'options', form: 'form' },
              outputs: { modelChange: 'modelChange' },
              features: [u.Hb([H]), u.Gb],
              ngContentSelectors: y,
              decls: 4,
              vars: 1,
              consts: [
                ['hide-deprecation', '', 3, 'form', 'options', 'model', 'field', 4, 'ngFor', 'ngForOf'],
                ['content', ''],
                ['hide-deprecation', '', 3, 'form', 'options', 'model', 'field'],
              ],
              template: function (t, e) {
                1 & t && (u.uc(), u.Kc(0, _, 1, 4, 'formly-field', 0), u.Zb(1, null, 1), u.tc(3), u.Yb()),
                  2 & t && u.vc('ngForOf', e.fields);
              },
              directives: function () {
                return [i.k, B];
              },
              encapsulation: 2,
            })),
            t
          );
        })(),
        B = (() => {
          class t {
            constructor(t, e, n, i, r) {
              (this.formlyConfig = t),
                (this.renderer = e),
                (this.resolver = n),
                (this.elementRef = i),
                (this.warnDeprecation = !1),
                (this.modelChange = new u.p()),
                (this.hostObservers = []),
                (this.componentRefs = []),
                (this.warnDeprecation = null === r);
            }
            set model(t) {
              this.warnDeprecation &&
                console.warn(
                  `NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`
                );
            }
            set form(t) {
              this.warnDeprecation &&
                console.warn(
                  `NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`
                );
            }
            set options(t) {
              this.warnDeprecation &&
                console.warn(
                  `NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`
                );
            }
            ngAfterContentInit() {
              this.triggerHook('afterContentInit');
            }
            ngAfterContentChecked() {
              this.triggerHook('afterContentChecked');
            }
            ngAfterViewInit() {
              this.triggerHook('afterViewInit');
            }
            ngAfterViewChecked() {
              this.triggerHook('afterViewChecked');
            }
            ngDoCheck() {
              this.triggerHook('doCheck');
            }
            ngOnInit() {
              this.triggerHook('onInit');
            }
            ngOnChanges(t) {
              this.triggerHook('onChanges', t);
            }
            ngOnDestroy() {
              this.resetRefs(this.field), this.hostObservers.forEach((t) => t()), this.triggerHook('onDestroy');
            }
            renderField(t, e, n) {
              if (
                (this.containerRef === t && (this.resetRefs(this.field), this.containerRef.clear()), n && n.length > 0)
              ) {
                const [i, ...r] = n,
                  { component: s } = this.formlyConfig.getWrapper(i),
                  o = t.createComponent(this.resolver.resolveComponentFactory(s));
                this.attachComponentRef(o, e),
                  F(o.instance, 'fieldComponent', ({ firstChange: t, previousValue: n, currentValue: i }) => {
                    if (i) {
                      const s = n ? n.detach() : null;
                      s && !s.destroyed ? i.insert(s) : this.renderField(i, e, r),
                        !t && o.changeDetectorRef.detectChanges();
                    }
                  });
              } else if (e && e.type) {
                const { component: n } = this.formlyConfig.getType(e.type),
                  i = t.createComponent(this.resolver.resolveComponentFactory(n));
                this.attachComponentRef(i, e);
              }
            }
            triggerHook(t, e) {
              this.field &&
                this.field.hooks &&
                this.field.hooks[t] &&
                ((e && !e.field) || this.field.hooks[t](this.field)),
                this.field &&
                  this.field.lifecycle &&
                  this.field.lifecycle[t] &&
                  this.field.lifecycle[t](this.field.form, this.field, this.field.model, this.field.options),
                'onChanges' === t &&
                  e.field &&
                  (this.renderHostBinding(),
                  this.resetRefs(e.field.previousValue),
                  this.renderField(this.containerRef, this.field, this.field ? this.field.wrappers : []));
            }
            attachComponentRef(t, e) {
              this.componentRefs.push(t), e._componentRefs.push(t), Object.assign(t.instance, { field: e });
            }
            renderHostBinding() {
              this.field &&
                (this.hostObservers.forEach((t) => t()),
                (this.hostObservers = [
                  F(this.field, 'hide', ({ firstChange: t, currentValue: e }) => {
                    (!t || (t && e)) &&
                      this.renderer.setStyle(this.elementRef.nativeElement, 'display', e ? 'none' : '');
                  }),
                  F(this.field, 'className', ({ firstChange: t, currentValue: e }) => {
                    (!t || (t && e)) && this.renderer.setAttribute(this.elementRef.nativeElement, 'class', e);
                  }),
                ]));
            }
            resetRefs(t) {
              t &&
                (t._componentRefs
                  ? (t._componentRefs = t._componentRefs.filter((t) => -1 === this.componentRefs.indexOf(t)))
                  : M(this.field, '_componentRefs', [])),
                (this.componentRefs = []);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(u.Vb(L), u.Vb(u.G), u.Vb(u.k), u.Vb(u.m), u.gc('hide-deprecation'));
            }),
            (t.ɵcmp = u.Pb({
              type: t,
              selectors: [['formly-field']],
              viewQuery: function (t, e) {
                var n;
                1 & t && u.Ic(v, !0, u.S), 2 & t && u.Ac((n = u.kc())) && (e.containerRef = n.first);
              },
              inputs: { model: 'model', form: 'form', options: 'options', field: 'field' },
              outputs: { modelChange: 'modelChange' },
              features: [u.Gb],
              decls: 2,
              vars: 0,
              consts: [['container', '']],
              template: function (t, e) {
                1 & t && u.Kc(0, w, 0, 0, 'ng-template', null, 0, u.Lc);
              },
              encapsulation: 2,
            })),
            t
          );
        })(),
        U = (() => {
          class t {
            constructor(t, e, n) {
              (this.renderer = t),
                (this.elementRef = e),
                (this.uiAttributesCache = {}),
                (this.uiAttributes = [...S, 'tabindex', 'placeholder', 'readonly', 'disabled', 'step']),
                (this.uiEvents = { listeners: [], events: ['click', 'keyup', 'keydown', 'keypress'] }),
                (this.document = n);
            }
            get to() {
              return this.field.templateOptions || {};
            }
            get fieldAttrElements() {
              return (this.field && this.field._elementRefs) || [];
            }
            ngOnChanges(t) {
              t.field &&
                (this.field.name && this.setAttribute('name', this.field.name),
                this.uiEvents.listeners.forEach((t) => t()),
                this.uiEvents.events.forEach((t) => {
                  this.to &&
                    this.to[t] &&
                    this.uiEvents.listeners.push(
                      this.renderer.listen(this.elementRef.nativeElement, t, (e) => this.to[t](this.field, e))
                    );
                }),
                this.to &&
                  this.to.attributes &&
                  F(this.to, 'attributes', ({ currentValue: t, previousValue: e }) => {
                    e && Object.keys(e).forEach((t) => this.removeAttribute(t)),
                      t && Object.keys(t).forEach((e) => this.setAttribute(e, t[e]));
                  }),
                this.detachElementRef(t.field.previousValue),
                this.attachElementRef(t.field.currentValue),
                1 === this.fieldAttrElements.length &&
                  (!this.id && this.field.id && this.setAttribute('id', this.field.id),
                  F(this.field, 'focus', ({ currentValue: t }) => {
                    this.toggleFocus(t);
                  }))),
                t.id && this.setAttribute('id', this.id);
            }
            ngDoCheck() {
              this.uiAttributes.forEach((t) => {
                const e = this.to[t];
                this.uiAttributesCache[t] !== e &&
                  ((this.uiAttributesCache[t] = e),
                  e || 0 === e ? this.setAttribute(t, !0 === e ? t : `${e}`) : this.removeAttribute(t));
              });
            }
            ngOnDestroy() {
              this.uiEvents.listeners.forEach((t) => t()), this.detachElementRef(this.field);
            }
            toggleFocus(t) {
              const e = this.fieldAttrElements ? this.fieldAttrElements[0] : null;
              if (!e || !e.nativeElement.focus) return;
              const n =
                !!this.document.activeElement &&
                this.fieldAttrElements.some(
                  ({ nativeElement: t }) => this.document.activeElement === t || t.contains(this.document.activeElement)
                );
              t && !n ? e.nativeElement.focus() : !t && n && e.nativeElement.blur();
            }
            onFocus(t) {
              (this.field.___$focus = !0), this.to.focus && this.to.focus(this.field, t);
            }
            onBlur(t) {
              (this.field.___$focus = !1), this.to.blur && this.to.blur(this.field, t);
            }
            onChange(t) {
              this.to.change && this.to.change(this.field, t),
                this.field.formControl && this.field.formControl.markAsDirty();
            }
            attachElementRef(t) {
              t &&
                (t._elementRefs && -1 === t._elementRefs.indexOf(this.elementRef)
                  ? t._elementRefs.push(this.elementRef)
                  : M(t, '_elementRefs', [this.elementRef]));
            }
            detachElementRef(t) {
              const e = t && t._elementRefs ? this.fieldAttrElements.indexOf(this.elementRef) : -1;
              -1 !== e && this.field._elementRefs.splice(e, 1);
            }
            setAttribute(t, e) {
              this.renderer.setAttribute(this.elementRef.nativeElement, t, e);
            }
            removeAttribute(t) {
              this.renderer.removeAttribute(this.elementRef.nativeElement, t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(u.Vb(u.G), u.Vb(u.m), u.Vb(i.d));
            }),
            (t.ɵdir = u.Qb({
              type: t,
              selectors: [['', 'formlyAttributes', '']],
              hostBindings: function (t, e) {
                1 & t &&
                  u.jc('focus', function (t) {
                    return e.onFocus(t);
                  })('blur', function (t) {
                    return e.onBlur(t);
                  })('change', function (t) {
                    return e.onChange(t);
                  });
              },
              inputs: { field: ['formlyAttributes', 'field'], id: 'id' },
              features: [u.Gb],
            })),
            t
          );
        })(),
        W = (() => {
          class t {
            get model() {
              return this.field.model;
            }
            set model(t) {
              console.warn(
                `NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`
              );
            }
            get form() {
              return this.field.parent.formControl;
            }
            set form(t) {
              console.warn(
                `NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`
              );
            }
            get options() {
              return this.field.options;
            }
            set options(t) {
              console.warn(
                `NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`
              );
            }
            get key() {
              return this.field.key;
            }
            get formControl() {
              return this.field.formControl;
            }
            get to() {
              return this.field.templateOptions || {};
            }
            get showError() {
              return this.options.showError(this);
            }
            get id() {
              return this.field.id;
            }
            get formState() {
              return this.options.formState || {};
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = u.Qb({ type: t, inputs: { model: 'model', form: 'form', options: 'options', field: 'field' } })),
            t
          );
        })();
      function $(t, e = !1) {
        const n = t.formControl.parent;
        if (!n) return;
        const i = t.formControl,
          r = { emitEvent: e };
        if (n instanceof h.d) {
          const t = n.controls.findIndex((t) => t === i);
          -1 !== t && X(n, r, () => n.removeAt(t));
        } else if (n instanceof h.g) {
          const e = O(t),
            s = e[e.length - 1];
          n.get([s]) === i && X(n, r, () => n.removeControl(s));
        }
        i.setParent(null),
          t.autoClear &&
            (t.parent.model && delete t.parent.model[t.key],
            i.reset({ value: void 0, disabled: i.disabled }, { emitEvent: !t.fieldGroup && e, onlySelf: !0 }));
      }
      function q(t, e, n = !1) {
        (e = e || t.formControl)._fields || M(e, '_fields', []),
          -1 === e._fields.indexOf(t) && e._fields.push(t),
          !t.formControl &&
            e &&
            (M(t, 'formControl', e),
            (t.templateOptions.disabled = !!t.templateOptions.disabled),
            F(t.templateOptions, 'disabled', ({ firstChange: e, currentValue: n }) => {
              e || (n ? t.formControl.disable() : t.formControl.enable());
            }),
            e.registerOnDisabledChange && e.registerOnDisabledChange((e) => (t.templateOptions.___$disabled = e)));
        let i = t.parent.formControl;
        if (!i) return;
        const r = O(t);
        i._formlyControls || M(i, '_formlyControls', {}), (i._formlyControls[r.join('.')] = e);
        for (let a = 0; a < r.length - 1; a++) {
          const t = r[a];
          i.get([t]) || q({ key: t, formControl: new h.g({}), parent: { formControl: i } }), (i = i.get([t]));
        }
        t.autoClear && !D(t.defaultValue) && D(T(t)) && E(t.parent.model, O(t), t.defaultValue);
        const s = T(t);
        (A(e.value) && A(s)) || e.value === s || !(e instanceof h.e) || e.patchValue(s);
        const o = r[r.length - 1];
        t._hide || i.get([o]) === e || X(i, { emitEvent: n }, () => i.setControl(o, e));
      }
      function G(t) {
        const e = t.status;
        t.updateValueAndValidity({ emitEvent: !1 }), e !== t.status && t.statusChanges.emit(t.status);
      }
      function X(t, e, n) {
        t instanceof h.g &&
          !t.__patchForEachChild &&
          (M(t, '__patchForEachChild', !0),
          (t._forEachChild = (e) => {
            Object.keys(t.controls).forEach((n) => t.controls[n] && e(t.controls[n], n));
          }));
        const i = t.updateValueAndValidity.bind(t);
        !1 === e.emitEvent &&
          (t.updateValueAndValidity = (t) => {
            i(Object.assign({}, t || {}, { emitEvent: !1 }));
          }),
          n(),
          !1 === e.emitEvent && (t.updateValueAndValidity = i);
      }
      class K extends W {
        constructor(t) {
          super(),
            (this.defaultOptions = { defaultValue: [] }),
            t instanceof H &&
              console.warn(
                `NgxFormly: passing 'FormlyFormBuilder' to '${this.constructor.name}' type is not required anymore, you may remove it!`
              );
        }
        onPopulate(t) {
          !t.formControl && t.key && q(t, new h.d([], { updateOn: t.modelOptions.updateOn })),
            (t.fieldGroup = t.fieldGroup || []);
          const e = t.model ? t.model.length : 0;
          if (t.fieldGroup.length > e)
            for (let n = t.fieldGroup.length - 1; n >= e; --n) $(t.fieldGroup[n]), t.fieldGroup.splice(n, 1);
          for (let n = t.fieldGroup.length; n < e; n++) {
            const e = Object.assign({}, P(t.fieldArray), { key: `${n}` });
            t.fieldGroup.push(e);
          }
        }
        add(t, e, { markAsDirty: n } = { markAsDirty: !0 }) {
          (t = A(t) ? this.field.fieldGroup.length : t),
            this.model || E(this.field.parent.model, O(this.field), []),
            this.model.splice(t, 0, e ? P(e) : void 0),
            this.options._buildForm(!0),
            n && this.formControl.markAsDirty();
        }
        remove(t, { markAsDirty: e } = { markAsDirty: !0 }) {
          this.model.splice(t, 1),
            $(this.field.fieldGroup[t], !0),
            this.field.fieldGroup.splice(t, 1),
            this.field.fieldGroup.forEach((t, e) => (t.key = `${e}`)),
            this.options._buildForm(!0),
            e && this.formControl.markAsDirty();
        }
      }
      let Y = (() => {
        class t extends W {}
        return (
          (t.ɵfac = function (e) {
            return Z(e || t);
          }),
          (t.ɵdir = u.Qb({
            type: t,
            viewQuery: function (t, e) {
              var n;
              1 & t && u.Rc(x, !0, u.S), 2 & t && u.Ac((n = u.kc())) && (e.fieldComponent = n.first);
            },
            features: [u.Fb],
          })),
          t
        );
      })();
      const Z = u.dc(Y);
      let Q = (() => {
        class t extends W {
          constructor() {
            super(...arguments), (this.defaultOptions = { defaultValue: {} });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return J(e || t);
          }),
          (t.ɵcmp = u.Pb({
            type: t,
            selectors: [['formly-group']],
            hostVars: 2,
            hostBindings: function (t, e) {
              2 & t && u.Kb(e.field.fieldGroupClassName || '');
            },
            features: [u.Fb],
            ngContentSelectors: y,
            decls: 2,
            vars: 1,
            consts: [
              [3, 'field', 4, 'ngFor', 'ngForOf'],
              [3, 'field'],
            ],
            template: function (t, e) {
              1 & t && (u.uc(), u.Kc(0, C, 1, 1, 'formly-field', 0), u.tc(1)),
                2 & t && u.vc('ngForOf', e.field.fieldGroup);
            },
            directives: [i.k, B],
            encapsulation: 2,
          })),
          t
        );
      })();
      const J = u.dc(Q);
      let tt = (() => {
          class t {
            constructor(t) {
              this.formlyConfig = t;
            }
            ngOnChanges() {
              this.errorMessage$ = this.field.formControl.statusChanges.pipe(
                Object(c.a)(null),
                Object(l.a)(() => this.errorMessage)
              );
            }
            get errorMessage() {
              const t = this.field.formControl;
              for (let e in t.errors)
                if (t.errors.hasOwnProperty(e)) {
                  let n = this.formlyConfig.getValidatorMessage(e);
                  if (R(t.errors[e])) {
                    if (t.errors[e].errorPath) return;
                    t.errors[e].message && (n = t.errors[e].message);
                  }
                  return (
                    this.field.validation &&
                      this.field.validation.messages &&
                      this.field.validation.messages[e] &&
                      (n = this.field.validation.messages[e]),
                    this.field.validators &&
                      this.field.validators[e] &&
                      this.field.validators[e].message &&
                      (n = this.field.validators[e].message),
                    this.field.asyncValidators &&
                      this.field.asyncValidators[e] &&
                      this.field.asyncValidators[e].message &&
                      (n = this.field.asyncValidators[e].message),
                    'function' == typeof n ? n(t.errors[e], this.field) : n
                  );
                }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(u.Vb(L));
            }),
            (t.ɵcmp = u.Pb({
              type: t,
              selectors: [['formly-validation-message']],
              inputs: { field: 'field' },
              features: [u.Gb],
              decls: 2,
              vars: 3,
              template: function (t, e) {
                1 & t && (u.Mc(0), u.oc(1, 'async')), 2 & t && u.Nc(u.pc(1, 1, e.errorMessage$));
              },
              pipes: [i.b],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        et = (() => {
          class t extends W {
            constructor(t) {
              super(), (this.sanitizer = t), (this.innerHtml = { content: null, template: null });
            }
            get template() {
              return (
                this.field &&
                  this.field.template !== this.innerHtml.template &&
                  (this.innerHtml = {
                    template: this.field.template,
                    content: this.to.safeHtml
                      ? this.sanitizer.bypassSecurityTrustHtml(this.field.template)
                      : this.field.template,
                  }),
                this.innerHtml.content
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(u.Vb(g.b));
            }),
            (t.ɵcmp = u.Pb({
              type: t,
              selectors: [['formly-template']],
              features: [u.Fb],
              decls: 1,
              vars: 1,
              consts: [[3, 'innerHtml']],
              template: function (t, e) {
                1 & t && u.Wb(0, 'div', 0), 2 & t && u.vc('innerHtml', e.template, u.Ec);
              },
              encapsulation: 2,
            })),
            t
          );
        })();
      function nt(t, e, n) {
        return t instanceof Function ? t.apply(e, n) : !!t;
      }
      class it {
        prePopulate(t) {
          t.parent ||
            t.options._checkField ||
            (t.options._checkField = (t, e) => {
              N(t.formControl, () => this.checkField(t, e));
            });
        }
        onPopulate(t) {
          if (t.parent && !t._expressionProperties) {
            if ((M(t, '_expressionProperties', {}), t.expressionProperties))
              for (const e in t.expressionProperties) {
                const n = t.expressionProperties[e];
                if ('string' == typeof n || j(n))
                  (t._expressionProperties[e] = {
                    expression: this._evalExpression(
                      n,
                      'templateOptions.disabled' === e &&
                        t.parent.expressionProperties &&
                        t.parent.expressionProperties.hasOwnProperty('templateOptions.disabled')
                        ? () => t.parent.templateOptions.disabled
                        : void 0
                    ),
                  }),
                    'templateOptions.disabled' === e &&
                      Object.defineProperty(t._expressionProperties[e], 'expressionValue', {
                        get: () => t.templateOptions.disabled,
                        set: () => {},
                        enumerable: !0,
                        configurable: !0,
                      });
                else if (n instanceof f.a) {
                  const i = () =>
                    n.subscribe((n) => {
                      this.setExprValue(t, e, n), t.options && t.options._markForCheck && t.options._markForCheck(t);
                    });
                  let r = i();
                  const s = t.hooks.onInit;
                  t.hooks.onInit = () => {
                    s && s(t), null === r && (r = i());
                  };
                  const o = t.hooks.onDestroy;
                  t.hooks.onDestroy = () => {
                    o && o(t), r.unsubscribe(), (r = null);
                  };
                }
              }
            if (t.hideExpression) {
              delete t.hide;
              let e = t.parent;
              for (; e && !e.hideExpression; ) e = e.parent;
              t.hideExpression = this._evalExpression(t.hideExpression, e && e.hideExpression ? () => e.hide : void 0);
            } else
              F(t, 'hide', ({ currentValue: e, firstChange: n }) => {
                (t._hide = e), (!n || (n && !0 === e)) && t.options._hiddenFieldsForCheck.push(t);
              });
          }
        }
        _evalExpression(t, e) {
          return (
            'string' == typeof (t = t || (() => !1)) &&
              (t = (function (t, e) {
                try {
                  return (
                    -1 !== t.indexOf('this.field') &&
                      console.warn(
                        "NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead."
                      ),
                    Function('model', 'formState', 'field', `return ${t};`)
                  );
                } catch (n) {
                  console.error(n);
                }
              })(t)),
            e ? (n, i, r) => e() || t(n, i, r) : t
          );
        }
        checkField(t, e = !1) {
          this._checkField(t, e),
            t.options._hiddenFieldsForCheck
              .sort((t) => (t.hide ? -1 : 1))
              .forEach((t) => this.toggleFormControl(t, t.hide)),
            (t.options._hiddenFieldsForCheck = []);
        }
        _checkField(t, e = !1) {
          let n = !1;
          t.fieldGroup.forEach((i) => {
            this.checkFieldExpressionChange(i, e) && (n = !0),
              this.checkFieldVisibilityChange(i, e) && (t.options._hiddenFieldsForCheck.push(i), (n = !0)),
              i.fieldGroup && i.fieldGroup.length > 0 && this._checkField(i, e);
          }),
            n && t.options && t.options._markForCheck && t.options._markForCheck(t);
        }
        checkFieldExpressionChange(t, e) {
          if (!t || !t._expressionProperties) return !1;
          let n = !1;
          const i = t._expressionProperties;
          for (const r in i) {
            let s = nt(i[r].expression, { field: t }, [t.model, t.options.formState, t]);
            'templateOptions.disabled' === r && (s = !!s),
              (!e &&
                (i[r].expressionValue === s || (R(s) && JSON.stringify(s) === JSON.stringify(i[r].expressionValue)))) ||
                ((n = !0), (i[r].expressionValue = s), this.setExprValue(t, r, s));
          }
          return n;
        }
        checkFieldVisibilityChange(t, e) {
          if (!t || A(t.hideExpression)) return !1;
          const n = !!nt(t.hideExpression, { field: t }, [t.model, t.options.formState, t]);
          let i = !1;
          return (n !== t.hide || e) && ((i = !0), (t.hide = n), (t.templateOptions.hidden = n)), i;
        }
        setDisabledState(t, e) {
          t.fieldGroup &&
            t.fieldGroup
              .filter(
                (t) => !t.expressionProperties || !t.expressionProperties.hasOwnProperty('templateOptions.disabled')
              )
              .forEach((t) => this.setDisabledState(t, e)),
            t.key && t.templateOptions.disabled !== e && (t.templateOptions.disabled = e);
        }
        toggleFormControl(t, e) {
          if (t.formControl && t.key) {
            M(t, '_hide', !(!e && !t.hide));
            const n = t.formControl;
            n._fields.length > 1 && G(n), !0 === e && n._fields.every((t) => !!t._hide) ? $(t) : q(t);
          }
          t.fieldGroup && t.fieldGroup.filter((t) => !t.hideExpression).forEach((t) => this.toggleFormControl(t, e)),
            t.options.fieldChanges && t.options.fieldChanges.next({ field: t, type: 'hidden', value: e });
        }
        setExprValue(t, e, n) {
          try {
            let i = t;
            const r = e.split('.'),
              s = r.length - 1;
            for (let t = 0; t < s; t++) i = i[r[t]];
            i[r[s]] = n;
          } catch (i) {
            throw ((i.message = `[Formly Error] [Expression "${e}"] ${i.message}`), i);
          }
          if (('templateOptions.disabled' === e && t.key && this.setDisabledState(t, n), 0 === e.indexOf('model.'))) {
            const i = e.replace(/^model\./, ''),
              r = t.key && e === i ? t.formControl : t.parent.formControl.get(i);
            !r || (A(r.value) && A(n)) || r.value === n || r.patchValue(n, { emitEvent: !1 });
          }
        }
      }
      class rt {
        constructor(t) {
          this.formlyConfig = t;
        }
        onPopulate(t) {
          t.parent &&
            t.key &&
            (this.initFieldValidation(t, 'validators'), this.initFieldValidation(t, 'asyncValidators'));
        }
        initFieldValidation(t, e) {
          const n = 'validators' === e ? [this.getPredefinedFieldValidation(t)] : [];
          if (t[e])
            for (const i in t[e])
              'validation' !== i ||
                Array.isArray(t[e].validation) ||
                ((t[e].validation = [t[e].validation]),
                console.warn(
                  `NgxFormly(${t.key}): passing a non array value to the 'validation' is deprecated, pass an array instead`
                )),
                'validation' === i
                  ? n.push(...t[e].validation.map((e) => this.wrapNgValidatorFn(t, e)))
                  : n.push(this.wrapNgValidatorFn(t, t[e][i], i));
          M(t, '_' + e, 'validators' === e ? h.u.compose(n) : h.u.composeAsync(n));
        }
        getPredefinedFieldValidation(t) {
          let e = [];
          return (
            S.forEach((n) =>
              F(t.templateOptions, n, ({ currentValue: i, firstChange: r }) => {
                (e = e.filter((t) => t !== n)),
                  null != i && !1 !== i && e.push(n),
                  !r && t.formControl && G(t.formControl);
              })
            ),
            (n) =>
              0 === e.length
                ? null
                : h.u.compose(
                    e.map((e) => () => {
                      const i = t.templateOptions[e];
                      switch (e) {
                        case 'required':
                          return h.u.required(n);
                        case 'pattern':
                          return h.u.pattern(i)(n);
                        case 'minLength':
                          return h.u.minLength(i)(n);
                        case 'maxLength':
                          return h.u.maxLength(i)(n);
                        case 'min':
                          return h.u.min(i)(n);
                        case 'max':
                          return h.u.max(i)(n);
                      }
                    })
                  )(n)
          );
        }
        wrapNgValidatorFn(t, e, n) {
          return (i) => {
            let r = e;
            'string' == typeof e && (r = this.formlyConfig.getValidator(e).validation), R(e) && (r = e.expression);
            const s = r(i, t);
            return n
              ? (o = s) && 'function' == typeof o.then
                ? s.then(
                    (i) => (
                      t.options && t.options._markForCheck && t.options._markForCheck(t),
                      this.handleResult(t, i, { validatorName: n, validator: e })
                    )
                  )
                : this.handleResult(t, s, { validatorName: n, validator: e })
              : s;
            var o;
          };
        }
        handleResult(t, e, { validatorName: n, validator: i }) {
          if (R(i) && t.formControl && i.errorPath) {
            const r = t.formControl.get(i.errorPath);
            if (r) {
              const t = r.errors || {};
              e
                ? (delete t[n], r.setErrors(0 === Object.keys(t).length ? null : t))
                : r.setErrors(Object.assign({}, t, { [n]: { message: i.message } }));
            }
            return e ? null : { [n]: { errorPath: i.errorPath } };
          }
          return e ? null : { [n]: !0 };
        }
      }
      class st {
        constructor(t) {
          this.config = t;
        }
        onPopulate(t) {
          t.key && this.addFormControl(t),
            t.parent && t.fieldGroup && !t.key && M(t, 'formControl', t.parent.formControl);
        }
        postPopulate(t) {
          t.parent || (this.setValidators(t) && t.formControl._updateTreeValidity());
        }
        addFormControl(t) {
          let e = (function (t) {
            if (t.formControl) return t.formControl;
            const e = t.parent.formControl;
            return e ? e.get(O(t)) : null;
          })(t);
          if (!e) {
            const n = { updateOn: t.modelOptions.updateOn },
              i = T(t),
              r = this.config ? this.config.resolveFieldTypeRef(t) : null;
            if (r && r.componentType && r.componentType.createControl) {
              const n = r.componentType;
              console.warn(
                `NgxFormly: '${n.name}::createControl' is deprecated since v5.0, use 'prePopulate' hook instead.`
              ),
                (e = n.createControl(i, t));
            } else e = t.fieldGroup ? new h.g({}, n) : new h.e(i, n);
          }
          q(t, e);
        }
        setValidators(t) {
          let e = !1;
          if (t.key) {
            const {
              formControl: n,
              templateOptions: { disabled: i },
            } = t;
            i && n.enabled && (n.disable({ emitEvent: !1, onlySelf: !0 }), (e = !0)),
              (null !== n.validator && null !== n.asyncValidator) ||
                (n.setValidators(() => {
                  const t = 1 === n._fields.length ? n._fields : n._fields.filter((t) => !t._hide),
                    e = h.u.compose(t.map((t) => t._validators));
                  return e ? e(n) : null;
                }),
                n.setAsyncValidators(() => {
                  const t = 1 === n._fields.length ? n._fields : n._fields.filter((t) => !t._hide),
                    e = h.u.composeAsync(t.map((t) => t._asyncValidators));
                  return e ? e(n) : Object(m.a)(null);
                }),
                n.parent ? (e = !0) : G(n));
          }
          return (t.fieldGroup || []).forEach((t) => this.setValidators(t) && (e = !0)), e;
        }
      }
      class ot {
        constructor(t) {
          (this.formlyConfig = t), (this.formId = 0);
        }
        prePopulate(t) {
          if ((this.getFieldComponentInstance(t).prePopulate(), t.parent)) return;
          const e = (t.options && t.options.fieldTransform) || this.formlyConfig.extras.fieldTransform;
          (Array.isArray(e) ? e : [e]).forEach((e) => {
            if (
              e &&
              (console.warn('NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead.'),
              !e(t.fieldGroup, t.model, t.formControl, t.options))
            )
              throw new Error('fieldTransform must return an array of fields');
          });
        }
        onPopulate(t) {
          this.initFieldOptions(t),
            this.getFieldComponentInstance(t).onPopulate(),
            t.fieldGroup &&
              t.fieldGroup.forEach((e, n) => {
                Object.defineProperty(e, 'parent', { get: () => t, configurable: !0 }),
                  Object.defineProperty(e, 'index', { get: () => n, configurable: !0 }),
                  this.formId++;
              });
        }
        postPopulate(t) {
          this.getFieldComponentInstance(t).postPopulate();
        }
        initFieldOptions(t) {
          const e = t.parent;
          e &&
            (Object.defineProperty(t, 'form', { get: () => e.formControl, configurable: !0 }),
            Object.defineProperty(t, 'options', { get: () => e.options, configurable: !0 }),
            Object.defineProperty(t, 'model', {
              get: () => (t.key && t.fieldGroup ? T(t) : e.model),
              configurable: !0,
            }),
            I(t, {
              id: k(`formly_${this.formId}`, t, t.index),
              hooks: {},
              modelOptions: {},
              templateOptions: t.type && t.key ? { label: '', placeholder: '', focus: !1, disabled: !1 } : {},
            }),
            t.lifecycle && console.warn("NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead."),
            'formly-template' !== t.type &&
              (t.template || (t.expressionProperties && t.expressionProperties.template)) &&
              (t.type && console.warn("NgxFormly: passing 'type' property is not allowed when 'template' is set."),
              (t.type = 'formly-template')),
            !t.type && t.fieldGroup && (t.type = 'formly-group'),
            t.type && this.formlyConfig.getMergedField(t),
            t.autoClear || D(t.defaultValue) || !D(T(t)) || E(e.model, O(t), t.defaultValue),
            this.initFieldWrappers(t));
        }
        initFieldWrappers(t) {
          t.wrappers = t.wrappers || [];
          const e = Object.assign({ preWrapper: [], postWrapper: [] }, t.templateOptions.templateManipulators || {});
          t.wrappers = [
            ...this.formlyConfig.templateManipulators.preWrapper.map((e) => e(t)),
            ...e.preWrapper.map((e) => e(t)),
            ...t.wrappers,
            ...this.formlyConfig.templateManipulators.postWrapper.map((e) => e(t)),
            ...e.postWrapper.map((e) => e(t)),
          ].filter((t, e, n) => t && e === n.indexOf(t));
        }
        getFieldComponentInstance(t) {
          const e = this.formlyConfig.resolveFieldTypeRef(t),
            n = e ? e.instance : {};
          return {
            prePopulate: () => n.prePopulate && n.prePopulate(t),
            onPopulate: () => n.onPopulate && n.onPopulate(t),
            postPopulate: () => n.postPopulate && n.postPopulate(t),
          };
        }
      }
      function at(t) {
        return {
          types: [
            { name: 'formly-group', component: Q },
            { name: 'formly-template', component: et },
          ],
          extensions: [
            { name: 'core', extension: new ot(t) },
            { name: 'field-validation', extension: new rt(t) },
            { name: 'field-form', extension: new st(t) },
            { name: 'field-expression', extension: new it() },
          ],
        };
      }
      let ct = (() => {
        class t {
          constructor(t, e = []) {
            e && e.forEach((e) => t.addConfig(e));
          }
          static forRoot(e = {}) {
            return {
              ngModule: t,
              providers: [
                { provide: V, multi: !0, useFactory: at, deps: [L] },
                { provide: V, useValue: e, multi: !0 },
                { provide: u.a, useValue: e, multi: !0 },
                L,
                H,
              ],
            };
          }
          static forChild(e = {}) {
            return {
              ngModule: t,
              providers: [{ provide: V, useValue: e, multi: !0 }, { provide: u.a, useValue: e, multi: !0 }, H],
            };
          }
        }
        return (
          (t.ɵmod = u.Tb({ type: t })),
          (t.ɵinj = u.Sb({
            factory: function (e) {
              return new (e || t)(u.fc(L), u.fc(V, 8));
            },
            imports: [[i.c]],
          })),
          t
        );
      })();
    },
    '0IaG': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return O;
      }),
        n.d(e, 'b', function () {
          return I;
        }),
        n.d(e, 'c', function () {
          return A;
        }),
        n.d(e, 'd', function () {
          return k;
        });
      var i = n('rDax'),
        r = n('+rOU'),
        s = n('fXoL'),
        o = n('FKr1'),
        a = n('cH1L'),
        c = n('ofXK'),
        l = n('XNiG'),
        u = n('NXyV'),
        h = n('LRne'),
        d = n('pLZG'),
        p = n('IzEk'),
        f = n('JX91'),
        m = n('R0Ic'),
        g = n('FtGj'),
        b = n('u47x');
      function _(t, e) {}
      class y {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.maxWidth = '80vw'),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = !0),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const v = {
        dialogContainer: Object(m.m)('dialogContainer', [
          Object(m.j)('void, exit', Object(m.k)({ opacity: 0, transform: 'scale(0.7)' })),
          Object(m.j)('enter', Object(m.k)({ transform: 'none' })),
          Object(m.l)(
            '* => enter',
            Object(m.e)('150ms cubic-bezier(0, 0, 0.2, 1)', Object(m.k)({ transform: 'none', opacity: 1 }))
          ),
          Object(m.l)(
            '* => void, * => exit',
            Object(m.e)('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', Object(m.k)({ opacity: 0 }))
          ),
        ]),
      };
      function w() {
        throw Error('Attempting to attach dialog content after content is already attached');
      }
      let x = (() => {
          class t extends r.a {
            constructor(t, e, n, i, r) {
              super(),
                (this._elementRef = t),
                (this._focusTrapFactory = e),
                (this._changeDetectorRef = n),
                (this._config = r),
                (this._elementFocusedBeforeDialogWasOpened = null),
                (this._state = 'enter'),
                (this._animationStateChanged = new s.p()),
                (this.attachDomPortal = (t) => (
                  this._portalOutlet.hasAttached() && w(), this._setupFocusTrap(), this._portalOutlet.attachDomPortal(t)
                )),
                (this._ariaLabelledBy = r.ariaLabelledBy || null),
                (this._document = i);
            }
            attachComponentPortal(t) {
              return (
                this._portalOutlet.hasAttached() && w(),
                this._setupFocusTrap(),
                this._portalOutlet.attachComponentPortal(t)
              );
            }
            attachTemplatePortal(t) {
              return (
                this._portalOutlet.hasAttached() && w(),
                this._setupFocusTrap(),
                this._portalOutlet.attachTemplatePortal(t)
              );
            }
            _recaptureFocus() {
              this._containsFocus() || this._focusTrap.focusInitialElement() || this._elementRef.nativeElement.focus();
            }
            _trapFocus() {
              this._config.autoFocus
                ? this._focusTrap.focusInitialElementWhenReady()
                : this._containsFocus() || this._elementRef.nativeElement.focus();
            }
            _restoreFocus() {
              const t = this._elementFocusedBeforeDialogWasOpened;
              if (this._config.restoreFocus && t && 'function' == typeof t.focus) {
                const e = this._document.activeElement,
                  n = this._elementRef.nativeElement;
                (e && e !== this._document.body && e !== n && !n.contains(e)) || t.focus();
              }
              this._focusTrap && this._focusTrap.destroy();
            }
            _setupFocusTrap() {
              this._focusTrap || (this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement)),
                this._document &&
                  ((this._elementFocusedBeforeDialogWasOpened = this._document.activeElement),
                  this._elementRef.nativeElement.focus &&
                    Promise.resolve().then(() => this._elementRef.nativeElement.focus()));
            }
            _containsFocus() {
              const t = this._elementRef.nativeElement,
                e = this._document.activeElement;
              return t === e || t.contains(e);
            }
            _onAnimationDone(t) {
              'enter' === t.toState ? this._trapFocus() : 'exit' === t.toState && this._restoreFocus(),
                this._animationStateChanged.emit(t);
            }
            _onAnimationStart(t) {
              this._animationStateChanged.emit(t);
            }
            _startExitAnimation() {
              (this._state = 'exit'), this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Vb(s.m), s.Vb(b.h), s.Vb(s.i), s.Vb(c.d, 8), s.Vb(y));
            }),
            (t.ɵcmp = s.Pb({
              type: t,
              selectors: [['mat-dialog-container']],
              viewQuery: function (t, e) {
                var n;
                1 & t && s.Ic(r.c, !0), 2 & t && s.Ac((n = s.kc())) && (e._portalOutlet = n.first);
              },
              hostAttrs: ['tabindex', '-1', 'aria-modal', 'true', 1, 'mat-dialog-container'],
              hostVars: 6,
              hostBindings: function (t, e) {
                1 & t &&
                  s.Nb('@dialogContainer.start', function (t) {
                    return e._onAnimationStart(t);
                  })('@dialogContainer.done', function (t) {
                    return e._onAnimationDone(t);
                  }),
                  2 & t &&
                    (s.Jb('id', e._id)('role', e._config.role)(
                      'aria-labelledby',
                      e._config.ariaLabel ? null : e._ariaLabelledBy
                    )('aria-label', e._config.ariaLabel)('aria-describedby', e._config.ariaDescribedBy || null),
                    s.Qc('@dialogContainer', e._state));
              },
              features: [s.Fb],
              decls: 1,
              vars: 0,
              consts: [['cdkPortalOutlet', '']],
              template: function (t, e) {
                1 & t && s.Kc(0, _, 0, 0, 'ng-template', 0);
              },
              directives: [r.c],
              styles: [
                '.mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n',
              ],
              encapsulation: 2,
              data: { animation: [v.dialogContainer] },
            })),
            t
          );
        })(),
        C = 0;
      class k {
        constructor(t, e, n = `mat-dialog-${C++}`) {
          (this._overlayRef = t),
            (this._containerInstance = e),
            (this.id = n),
            (this.disableClose = this._containerInstance._config.disableClose),
            (this._afterOpened = new l.a()),
            (this._afterClosed = new l.a()),
            (this._beforeClosed = new l.a()),
            (this._state = 0),
            (e._id = n),
            e._animationStateChanged
              .pipe(
                Object(d.a)((t) => 'done' === t.phaseName && 'enter' === t.toState),
                Object(p.a)(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            e._animationStateChanged
              .pipe(
                Object(d.a)((t) => 'done' === t.phaseName && 'exit' === t.toState),
                Object(p.a)(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout), this._finishDialogClose();
              }),
            t.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._afterClosed.next(this._result),
                this._afterClosed.complete(),
                (this.componentInstance = null),
                this._overlayRef.dispose();
            }),
            t
              .keydownEvents()
              .pipe(Object(d.a)((t) => t.keyCode === g.g && !this.disableClose && !Object(g.s)(t)))
              .subscribe((t) => {
                t.preventDefault(), this.close();
              }),
            t.backdropClick().subscribe(() => {
              this.disableClose ? this._containerInstance._recaptureFocus() : this.close();
            });
        }
        close(t) {
          (this._result = t),
            this._containerInstance._animationStateChanged
              .pipe(
                Object(d.a)((t) => 'start' === t.phaseName),
                Object(p.a)(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(t),
                  this._beforeClosed.complete(),
                  this._overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), e.totalTime + 100));
              }),
            this._containerInstance._startExitAnimation(),
            (this._state = 1);
        }
        afterOpened() {
          return this._afterOpened.asObservable();
        }
        afterClosed() {
          return this._afterClosed.asObservable();
        }
        beforeClosed() {
          return this._beforeClosed.asObservable();
        }
        backdropClick() {
          return this._overlayRef.backdropClick();
        }
        keydownEvents() {
          return this._overlayRef.keydownEvents();
        }
        updatePosition(t) {
          let e = this._getPositionStrategy();
          return (
            t && (t.left || t.right) ? (t.left ? e.left(t.left) : e.right(t.right)) : e.centerHorizontally(),
            t && (t.top || t.bottom) ? (t.top ? e.top(t.top) : e.bottom(t.bottom)) : e.centerVertically(),
            this._overlayRef.updatePosition(),
            this
          );
        }
        updateSize(t = '', e = '') {
          return this._getPositionStrategy().width(t).height(e), this._overlayRef.updatePosition(), this;
        }
        addPanelClass(t) {
          return this._overlayRef.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this._overlayRef.removePanelClass(t), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2), this._overlayRef.dispose();
        }
        _getPositionStrategy() {
          return this._overlayRef.getConfig().positionStrategy;
        }
      }
      const O = new s.s('MatDialogData'),
        S = new s.s('mat-dialog-default-options'),
        E = new s.s('mat-dialog-scroll-strategy'),
        T = {
          provide: E,
          deps: [i.c],
          useFactory: function (t) {
            return () => t.scrollStrategies.block();
          },
        };
      let I = (() => {
          class t {
            constructor(t, e, n, i, r, s, o) {
              (this._overlay = t),
                (this._injector = e),
                (this._defaultOptions = i),
                (this._parentDialog = s),
                (this._overlayContainer = o),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new l.a()),
                (this._afterOpenedAtThisLevel = new l.a()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = Object(u.a)(() =>
                  this.openDialogs.length ? this._afterAllClosed : this._afterAllClosed.pipe(Object(f.a)(void 0))
                )),
                (this._scrollStrategy = r);
            }
            get openDialogs() {
              return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;
            }
            get _afterAllClosed() {
              const t = this._parentDialog;
              return t ? t._afterAllClosed : this._afterAllClosedAtThisLevel;
            }
            open(t, e) {
              if (
                (e = (function (t, e) {
                  return Object.assign(Object.assign({}, e), t);
                })(e, this._defaultOptions || new y())).id &&
                this.getDialogById(e.id)
              )
                throw Error(`Dialog with id "${e.id}" exists already. The dialog id must be unique.`);
              const n = this._createOverlay(e),
                i = this._attachDialogContainer(n, e),
                r = this._attachDialogContent(t, i, n, e);
              return (
                this.openDialogs.length || this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(r),
                r.afterClosed().subscribe(() => this._removeOpenDialog(r)),
                this.afterOpened.next(r),
                r
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(t) {
              return this.openDialogs.find((e) => e.id === t);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _createOverlay(t) {
              const e = this._getOverlayConfig(t);
              return this._overlay.create(e);
            }
            _getOverlayConfig(t) {
              const e = new i.d({
                positionStrategy: this._overlay.position().global(),
                scrollStrategy: t.scrollStrategy || this._scrollStrategy(),
                panelClass: t.panelClass,
                hasBackdrop: t.hasBackdrop,
                direction: t.direction,
                minWidth: t.minWidth,
                minHeight: t.minHeight,
                maxWidth: t.maxWidth,
                maxHeight: t.maxHeight,
                disposeOnNavigation: t.closeOnNavigation,
              });
              return t.backdropClass && (e.backdropClass = t.backdropClass), e;
            }
            _attachDialogContainer(t, e) {
              const n = s.t.create({
                  parent: (e && e.viewContainerRef && e.viewContainerRef.injector) || this._injector,
                  providers: [{ provide: y, useValue: e }],
                }),
                i = new r.d(x, e.viewContainerRef, n, e.componentFactoryResolver);
              return t.attach(i).instance;
            }
            _attachDialogContent(t, e, n, i) {
              const o = new k(n, e, i.id);
              if (t instanceof s.O) e.attachTemplatePortal(new r.h(t, null, { $implicit: i.data, dialogRef: o }));
              else {
                const n = this._createInjector(i, o, e),
                  s = e.attachComponentPortal(new r.d(t, i.viewContainerRef, n));
                o.componentInstance = s.instance;
              }
              return o.updateSize(i.width, i.height).updatePosition(i.position), o;
            }
            _createInjector(t, e, n) {
              const i = t && t.viewContainerRef && t.viewContainerRef.injector,
                r = [
                  { provide: x, useValue: n },
                  { provide: O, useValue: t.data },
                  { provide: k, useValue: e },
                ];
              return (
                !t.direction ||
                  (i && i.get(a.b, null)) ||
                  r.push({ provide: a.b, useValue: { value: t.direction, change: Object(h.a)() } }),
                s.t.create({ parent: i || this._injector, providers: r })
              );
            }
            _removeOpenDialog(t) {
              const e = this.openDialogs.indexOf(t);
              e > -1 &&
                (this.openDialogs.splice(e, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((t, e) => {
                    t ? e.setAttribute('aria-hidden', t) : e.removeAttribute('aria-hidden');
                  }),
                  this._ariaHiddenElements.clear(),
                  this._afterAllClosed.next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const t = this._overlayContainer.getContainerElement();
              if (t.parentElement) {
                const e = t.parentElement.children;
                for (let n = e.length - 1; n > -1; n--) {
                  let i = e[n];
                  i === t ||
                    'SCRIPT' === i.nodeName ||
                    'STYLE' === i.nodeName ||
                    i.hasAttribute('aria-live') ||
                    (this._ariaHiddenElements.set(i, i.getAttribute('aria-hidden')),
                    i.setAttribute('aria-hidden', 'true'));
                }
              }
            }
            _closeDialogs(t) {
              let e = t.length;
              for (; e--; ) t[e].close();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.fc(i.c), s.fc(s.t), s.fc(c.g, 8), s.fc(S, 8), s.fc(E), s.fc(t, 12), s.fc(i.e));
            }),
            (t.ɵprov = s.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        A = (() => {
          class t {}
          return (
            (t.ɵmod = s.Tb({ type: t })),
            (t.ɵinj = s.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [I, T],
              imports: [[i.f, r.g, o.g], o.g],
            })),
            t
          );
        })();
    },
    '1G5W': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('l7GE'),
        r = n('ZUHj');
      function s(t) {
        return (e) => e.lift(new o(t));
      }
      class o {
        constructor(t) {
          this.notifier = t;
        }
        call(t, e) {
          const n = new a(t),
            i = Object(r.a)(n, this.notifier);
          return i && !n.seenValue ? (n.add(i), e.subscribe(n)) : n;
        }
      }
      class a extends i.a {
        constructor(t) {
          super(t), (this.seenValue = !1);
        }
        notifyNext(t, e, n, i, r) {
          (this.seenValue = !0), this.complete();
        }
        notifyComplete() {}
      }
    },
    '2QA8': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => ('function' == typeof Symbol ? Symbol('rxSubscriber') : '@@rxSubscriber_' + Math.random()))();
    },
    '2Vo4': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('XNiG'),
        r = n('9ppp');
      class s extends i.a {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return e && !e.closed && t.next(this._value), e;
        }
        getValue() {
          if (this.hasError) throw this.thrownError;
          if (this.closed) throw new r.a();
          return this._value;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
    },
    '2fFW': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      let i = !1;
      const r = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(t) {
          if (t) {
            const t = new Error();
            console.warn(
              'DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + t.stack
            );
          } else i && console.log('RxJS: Back to a better error behavior. Thank you. <3');
          i = t;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return i;
        },
      };
    },
    '36jV': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return f;
      });
      var i = n('fXoL'),
        r = n('3Pt+'),
        s = n('I5W0'),
        o = n('iQeY'),
        a = n('0FS3'),
        c = n('ofXK'),
        l = n('PnYb');
      function u(t, e) {
        if ((1 & t && i.Wb(0, 'app-button', 6), 2 & t)) {
          const t = i.nc();
          i.vc('color', t.submitColor)('text', t.submitText);
        }
      }
      function h(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'app-button', 7),
            i.jc('click', function () {
              return i.Dc(t), i.nc().onDelete();
            }),
            i.ac();
        }
        if (2 & t) {
          const t = i.nc();
          i.vc('color', t.deleteColor)('text', t.deleteText);
        }
      }
      const d = [[['', 'formly-header', '']], [['', 'formly-body', '']], [['', 'formly-footer', '']]],
        p = ['[formly-header]', '[formly-body]', '[formly-footer]'];
      let f = (() => {
        class t {
          constructor(t) {
            (this._appFormlyService = t),
              (this.submited = new i.p()),
              (this.deleted = new i.p()),
              (this.form = new r.g({})),
              (this.showDelete = !0),
              (this.showSubmit = !0),
              (this.className = ''),
              (this.model = {}),
              (this.options = {}),
              (this.submitText = 'FORM.SUBMIT'),
              (this.submitColor = 'primary'),
              (this.deleteText = 'FORM.DELETE'),
              (this.deleteColor = 'warn'),
              (this.onSubmit = () => this.submited.emit(this.form.value)),
              (this.onDelete = () => this.deleted.emit(this.form.value)),
              (this.showSubmitButton = () => this.showSubmit && this.submited.observers.length),
              (this.showDeleteButton = () => this.showDelete && this.deleted.observers.length);
          }
          set fields(t) {
            this._fields = this._appFormlyService.generateFormlyFields({ fields: t, type: this.type });
          }
          get fields() {
            return this._fields;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(s.a));
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-formly-form']],
            inputs: {
              form: 'form',
              showDelete: 'showDelete',
              showSubmit: 'showSubmit',
              className: 'className',
              translateTitle: 'translateTitle',
              model: 'model',
              type: 'type',
              options: 'options',
              submitText: 'submitText',
              submitColor: 'submitColor',
              deleteText: 'deleteText',
              deleteColor: 'deleteColor',
              fields: 'fields',
            },
            outputs: { submited: 'submited', deleted: 'deleted' },
            ngContentSelectors: p,
            decls: 9,
            vars: 10,
            consts: [
              [3, 'formGroup', 'submit'],
              [3, 'data'],
              [3, 'form', 'fields', 'model', 'options'],
              [1, 'actions'],
              ['type', 'submit', 3, 'color', 'text', 4, 'ngIf'],
              [3, 'color', 'text', 'click', 4, 'ngIf'],
              ['type', 'submit', 3, 'color', 'text'],
              [3, 'color', 'text', 'click'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.uc(d),
                i.bc(0, 'form', 0),
                i.jc('submit', function () {
                  return e.onSubmit();
                }),
                i.Wb(1, 'app-typography', 1),
                i.tc(2),
                i.Wb(3, 'formly-form', 2),
                i.tc(4, 1),
                i.bc(5, 'div', 3),
                i.Kc(6, u, 1, 2, 'app-button', 4),
                i.Kc(7, h, 1, 2, 'app-button', 5),
                i.ac(),
                i.tc(8, 2),
                i.ac()),
                2 & t &&
                  (i.Kb(e.className),
                  i.vc('formGroup', e.form),
                  i.Ib(1),
                  i.vc('data', e.translateTitle),
                  i.Ib(2),
                  i.vc('form', e.form)('fields', e.fields)('model', e.model)('options', e.options),
                  i.Ib(3),
                  i.vc('ngIf', e.showSubmitButton()),
                  i.Ib(1),
                  i.vc('ngIf', e.showDeleteButton()));
            },
            directives: [r.v, r.o, r.h, o.a, a.h, c.l, l.a],
            styles: [
              'form[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{display:flex;justify-content:space-between}form[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%]{flex:1}form[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%]:nth-child(2n){margin-left:1%}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    '3E0/': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('D0XW'),
        r = n('7o/Q'),
        s = n('WMd4');
      function o(t, e = i.a) {
        var n;
        const r = (n = t) instanceof Date && !isNaN(+n) ? +t - e.now() : Math.abs(t);
        return (t) => t.lift(new a(r, e));
      }
      class a {
        constructor(t, e) {
          (this.delay = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new c(t, this.delay, this.scheduler));
        }
      }
      class c extends r.a {
        constructor(t, e, n) {
          super(t), (this.delay = e), (this.scheduler = n), (this.queue = []), (this.active = !1), (this.errored = !1);
        }
        static dispatch(t) {
          const e = t.source,
            n = e.queue,
            i = t.scheduler,
            r = t.destination;
          for (; n.length > 0 && n[0].time - i.now() <= 0; ) n.shift().notification.observe(r);
          if (n.length > 0) {
            const e = Math.max(0, n[0].time - i.now());
            this.schedule(t, e);
          } else this.unsubscribe(), (e.active = !1);
        }
        _schedule(t) {
          (this.active = !0),
            this.destination.add(
              t.schedule(c.dispatch, this.delay, { source: this, destination: this.destination, scheduler: t })
            );
        }
        scheduleNotification(t) {
          if (!0 === this.errored) return;
          const e = this.scheduler,
            n = new l(e.now() + this.delay, t);
          this.queue.push(n), !1 === this.active && this._schedule(e);
        }
        _next(t) {
          this.scheduleNotification(s.a.createNext(t));
        }
        _error(t) {
          (this.errored = !0), (this.queue = []), this.destination.error(t), this.unsubscribe();
        }
        _complete() {
          this.scheduleNotification(s.a.createComplete()), this.unsubscribe();
        }
      }
      class l {
        constructor(t, e) {
          (this.time = t), (this.notification = e);
        }
      }
    },
    '3N8a': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('quSY');
      class r extends i.a {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      class s extends r {
        constructor(t, e) {
          super(t, e), (this.scheduler = t), (this.work = e), (this.pending = !1);
        }
        schedule(t, e = 0) {
          if (this.closed) return this;
          this.state = t;
          const n = this.id,
            i = this.scheduler;
          return (
            null != n && (this.id = this.recycleAsyncId(i, n, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id = this.id || this.requestAsyncId(i, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, n = 0) {
          return setInterval(t.flush.bind(t, this), n);
        }
        recycleAsyncId(t, e, n = 0) {
          if (null !== n && this.delay === n && !1 === this.pending) return e;
          clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const n = this._execute(t, e);
          if (n) return n;
          !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let n = !1,
            i = void 0;
          try {
            this.work(t);
          } catch (r) {
            (n = !0), (i = (!!r && r) || new Error(r));
          }
          if (n) return this.unsubscribe(), i;
        }
        _unsubscribe() {
          const t = this.id,
            e = this.scheduler,
            n = e.actions,
            i = n.indexOf(this);
          (this.work = null),
            (this.state = null),
            (this.pending = !1),
            (this.scheduler = null),
            -1 !== i && n.splice(i, 1),
            null != t && (this.id = this.recycleAsyncId(e, t, null)),
            (this.delay = null);
        }
      }
    },
    '3Pt+': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return lt;
      }),
        n.d(e, 'b', function () {
          return Rt;
        }),
        n.d(e, 'c', function () {
          return p;
        }),
        n.d(e, 'd', function () {
          return dt;
        }),
        n.d(e, 'e', function () {
          return ut;
        }),
        n.d(e, 'f', function () {
          return Et;
        }),
        n.d(e, 'g', function () {
          return ht;
        }),
        n.d(e, 'h', function () {
          return It;
        }),
        n.d(e, 'i', function () {
          return Lt;
        }),
        n.d(e, 'j', function () {
          return Ft;
        }),
        n.d(e, 'k', function () {
          return C;
        }),
        n.d(e, 'l', function () {
          return c;
        }),
        n.d(e, 'm', function () {
          return _;
        }),
        n.d(e, 'n', function () {
          return v;
        }),
        n.d(e, 'o', function () {
          return w;
        }),
        n.d(e, 'p', function () {
          return mt;
        }),
        n.d(e, 'q', function () {
          return Ct;
        }),
        n.d(e, 'r', function () {
          return R;
        }),
        n.d(e, 's', function () {
          return Ht;
        }),
        n.d(e, 't', function () {
          return jt;
        }),
        n.d(e, 'u', function () {
          return S;
        }),
        n.d(e, 'v', function () {
          return kt;
        });
      var i = n('fXoL'),
        r = n('ofXK'),
        s = n('cp0P'),
        o = n('Cfvw'),
        a = n('lJxs');
      const c = new i.s('NgValueAccessor'),
        l = { provide: c, useExisting: Object(i.Y)(() => u), multi: !0 };
      let u = (() => {
        class t {
          constructor(t, e) {
            (this._renderer = t), (this._elementRef = e), (this.onChange = (t) => {}), (this.onTouched = () => {});
          }
          writeValue(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'checked', t);
          }
          registerOnChange(t) {
            this.onChange = t;
          }
          registerOnTouched(t) {
            this.onTouched = t;
          }
          setDisabledState(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(i.G), i.Vb(i.m));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [
              ['input', 'type', 'checkbox', 'formControlName', ''],
              ['input', 'type', 'checkbox', 'formControl', ''],
              ['input', 'type', 'checkbox', 'ngModel', ''],
            ],
            hostBindings: function (t, e) {
              1 & t &&
                i.jc('change', function (t) {
                  return e.onChange(t.target.checked);
                })('blur', function () {
                  return e.onTouched();
                });
            },
            features: [i.Hb([l])],
          })),
          t
        );
      })();
      const h = { provide: c, useExisting: Object(i.Y)(() => p), multi: !0 },
        d = new i.s('CompositionEventMode');
      let p = (() => {
          class t {
            constructor(t, e, n) {
              (this._renderer = t),
                (this._elementRef = e),
                (this._compositionMode = n),
                (this.onChange = (t) => {}),
                (this.onTouched = () => {}),
                (this._composing = !1),
                null == this._compositionMode &&
                  (this._compositionMode = !(function () {
                    const t = Object(r.A)() ? Object(r.A)().getUserAgent() : '';
                    return /android (\d+)/.test(t.toLowerCase());
                  })());
            }
            writeValue(t) {
              this._renderer.setProperty(this._elementRef.nativeElement, 'value', null == t ? '' : t);
            }
            registerOnChange(t) {
              this.onChange = t;
            }
            registerOnTouched(t) {
              this.onTouched = t;
            }
            setDisabledState(t) {
              this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
            }
            _handleInput(t) {
              (!this._compositionMode || (this._compositionMode && !this._composing)) && this.onChange(t);
            }
            _compositionStart() {
              this._composing = !0;
            }
            _compositionEnd(t) {
              (this._composing = !1), this._compositionMode && this.onChange(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.G), i.Vb(i.m), i.Vb(d, 8));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['input', 'formControlName', '', 3, 'type', 'checkbox'],
                ['textarea', 'formControlName', ''],
                ['input', 'formControl', '', 3, 'type', 'checkbox'],
                ['textarea', 'formControl', ''],
                ['input', 'ngModel', '', 3, 'type', 'checkbox'],
                ['textarea', 'ngModel', ''],
                ['', 'ngDefaultControl', ''],
              ],
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('input', function (t) {
                    return e._handleInput(t.target.value);
                  })('blur', function () {
                    return e.onTouched();
                  })('compositionstart', function () {
                    return e._compositionStart();
                  })('compositionend', function (t) {
                    return e._compositionEnd(t.target.value);
                  });
              },
              features: [i.Hb([h])],
            })),
            t
          );
        })(),
        f = (() => {
          class t {
            get value() {
              return this.control ? this.control.value : null;
            }
            get valid() {
              return this.control ? this.control.valid : null;
            }
            get invalid() {
              return this.control ? this.control.invalid : null;
            }
            get pending() {
              return this.control ? this.control.pending : null;
            }
            get disabled() {
              return this.control ? this.control.disabled : null;
            }
            get enabled() {
              return this.control ? this.control.enabled : null;
            }
            get errors() {
              return this.control ? this.control.errors : null;
            }
            get pristine() {
              return this.control ? this.control.pristine : null;
            }
            get dirty() {
              return this.control ? this.control.dirty : null;
            }
            get touched() {
              return this.control ? this.control.touched : null;
            }
            get status() {
              return this.control ? this.control.status : null;
            }
            get untouched() {
              return this.control ? this.control.untouched : null;
            }
            get statusChanges() {
              return this.control ? this.control.statusChanges : null;
            }
            get valueChanges() {
              return this.control ? this.control.valueChanges : null;
            }
            get path() {
              return null;
            }
            reset(t) {
              this.control && this.control.reset(t);
            }
            hasError(t, e) {
              return !!this.control && this.control.hasError(t, e);
            }
            getError(t, e) {
              return this.control ? this.control.getError(t, e) : null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Qb({ type: t })),
            t
          );
        })(),
        m = (() => {
          class t extends f {
            get formDirective() {
              return null;
            }
            get path() {
              return null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return g(e || t);
            }),
            (t.ɵdir = i.Qb({ type: t, features: [i.Fb] })),
            t
          );
        })();
      const g = i.dc(m);
      function b() {
        throw new Error('unimplemented');
      }
      class _ extends f {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null),
            (this._rawValidators = []),
            (this._rawAsyncValidators = []);
        }
        get validator() {
          return b();
        }
        get asyncValidator() {
          return b();
        }
      }
      class y {
        constructor(t) {
          this._cd = t;
        }
        get ngClassUntouched() {
          return !!this._cd.control && this._cd.control.untouched;
        }
        get ngClassTouched() {
          return !!this._cd.control && this._cd.control.touched;
        }
        get ngClassPristine() {
          return !!this._cd.control && this._cd.control.pristine;
        }
        get ngClassDirty() {
          return !!this._cd.control && this._cd.control.dirty;
        }
        get ngClassValid() {
          return !!this._cd.control && this._cd.control.valid;
        }
        get ngClassInvalid() {
          return !!this._cd.control && this._cd.control.invalid;
        }
        get ngClassPending() {
          return !!this._cd.control && this._cd.control.pending;
        }
      }
      let v = (() => {
          class t extends y {
            constructor(t) {
              super(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(_, 2));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'formControlName', ''],
                ['', 'ngModel', ''],
                ['', 'formControl', ''],
              ],
              hostVars: 14,
              hostBindings: function (t, e) {
                2 & t &&
                  i.Mb('ng-untouched', e.ngClassUntouched)('ng-touched', e.ngClassTouched)(
                    'ng-pristine',
                    e.ngClassPristine
                  )('ng-dirty', e.ngClassDirty)('ng-valid', e.ngClassValid)('ng-invalid', e.ngClassInvalid)(
                    'ng-pending',
                    e.ngClassPending
                  );
              },
              features: [i.Fb],
            })),
            t
          );
        })(),
        w = (() => {
          class t extends y {
            constructor(t) {
              super(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(m, 2));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'formGroupName', ''],
                ['', 'formArrayName', ''],
                ['', 'ngModelGroup', ''],
                ['', 'formGroup', ''],
                ['form', 3, 'ngNoForm', ''],
                ['', 'ngForm', ''],
              ],
              hostVars: 14,
              hostBindings: function (t, e) {
                2 & t &&
                  i.Mb('ng-untouched', e.ngClassUntouched)('ng-touched', e.ngClassTouched)(
                    'ng-pristine',
                    e.ngClassPristine
                  )('ng-dirty', e.ngClassDirty)('ng-valid', e.ngClassValid)('ng-invalid', e.ngClassInvalid)(
                    'ng-pending',
                    e.ngClassPending
                  );
              },
              features: [i.Fb],
            })),
            t
          );
        })();
      function x(t) {
        return null == t || 0 === t.length;
      }
      const C = new i.s('NgValidators'),
        k = new i.s('NgAsyncValidators'),
        O = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class S {
        static min(t) {
          return (e) => {
            if (x(e.value) || x(t)) return null;
            const n = parseFloat(e.value);
            return !isNaN(n) && n < t ? { min: { min: t, actual: e.value } } : null;
          };
        }
        static max(t) {
          return (e) => {
            if (x(e.value) || x(t)) return null;
            const n = parseFloat(e.value);
            return !isNaN(n) && n > t ? { max: { max: t, actual: e.value } } : null;
          };
        }
        static required(t) {
          return x(t.value) ? { required: !0 } : null;
        }
        static requiredTrue(t) {
          return !0 === t.value ? null : { required: !0 };
        }
        static email(t) {
          return x(t.value) || O.test(t.value) ? null : { email: !0 };
        }
        static minLength(t) {
          return (e) => {
            if (x(e.value)) return null;
            const n = e.value ? e.value.length : 0;
            return n < t ? { minlength: { requiredLength: t, actualLength: n } } : null;
          };
        }
        static maxLength(t) {
          return (e) => {
            const n = e.value ? e.value.length : 0;
            return n > t ? { maxlength: { requiredLength: t, actualLength: n } } : null;
          };
        }
        static pattern(t) {
          if (!t) return S.nullValidator;
          let e, n;
          return (
            'string' == typeof t
              ? ((n = ''),
                '^' !== t.charAt(0) && (n += '^'),
                (n += t),
                '$' !== t.charAt(t.length - 1) && (n += '$'),
                (e = new RegExp(n)))
              : ((n = t.toString()), (e = t)),
            (t) => {
              if (x(t.value)) return null;
              const i = t.value;
              return e.test(i) ? null : { pattern: { requiredPattern: n, actualValue: i } };
            }
          );
        }
        static nullValidator(t) {
          return null;
        }
        static compose(t) {
          if (!t) return null;
          const e = t.filter(E);
          return 0 == e.length
            ? null
            : function (t) {
                return I(
                  (function (t, e) {
                    return e.map((e) => e(t));
                  })(t, e)
                );
              };
        }
        static composeAsync(t) {
          if (!t) return null;
          const e = t.filter(E);
          return 0 == e.length
            ? null
            : function (t) {
                const n = (function (t, e) {
                  return e.map((e) => e(t));
                })(t, e).map(T);
                return Object(s.a)(n).pipe(Object(a.a)(I));
              };
        }
      }
      function E(t) {
        return null != t;
      }
      function T(t) {
        const e = Object(i.zb)(t) ? Object(o.a)(t) : t;
        if (!Object(i.yb)(e)) throw new Error('Expected validator to return Promise or Observable.');
        return e;
      }
      function I(t) {
        let e = {};
        return (
          t.forEach((t) => {
            e = null != t ? Object.assign(Object.assign({}, e), t) : e;
          }),
          0 === Object.keys(e).length ? null : e
        );
      }
      function A(t) {
        return t.validate ? (e) => t.validate(e) : t;
      }
      function D(t) {
        return t.validate ? (e) => t.validate(e) : t;
      }
      const j = { provide: c, useExisting: Object(i.Y)(() => R), multi: !0 };
      let R = (() => {
        class t {
          constructor(t, e) {
            (this._renderer = t), (this._elementRef = e), (this.onChange = (t) => {}), (this.onTouched = () => {});
          }
          writeValue(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'value', null == t ? '' : t);
          }
          registerOnChange(t) {
            this.onChange = (e) => {
              t('' == e ? null : parseFloat(e));
            };
          }
          registerOnTouched(t) {
            this.onTouched = t;
          }
          setDisabledState(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(i.G), i.Vb(i.m));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [
              ['input', 'type', 'number', 'formControlName', ''],
              ['input', 'type', 'number', 'formControl', ''],
              ['input', 'type', 'number', 'ngModel', ''],
            ],
            hostBindings: function (t, e) {
              1 & t &&
                i.jc('change', function (t) {
                  return e.onChange(t.target.value);
                })('input', function (t) {
                  return e.onChange(t.target.value);
                })('blur', function () {
                  return e.onTouched();
                });
            },
            features: [i.Hb([j])],
          })),
          t
        );
      })();
      const P = { provide: c, useExisting: Object(i.Y)(() => F), multi: !0 };
      let M = (() => {
          class t {
            constructor() {
              this._accessors = [];
            }
            add(t, e) {
              this._accessors.push([t, e]);
            }
            remove(t) {
              for (let e = this._accessors.length - 1; e >= 0; --e)
                if (this._accessors[e][1] === t) return void this._accessors.splice(e, 1);
            }
            select(t) {
              this._accessors.forEach((e) => {
                this._isSameGroup(e, t) && e[1] !== t && e[1].fireUncheck(t.value);
              });
            }
            _isSameGroup(t, e) {
              return !!t[0].control && t[0]._parent === e._control._parent && t[1].name === e.name;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        F = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._renderer = t),
                (this._elementRef = e),
                (this._registry = n),
                (this._injector = i),
                (this.onChange = () => {}),
                (this.onTouched = () => {});
            }
            ngOnInit() {
              (this._control = this._injector.get(_)), this._checkName(), this._registry.add(this._control, this);
            }
            ngOnDestroy() {
              this._registry.remove(this);
            }
            writeValue(t) {
              (this._state = t === this.value),
                this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);
            }
            registerOnChange(t) {
              (this._fn = t),
                (this.onChange = () => {
                  t(this.value), this._registry.select(this);
                });
            }
            fireUncheck(t) {
              this.writeValue(t);
            }
            registerOnTouched(t) {
              this.onTouched = t;
            }
            setDisabledState(t) {
              this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
            }
            _checkName() {
              this.name && this.formControlName && this.name !== this.formControlName && this._throwNameError(),
                !this.name && this.formControlName && (this.name = this.formControlName);
            }
            _throwNameError() {
              throw new Error(
                '\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type="radio" formControlName="food" name="food">\n    '
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.G), i.Vb(i.m), i.Vb(M), i.Vb(i.t));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['input', 'type', 'radio', 'formControlName', ''],
                ['input', 'type', 'radio', 'formControl', ''],
                ['input', 'type', 'radio', 'ngModel', ''],
              ],
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('change', function () {
                    return e.onChange();
                  })('blur', function () {
                    return e.onTouched();
                  });
              },
              inputs: { name: 'name', formControlName: 'formControlName', value: 'value' },
              features: [i.Hb([P])],
            })),
            t
          );
        })();
      const N = { provide: c, useExisting: Object(i.Y)(() => V), multi: !0 };
      let V = (() => {
        class t {
          constructor(t, e) {
            (this._renderer = t), (this._elementRef = e), (this.onChange = (t) => {}), (this.onTouched = () => {});
          }
          writeValue(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(t));
          }
          registerOnChange(t) {
            this.onChange = (e) => {
              t('' == e ? null : parseFloat(e));
            };
          }
          registerOnTouched(t) {
            this.onTouched = t;
          }
          setDisabledState(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(i.G), i.Vb(i.m));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [
              ['input', 'type', 'range', 'formControlName', ''],
              ['input', 'type', 'range', 'formControl', ''],
              ['input', 'type', 'range', 'ngModel', ''],
            ],
            hostBindings: function (t, e) {
              1 & t &&
                i.jc('change', function (t) {
                  return e.onChange(t.target.value);
                })('input', function (t) {
                  return e.onChange(t.target.value);
                })('blur', function () {
                  return e.onTouched();
                });
            },
            features: [i.Hb([N])],
          })),
          t
        );
      })();
      const L =
          '\n    <div [formGroup]="myGroup">\n      <input formControlName="firstName">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });',
        H =
          '\n    <div [formGroup]="myGroup">\n       <div formGroupName="person">\n          <input formControlName="firstName">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });',
        z =
          '\n    <form>\n       <div ngModelGroup="person">\n          <input [(ngModel)]="person.name" name="firstName">\n       </div>\n    </form>';
      class B {
        static controlParentException() {
          throw new Error(
            `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${L}`
          );
        }
        static ngModelGroupException() {
          throw new Error(
            `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a "form" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${H}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${z}`
          );
        }
        static missingFormException() {
          throw new Error(
            `formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${L}`
          );
        }
        static groupParentException() {
          throw new Error(
            `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${H}`
          );
        }
        static arrayParentException() {
          throw new Error(
            'formArrayName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        \n    <div [formGroup]="myGroup">\n      <div formArrayName="cities">\n        <div *ngFor="let city of cityArray.controls; index as i">\n          <input [formControlName]="i">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl(\'SF\')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });'
          );
        }
        static disabledAttrWarning() {
          console.warn(
            "\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    "
          );
        }
        static ngModelWarning(t) {
          console.warn(
            `\n    It looks like you're using ngModel on the same form field as ${t}. \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${
              'formControl' === t ? 'FormControlDirective' : 'FormControlName'
            }#use-with-ngmodel\n    `
          );
        }
      }
      const U = { provide: c, useExisting: Object(i.Y)(() => W), multi: !0 };
      let W = (() => {
        class t {
          constructor(t, e) {
            (this._renderer = t),
              (this._elementRef = e),
              (this._optionMap = new Map()),
              (this._idCounter = 0),
              (this.onChange = (t) => {}),
              (this.onTouched = () => {}),
              (this._compareWith = i.Ab);
          }
          set compareWith(t) {
            if ('function' != typeof t)
              throw new Error(`compareWith must be a function, but received ${JSON.stringify(t)}`);
            this._compareWith = t;
          }
          writeValue(t) {
            this.value = t;
            const e = this._getOptionId(t);
            null == e && this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);
            const n = (function (t, e) {
              return null == t ? `${e}` : (e && 'object' == typeof e && (e = 'Object'), `${t}: ${e}`.slice(0, 50));
            })(e, t);
            this._renderer.setProperty(this._elementRef.nativeElement, 'value', n);
          }
          registerOnChange(t) {
            this.onChange = (e) => {
              (this.value = this._getOptionValue(e)), t(this.value);
            };
          }
          registerOnTouched(t) {
            this.onTouched = t;
          }
          setDisabledState(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
          }
          _registerOption() {
            return (this._idCounter++).toString();
          }
          _getOptionId(t) {
            for (const e of Array.from(this._optionMap.keys()))
              if (this._compareWith(this._optionMap.get(e), t)) return e;
            return null;
          }
          _getOptionValue(t) {
            const e = (function (t) {
              return t.split(':')[0];
            })(t);
            return this._optionMap.has(e) ? this._optionMap.get(e) : t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(i.G), i.Vb(i.m));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [
              ['select', 'formControlName', '', 3, 'multiple', ''],
              ['select', 'formControl', '', 3, 'multiple', ''],
              ['select', 'ngModel', '', 3, 'multiple', ''],
            ],
            hostBindings: function (t, e) {
              1 & t &&
                i.jc('change', function (t) {
                  return e.onChange(t.target.value);
                })('blur', function () {
                  return e.onTouched();
                });
            },
            inputs: { compareWith: 'compareWith' },
            features: [i.Hb([U])],
          })),
          t
        );
      })();
      const $ = { provide: c, useExisting: Object(i.Y)(() => q), multi: !0 };
      let q = (() => {
        class t {
          constructor(t, e) {
            (this._renderer = t),
              (this._elementRef = e),
              (this._optionMap = new Map()),
              (this._idCounter = 0),
              (this.onChange = (t) => {}),
              (this.onTouched = () => {}),
              (this._compareWith = i.Ab);
          }
          set compareWith(t) {
            if ('function' != typeof t)
              throw new Error(`compareWith must be a function, but received ${JSON.stringify(t)}`);
            this._compareWith = t;
          }
          writeValue(t) {
            let e;
            if (((this.value = t), Array.isArray(t))) {
              const n = t.map((t) => this._getOptionId(t));
              e = (t, e) => {
                t._setSelected(n.indexOf(e.toString()) > -1);
              };
            } else
              e = (t, e) => {
                t._setSelected(!1);
              };
            this._optionMap.forEach(e);
          }
          registerOnChange(t) {
            this.onChange = (e) => {
              const n = [];
              if (e.hasOwnProperty('selectedOptions')) {
                const t = e.selectedOptions;
                for (let e = 0; e < t.length; e++) {
                  const i = t.item(e),
                    r = this._getOptionValue(i.value);
                  n.push(r);
                }
              } else {
                const t = e.options;
                for (let e = 0; e < t.length; e++) {
                  const i = t.item(e);
                  if (i.selected) {
                    const t = this._getOptionValue(i.value);
                    n.push(t);
                  }
                }
              }
              (this.value = n), t(n);
            };
          }
          registerOnTouched(t) {
            this.onTouched = t;
          }
          setDisabledState(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
          }
          _registerOption(t) {
            const e = (this._idCounter++).toString();
            return this._optionMap.set(e, t), e;
          }
          _getOptionId(t) {
            for (const e of Array.from(this._optionMap.keys()))
              if (this._compareWith(this._optionMap.get(e)._value, t)) return e;
            return null;
          }
          _getOptionValue(t) {
            const e = (function (t) {
              return t.split(':')[0];
            })(t);
            return this._optionMap.has(e) ? this._optionMap.get(e)._value : t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(i.G), i.Vb(i.m));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [
              ['select', 'multiple', '', 'formControlName', ''],
              ['select', 'multiple', '', 'formControl', ''],
              ['select', 'multiple', '', 'ngModel', ''],
            ],
            hostBindings: function (t, e) {
              1 & t &&
                i.jc('change', function (t) {
                  return e.onChange(t.target);
                })('blur', function () {
                  return e.onTouched();
                });
            },
            inputs: { compareWith: 'compareWith' },
            features: [i.Hb([$])],
          })),
          t
        );
      })();
      function G(t, e) {
        return [...e.path, t];
      }
      function X(t, e) {
        t || Q(e, 'Cannot find control with'),
          e.valueAccessor || Q(e, 'No value accessor for form control with'),
          (t.validator = S.compose([t.validator, e.validator])),
          (t.asyncValidator = S.composeAsync([t.asyncValidator, e.asyncValidator])),
          e.valueAccessor.writeValue(t.value),
          (function (t, e) {
            e.valueAccessor.registerOnChange((n) => {
              (t._pendingValue = n),
                (t._pendingChange = !0),
                (t._pendingDirty = !0),
                'change' === t.updateOn && K(t, e);
            });
          })(t, e),
          (function (t, e) {
            t.registerOnChange((t, n) => {
              e.valueAccessor.writeValue(t), n && e.viewToModelUpdate(t);
            });
          })(t, e),
          (function (t, e) {
            e.valueAccessor.registerOnTouched(() => {
              (t._pendingTouched = !0),
                'blur' === t.updateOn && t._pendingChange && K(t, e),
                'submit' !== t.updateOn && t.markAsTouched();
            });
          })(t, e),
          e.valueAccessor.setDisabledState &&
            t.registerOnDisabledChange((t) => {
              e.valueAccessor.setDisabledState(t);
            }),
          e._rawValidators.forEach((e) => {
            e.registerOnValidatorChange && e.registerOnValidatorChange(() => t.updateValueAndValidity());
          }),
          e._rawAsyncValidators.forEach((e) => {
            e.registerOnValidatorChange && e.registerOnValidatorChange(() => t.updateValueAndValidity());
          });
      }
      function K(t, e) {
        t._pendingDirty && t.markAsDirty(),
          t.setValue(t._pendingValue, { emitModelToViewChange: !1 }),
          e.viewToModelUpdate(t._pendingValue),
          (t._pendingChange = !1);
      }
      function Y(t, e) {
        null == t && Q(e, 'Cannot find control with'),
          (t.validator = S.compose([t.validator, e.validator])),
          (t.asyncValidator = S.composeAsync([t.asyncValidator, e.asyncValidator]));
      }
      function Z(t) {
        return Q(t, 'There is no FormControl instance attached to form control element with');
      }
      function Q(t, e) {
        let n;
        throw (
          ((n =
            t.path.length > 1
              ? `path: '${t.path.join(' -> ')}'`
              : t.path[0]
              ? `name: '${t.path}'`
              : 'unspecified name attribute'),
          new Error(`${e} ${n}`))
        );
      }
      function J(t) {
        return null != t ? S.compose(t.map(A)) : null;
      }
      function tt(t) {
        return null != t ? S.composeAsync(t.map(D)) : null;
      }
      function et(t, e) {
        if (!t.hasOwnProperty('model')) return !1;
        const n = t.model;
        return !!n.isFirstChange() || !Object(i.Ab)(e, n.currentValue);
      }
      const nt = [u, V, R, W, q, F];
      function it(t, e) {
        t._syncPendingControls(),
          e.forEach((t) => {
            const e = t.control;
            'submit' === e.updateOn &&
              e._pendingChange &&
              (t.viewToModelUpdate(e._pendingValue), (e._pendingChange = !1));
          });
      }
      function rt(t, e) {
        if (!e) return null;
        Array.isArray(e) || Q(t, 'Value accessor was not provided as an array for form control with');
        let n = void 0,
          i = void 0,
          r = void 0;
        return (
          e.forEach((e) => {
            var s;
            e.constructor === p
              ? (n = e)
              : ((s = e),
                nt.some((t) => s.constructor === t)
                  ? (i && Q(t, 'More than one built-in value accessor matches form control with'), (i = e))
                  : (r && Q(t, 'More than one custom value accessor matches form control with'), (r = e)));
          }),
          r || i || n || (Q(t, 'No valid value accessor for form control with'), null)
        );
      }
      function st(t, e) {
        const n = t.indexOf(e);
        n > -1 && t.splice(n, 1);
      }
      function ot(t) {
        const e = ct(t) ? t.validators : t;
        return Array.isArray(e) ? J(e) : e || null;
      }
      function at(t, e) {
        const n = ct(e) ? e.asyncValidators : t;
        return Array.isArray(n) ? tt(n) : n || null;
      }
      function ct(t) {
        return null != t && !Array.isArray(t) && 'object' == typeof t;
      }
      class lt {
        constructor(t, e) {
          (this.validator = t),
            (this.asyncValidator = e),
            (this._onCollectionChange = () => {}),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []);
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return 'VALID' === this.status;
        }
        get invalid() {
          return 'INVALID' === this.status;
        }
        get pending() {
          return 'PENDING' == this.status;
        }
        get disabled() {
          return 'DISABLED' === this.status;
        }
        get enabled() {
          return 'DISABLED' !== this.status;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';
        }
        setValidators(t) {
          this.validator = ot(t);
        }
        setAsyncValidators(t) {
          this.asyncValidator = at(t);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(t = {}) {
          (this.touched = !0), this._parent && !t.onlySelf && this._parent.markAsTouched(t);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }), this._forEachChild((t) => t.markAllAsTouched());
        }
        markAsUntouched(t = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((t) => {
              t.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        markAsDirty(t = {}) {
          (this.pristine = !1), this._parent && !t.onlySelf && this._parent.markAsDirty(t);
        }
        markAsPristine(t = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((t) => {
              t.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        markAsPending(t = {}) {
          (this.status = 'PENDING'),
            !1 !== t.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !t.onlySelf && this._parent.markAsPending(t);
        }
        disable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = 'DISABLED'),
            (this.errors = null),
            this._forEachChild((e) => {
              e.disable(Object.assign(Object.assign({}, t), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)),
            this._updateAncestors(Object.assign(Object.assign({}, t), { skipPristineCheck: e })),
            this._onDisabledChange.forEach((t) => t(!0));
        }
        enable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = 'VALID'),
            this._forEachChild((e) => {
              e.enable(Object.assign(Object.assign({}, t), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent }),
            this._updateAncestors(Object.assign(Object.assign({}, t), { skipPristineCheck: e })),
            this._onDisabledChange.forEach((t) => t(!1));
        }
        _updateAncestors(t) {
          this._parent &&
            !t.onlySelf &&
            (this._parent.updateValueAndValidity(t),
            t.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(t) {
          this._parent = t;
        }
        updateValueAndValidity(t = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              ('VALID' !== this.status && 'PENDING' !== this.status) || this._runAsyncValidator(t.emitEvent)),
            !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)),
            this._parent && !t.onlySelf && this._parent.updateValueAndValidity(t);
        }
        _updateTreeValidity(t = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(t)),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? 'DISABLED' : 'VALID';
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(t) {
          if (this.asyncValidator) {
            this.status = 'PENDING';
            const e = T(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((e) => this.setErrors(e, { emitEvent: t }));
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription && this._asyncValidationSubscription.unsubscribe();
        }
        setErrors(t, e = {}) {
          (this.errors = t), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(t) {
          return (function (t, e, n) {
            if (null == e) return null;
            if ((Array.isArray(e) || (e = e.split('.')), Array.isArray(e) && 0 === e.length)) return null;
            let i = t;
            return (
              e.forEach((t) => {
                i =
                  i instanceof ht
                    ? i.controls.hasOwnProperty(t)
                      ? i.controls[t]
                      : null
                    : (i instanceof dt && i.at(t)) || null;
              }),
              i
            );
          })(this, t);
        }
        getError(t, e) {
          const n = e ? this.get(e) : this;
          return n && n.errors ? n.errors[t] : null;
        }
        hasError(t, e) {
          return !!this.getError(t, e);
        }
        get root() {
          let t = this;
          for (; t._parent; ) t = t._parent;
          return t;
        }
        _updateControlsErrors(t) {
          (this.status = this._calculateStatus()),
            t && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(t);
        }
        _initObservables() {
          (this.valueChanges = new i.p()), (this.statusChanges = new i.p());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? 'DISABLED'
            : this.errors
            ? 'INVALID'
            : this._anyControlsHaveStatus('PENDING')
            ? 'PENDING'
            : this._anyControlsHaveStatus('INVALID')
            ? 'INVALID'
            : 'VALID';
        }
        _anyControlsHaveStatus(t) {
          return this._anyControls((e) => e.status === t);
        }
        _anyControlsDirty() {
          return this._anyControls((t) => t.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((t) => t.touched);
        }
        _updatePristine(t = {}) {
          (this.pristine = !this._anyControlsDirty()), this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        _updateTouched(t = {}) {
          (this.touched = this._anyControlsTouched()), this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        _isBoxedValue(t) {
          return 'object' == typeof t && null !== t && 2 === Object.keys(t).length && 'value' in t && 'disabled' in t;
        }
        _registerOnCollectionChange(t) {
          this._onCollectionChange = t;
        }
        _setUpdateStrategy(t) {
          ct(t) && null != t.updateOn && (this._updateOn = t.updateOn);
        }
        _parentMarkedDirty(t) {
          return !t && this._parent && this._parent.dirty && !this._parent._anyControlsDirty();
        }
      }
      class ut extends lt {
        constructor(t = null, e, n) {
          super(ot(e), at(n, e)),
            (this._onChange = []),
            this._applyFormState(t),
            this._setUpdateStrategy(e),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 }),
            this._initObservables();
        }
        setValue(t, e = {}) {
          (this.value = this._pendingValue = t),
            this._onChange.length &&
              !1 !== e.emitModelToViewChange &&
              this._onChange.forEach((t) => t(this.value, !1 !== e.emitViewToModelChange)),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          this.setValue(t, e);
        }
        reset(t = null, e = {}) {
          this._applyFormState(t),
            this.markAsPristine(e),
            this.markAsUntouched(e),
            this.setValue(this.value, e),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(t) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(t) {
          this._onChange.push(t);
        }
        _clearChangeFns() {
          (this._onChange = []), (this._onDisabledChange = []), (this._onCollectionChange = () => {});
        }
        registerOnDisabledChange(t) {
          this._onDisabledChange.push(t);
        }
        _forEachChild(t) {}
        _syncPendingControls() {
          return !(
            'submit' !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, { onlySelf: !0, emitModelToViewChange: !1 }), 0)
          );
        }
        _applyFormState(t) {
          this._isBoxedValue(t)
            ? ((this.value = this._pendingValue = t.value),
              t.disabled ? this.disable({ onlySelf: !0, emitEvent: !1 }) : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = t);
        }
      }
      class ht extends lt {
        constructor(t, e, n) {
          super(ot(e), at(n, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 });
        }
        registerControl(t, e) {
          return this.controls[t]
            ? this.controls[t]
            : ((this.controls[t] = e), e.setParent(this), e._registerOnCollectionChange(this._onCollectionChange), e);
        }
        addControl(t, e) {
          this.registerControl(t, e), this.updateValueAndValidity(), this._onCollectionChange();
        }
        removeControl(t) {
          this.controls[t] && this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        setControl(t, e) {
          this.controls[t] && this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            e && this.registerControl(t, e),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        contains(t) {
          return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
        }
        setValue(t, e = {}) {
          this._checkAllValuesPresent(t),
            Object.keys(t).forEach((n) => {
              this._throwIfControlMissing(n), this.controls[n].setValue(t[n], { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          Object.keys(t).forEach((n) => {
            this.controls[n] && this.controls[n].patchValue(t[n], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this.updateValueAndValidity(e);
        }
        reset(t = {}, e = {}) {
          this._forEachChild((n, i) => {
            n.reset(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren({}, (t, e, n) => ((t[n] = e instanceof ut ? e.value : e.getRawValue()), t));
        }
        _syncPendingControls() {
          let t = this._reduceChildren(!1, (t, e) => !!e._syncPendingControls() || t);
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _throwIfControlMissing(t) {
          if (!Object.keys(this.controls).length)
            throw new Error(
              "\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.controls[t]) throw new Error(`Cannot find form control with name: ${t}.`);
        }
        _forEachChild(t) {
          Object.keys(this.controls).forEach((e) => t(this.controls[e], e));
        }
        _setUpControls() {
          this._forEachChild((t) => {
            t.setParent(this), t._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(t) {
          let e = !1;
          return (
            this._forEachChild((n, i) => {
              e = e || (this.contains(i) && t(n));
            }),
            e
          );
        }
        _reduceValue() {
          return this._reduceChildren({}, (t, e, n) => ((e.enabled || this.disabled) && (t[n] = e.value), t));
        }
        _reduceChildren(t, e) {
          let n = t;
          return (
            this._forEachChild((t, i) => {
              n = e(n, t, i);
            }),
            n
          );
        }
        _allControlsDisabled() {
          for (const t of Object.keys(this.controls)) if (this.controls[t].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _checkAllValuesPresent(t) {
          this._forEachChild((e, n) => {
            if (void 0 === t[n]) throw new Error(`Must supply a value for form control with name: '${n}'.`);
          });
        }
      }
      class dt extends lt {
        constructor(t, e, n) {
          super(ot(e), at(n, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 });
        }
        at(t) {
          return this.controls[t];
        }
        push(t) {
          this.controls.push(t), this._registerControl(t), this.updateValueAndValidity(), this._onCollectionChange();
        }
        insert(t, e) {
          this.controls.splice(t, 0, e), this._registerControl(e), this.updateValueAndValidity();
        }
        removeAt(t) {
          this.controls[t] && this.controls[t]._registerOnCollectionChange(() => {}),
            this.controls.splice(t, 1),
            this.updateValueAndValidity();
        }
        setControl(t, e) {
          this.controls[t] && this.controls[t]._registerOnCollectionChange(() => {}),
            this.controls.splice(t, 1),
            e && (this.controls.splice(t, 0, e), this._registerControl(e)),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(t, e = {}) {
          this._checkAllValuesPresent(t),
            t.forEach((t, n) => {
              this._throwIfControlMissing(n), this.at(n).setValue(t, { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          t.forEach((t, n) => {
            this.at(n) && this.at(n).patchValue(t, { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this.updateValueAndValidity(e);
        }
        reset(t = [], e = {}) {
          this._forEachChild((n, i) => {
            n.reset(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this.controls.map((t) => (t instanceof ut ? t.value : t.getRawValue()));
        }
        clear() {
          this.controls.length < 1 ||
            (this._forEachChild((t) => t._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity());
        }
        _syncPendingControls() {
          let t = this.controls.reduce((t, e) => !!e._syncPendingControls() || t, !1);
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _throwIfControlMissing(t) {
          if (!this.controls.length)
            throw new Error(
              "\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.at(t)) throw new Error(`Cannot find form control at index ${t}`);
        }
        _forEachChild(t) {
          this.controls.forEach((e, n) => {
            t(e, n);
          });
        }
        _updateValue() {
          this.value = this.controls.filter((t) => t.enabled || this.disabled).map((t) => t.value);
        }
        _anyControls(t) {
          return this.controls.some((e) => e.enabled && t(e));
        }
        _setUpControls() {
          this._forEachChild((t) => this._registerControl(t));
        }
        _checkAllValuesPresent(t) {
          this._forEachChild((e, n) => {
            if (void 0 === t[n]) throw new Error(`Must supply a value for form control at index: ${n}.`);
          });
        }
        _allControlsDisabled() {
          for (const t of this.controls) if (t.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(t) {
          t.setParent(this), t._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const pt = { provide: m, useExisting: Object(i.Y)(() => mt) },
        ft = (() => Promise.resolve(null))();
      let mt = (() => {
          class t extends m {
            constructor(t, e) {
              super(),
                (this.submitted = !1),
                (this._directives = []),
                (this.ngSubmit = new i.p()),
                (this.form = new ht({}, J(t), tt(e)));
            }
            ngAfterViewInit() {
              this._setUpdateStrategy();
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            get controls() {
              return this.form.controls;
            }
            addControl(t) {
              ft.then(() => {
                const e = this._findContainer(t.path);
                (t.control = e.registerControl(t.name, t.control)),
                  X(t.control, t),
                  t.control.updateValueAndValidity({ emitEvent: !1 }),
                  this._directives.push(t);
              });
            }
            getControl(t) {
              return this.form.get(t.path);
            }
            removeControl(t) {
              ft.then(() => {
                const e = this._findContainer(t.path);
                e && e.removeControl(t.name), st(this._directives, t);
              });
            }
            addFormGroup(t) {
              ft.then(() => {
                const e = this._findContainer(t.path),
                  n = new ht({});
                Y(n, t), e.registerControl(t.name, n), n.updateValueAndValidity({ emitEvent: !1 });
              });
            }
            removeFormGroup(t) {
              ft.then(() => {
                const e = this._findContainer(t.path);
                e && e.removeControl(t.name);
              });
            }
            getFormGroup(t) {
              return this.form.get(t.path);
            }
            updateModel(t, e) {
              ft.then(() => {
                this.form.get(t.path).setValue(e);
              });
            }
            setValue(t) {
              this.control.setValue(t);
            }
            onSubmit(t) {
              return (this.submitted = !0), it(this.form, this._directives), this.ngSubmit.emit(t), !1;
            }
            onReset() {
              this.resetForm();
            }
            resetForm(t) {
              this.form.reset(t), (this.submitted = !1);
            }
            _setUpdateStrategy() {
              this.options && null != this.options.updateOn && (this.form._updateOn = this.options.updateOn);
            }
            _findContainer(t) {
              return t.pop(), t.length ? this.form.get(t) : this.form;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(C, 10), i.Vb(k, 10));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['form', 3, 'ngNoForm', '', 3, 'formGroup', ''], ['ng-form'], ['', 'ngForm', '']],
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('submit', function (t) {
                    return e.onSubmit(t);
                  })('reset', function () {
                    return e.onReset();
                  });
              },
              inputs: { options: ['ngFormOptions', 'options'] },
              outputs: { ngSubmit: 'ngSubmit' },
              exportAs: ['ngForm'],
              features: [i.Hb([pt]), i.Fb],
            })),
            t
          );
        })(),
        gt = (() => {
          class t extends m {
            ngOnInit() {
              this._checkParentType(), this.formDirective.addFormGroup(this);
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeFormGroup(this);
            }
            get control() {
              return this.formDirective.getFormGroup(this);
            }
            get path() {
              return G(null == this.name ? this.name : this.name.toString(), this._parent);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            get validator() {
              return J(this._validators);
            }
            get asyncValidator() {
              return tt(this._asyncValidators);
            }
            _checkParentType() {}
          }
          return (
            (t.ɵfac = function (e) {
              return bt(e || t);
            }),
            (t.ɵdir = i.Qb({ type: t, features: [i.Fb] })),
            t
          );
        })();
      const bt = i.dc(gt);
      class _t {
        static modelParentException() {
          throw new Error(
            `\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive "formControlName" instead.  Example:\n\n      ${L}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      \n    <div [formGroup]="myGroup">\n       <input formControlName="firstName">\n       <input [(ngModel)]="showMoreControls" [ngModelOptions]="{standalone: true}">\n    </div>\n  `
          );
        }
        static formGroupNameException() {
          throw new Error(
            `\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${H}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${z}`
          );
        }
        static missingNameException() {
          throw new Error(
            'If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as \'standalone\' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]="person.firstName" name="first">\n      Example 2: <input [(ngModel)]="person.firstName" [ngModelOptions]="{standalone: true}">'
          );
        }
        static modelGroupParentException() {
          throw new Error(
            `\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${H}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${z}`
          );
        }
      }
      const yt = { provide: m, useExisting: Object(i.Y)(() => vt) };
      let vt = (() => {
        class t extends gt {
          constructor(t, e, n) {
            super(), (this._parent = t), (this._validators = e), (this._asyncValidators = n);
          }
          _checkParentType() {
            this._parent instanceof t || this._parent instanceof mt || _t.modelGroupParentException();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(m, 5), i.Vb(C, 10), i.Vb(k, 10));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [['', 'ngModelGroup', '']],
            inputs: { name: ['ngModelGroup', 'name'] },
            exportAs: ['ngModelGroup'],
            features: [i.Hb([yt]), i.Fb],
          })),
          t
        );
      })();
      const wt = { provide: _, useExisting: Object(i.Y)(() => Ct) },
        xt = (() => Promise.resolve(null))();
      let Ct = (() => {
          class t extends _ {
            constructor(t, e, n, r) {
              super(),
                (this.control = new ut()),
                (this._registered = !1),
                (this.update = new i.p()),
                (this._parent = t),
                (this._rawValidators = e || []),
                (this._rawAsyncValidators = n || []),
                (this.valueAccessor = rt(this, r));
            }
            ngOnChanges(t) {
              this._checkForErrors(),
                this._registered || this._setUpControl(),
                'isDisabled' in t && this._updateDisabled(t),
                et(t, this.viewModel) && (this._updateValue(this.model), (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._parent ? G(this.name, this._parent) : [this.name];
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            get validator() {
              return J(this._rawValidators);
            }
            get asyncValidator() {
              return tt(this._rawAsyncValidators);
            }
            viewToModelUpdate(t) {
              (this.viewModel = t), this.update.emit(t);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return !this._parent || !(!this.options || !this.options.standalone);
            }
            _setUpStandalone() {
              X(this.control, this), this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(), this._checkName();
            }
            _checkParentType() {
              !(this._parent instanceof vt) && this._parent instanceof gt
                ? _t.formGroupNameException()
                : this._parent instanceof vt || this._parent instanceof mt || _t.modelParentException();
            }
            _checkName() {
              this.options && this.options.name && (this.name = this.options.name),
                this._isStandalone() || this.name || _t.missingNameException();
            }
            _updateValue(t) {
              xt.then(() => {
                this.control.setValue(t, { emitViewToModelChange: !1 });
              });
            }
            _updateDisabled(t) {
              const e = t.isDisabled.currentValue,
                n = '' === e || (e && 'false' !== e);
              xt.then(() => {
                n && !this.control.disabled
                  ? this.control.disable()
                  : !n && this.control.disabled && this.control.enable();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(m, 9), i.Vb(C, 10), i.Vb(k, 10), i.Vb(c, 10));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngModel', '', 3, 'formControlName', '', 3, 'formControl', '']],
              inputs: {
                name: 'name',
                isDisabled: ['disabled', 'isDisabled'],
                model: ['ngModel', 'model'],
                options: ['ngModelOptions', 'options'],
              },
              outputs: { update: 'ngModelChange' },
              exportAs: ['ngModel'],
              features: [i.Hb([wt]), i.Fb, i.Gb],
            })),
            t
          );
        })(),
        kt = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['form', 3, 'ngNoForm', '', 3, 'ngNativeValidate', '']],
              hostAttrs: ['novalidate', ''],
            })),
            t
          );
        })();
      const Ot = new i.s('NgModelWithFormControlWarning'),
        St = { provide: _, useExisting: Object(i.Y)(() => Et) };
      let Et = (() => {
        class t extends _ {
          constructor(t, e, n, r) {
            super(),
              (this._ngModelWarningConfig = r),
              (this.update = new i.p()),
              (this._ngModelWarningSent = !1),
              (this._rawValidators = t || []),
              (this._rawAsyncValidators = e || []),
              (this.valueAccessor = rt(this, n));
          }
          set isDisabled(t) {
            B.disabledAttrWarning();
          }
          ngOnChanges(e) {
            var n, r;
            this._isControlChanged(e) &&
              (X(this.form, this),
              this.control.disabled && this.valueAccessor.setDisabledState && this.valueAccessor.setDisabledState(!0),
              this.form.updateValueAndValidity({ emitEvent: !1 })),
              et(e, this.viewModel) &&
                ('formControl',
                (n = t),
                this,
                (r = this._ngModelWarningConfig),
                Object(i.bb)() &&
                  'never' !== r &&
                  ((((null !== r && 'once' !== r) || n._ngModelWarningSentOnce) &&
                    ('always' !== r || this._ngModelWarningSent)) ||
                    (B.ngModelWarning('formControl'),
                    (n._ngModelWarningSentOnce = !0),
                    (this._ngModelWarningSent = !0))),
                this.form.setValue(this.model),
                (this.viewModel = this.model));
          }
          get path() {
            return [];
          }
          get validator() {
            return J(this._rawValidators);
          }
          get asyncValidator() {
            return tt(this._rawAsyncValidators);
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(t) {
            (this.viewModel = t), this.update.emit(t);
          }
          _isControlChanged(t) {
            return t.hasOwnProperty('form');
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(C, 10), i.Vb(k, 10), i.Vb(c, 10), i.Vb(Ot, 8));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [['', 'formControl', '']],
            inputs: {
              isDisabled: ['disabled', 'isDisabled'],
              form: ['formControl', 'form'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            exportAs: ['ngForm'],
            features: [i.Hb([St]), i.Fb, i.Gb],
          })),
          (t._ngModelWarningSentOnce = !1),
          t
        );
      })();
      const Tt = { provide: m, useExisting: Object(i.Y)(() => It) };
      let It = (() => {
        class t extends m {
          constructor(t, e) {
            super(),
              (this._validators = t),
              (this._asyncValidators = e),
              (this.submitted = !1),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new i.p());
          }
          ngOnChanges(t) {
            this._checkFormPresent(),
              t.hasOwnProperty('form') &&
                (this._updateValidators(), this._updateDomValue(), this._updateRegistrations());
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(t) {
            const e = this.form.get(t.path);
            return X(e, t), e.updateValueAndValidity({ emitEvent: !1 }), this.directives.push(t), e;
          }
          getControl(t) {
            return this.form.get(t.path);
          }
          removeControl(t) {
            st(this.directives, t);
          }
          addFormGroup(t) {
            const e = this.form.get(t.path);
            Y(e, t), e.updateValueAndValidity({ emitEvent: !1 });
          }
          removeFormGroup(t) {}
          getFormGroup(t) {
            return this.form.get(t.path);
          }
          addFormArray(t) {
            const e = this.form.get(t.path);
            Y(e, t), e.updateValueAndValidity({ emitEvent: !1 });
          }
          removeFormArray(t) {}
          getFormArray(t) {
            return this.form.get(t.path);
          }
          updateModel(t, e) {
            this.form.get(t.path).setValue(e);
          }
          onSubmit(t) {
            return (this.submitted = !0), it(this.form, this.directives), this.ngSubmit.emit(t), !1;
          }
          onReset() {
            this.resetForm();
          }
          resetForm(t) {
            this.form.reset(t), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((t) => {
              const e = this.form.get(t.path);
              t.control !== e &&
                ((function (t, e) {
                  e.valueAccessor.registerOnChange(() => Z(e)),
                    e.valueAccessor.registerOnTouched(() => Z(e)),
                    e._rawValidators.forEach((t) => {
                      t.registerOnValidatorChange && t.registerOnValidatorChange(null);
                    }),
                    e._rawAsyncValidators.forEach((t) => {
                      t.registerOnValidatorChange && t.registerOnValidatorChange(null);
                    }),
                    t && t._clearChangeFns();
                })(t.control, t),
                e && X(e, t),
                (t.control = e));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(() => this._updateDomValue()),
              this._oldForm && this._oldForm._registerOnCollectionChange(() => {}),
              (this._oldForm = this.form);
          }
          _updateValidators() {
            const t = J(this._validators);
            this.form.validator = S.compose([this.form.validator, t]);
            const e = tt(this._asyncValidators);
            this.form.asyncValidator = S.composeAsync([this.form.asyncValidator, e]);
          }
          _checkFormPresent() {
            this.form || B.missingFormException();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(C, 10), i.Vb(k, 10));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [['', 'formGroup', '']],
            hostBindings: function (t, e) {
              1 & t &&
                i.jc('submit', function (t) {
                  return e.onSubmit(t);
                })('reset', function () {
                  return e.onReset();
                });
            },
            inputs: { form: ['formGroup', 'form'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [i.Hb([Tt]), i.Fb, i.Gb],
          })),
          t
        );
      })();
      const At = { provide: C, useExisting: Object(i.Y)(() => jt), multi: !0 },
        Dt = { provide: C, useExisting: Object(i.Y)(() => Rt), multi: !0 };
      let jt = (() => {
          class t {
            get required() {
              return this._required;
            }
            set required(t) {
              (this._required = null != t && !1 !== t && 'false' !== `${t}`), this._onChange && this._onChange();
            }
            validate(t) {
              return this.required ? S.required(t) : null;
            }
            registerOnValidatorChange(t) {
              this._onChange = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'required', '', 'formControlName', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'formControl', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'ngModel', '', 3, 'type', 'checkbox'],
              ],
              hostVars: 1,
              hostBindings: function (t, e) {
                2 & t && i.Jb('required', e.required ? '' : null);
              },
              inputs: { required: 'required' },
              features: [i.Hb([At])],
            })),
            t
          );
        })(),
        Rt = (() => {
          class t extends jt {
            validate(t) {
              return this.required ? S.requiredTrue(t) : null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return Pt(e || t);
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['input', 'type', 'checkbox', 'required', '', 'formControlName', ''],
                ['input', 'type', 'checkbox', 'required', '', 'formControl', ''],
                ['input', 'type', 'checkbox', 'required', '', 'ngModel', ''],
              ],
              hostVars: 1,
              hostBindings: function (t, e) {
                2 & t && i.Jb('required', e.required ? '' : null);
              },
              features: [i.Hb([Dt]), i.Fb],
            })),
            t
          );
        })();
      const Pt = i.dc(Rt),
        Mt = { provide: C, useExisting: Object(i.Y)(() => Ft), multi: !0 };
      let Ft = (() => {
          class t {
            ngOnChanges(t) {
              'maxlength' in t && (this._createValidator(), this._onChange && this._onChange());
            }
            validate(t) {
              return null != this.maxlength ? this._validator(t) : null;
            }
            registerOnValidatorChange(t) {
              this._onChange = t;
            }
            _createValidator() {
              this._validator = S.maxLength(
                'number' == typeof this.maxlength ? this.maxlength : parseInt(this.maxlength, 10)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'maxlength', '', 'formControlName', ''],
                ['', 'maxlength', '', 'formControl', ''],
                ['', 'maxlength', '', 'ngModel', ''],
              ],
              hostVars: 1,
              hostBindings: function (t, e) {
                2 & t && i.Jb('maxlength', e.maxlength ? e.maxlength : null);
              },
              inputs: { maxlength: 'maxlength' },
              features: [i.Hb([Mt]), i.Gb],
            })),
            t
          );
        })(),
        Nt = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        Vt = (() => {
          class t {
            group(t, e = null) {
              const n = this._reduceControls(t);
              let i = null,
                r = null,
                s = void 0;
              return (
                null != e &&
                  ((function (t) {
                    return void 0 !== t.asyncValidators || void 0 !== t.validators || void 0 !== t.updateOn;
                  })(e)
                    ? ((i = null != e.validators ? e.validators : null),
                      (r = null != e.asyncValidators ? e.asyncValidators : null),
                      (s = null != e.updateOn ? e.updateOn : void 0))
                    : ((i = null != e.validator ? e.validator : null),
                      (r = null != e.asyncValidator ? e.asyncValidator : null))),
                new ht(n, { asyncValidators: r, updateOn: s, validators: i })
              );
            }
            control(t, e, n) {
              return new ut(t, e, n);
            }
            array(t, e, n) {
              const i = t.map((t) => this._createControl(t));
              return new dt(i, e, n);
            }
            _reduceControls(t) {
              const e = {};
              return (
                Object.keys(t).forEach((n) => {
                  e[n] = this._createControl(t[n]);
                }),
                e
              );
            }
            _createControl(t) {
              return t instanceof ut || t instanceof ht || t instanceof dt
                ? t
                : Array.isArray(t)
                ? this.control(t[0], t.length > 1 ? t[1] : null, t.length > 2 ? t[2] : null)
                : this.control(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Lt = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [M],
              imports: [Nt],
            })),
            t
          );
        })(),
        Ht = (() => {
          class t {
            static withConfig(e) {
              return { ngModule: t, providers: [{ provide: Ot, useValue: e.warnOnNgModelWithFormControl }] };
            }
          }
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [Vt, M],
              imports: [Nt],
            })),
            t
          );
        })();
    },
    '3UWI': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('D0XW'),
        r = n('l7GE'),
        s = n('ZUHj');
      class o {
        constructor(t) {
          this.durationSelector = t;
        }
        call(t, e) {
          return e.subscribe(new a(t, this.durationSelector));
        }
      }
      class a extends r.a {
        constructor(t, e) {
          super(t), (this.durationSelector = e), (this.hasValue = !1);
        }
        _next(t) {
          if (((this.value = t), (this.hasValue = !0), !this.throttled)) {
            let n;
            try {
              const { durationSelector: e } = this;
              n = e(t);
            } catch (e) {
              return this.destination.error(e);
            }
            const i = Object(s.a)(this, n);
            !i || i.closed ? this.clearThrottle() : this.add((this.throttled = i));
          }
        }
        clearThrottle() {
          const { value: t, hasValue: e, throttled: n } = this;
          n && (this.remove(n), (this.throttled = null), n.unsubscribe()),
            e && ((this.value = null), (this.hasValue = !1), this.destination.next(t));
        }
        notifyNext(t, e, n, i) {
          this.clearThrottle();
        }
        notifyComplete() {
          this.clearThrottle();
        }
      }
      var c = n('PqYM');
      function l(t, e = i.a) {
        return (
          (n = () => Object(c.a)(t, e)),
          function (t) {
            return t.lift(new o(n));
          }
        );
        var n;
      }
    },
    '3x0Y': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return u;
      });
      var i = n('c2SN'),
        r = n('fXoL'),
        s = n('kmnG'),
        o = n('7ZcW'),
        a = n('3Pt+'),
        c = n('0FS3'),
        l = n('NFeN');
      let u = (() => {
        class t extends i.a {}
        return (
          (t.ɵfac = function (e) {
            return h(e || t);
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['app-formly-file-upload']],
            features: [r.Fb],
            decls: 6,
            vars: 3,
            consts: [
              ['multiple', '', 3, 'formControl', 'formlyAttributes'],
              ['matSuffix', ''],
            ],
            template: function (t, e) {
              1 & t &&
                (r.bc(0, 'mat-form-field'),
                r.bc(1, 'mat-label'),
                r.Mc(2),
                r.ac(),
                r.Wb(3, 'ngx-mat-file-input', 0),
                r.bc(4, 'mat-icon', 1),
                r.Mc(5, 'image'),
                r.ac(),
                r.ac()),
                2 & t &&
                  (r.Ib(2), r.Nc(e.to.label), r.Ib(1), r.vc('formControl', e.formControl)('formlyAttributes', e.field));
            },
            directives: [s.d, s.h, o.b, a.n, a.f, c.e, l.a, s.j],
            styles: ['mat-form-field[_ngcontent-%COMP%]{width:100%}'],
            changeDetection: 0,
          })),
          t
        );
      })();
      const h = r.dc(u);
    },
    '4I5i': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => {
        function t() {
          return (
            Error.call(this), (this.message = 'argument out of range'), (this.name = 'ArgumentOutOfRangeError'), this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
    },
    '5+WD': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return rt;
      }),
        n.d(e, 'b', function () {
          return J;
        }),
        n.d(e, 'c', function () {
          return ct;
        }),
        n.d(e, 'd', function () {
          return lt;
        }),
        n.d(e, 'e', function () {
          return H;
        });
      var i = n('fXoL'),
        r = n('ofXK'),
        s = n('vxfF'),
        o = n('nLfN'),
        a = n('8LU1'),
        c = n('XNiG'),
        l = n('quSY'),
        u = n('l5mm'),
        h = n('eNwd'),
        d = n('HDdC'),
        p = n('VRyK'),
        f = n('1G5W'),
        m = n('lJxs'),
        g = n('IzEk'),
        b = n('JX91'),
        _ = n('vkgz'),
        y = n('eIep'),
        v = n('cH1L');
      function w(t, e) {
        for (let n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
        return t;
      }
      function x(t, e) {
        const n = e ? '' : 'none';
        w(t.style, {
          touchAction: e ? '' : 'none',
          webkitUserDrag: e ? '' : 'none',
          webkitTapHighlightColor: e ? '' : 'transparent',
          userSelect: n,
          msUserSelect: n,
          webkitUserSelect: n,
          MozUserSelect: n,
        });
      }
      function C(t) {
        const e = t.toLowerCase().indexOf('ms') > -1 ? 1 : 1e3;
        return parseFloat(t) * e;
      }
      function k(t, e) {
        return t
          .getPropertyValue(e)
          .split(',')
          .map((t) => t.trim());
      }
      function O(t) {
        const e = t.getBoundingClientRect();
        return { top: e.top, right: e.right, bottom: e.bottom, left: e.left, width: e.width, height: e.height };
      }
      function S(t, e, n) {
        const { top: i, bottom: r, left: s, right: o } = t;
        return n >= i && n <= r && e >= s && e <= o;
      }
      function E(t, e, n) {
        (t.top += e), (t.bottom = t.top + t.height), (t.left += n), (t.right = t.left + t.width);
      }
      function T(t, e, n, i) {
        const { top: r, right: s, bottom: o, left: a, width: c, height: l } = t,
          u = c * e,
          h = l * e;
        return i > r - h && i < o + h && n > a - u && n < s + u;
      }
      class I {
        constructor(t, e) {
          (this._document = t), (this._viewportRuler = e), (this.positions = new Map());
        }
        clear() {
          this.positions.clear();
        }
        cache(t) {
          this.clear(),
            this.positions.set(this._document, { scrollPosition: this._viewportRuler.getViewportScrollPosition() }),
            t.forEach((t) => {
              this.positions.set(t, { scrollPosition: { top: t.scrollTop, left: t.scrollLeft }, clientRect: O(t) });
            });
        }
        handleScroll(t) {
          const e = t.target,
            n = this.positions.get(e);
          if (!n) return null;
          const i = e === this._document ? e.documentElement : e,
            r = n.scrollPosition;
          let s, o;
          if (e === this._document) {
            const t = this._viewportRuler.getViewportScrollPosition();
            (s = t.top), (o = t.left);
          } else (s = e.scrollTop), (o = e.scrollLeft);
          const a = r.top - s,
            c = r.left - o;
          return (
            this.positions.forEach((t, n) => {
              t.clientRect && e !== n && i.contains(n) && E(t.clientRect, a, c);
            }),
            (r.top = s),
            (r.left = o),
            { top: a, left: c }
          );
        }
      }
      const A = Object(o.f)({ passive: !0 }),
        D = Object(o.f)({ passive: !1 });
      class j {
        constructor(t, e, n, i, r, s) {
          (this._config = e),
            (this._document = n),
            (this._ngZone = i),
            (this._viewportRuler = r),
            (this._dragDropRegistry = s),
            (this._passiveTransform = { x: 0, y: 0 }),
            (this._activeTransform = { x: 0, y: 0 }),
            (this._moveEvents = new c.a()),
            (this._pointerMoveSubscription = l.a.EMPTY),
            (this._pointerUpSubscription = l.a.EMPTY),
            (this._scrollSubscription = l.a.EMPTY),
            (this._resizeSubscription = l.a.EMPTY),
            (this._boundaryElement = null),
            (this._nativeInteractionsEnabled = !0),
            (this._handles = []),
            (this._disabledHandles = new Set()),
            (this._direction = 'ltr'),
            (this.dragStartDelay = 0),
            (this._disabled = !1),
            (this.beforeStarted = new c.a()),
            (this.started = new c.a()),
            (this.released = new c.a()),
            (this.ended = new c.a()),
            (this.entered = new c.a()),
            (this.exited = new c.a()),
            (this.dropped = new c.a()),
            (this.moved = this._moveEvents.asObservable()),
            (this._pointerDown = (t) => {
              if ((this.beforeStarted.next(), this._handles.length)) {
                const e = this._handles.find((e) => {
                  const n = t.target;
                  return !!n && (n === e || e.contains(n));
                });
                !e || this._disabledHandles.has(e) || this.disabled || this._initializeDragSequence(e, t);
              } else this.disabled || this._initializeDragSequence(this._rootElement, t);
            }),
            (this._pointerMove = (t) => {
              t.preventDefault();
              const e = this._getPointerPositionOnPage(t);
              if (!this._hasStartedDragging) {
                if (
                  Math.abs(e.x - this._pickupPositionOnPage.x) + Math.abs(e.y - this._pickupPositionOnPage.y) >=
                  this._config.dragStartThreshold
                ) {
                  if (!(Date.now() >= this._dragStartTime + this._getDragStartDelay(t)))
                    return void this._endDragSequence(t);
                  (this._dropContainer && this._dropContainer.isDragging()) ||
                    ((this._hasStartedDragging = !0), this._ngZone.run(() => this._startDragSequence(t)));
                }
                return;
              }
              this._boundaryElement &&
                ((this._previewRect && (this._previewRect.width || this._previewRect.height)) ||
                  (this._previewRect = (this._preview || this._rootElement).getBoundingClientRect()));
              const n = this._getConstrainedPointerPosition(e);
              if (((this._hasMoved = !0), this._updatePointerDirectionDelta(n), this._dropContainer))
                this._updateActiveDropContainer(n);
              else {
                const t = this._activeTransform;
                (t.x = n.x - this._pickupPositionOnPage.x + this._passiveTransform.x),
                  (t.y = n.y - this._pickupPositionOnPage.y + this._passiveTransform.y),
                  this._applyRootElementTransform(t.x, t.y),
                  'undefined' != typeof SVGElement &&
                    this._rootElement instanceof SVGElement &&
                    this._rootElement.setAttribute('transform', `translate(${t.x} ${t.y})`);
              }
              this._moveEvents.observers.length &&
                this._ngZone.run(() => {
                  this._moveEvents.next({
                    source: this,
                    pointerPosition: n,
                    event: t,
                    distance: this._getDragDistance(n),
                    delta: this._pointerDirectionDelta,
                  });
                });
            }),
            (this._pointerUp = (t) => {
              this._endDragSequence(t);
            }),
            this.withRootElement(t),
            (this._parentPositions = new I(n, r)),
            s.registerDragItem(this);
        }
        get disabled() {
          return this._disabled || !(!this._dropContainer || !this._dropContainer.disabled);
        }
        set disabled(t) {
          const e = Object(a.c)(t);
          e !== this._disabled && ((this._disabled = e), this._toggleNativeDragInteractions());
        }
        getPlaceholderElement() {
          return this._placeholder;
        }
        getRootElement() {
          return this._rootElement;
        }
        getVisibleElement() {
          return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();
        }
        withHandles(t) {
          return (
            (this._handles = t.map((t) => Object(a.e)(t))),
            this._handles.forEach((t) => x(t, !1)),
            this._toggleNativeDragInteractions(),
            this
          );
        }
        withPreviewTemplate(t) {
          return (this._previewTemplate = t), this;
        }
        withPlaceholderTemplate(t) {
          return (this._placeholderTemplate = t), this;
        }
        withRootElement(t) {
          const e = Object(a.e)(t);
          return (
            e !== this._rootElement &&
              (this._rootElement && this._removeRootElementListeners(this._rootElement),
              this._ngZone.runOutsideAngular(() => {
                e.addEventListener('mousedown', this._pointerDown, D),
                  e.addEventListener('touchstart', this._pointerDown, A);
              }),
              (this._initialTransform = void 0),
              (this._rootElement = e)),
            this
          );
        }
        withBoundaryElement(t) {
          return (
            (this._boundaryElement = t ? Object(a.e)(t) : null),
            this._resizeSubscription.unsubscribe(),
            t &&
              (this._resizeSubscription = this._viewportRuler
                .change(10)
                .subscribe(() => this._containInsideBoundaryOnResize())),
            this
          );
        }
        dispose() {
          this._removeRootElementListeners(this._rootElement),
            this.isDragging() && F(this._rootElement),
            F(this._anchor),
            this._destroyPreview(),
            this._destroyPlaceholder(),
            this._dragDropRegistry.removeDragItem(this),
            this._removeSubscriptions(),
            this.beforeStarted.complete(),
            this.started.complete(),
            this.released.complete(),
            this.ended.complete(),
            this.entered.complete(),
            this.exited.complete(),
            this.dropped.complete(),
            this._moveEvents.complete(),
            (this._handles = []),
            this._disabledHandles.clear(),
            (this._dropContainer = void 0),
            this._resizeSubscription.unsubscribe(),
            this._parentPositions.clear(),
            (this._boundaryElement = this._rootElement = this._placeholderTemplate = this._previewTemplate = this._anchor = null);
        }
        isDragging() {
          return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);
        }
        reset() {
          (this._rootElement.style.transform = this._initialTransform || ''),
            (this._activeTransform = { x: 0, y: 0 }),
            (this._passiveTransform = { x: 0, y: 0 });
        }
        disableHandle(t) {
          this._handles.indexOf(t) > -1 && this._disabledHandles.add(t);
        }
        enableHandle(t) {
          this._disabledHandles.delete(t);
        }
        withDirection(t) {
          return (this._direction = t), this;
        }
        _withDropContainer(t) {
          this._dropContainer = t;
        }
        getFreeDragPosition() {
          const t = this.isDragging() ? this._activeTransform : this._passiveTransform;
          return { x: t.x, y: t.y };
        }
        setFreeDragPosition(t) {
          return (
            (this._activeTransform = { x: 0, y: 0 }),
            (this._passiveTransform.x = t.x),
            (this._passiveTransform.y = t.y),
            this._dropContainer || this._applyRootElementTransform(t.x, t.y),
            this
          );
        }
        _sortFromLastPointerPosition() {
          const t = this._pointerPositionAtLastDirectionChange;
          t && this._dropContainer && this._updateActiveDropContainer(this._getConstrainedPointerPosition(t));
        }
        _removeSubscriptions() {
          this._pointerMoveSubscription.unsubscribe(),
            this._pointerUpSubscription.unsubscribe(),
            this._scrollSubscription.unsubscribe();
        }
        _destroyPreview() {
          this._preview && F(this._preview),
            this._previewRef && this._previewRef.destroy(),
            (this._preview = this._previewRef = null);
        }
        _destroyPlaceholder() {
          this._placeholder && F(this._placeholder),
            this._placeholderRef && this._placeholderRef.destroy(),
            (this._placeholder = this._placeholderRef = null);
        }
        _endDragSequence(t) {
          this._dragDropRegistry.isDragging(this) &&
            (this._removeSubscriptions(),
            this._dragDropRegistry.stopDragging(this),
            this._toggleNativeDragInteractions(),
            this._handles && (this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight),
            this._hasStartedDragging &&
              (this.released.next({ source: this }),
              this._dropContainer
                ? (this._dropContainer._stopScrolling(),
                  this._animatePreviewToPlaceholder().then(() => {
                    this._cleanupDragArtifacts(t),
                      this._cleanupCachedDimensions(),
                      this._dragDropRegistry.stopDragging(this);
                  }))
                : ((this._passiveTransform.x = this._activeTransform.x),
                  (this._passiveTransform.y = this._activeTransform.y),
                  this._ngZone.run(() => {
                    this.ended.next({
                      source: this,
                      distance: this._getDragDistance(this._getPointerPositionOnPage(t)),
                    });
                  }),
                  this._cleanupCachedDimensions(),
                  this._dragDropRegistry.stopDragging(this))));
        }
        _startDragSequence(t) {
          this.started.next({ source: this }),
            N(t) && (this._lastTouchEventTime = Date.now()),
            this._toggleNativeDragInteractions();
          const e = this._dropContainer;
          if (e) {
            const t = this._rootElement,
              i = t.parentNode,
              r = (this._preview = this._createPreviewElement()),
              s = (this._placeholder = this._createPlaceholderElement()),
              o = (this._anchor = this._anchor || this._document.createComment(''));
            i.insertBefore(o, t),
              (t.style.display = 'none'),
              this._document.body.appendChild(i.replaceChild(s, t)),
              ((n = this._document),
              n.fullscreenElement ||
                n.webkitFullscreenElement ||
                n.mozFullScreenElement ||
                n.msFullscreenElement ||
                n.body).appendChild(r),
              e.start(),
              (this._initialContainer = e),
              (this._initialIndex = e.getItemIndex(this));
          } else this._initialContainer = this._initialIndex = void 0;
          var n;
          this._parentPositions.cache(e ? e.getScrollableParents() : []);
        }
        _initializeDragSequence(t, e) {
          e.stopPropagation();
          const n = this.isDragging(),
            i = N(e),
            r = !i && 0 !== e.button,
            s = this._rootElement,
            o = !i && this._lastTouchEventTime && this._lastTouchEventTime + 800 > Date.now();
          if ((e.target && e.target.draggable && 'mousedown' === e.type && e.preventDefault(), n || r || o)) return;
          this._handles.length &&
            ((this._rootElementTapHighlight = s.style.webkitTapHighlightColor),
            (s.style.webkitTapHighlightColor = 'transparent')),
            (this._hasStartedDragging = this._hasMoved = !1),
            this._removeSubscriptions(),
            (this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove)),
            (this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp)),
            (this._scrollSubscription = this._dragDropRegistry.scroll.subscribe((t) => {
              this._updateOnScroll(t);
            })),
            this._boundaryElement && (this._boundaryRect = O(this._boundaryElement));
          const a = this._previewTemplate;
          this._pickupPositionInElement =
            a && a.template && !a.matchSize ? { x: 0, y: 0 } : this._getPointerPositionInElement(t, e);
          const c = (this._pickupPositionOnPage = this._getPointerPositionOnPage(e));
          (this._pointerDirectionDelta = { x: 0, y: 0 }),
            (this._pointerPositionAtLastDirectionChange = { x: c.x, y: c.y }),
            (this._dragStartTime = Date.now()),
            this._dragDropRegistry.startDragging(this, e);
        }
        _cleanupDragArtifacts(t) {
          (this._rootElement.style.display = ''),
            this._anchor.parentNode.replaceChild(this._rootElement, this._anchor),
            this._destroyPreview(),
            this._destroyPlaceholder(),
            (this._boundaryRect = this._previewRect = void 0),
            this._ngZone.run(() => {
              const e = this._dropContainer,
                n = e.getItemIndex(this),
                i = this._getPointerPositionOnPage(t),
                r = this._getDragDistance(this._getPointerPositionOnPage(t)),
                s = e._isOverContainer(i.x, i.y);
              this.ended.next({ source: this, distance: r }),
                this.dropped.next({
                  item: this,
                  currentIndex: n,
                  previousIndex: this._initialIndex,
                  container: e,
                  previousContainer: this._initialContainer,
                  isPointerOverContainer: s,
                  distance: r,
                }),
                e.drop(this, n, this._initialContainer, s, r, this._initialIndex),
                (this._dropContainer = this._initialContainer);
            });
        }
        _updateActiveDropContainer({ x: t, y: e }) {
          let n = this._initialContainer._getSiblingContainerFromPosition(this, t, e);
          !n &&
            this._dropContainer !== this._initialContainer &&
            this._initialContainer._isOverContainer(t, e) &&
            (n = this._initialContainer),
            n &&
              n !== this._dropContainer &&
              this._ngZone.run(() => {
                this.exited.next({ item: this, container: this._dropContainer }),
                  this._dropContainer.exit(this),
                  (this._dropContainer = n),
                  this._dropContainer.enter(
                    this,
                    t,
                    e,
                    n === this._initialContainer && n.sortingDisabled ? this._initialIndex : void 0
                  ),
                  this.entered.next({ item: this, container: n, currentIndex: n.getItemIndex(this) });
              }),
            this._dropContainer._startScrollingIfNecessary(t, e),
            this._dropContainer._sortItem(this, t, e, this._pointerDirectionDelta),
            (this._preview.style.transform = R(
              t - this._pickupPositionInElement.x,
              e - this._pickupPositionInElement.y
            ));
        }
        _createPreviewElement() {
          const t = this._previewTemplate,
            e = this.previewClass,
            n = t ? t.template : null;
          let i;
          if (n && t) {
            const e = t.matchSize ? this._rootElement.getBoundingClientRect() : null,
              r = t.viewContainer.createEmbeddedView(n, t.context);
            r.detectChanges(),
              (i = V(r, this._document)),
              (this._previewRef = r),
              t.matchSize
                ? L(i, e)
                : (i.style.transform = R(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y));
          } else {
            const t = this._rootElement;
            (i = P(t)), L(i, t.getBoundingClientRect());
          }
          return (
            w(i.style, {
              pointerEvents: 'none',
              margin: '0',
              position: 'fixed',
              top: '0',
              left: '0',
              zIndex: `${this._config.zIndex || 1e3}`,
            }),
            x(i, !1),
            i.classList.add('cdk-drag-preview'),
            i.setAttribute('dir', this._direction),
            e && (Array.isArray(e) ? e.forEach((t) => i.classList.add(t)) : i.classList.add(e)),
            i
          );
        }
        _animatePreviewToPlaceholder() {
          if (!this._hasMoved) return Promise.resolve();
          const t = this._placeholder.getBoundingClientRect();
          this._preview.classList.add('cdk-drag-animating'), (this._preview.style.transform = R(t.left, t.top));
          const e = (function (t) {
            const e = getComputedStyle(t),
              n = k(e, 'transition-property'),
              i = n.find((t) => 'transform' === t || 'all' === t);
            if (!i) return 0;
            const r = n.indexOf(i),
              s = k(e, 'transition-duration'),
              o = k(e, 'transition-delay');
            return C(s[r]) + C(o[r]);
          })(this._preview);
          return 0 === e
            ? Promise.resolve()
            : this._ngZone.runOutsideAngular(
                () =>
                  new Promise((t) => {
                    const n = (e) => {
                        (!e || (e.target === this._preview && 'transform' === e.propertyName)) &&
                          (this._preview.removeEventListener('transitionend', n), t(), clearTimeout(i));
                      },
                      i = setTimeout(n, 1.5 * e);
                    this._preview.addEventListener('transitionend', n);
                  })
              );
        }
        _createPlaceholderElement() {
          const t = this._placeholderTemplate,
            e = t ? t.template : null;
          let n;
          return (
            e
              ? ((this._placeholderRef = t.viewContainer.createEmbeddedView(e, t.context)),
                this._placeholderRef.detectChanges(),
                (n = V(this._placeholderRef, this._document)))
              : (n = P(this._rootElement)),
            n.classList.add('cdk-drag-placeholder'),
            n
          );
        }
        _getPointerPositionInElement(t, e) {
          const n = this._rootElement.getBoundingClientRect(),
            i = t === this._rootElement ? null : t,
            r = i ? i.getBoundingClientRect() : n,
            s = N(e) ? e.targetTouches[0] : e,
            o = this._getViewportScrollPosition();
          return { x: r.left - n.left + (s.pageX - r.left - o.left), y: r.top - n.top + (s.pageY - r.top - o.top) };
        }
        _getPointerPositionOnPage(t) {
          const e = N(t) ? t.touches[0] || t.changedTouches[0] : t,
            n = this._getViewportScrollPosition();
          return { x: e.pageX - n.left, y: e.pageY - n.top };
        }
        _getConstrainedPointerPosition(t) {
          const e = this.constrainPosition ? this.constrainPosition(t, this) : t,
            n = this._dropContainer ? this._dropContainer.lockAxis : null;
          if (
            ('x' === this.lockAxis || 'x' === n
              ? (e.y = this._pickupPositionOnPage.y)
              : ('y' !== this.lockAxis && 'y' !== n) || (e.x = this._pickupPositionOnPage.x),
            this._boundaryRect)
          ) {
            const { x: t, y: n } = this._pickupPositionInElement,
              i = this._boundaryRect,
              r = this._previewRect,
              s = i.top + n,
              o = i.bottom - (r.height - n);
            (e.x = M(e.x, i.left + t, i.right - (r.width - t))), (e.y = M(e.y, s, o));
          }
          return e;
        }
        _updatePointerDirectionDelta(t) {
          const { x: e, y: n } = t,
            i = this._pointerDirectionDelta,
            r = this._pointerPositionAtLastDirectionChange,
            s = Math.abs(e - r.x),
            o = Math.abs(n - r.y);
          return (
            s > this._config.pointerDirectionChangeThreshold && ((i.x = e > r.x ? 1 : -1), (r.x = e)),
            o > this._config.pointerDirectionChangeThreshold && ((i.y = n > r.y ? 1 : -1), (r.y = n)),
            i
          );
        }
        _toggleNativeDragInteractions() {
          if (!this._rootElement || !this._handles) return;
          const t = this._handles.length > 0 || !this.isDragging();
          t !== this._nativeInteractionsEnabled && ((this._nativeInteractionsEnabled = t), x(this._rootElement, t));
        }
        _removeRootElementListeners(t) {
          t.removeEventListener('mousedown', this._pointerDown, D),
            t.removeEventListener('touchstart', this._pointerDown, A);
        }
        _applyRootElementTransform(t, e) {
          const n = R(t, e);
          null == this._initialTransform && (this._initialTransform = this._rootElement.style.transform || ''),
            (this._rootElement.style.transform = this._initialTransform ? n + ' ' + this._initialTransform : n);
        }
        _getDragDistance(t) {
          const e = this._pickupPositionOnPage;
          return e ? { x: t.x - e.x, y: t.y - e.y } : { x: 0, y: 0 };
        }
        _cleanupCachedDimensions() {
          (this._boundaryRect = this._previewRect = void 0), this._parentPositions.clear();
        }
        _containInsideBoundaryOnResize() {
          let { x: t, y: e } = this._passiveTransform;
          if ((0 === t && 0 === e) || this.isDragging() || !this._boundaryElement) return;
          const n = this._boundaryElement.getBoundingClientRect(),
            i = this._rootElement.getBoundingClientRect();
          if ((0 === n.width && 0 === n.height) || (0 === i.width && 0 === i.height)) return;
          const r = n.left - i.left,
            s = i.right - n.right,
            o = n.top - i.top,
            a = i.bottom - n.bottom;
          n.width > i.width ? (r > 0 && (t += r), s > 0 && (t -= s)) : (t = 0),
            n.height > i.height ? (o > 0 && (e += o), a > 0 && (e -= a)) : (e = 0),
            (t === this._passiveTransform.x && e === this._passiveTransform.y) ||
              this.setFreeDragPosition({ y: e, x: t });
        }
        _getDragStartDelay(t) {
          const e = this.dragStartDelay;
          return 'number' == typeof e ? e : N(t) ? e.touch : e ? e.mouse : 0;
        }
        _updateOnScroll(t) {
          const e = this._parentPositions.handleScroll(t);
          this._boundaryRect && e && E(this._boundaryRect, e.top, e.left);
        }
        _getViewportScrollPosition() {
          const t = this._parentPositions.positions.get(this._document);
          return t ? t.scrollPosition : this._viewportRuler.getViewportScrollPosition();
        }
      }
      function R(t, e) {
        return `translate3d(${Math.round(t)}px, ${Math.round(e)}px, 0)`;
      }
      function P(t) {
        const e = t.cloneNode(!0),
          n = e.querySelectorAll('[id]'),
          i = t.querySelectorAll('canvas');
        e.removeAttribute('id');
        for (let r = 0; r < n.length; r++) n[r].removeAttribute('id');
        if (i.length) {
          const t = e.querySelectorAll('canvas');
          for (let e = 0; e < i.length; e++) {
            const n = t[e].getContext('2d');
            n && n.drawImage(i[e], 0, 0);
          }
        }
        return e;
      }
      function M(t, e, n) {
        return Math.max(e, Math.min(n, t));
      }
      function F(t) {
        t && t.parentNode && t.parentNode.removeChild(t);
      }
      function N(t) {
        return 't' === t.type[0];
      }
      function V(t, e) {
        const n = t.rootNodes;
        if (1 === n.length && n[0].nodeType === e.ELEMENT_NODE) return n[0];
        const i = e.createElement('div');
        return n.forEach((t) => i.appendChild(t)), i;
      }
      function L(t, e) {
        (t.style.width = `${e.width}px`), (t.style.height = `${e.height}px`), (t.style.transform = R(e.left, e.top));
      }
      function H(t, e, n) {
        const i = z(e, t.length - 1),
          r = z(n, t.length - 1);
        if (i === r) return;
        const s = t[i],
          o = r < i ? -1 : 1;
        for (let a = i; a !== r; a += o) t[a] = t[a + o];
        t[r] = s;
      }
      function z(t, e) {
        return Math.max(0, Math.min(e, t));
      }
      class B {
        constructor(t, e, n, i, r) {
          (this._dragDropRegistry = e),
            (this._ngZone = i),
            (this._viewportRuler = r),
            (this.disabled = !1),
            (this.sortingDisabled = !1),
            (this.autoScrollDisabled = !1),
            (this.enterPredicate = () => !0),
            (this.beforeStarted = new c.a()),
            (this.entered = new c.a()),
            (this.exited = new c.a()),
            (this.dropped = new c.a()),
            (this.sorted = new c.a()),
            (this._isDragging = !1),
            (this._itemPositions = []),
            (this._previousSwap = { drag: null, delta: 0 }),
            (this._siblings = []),
            (this._orientation = 'vertical'),
            (this._activeSiblings = new Set()),
            (this._direction = 'ltr'),
            (this._viewportScrollSubscription = l.a.EMPTY),
            (this._verticalScrollDirection = 0),
            (this._horizontalScrollDirection = 0),
            (this._stopScrollTimers = new c.a()),
            (this._cachedShadowRoot = null),
            (this._startScrollInterval = () => {
              this._stopScrolling(),
                Object(u.a)(0, h.a)
                  .pipe(Object(f.a)(this._stopScrollTimers))
                  .subscribe(() => {
                    const t = this._scrollNode;
                    1 === this._verticalScrollDirection ? W(t, -2) : 2 === this._verticalScrollDirection && W(t, 2),
                      1 === this._horizontalScrollDirection
                        ? $(t, -2)
                        : 2 === this._horizontalScrollDirection && $(t, 2);
                  });
            }),
            (this.element = Object(a.e)(t)),
            (this._document = n),
            this.withScrollableParents([this.element]),
            e.registerDropContainer(this),
            (this._parentPositions = new I(n, r));
        }
        dispose() {
          this._stopScrolling(),
            this._stopScrollTimers.complete(),
            this._viewportScrollSubscription.unsubscribe(),
            this.beforeStarted.complete(),
            this.entered.complete(),
            this.exited.complete(),
            this.dropped.complete(),
            this.sorted.complete(),
            this._activeSiblings.clear(),
            (this._scrollNode = null),
            this._parentPositions.clear(),
            this._dragDropRegistry.removeDropContainer(this);
        }
        isDragging() {
          return this._isDragging;
        }
        start() {
          const t = Object(a.e)(this.element).style;
          this.beforeStarted.next(),
            (this._isDragging = !0),
            (this._initialScrollSnap = t.msScrollSnapType || t.scrollSnapType || ''),
            (t.scrollSnapType = t.msScrollSnapType = 'none'),
            this._cacheItems(),
            this._siblings.forEach((t) => t._startReceiving(this)),
            this._viewportScrollSubscription.unsubscribe(),
            this._listenToScrollEvents();
        }
        enter(t, e, n, i) {
          let r;
          this.start(),
            null == i
              ? ((r = this.sortingDisabled ? this._draggables.indexOf(t) : -1),
                -1 === r && (r = this._getItemIndexFromPointerPosition(t, e, n)))
              : (r = i);
          const s = this._activeDraggables,
            o = s.indexOf(t),
            c = t.getPlaceholderElement();
          let l = s[r];
          if ((l === t && (l = s[r + 1]), o > -1 && s.splice(o, 1), l && !this._dragDropRegistry.isDragging(l))) {
            const e = l.getRootElement();
            e.parentElement.insertBefore(c, e), s.splice(r, 0, t);
          } else {
            const i = Object(a.e)(this.element);
            this._shouldEnterAsFirstChild(e, n)
              ? (i.insertBefore(c, s[0].getRootElement()), s.unshift(t))
              : (i.appendChild(c), s.push(t));
          }
          (c.style.transform = ''),
            this._cacheItemPositions(),
            this._cacheParentPositions(),
            this.entered.next({ item: t, container: this, currentIndex: this.getItemIndex(t) });
        }
        exit(t) {
          this._reset(), this.exited.next({ item: t, container: this });
        }
        drop(t, e, n, i, r, s) {
          this._reset(),
            null == s && (s = n.getItemIndex(t)),
            this.dropped.next({
              item: t,
              currentIndex: e,
              previousIndex: s,
              container: this,
              previousContainer: n,
              isPointerOverContainer: i,
              distance: r,
            });
        }
        withItems(t) {
          const e = this._draggables;
          return (
            (this._draggables = t),
            t.forEach((t) => t._withDropContainer(this)),
            this.isDragging() &&
              (e.filter((t) => t.isDragging()).every((e) => -1 === t.indexOf(e)) ? this._reset() : this._cacheItems()),
            this
          );
        }
        withDirection(t) {
          return (this._direction = t), this;
        }
        connectedTo(t) {
          return (this._siblings = t.slice()), this;
        }
        withOrientation(t) {
          return (this._orientation = t), this;
        }
        withScrollableParents(t) {
          const e = Object(a.e)(this.element);
          return (this._scrollableElements = -1 === t.indexOf(e) ? [e, ...t] : t.slice()), this;
        }
        getScrollableParents() {
          return this._scrollableElements;
        }
        getItemIndex(t) {
          return this._isDragging
            ? U(
                'horizontal' === this._orientation && 'rtl' === this._direction
                  ? this._itemPositions.slice().reverse()
                  : this._itemPositions,
                (e) => e.drag === t
              )
            : this._draggables.indexOf(t);
        }
        isReceiving() {
          return this._activeSiblings.size > 0;
        }
        _sortItem(t, e, n, i) {
          if (this.sortingDisabled || !T(this._clientRect, 0.05, e, n)) return;
          const r = this._itemPositions,
            s = this._getItemIndexFromPointerPosition(t, e, n, i);
          if (-1 === s && r.length > 0) return;
          const o = 'horizontal' === this._orientation,
            a = U(r, (e) => e.drag === t),
            c = r[s],
            l = r[a].clientRect,
            u = c.clientRect,
            h = a > s ? 1 : -1;
          (this._previousSwap.drag = c.drag), (this._previousSwap.delta = o ? i.x : i.y);
          const d = this._getItemOffsetPx(l, u, h),
            p = this._getSiblingOffsetPx(a, r, h),
            f = r.slice();
          H(r, a, s),
            this.sorted.next({ previousIndex: a, currentIndex: s, container: this, item: t }),
            r.forEach((e, n) => {
              if (f[n] === e) return;
              const i = e.drag === t,
                r = i ? d : p,
                s = i ? t.getPlaceholderElement() : e.drag.getRootElement();
              (e.offset += r),
                o
                  ? ((s.style.transform = `translate3d(${Math.round(e.offset)}px, 0, 0)`), E(e.clientRect, 0, r))
                  : ((s.style.transform = `translate3d(0, ${Math.round(e.offset)}px, 0)`), E(e.clientRect, r, 0));
            });
        }
        _startScrollingIfNecessary(t, e) {
          if (this.autoScrollDisabled) return;
          let n,
            i = 0,
            r = 0;
          if (
            (this._parentPositions.positions.forEach((s, o) => {
              o !== this._document &&
                s.clientRect &&
                !n &&
                T(s.clientRect, 0.05, t, e) &&
                (([i, r] = (function (t, e, n, i) {
                  const r = q(e, i),
                    s = G(e, n);
                  let o = 0,
                    a = 0;
                  if (r) {
                    const e = t.scrollTop;
                    1 === r ? e > 0 && (o = 1) : t.scrollHeight - e > t.clientHeight && (o = 2);
                  }
                  if (s) {
                    const e = t.scrollLeft;
                    1 === s ? e > 0 && (a = 1) : t.scrollWidth - e > t.clientWidth && (a = 2);
                  }
                  return [o, a];
                })(o, s.clientRect, t, e)),
                (i || r) && (n = o));
            }),
            !i && !r)
          ) {
            const { width: s, height: o } = this._viewportRuler.getViewportSize(),
              a = { width: s, height: o, top: 0, right: s, bottom: o, left: 0 };
            (i = q(a, e)), (r = G(a, t)), (n = window);
          }
          !n ||
            (i === this._verticalScrollDirection && r === this._horizontalScrollDirection && n === this._scrollNode) ||
            ((this._verticalScrollDirection = i),
            (this._horizontalScrollDirection = r),
            (this._scrollNode = n),
            (i || r) && n ? this._ngZone.runOutsideAngular(this._startScrollInterval) : this._stopScrolling());
        }
        _stopScrolling() {
          this._stopScrollTimers.next();
        }
        _cacheParentPositions() {
          const t = Object(a.e)(this.element);
          this._parentPositions.cache(this._scrollableElements),
            (this._clientRect = this._parentPositions.positions.get(t).clientRect);
        }
        _cacheItemPositions() {
          const t = 'horizontal' === this._orientation;
          this._itemPositions = this._activeDraggables
            .map((t) => {
              const e = t.getVisibleElement();
              return { drag: t, offset: 0, clientRect: O(e) };
            })
            .sort((e, n) => (t ? e.clientRect.left - n.clientRect.left : e.clientRect.top - n.clientRect.top));
        }
        _reset() {
          this._isDragging = !1;
          const t = Object(a.e)(this.element).style;
          (t.scrollSnapType = t.msScrollSnapType = this._initialScrollSnap),
            this._activeDraggables.forEach((t) => {
              const e = t.getRootElement();
              e && (e.style.transform = '');
            }),
            this._siblings.forEach((t) => t._stopReceiving(this)),
            (this._activeDraggables = []),
            (this._itemPositions = []),
            (this._previousSwap.drag = null),
            (this._previousSwap.delta = 0),
            this._stopScrolling(),
            this._viewportScrollSubscription.unsubscribe(),
            this._parentPositions.clear();
        }
        _getSiblingOffsetPx(t, e, n) {
          const i = 'horizontal' === this._orientation,
            r = e[t].clientRect,
            s = e[t + -1 * n];
          let o = r[i ? 'width' : 'height'] * n;
          if (s) {
            const t = i ? 'left' : 'top',
              e = i ? 'right' : 'bottom';
            -1 === n ? (o -= s.clientRect[t] - r[e]) : (o += r[t] - s.clientRect[e]);
          }
          return o;
        }
        _getItemOffsetPx(t, e, n) {
          const i = 'horizontal' === this._orientation;
          let r = i ? e.left - t.left : e.top - t.top;
          return -1 === n && (r += i ? e.width - t.width : e.height - t.height), r;
        }
        _shouldEnterAsFirstChild(t, e) {
          if (!this._activeDraggables.length) return !1;
          const n = this._itemPositions,
            i = 'horizontal' === this._orientation;
          if (n[0].drag !== this._activeDraggables[0]) {
            const r = n[n.length - 1].clientRect;
            return i ? t >= r.right : e >= r.bottom;
          }
          {
            const r = n[0].clientRect;
            return i ? t <= r.left : e <= r.top;
          }
        }
        _getItemIndexFromPointerPosition(t, e, n, i) {
          const r = 'horizontal' === this._orientation;
          return U(this._itemPositions, ({ drag: s, clientRect: o }, a, c) => {
            if (s === t) return c.length < 2;
            if (i) {
              const t = r ? i.x : i.y;
              if (s === this._previousSwap.drag && t === this._previousSwap.delta) return !1;
            }
            return r
              ? e >= Math.floor(o.left) && e < Math.floor(o.right)
              : n >= Math.floor(o.top) && n < Math.floor(o.bottom);
          });
        }
        _cacheItems() {
          (this._activeDraggables = this._draggables.slice()), this._cacheItemPositions(), this._cacheParentPositions();
        }
        _isOverContainer(t, e) {
          return S(this._clientRect, t, e);
        }
        _getSiblingContainerFromPosition(t, e, n) {
          return this._siblings.find((i) => i._canReceive(t, e, n));
        }
        _canReceive(t, e, n) {
          if (!S(this._clientRect, e, n) || !this.enterPredicate(t, this)) return !1;
          const i = this._getShadowRoot().elementFromPoint(e, n);
          if (!i) return !1;
          const r = Object(a.e)(this.element);
          return i === r || r.contains(i);
        }
        _startReceiving(t) {
          const e = this._activeSiblings;
          e.has(t) || (e.add(t), this._cacheParentPositions(), this._listenToScrollEvents());
        }
        _stopReceiving(t) {
          this._activeSiblings.delete(t), this._viewportScrollSubscription.unsubscribe();
        }
        _listenToScrollEvents() {
          this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((t) => {
            if (this.isDragging()) {
              const e = this._parentPositions.handleScroll(t);
              e &&
                (this._itemPositions.forEach(({ clientRect: t }) => {
                  E(t, e.top, e.left);
                }),
                this._itemPositions.forEach(({ drag: t }) => {
                  this._dragDropRegistry.isDragging(t) && t._sortFromLastPointerPosition();
                }));
            } else this.isReceiving() && this._cacheParentPositions();
          });
        }
        _getShadowRoot() {
          if (!this._cachedShadowRoot) {
            const t = Object(o.c)(Object(a.e)(this.element));
            this._cachedShadowRoot = t || this._document;
          }
          return this._cachedShadowRoot;
        }
      }
      function U(t, e) {
        for (let n = 0; n < t.length; n++) if (e(t[n], n, t)) return n;
        return -1;
      }
      function W(t, e) {
        t === window ? t.scrollBy(0, e) : (t.scrollTop += e);
      }
      function $(t, e) {
        t === window ? t.scrollBy(e, 0) : (t.scrollLeft += e);
      }
      function q(t, e) {
        const { top: n, bottom: i, height: r } = t,
          s = 0.05 * r;
        return e >= n - s && e <= n + s ? 1 : e >= i - s && e <= i + s ? 2 : 0;
      }
      function G(t, e) {
        const { left: n, right: i, width: r } = t,
          s = 0.05 * r;
        return e >= n - s && e <= n + s ? 1 : e >= i - s && e <= i + s ? 2 : 0;
      }
      const X = Object(o.f)({ passive: !1, capture: !0 });
      let K = (() => {
        class t {
          constructor(t, e) {
            (this._ngZone = t),
              (this._dropInstances = new Set()),
              (this._dragInstances = new Set()),
              (this._activeDragInstances = new Set()),
              (this._globalListeners = new Map()),
              (this.pointerMove = new c.a()),
              (this.pointerUp = new c.a()),
              (this.scroll = new c.a()),
              (this._preventDefaultWhileDragging = (t) => {
                this._activeDragInstances.size && t.preventDefault();
              }),
              (this._document = e);
          }
          registerDropContainer(t) {
            this._dropInstances.has(t) || this._dropInstances.add(t);
          }
          registerDragItem(t) {
            this._dragInstances.add(t),
              1 === this._dragInstances.size &&
                this._ngZone.runOutsideAngular(() => {
                  this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, X);
                });
          }
          removeDropContainer(t) {
            this._dropInstances.delete(t);
          }
          removeDragItem(t) {
            this._dragInstances.delete(t),
              this.stopDragging(t),
              0 === this._dragInstances.size &&
                this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, X);
          }
          startDragging(t, e) {
            if (
              !this._activeDragInstances.has(t) &&
              (this._activeDragInstances.add(t), 1 === this._activeDragInstances.size)
            ) {
              const t = e.type.startsWith('touch'),
                n = t ? 'touchend' : 'mouseup';
              this._globalListeners
                .set(t ? 'touchmove' : 'mousemove', { handler: (t) => this.pointerMove.next(t), options: X })
                .set(n, { handler: (t) => this.pointerUp.next(t), options: !0 })
                .set('scroll', { handler: (t) => this.scroll.next(t), options: !0 })
                .set('selectstart', { handler: this._preventDefaultWhileDragging, options: X }),
                this._ngZone.runOutsideAngular(() => {
                  this._globalListeners.forEach((t, e) => {
                    this._document.addEventListener(e, t.handler, t.options);
                  });
                });
            }
          }
          stopDragging(t) {
            this._activeDragInstances.delete(t), 0 === this._activeDragInstances.size && this._clearGlobalListeners();
          }
          isDragging(t) {
            return this._activeDragInstances.has(t);
          }
          ngOnDestroy() {
            this._dragInstances.forEach((t) => this.removeDragItem(t)),
              this._dropInstances.forEach((t) => this.removeDropContainer(t)),
              this._clearGlobalListeners(),
              this.pointerMove.complete(),
              this.pointerUp.complete();
          }
          _clearGlobalListeners() {
            this._globalListeners.forEach((t, e) => {
              this._document.removeEventListener(e, t.handler, t.options);
            }),
              this._globalListeners.clear();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(i.B), i.fc(r.d));
          }),
          (t.ɵprov = Object(i.Rb)({
            factory: function () {
              return new t(Object(i.fc)(i.B), Object(i.fc)(r.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const Y = { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };
      let Z = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._document = t), (this._ngZone = e), (this._viewportRuler = n), (this._dragDropRegistry = i);
          }
          createDrag(t, e = Y) {
            return new j(t, e, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);
          }
          createDropList(t) {
            return new B(t, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(r.d), i.fc(i.B), i.fc(s.e), i.fc(K));
          }),
          (t.ɵprov = Object(i.Rb)({
            factory: function () {
              return new t(Object(i.fc)(r.d), Object(i.fc)(i.B), Object(i.fc)(s.e), Object(i.fc)(K));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const Q = new i.s('CDK_DRAG_PARENT');
      let J = (() => {
          class t {
            constructor(t, e) {
              (this.element = t),
                (this._stateChanges = new c.a()),
                (this._disabled = !1),
                (this._parentDrag = e),
                x(t.nativeElement, !1);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              (this._disabled = Object(a.c)(t)), this._stateChanges.next(this);
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(Q, 8));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'cdkDragHandle', '']],
              hostAttrs: [1, 'cdk-drag-handle'],
              inputs: { disabled: ['cdkDragHandleDisabled', 'disabled'] },
            })),
            t
          );
        })(),
        tt = (() => {
          class t {
            constructor(t) {
              this.templateRef = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.O));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['ng-template', 'cdkDragPlaceholder', '']],
              inputs: { data: 'data' },
            })),
            t
          );
        })(),
        et = (() => {
          class t {
            constructor(t) {
              (this.templateRef = t), (this._matchSize = !1);
            }
            get matchSize() {
              return this._matchSize;
            }
            set matchSize(t) {
              this._matchSize = Object(a.c)(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.O));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['ng-template', 'cdkDragPreview', '']],
              inputs: { matchSize: 'matchSize', data: 'data' },
            })),
            t
          );
        })();
      const nt = new i.s('CDK_DRAG_CONFIG'),
        it = new i.s('CDK_DROP_LIST');
      let rt = (() => {
        class t {
          constructor(t, e, n, r, s, o, a, l, u) {
            (this.element = t),
              (this.dropContainer = e),
              (this._document = n),
              (this._ngZone = r),
              (this._viewContainerRef = s),
              (this._dir = a),
              (this._changeDetectorRef = u),
              (this._destroyed = new c.a()),
              (this.started = new i.p()),
              (this.released = new i.p()),
              (this.ended = new i.p()),
              (this.entered = new i.p()),
              (this.exited = new i.p()),
              (this.dropped = new i.p()),
              (this.moved = new d.a((t) => {
                const e = this._dragRef.moved
                  .pipe(
                    Object(m.a)((t) => ({
                      source: this,
                      pointerPosition: t.pointerPosition,
                      event: t.event,
                      delta: t.delta,
                      distance: t.distance,
                    }))
                  )
                  .subscribe(t);
                return () => {
                  e.unsubscribe();
                };
              })),
              (this._dragRef = l.createDrag(t, {
                dragStartThreshold: o && null != o.dragStartThreshold ? o.dragStartThreshold : 5,
                pointerDirectionChangeThreshold:
                  o && null != o.pointerDirectionChangeThreshold ? o.pointerDirectionChangeThreshold : 5,
                zIndex: null == o ? void 0 : o.zIndex,
              })),
              (this._dragRef.data = this),
              o && this._assignDefaults(o),
              e && (this._dragRef._withDropContainer(e._dropListRef), e.addItem(this)),
              this._syncInputs(this._dragRef),
              this._handleEvents(this._dragRef);
          }
          get disabled() {
            return this._disabled || (this.dropContainer && this.dropContainer.disabled);
          }
          set disabled(t) {
            (this._disabled = Object(a.c)(t)), (this._dragRef.disabled = this._disabled);
          }
          getPlaceholderElement() {
            return this._dragRef.getPlaceholderElement();
          }
          getRootElement() {
            return this._dragRef.getRootElement();
          }
          reset() {
            this._dragRef.reset();
          }
          getFreeDragPosition() {
            return this._dragRef.getFreeDragPosition();
          }
          ngAfterViewInit() {
            this._ngZone.onStable
              .asObservable()
              .pipe(Object(g.a)(1), Object(f.a)(this._destroyed))
              .subscribe(() => {
                this._updateRootElement(),
                  this._handles.changes
                    .pipe(
                      Object(b.a)(this._handles),
                      Object(_.a)((t) => {
                        const e = t.filter((t) => t._parentDrag === this).map((t) => t.element);
                        this._dragRef.withHandles(e);
                      }),
                      Object(y.a)((t) => Object(p.a)(...t.map((t) => t._stateChanges.pipe(Object(b.a)(t))))),
                      Object(f.a)(this._destroyed)
                    )
                    .subscribe((t) => {
                      const e = this._dragRef,
                        n = t.element.nativeElement;
                      t.disabled ? e.disableHandle(n) : e.enableHandle(n);
                    }),
                  this.freeDragPosition && this._dragRef.setFreeDragPosition(this.freeDragPosition);
              });
          }
          ngOnChanges(t) {
            const e = t.rootElementSelector,
              n = t.freeDragPosition;
            e && !e.firstChange && this._updateRootElement(),
              n && !n.firstChange && this.freeDragPosition && this._dragRef.setFreeDragPosition(this.freeDragPosition);
          }
          ngOnDestroy() {
            this.dropContainer && this.dropContainer.removeItem(this),
              this._destroyed.next(),
              this._destroyed.complete(),
              this._dragRef.dispose();
          }
          _updateRootElement() {
            const t = this.element.nativeElement,
              e = this.rootElementSelector ? st(t, this.rootElementSelector) : t;
            if (e && e.nodeType !== this._document.ELEMENT_NODE)
              throw Error('cdkDrag must be attached to an element node. ' + `Currently attached to "${e.nodeName}".`);
            this._dragRef.withRootElement(e || t);
          }
          _getBoundaryElement() {
            const t = this.boundaryElement;
            if (!t) return null;
            if ('string' == typeof t) return st(this.element.nativeElement, t);
            const e = Object(a.e)(t);
            if (Object(i.bb)() && !e.contains(this.element.nativeElement))
              throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');
            return e;
          }
          _syncInputs(t) {
            t.beforeStarted.subscribe(() => {
              if (!t.isDragging()) {
                const e = this._dir,
                  n = this.dragStartDelay,
                  i = this._placeholderTemplate
                    ? {
                        template: this._placeholderTemplate.templateRef,
                        context: this._placeholderTemplate.data,
                        viewContainer: this._viewContainerRef,
                      }
                    : null,
                  r = this._previewTemplate
                    ? {
                        template: this._previewTemplate.templateRef,
                        context: this._previewTemplate.data,
                        matchSize: this._previewTemplate.matchSize,
                        viewContainer: this._viewContainerRef,
                      }
                    : null;
                (t.disabled = this.disabled),
                  (t.lockAxis = this.lockAxis),
                  (t.dragStartDelay = 'object' == typeof n && n ? n : Object(a.f)(n)),
                  (t.constrainPosition = this.constrainPosition),
                  (t.previewClass = this.previewClass),
                  t.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(i).withPreviewTemplate(r),
                  e && t.withDirection(e.value);
              }
            });
          }
          _handleEvents(t) {
            t.started.subscribe(() => {
              this.started.emit({ source: this }), this._changeDetectorRef.markForCheck();
            }),
              t.released.subscribe(() => {
                this.released.emit({ source: this });
              }),
              t.ended.subscribe((t) => {
                this.ended.emit({ source: this, distance: t.distance }), this._changeDetectorRef.markForCheck();
              }),
              t.entered.subscribe((t) => {
                this.entered.emit({ container: t.container.data, item: this, currentIndex: t.currentIndex });
              }),
              t.exited.subscribe((t) => {
                this.exited.emit({ container: t.container.data, item: this });
              }),
              t.dropped.subscribe((t) => {
                this.dropped.emit({
                  previousIndex: t.previousIndex,
                  currentIndex: t.currentIndex,
                  previousContainer: t.previousContainer.data,
                  container: t.container.data,
                  isPointerOverContainer: t.isPointerOverContainer,
                  item: this,
                  distance: t.distance,
                });
              });
          }
          _assignDefaults(t) {
            const {
              lockAxis: e,
              dragStartDelay: n,
              constrainPosition: i,
              previewClass: r,
              boundaryElement: s,
              draggingDisabled: o,
              rootElementSelector: a,
            } = t;
            (this.disabled = null != o && o),
              (this.dragStartDelay = n || 0),
              e && (this.lockAxis = e),
              i && (this.constrainPosition = i),
              r && (this.previewClass = r),
              s && (this.boundaryElement = s),
              a && (this.rootElementSelector = a);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(
              i.Vb(i.m),
              i.Vb(it, 12),
              i.Vb(r.d),
              i.Vb(i.B),
              i.Vb(i.S),
              i.Vb(nt, 8),
              i.Vb(v.b, 8),
              i.Vb(Z),
              i.Vb(i.i)
            );
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [['', 'cdkDrag', '']],
            contentQueries: function (t, e, n) {
              var r;
              1 & t && (i.Ob(n, et, !0), i.Ob(n, tt, !0), i.Ob(n, J, !0)),
                2 & t &&
                  (i.Ac((r = i.kc())) && (e._previewTemplate = r.first),
                  i.Ac((r = i.kc())) && (e._placeholderTemplate = r.first),
                  i.Ac((r = i.kc())) && (e._handles = r));
            },
            hostAttrs: [1, 'cdk-drag'],
            hostVars: 4,
            hostBindings: function (t, e) {
              2 & t && i.Mb('cdk-drag-disabled', e.disabled)('cdk-drag-dragging', e._dragRef.isDragging());
            },
            inputs: {
              disabled: ['cdkDragDisabled', 'disabled'],
              dragStartDelay: ['cdkDragStartDelay', 'dragStartDelay'],
              lockAxis: ['cdkDragLockAxis', 'lockAxis'],
              constrainPosition: ['cdkDragConstrainPosition', 'constrainPosition'],
              previewClass: ['cdkDragPreviewClass', 'previewClass'],
              boundaryElement: ['cdkDragBoundary', 'boundaryElement'],
              rootElementSelector: ['cdkDragRootElement', 'rootElementSelector'],
              data: ['cdkDragData', 'data'],
              freeDragPosition: ['cdkDragFreeDragPosition', 'freeDragPosition'],
            },
            outputs: {
              started: 'cdkDragStarted',
              released: 'cdkDragReleased',
              ended: 'cdkDragEnded',
              entered: 'cdkDragEntered',
              exited: 'cdkDragExited',
              dropped: 'cdkDragDropped',
              moved: 'cdkDragMoved',
            },
            exportAs: ['cdkDrag'],
            features: [i.Hb([{ provide: Q, useExisting: t }]), i.Gb],
          })),
          t
        );
      })();
      function st(t, e) {
        let n = t.parentElement;
        for (; n; ) {
          if (n.matches ? n.matches(e) : n.msMatchesSelector(e)) return n;
          n = n.parentElement;
        }
        return null;
      }
      let ot = (() => {
          class t {
            constructor() {
              (this._items = new Set()), (this._disabled = !1);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              this._disabled = Object(a.c)(t);
            }
            ngOnDestroy() {
              this._items.clear();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'cdkDropListGroup', '']],
              inputs: { disabled: ['cdkDropListGroupDisabled', 'disabled'] },
              exportAs: ['cdkDropListGroup'],
            })),
            t
          );
        })(),
        at = 0,
        ct = (() => {
          class t {
            constructor(e, n, r, s, o, a, l) {
              (this.element = e),
                (this._changeDetectorRef = r),
                (this._dir = s),
                (this._group = o),
                (this._scrollDispatcher = a),
                (this._destroyed = new c.a()),
                (this.connectedTo = []),
                (this.id = `cdk-drop-list-${at++}`),
                (this.enterPredicate = () => !0),
                (this.dropped = new i.p()),
                (this.entered = new i.p()),
                (this.exited = new i.p()),
                (this.sorted = new i.p()),
                (this._unsortedItems = new Set()),
                (this._dropListRef = n.createDropList(e)),
                (this._dropListRef.data = this),
                l && this._assignDefaults(l),
                (this._dropListRef.enterPredicate = (t, e) => this.enterPredicate(t.data, e.data)),
                this._setupInputSyncSubscription(this._dropListRef),
                this._handleEvents(this._dropListRef),
                t._dropLists.push(this),
                o && o._items.add(this);
            }
            get disabled() {
              return this._disabled || (!!this._group && this._group.disabled);
            }
            set disabled(t) {
              this._dropListRef.disabled = this._disabled = Object(a.c)(t);
            }
            addItem(t) {
              this._unsortedItems.add(t), this._dropListRef.isDragging() && this._syncItemsWithRef();
            }
            removeItem(t) {
              this._unsortedItems.delete(t), this._dropListRef.isDragging() && this._syncItemsWithRef();
            }
            getSortedItems() {
              return Array.from(this._unsortedItems).sort((t, e) =>
                t._dragRef.getVisibleElement().compareDocumentPosition(e._dragRef.getVisibleElement()) &
                Node.DOCUMENT_POSITION_FOLLOWING
                  ? -1
                  : 1
              );
            }
            ngOnDestroy() {
              const e = t._dropLists.indexOf(this);
              e > -1 && t._dropLists.splice(e, 1),
                this._group && this._group._items.delete(this),
                this._unsortedItems.clear(),
                this._dropListRef.dispose(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            start() {
              this._dropListRef.start();
            }
            drop(t, e, n, i) {
              this._dropListRef.drop(t._dragRef, e, n._dropListRef, i, { x: 0, y: 0 });
            }
            enter(t, e, n) {
              this._dropListRef.enter(t._dragRef, e, n);
            }
            exit(t) {
              this._dropListRef.exit(t._dragRef);
            }
            getItemIndex(t) {
              return this._dropListRef.getItemIndex(t._dragRef);
            }
            _setupInputSyncSubscription(e) {
              this._dir &&
                this._dir.change
                  .pipe(Object(b.a)(this._dir.value), Object(f.a)(this._destroyed))
                  .subscribe((t) => e.withDirection(t)),
                e.beforeStarted.subscribe(() => {
                  const n = Object(a.b)(this.connectedTo).map((e) =>
                    'string' == typeof e ? t._dropLists.find((t) => t.id === e) : e
                  );
                  if (
                    (this._group &&
                      this._group._items.forEach((t) => {
                        -1 === n.indexOf(t) && n.push(t);
                      }),
                    !this._scrollableParentsResolved && this._scrollDispatcher)
                  ) {
                    const t = this._scrollDispatcher
                      .getAncestorScrollContainers(this.element)
                      .map((t) => t.getElementRef().nativeElement);
                    this._dropListRef.withScrollableParents(t), (this._scrollableParentsResolved = !0);
                  }
                  (e.disabled = this.disabled),
                    (e.lockAxis = this.lockAxis),
                    (e.sortingDisabled = Object(a.c)(this.sortingDisabled)),
                    (e.autoScrollDisabled = Object(a.c)(this.autoScrollDisabled)),
                    e
                      .connectedTo(n.filter((t) => t && t !== this).map((t) => t._dropListRef))
                      .withOrientation(this.orientation);
                });
            }
            _handleEvents(t) {
              t.beforeStarted.subscribe(() => {
                this._syncItemsWithRef(), this._changeDetectorRef.markForCheck();
              }),
                t.entered.subscribe((t) => {
                  this.entered.emit({ container: this, item: t.item.data, currentIndex: t.currentIndex });
                }),
                t.exited.subscribe((t) => {
                  this.exited.emit({ container: this, item: t.item.data }), this._changeDetectorRef.markForCheck();
                }),
                t.sorted.subscribe((t) => {
                  this.sorted.emit({
                    previousIndex: t.previousIndex,
                    currentIndex: t.currentIndex,
                    container: this,
                    item: t.item.data,
                  });
                }),
                t.dropped.subscribe((t) => {
                  this.dropped.emit({
                    previousIndex: t.previousIndex,
                    currentIndex: t.currentIndex,
                    previousContainer: t.previousContainer.data,
                    container: t.container.data,
                    item: t.item.data,
                    isPointerOverContainer: t.isPointerOverContainer,
                    distance: t.distance,
                  }),
                    this._changeDetectorRef.markForCheck();
                });
            }
            _assignDefaults(t) {
              const {
                lockAxis: e,
                draggingDisabled: n,
                sortingDisabled: i,
                listAutoScrollDisabled: r,
                listOrientation: s,
              } = t;
              (this.disabled = null != n && n),
                (this.sortingDisabled = null != i && i),
                (this.autoScrollDisabled = null != r && r),
                (this.orientation = s || 'vertical'),
                e && (this.lockAxis = e);
            }
            _syncItemsWithRef() {
              this._dropListRef.withItems(this.getSortedItems().map((t) => t._dragRef));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(Z), i.Vb(i.i), i.Vb(v.b, 8), i.Vb(ot, 12), i.Vb(s.c), i.Vb(nt, 8));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'cdkDropList', ''], ['cdk-drop-list']],
              hostAttrs: [1, 'cdk-drop-list'],
              hostVars: 7,
              hostBindings: function (t, e) {
                2 & t &&
                  (i.ec('id', e.id),
                  i.Mb('cdk-drop-list-disabled', e.disabled)('cdk-drop-list-dragging', e._dropListRef.isDragging())(
                    'cdk-drop-list-receiving',
                    e._dropListRef.isReceiving()
                  ));
              },
              inputs: {
                connectedTo: ['cdkDropListConnectedTo', 'connectedTo'],
                id: 'id',
                enterPredicate: ['cdkDropListEnterPredicate', 'enterPredicate'],
                disabled: ['cdkDropListDisabled', 'disabled'],
                sortingDisabled: ['cdkDropListSortingDisabled', 'sortingDisabled'],
                autoScrollDisabled: ['cdkDropListAutoScrollDisabled', 'autoScrollDisabled'],
                orientation: ['cdkDropListOrientation', 'orientation'],
                lockAxis: ['cdkDropListLockAxis', 'lockAxis'],
                data: ['cdkDropListData', 'data'],
              },
              outputs: {
                dropped: 'cdkDropListDropped',
                entered: 'cdkDropListEntered',
                exited: 'cdkDropListExited',
                sorted: 'cdkDropListSorted',
              },
              exportAs: ['cdkDropList'],
              features: [
                i.Hb([
                  { provide: ot, useValue: void 0 },
                  { provide: it, useExisting: t },
                ]),
              ],
            })),
            (t._dropLists = []),
            t
          );
        })(),
        lt = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [Z],
              imports: [s.b],
            })),
            t
          );
        })();
    },
    '5+tZ': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      });
      var i = n('ZUHj'),
        r = n('l7GE'),
        s = n('51Dv'),
        o = n('lJxs'),
        a = n('Cfvw');
      function c(t, e, n = Number.POSITIVE_INFINITY) {
        return 'function' == typeof e
          ? (i) => i.pipe(c((n, i) => Object(a.a)(t(n, i)).pipe(Object(o.a)((t, r) => e(n, t, i, r))), n))
          : ('number' == typeof e && (n = e), (e) => e.lift(new l(t, n)));
      }
      class l {
        constructor(t, e = Number.POSITIVE_INFINITY) {
          (this.project = t), (this.concurrent = e);
        }
        call(t, e) {
          return e.subscribe(new u(t, this.project, this.concurrent));
        }
      }
      class u extends r.a {
        constructor(t, e, n = Number.POSITIVE_INFINITY) {
          super(t),
            (this.project = e),
            (this.concurrent = n),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(t) {
          this.active < this.concurrent ? this._tryNext(t) : this.buffer.push(t);
        }
        _tryNext(t) {
          let e;
          const n = this.index++;
          try {
            e = this.project(t, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.active++, this._innerSub(e, t, n);
        }
        _innerSub(t, e, n) {
          const r = new s.a(this, e, n),
            o = this.destination;
          o.add(r);
          const a = Object(i.a)(this, t, void 0, void 0, r);
          a !== r && o.add(a);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active && 0 === this.buffer.length && this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(t, e, n, i, r) {
          this.destination.next(e);
        }
        notifyComplete(t) {
          const e = this.buffer;
          this.remove(t),
            this.active--,
            e.length > 0
              ? this._next(e.shift())
              : 0 === this.active && this.hasCompleted && this.destination.complete();
        }
      }
    },
    '51Dv': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('7o/Q');
      class r extends i.a {
        constructor(t, e, n) {
          super(), (this.parent = t), (this.outerValue = e), (this.outerIndex = n), (this.index = 0);
        }
        _next(t) {
          this.parent.notifyNext(this.outerValue, t, this.outerIndex, this.index++, this);
        }
        _error(t) {
          this.parent.notifyError(t, this), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(this), this.unsubscribe();
        }
      }
    },
    '5eHb': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return I;
      }),
        n.d(e, 'b', function () {
          return O;
        });
      var i = n('fXoL'),
        r = n('R0Ic'),
        s = n('XNiG'),
        o = n('jhN1'),
        a = n('ofXK');
      const c = ['toast-component', ''];
      function l(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'button', 5),
            i.jc('click', function () {
              return i.Dc(t), i.nc().remove();
            }),
            i.bc(1, 'span', 6),
            i.Mc(2, '\xd7'),
            i.ac(),
            i.ac();
        }
      }
      function u(t, e) {
        if ((1 & t && (i.Zb(0), i.Mc(1), i.Yb()), 2 & t)) {
          const t = i.nc(2);
          i.Ib(1), i.Oc('[', t.duplicatesCount + 1, ']');
        }
      }
      function h(t, e) {
        if ((1 & t && (i.bc(0, 'div'), i.Mc(1), i.Kc(2, u, 2, 1, 'ng-container', 4), i.ac()), 2 & t)) {
          const t = i.nc();
          i.Kb(t.options.titleClass),
            i.Jb('aria-label', t.title),
            i.Ib(1),
            i.Oc(' ', t.title, ' '),
            i.Ib(1),
            i.vc('ngIf', t.duplicatesCount);
        }
      }
      function d(t, e) {
        if ((1 & t && i.Wb(0, 'div', 7), 2 & t)) {
          const t = i.nc();
          i.Kb(t.options.messageClass), i.vc('innerHTML', t.message, i.Ec);
        }
      }
      function p(t, e) {
        if ((1 & t && (i.bc(0, 'div', 8), i.Mc(1), i.ac()), 2 & t)) {
          const t = i.nc();
          i.Kb(t.options.messageClass), i.Jb('aria-label', t.message), i.Ib(1), i.Oc(' ', t.message, ' ');
        }
      }
      function f(t, e) {
        if ((1 & t && (i.bc(0, 'div'), i.Wb(1, 'div', 9), i.ac()), 2 & t)) {
          const t = i.nc();
          i.Ib(1), i.Jc('width', t.width + '%');
        }
      }
      class m {
        constructor(t, e, n, i, r, o) {
          (this.toastId = t),
            (this.config = e),
            (this.message = n),
            (this.title = i),
            (this.toastType = r),
            (this.toastRef = o),
            (this._onTap = new s.a()),
            (this._onAction = new s.a()),
            this.toastRef.afterClosed().subscribe(() => {
              this._onAction.complete(), this._onTap.complete();
            });
        }
        triggerTap() {
          this._onTap.next(), this.config.tapToDismiss && this._onTap.complete();
        }
        onTap() {
          return this._onTap.asObservable();
        }
        triggerAction(t) {
          this._onAction.next(t);
        }
        onAction() {
          return this._onAction.asObservable();
        }
      }
      const g = {
          maxOpened: 0,
          autoDismiss: !1,
          newestOnTop: !0,
          preventDuplicates: !1,
          countDuplicates: !1,
          resetTimeoutOnDuplicate: !1,
          iconClasses: { error: 'toast-error', info: 'toast-info', success: 'toast-success', warning: 'toast-warning' },
          closeButton: !1,
          disableTimeOut: !1,
          timeOut: 5e3,
          extendedTimeOut: 1e3,
          enableHtml: !1,
          progressBar: !1,
          toastClass: 'ngx-toastr',
          positionClass: 'toast-top-right',
          titleClass: 'toast-title',
          messageClass: 'toast-message',
          easing: 'ease-in',
          easeTime: 300,
          tapToDismiss: !0,
          onActivateTick: !1,
          progressAnimation: 'decreasing',
        },
        b = new i.s('ToastConfig');
      class _ {
        constructor(t, e) {
          (this.component = t), (this.injector = e);
        }
        attach(t, e) {
          return (this._attachedHost = t), t.attach(this, e);
        }
        detach() {
          const t = this._attachedHost;
          if (t) return (this._attachedHost = void 0), t.detach();
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class y extends class {
        attach(t, e) {
          return (this._attachedPortal = t), this.attachComponentPortal(t, e);
        }
        detach() {
          this._attachedPortal && this._attachedPortal.setAttachedHost(),
            (this._attachedPortal = void 0),
            this._disposeFn && (this._disposeFn(), (this._disposeFn = void 0));
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
      } {
        constructor(t, e, n) {
          super(), (this._hostDomElement = t), (this._componentFactoryResolver = e), (this._appRef = n);
        }
        attachComponentPortal(t, e) {
          const n = this._componentFactoryResolver.resolveComponentFactory(t.component);
          let i;
          return (
            (i = n.create(t.injector)),
            this._appRef.attachView(i.hostView),
            this.setDisposeFn(() => {
              this._appRef.detachView(i.hostView), i.destroy();
            }),
            e
              ? this._hostDomElement.insertBefore(this._getComponentRootNode(i), this._hostDomElement.firstChild)
              : this._hostDomElement.appendChild(this._getComponentRootNode(i)),
            i
          );
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let v = (() => {
        let t = class {
          constructor(t) {
            this._document = t;
          }
          ngOnDestroy() {
            this._containerElement &&
              this._containerElement.parentNode &&
              this._containerElement.parentNode.removeChild(this._containerElement);
          }
          getContainerElement() {
            return this._containerElement || this._createContainer(), this._containerElement;
          }
          _createContainer() {
            const t = this._document.createElement('div');
            t.classList.add('overlay-container'), this._document.body.appendChild(t), (this._containerElement = t);
          }
        };
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(a.d));
          }),
          (t.ɵprov = Object(i.Rb)({
            factory: function () {
              return new t(Object(i.fc)(a.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class w {
        constructor(t) {
          this._portalHost = t;
        }
        attach(t, e = !0) {
          return this._portalHost.attach(t, e);
        }
        detach() {
          return this._portalHost.detach();
        }
      }
      let x = (() => {
        let t = class {
          constructor(t, e, n, i) {
            (this._overlayContainer = t),
              (this._componentFactoryResolver = e),
              (this._appRef = n),
              (this._document = i),
              (this._paneElements = new Map());
          }
          create(t, e) {
            return this._createOverlayRef(this.getPaneElement(t, e));
          }
          getPaneElement(t = '', e) {
            return (
              this._paneElements.get(e) || this._paneElements.set(e, {}),
              this._paneElements.get(e)[t] || (this._paneElements.get(e)[t] = this._createPaneElement(t, e)),
              this._paneElements.get(e)[t]
            );
          }
          _createPaneElement(t, e) {
            const n = this._document.createElement('div');
            return (
              (n.id = 'toast-container'),
              n.classList.add(t),
              n.classList.add('toast-container'),
              e ? e.getContainerElement().appendChild(n) : this._overlayContainer.getContainerElement().appendChild(n),
              n
            );
          }
          _createPortalHost(t) {
            return new y(t, this._componentFactoryResolver, this._appRef);
          }
          _createOverlayRef(t) {
            return new w(this._createPortalHost(t));
          }
        };
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(v), i.fc(i.k), i.fc(i.g), i.fc(a.d));
          }),
          (t.ɵprov = Object(i.Rb)({
            factory: function () {
              return new t(Object(i.fc)(v), Object(i.fc)(i.k), Object(i.fc)(i.g), Object(i.fc)(a.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class C {
        constructor(t) {
          (this._overlayRef = t),
            (this.duplicatesCount = 0),
            (this._afterClosed = new s.a()),
            (this._activate = new s.a()),
            (this._manualClose = new s.a()),
            (this._resetTimeout = new s.a()),
            (this._countDuplicate = new s.a());
        }
        manualClose() {
          this._manualClose.next(), this._manualClose.complete();
        }
        manualClosed() {
          return this._manualClose.asObservable();
        }
        timeoutReset() {
          return this._resetTimeout.asObservable();
        }
        countDuplicate() {
          return this._countDuplicate.asObservable();
        }
        close() {
          this._overlayRef.detach(),
            this._afterClosed.next(),
            this._manualClose.next(),
            this._afterClosed.complete(),
            this._manualClose.complete(),
            this._activate.complete(),
            this._resetTimeout.complete(),
            this._countDuplicate.complete();
        }
        afterClosed() {
          return this._afterClosed.asObservable();
        }
        isInactive() {
          return this._activate.isStopped;
        }
        activate() {
          this._activate.next(), this._activate.complete();
        }
        afterActivate() {
          return this._activate.asObservable();
        }
        onDuplicate(t, e) {
          t && this._resetTimeout.next(), e && this._countDuplicate.next(++this.duplicatesCount);
        }
      }
      class k {
        constructor(t, e) {
          (this._toastPackage = t), (this._parentInjector = e);
        }
        get(t, e, n) {
          return t === m ? this._toastPackage : this._parentInjector.get(t, e, n);
        }
      }
      let O = (() => {
          let t = class {
            constructor(t, e, n, i, r) {
              (this.overlay = e),
                (this._injector = n),
                (this.sanitizer = i),
                (this.ngZone = r),
                (this.currentlyActive = 0),
                (this.toasts = []),
                (this.index = 0),
                (this.toastrConfig = Object.assign(Object.assign({}, t.default), t.config)),
                t.config.iconClasses &&
                  (this.toastrConfig.iconClasses = Object.assign(
                    Object.assign({}, t.default.iconClasses),
                    t.config.iconClasses
                  ));
            }
            show(t, e, n = {}, i = '') {
              return this._preBuildNotification(i, t, e, this.applyConfig(n));
            }
            success(t, e, n = {}) {
              return this._preBuildNotification(this.toastrConfig.iconClasses.success || '', t, e, this.applyConfig(n));
            }
            error(t, e, n = {}) {
              return this._preBuildNotification(this.toastrConfig.iconClasses.error || '', t, e, this.applyConfig(n));
            }
            info(t, e, n = {}) {
              return this._preBuildNotification(this.toastrConfig.iconClasses.info || '', t, e, this.applyConfig(n));
            }
            warning(t, e, n = {}) {
              return this._preBuildNotification(this.toastrConfig.iconClasses.warning || '', t, e, this.applyConfig(n));
            }
            clear(t) {
              for (const e of this.toasts)
                if (void 0 !== t) {
                  if (e.toastId === t) return void e.toastRef.manualClose();
                } else e.toastRef.manualClose();
            }
            remove(t) {
              const e = this._findToast(t);
              if (!e) return !1;
              if (
                (e.activeToast.toastRef.close(),
                this.toasts.splice(e.index, 1),
                (this.currentlyActive = this.currentlyActive - 1),
                !this.toastrConfig.maxOpened || !this.toasts.length)
              )
                return !1;
              if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {
                const t = this.toasts[this.currentlyActive].toastRef;
                t.isInactive() || ((this.currentlyActive = this.currentlyActive + 1), t.activate());
              }
              return !0;
            }
            findDuplicate(t, e, n) {
              for (const i of this.toasts) if (i.message === t) return i.toastRef.onDuplicate(e, n), i;
              return null;
            }
            applyConfig(t = {}) {
              return Object.assign(Object.assign({}, this.toastrConfig), t);
            }
            _findToast(t) {
              for (let e = 0; e < this.toasts.length; e++)
                if (this.toasts[e].toastId === t) return { index: e, activeToast: this.toasts[e] };
              return null;
            }
            _preBuildNotification(t, e, n, i) {
              return i.onActivateTick
                ? this.ngZone.run(() => this._buildNotification(t, e, n, i))
                : this._buildNotification(t, e, n, i);
            }
            _buildNotification(t, e, n, r) {
              if (!r.toastComponent) throw new Error('toastComponent required');
              const s = this.findDuplicate(
                e,
                this.toastrConfig.resetTimeoutOnDuplicate && r.timeOut > 0,
                this.toastrConfig.countDuplicates
              );
              if (e && this.toastrConfig.preventDuplicates && null !== s) return s;
              this.previousToastMessage = e;
              let o = !1;
              this.toastrConfig.maxOpened &&
                this.currentlyActive >= this.toastrConfig.maxOpened &&
                ((o = !0), this.toastrConfig.autoDismiss && this.clear(this.toasts[0].toastId));
              const a = this.overlay.create(r.positionClass, this.overlayContainer);
              this.index = this.index + 1;
              let c = e;
              e && r.enableHtml && (c = this.sanitizer.sanitize(i.K.HTML, e));
              const l = new C(a),
                u = new m(this.index, r, c, n, t, l),
                h = new k(u, this._injector),
                d = new _(r.toastComponent, h),
                p = a.attach(d, this.toastrConfig.newestOnTop);
              l.componentInstance = p.instance;
              const f = {
                toastId: this.index,
                message: e || '',
                toastRef: l,
                onShown: l.afterActivate(),
                onHidden: l.afterClosed(),
                onTap: u.onTap(),
                onAction: u.onAction(),
                portal: p,
              };
              return (
                o ||
                  ((this.currentlyActive = this.currentlyActive + 1),
                  setTimeout(() => {
                    f.toastRef.activate();
                  })),
                this.toasts.push(f),
                f
              );
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(b), i.fc(x), i.fc(i.t), i.fc(o.b), i.fc(i.B));
            }),
            (t.ɵprov = Object(i.Rb)({
              factory: function () {
                return new t(Object(i.fc)(b), Object(i.fc)(x), Object(i.fc)(i.q), Object(i.fc)(o.b), Object(i.fc)(i.B));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        S = (() => {
          let t = class {
            constructor(t, e, n) {
              (this.toastrService = t),
                (this.toastPackage = e),
                (this.ngZone = n),
                (this.width = -1),
                (this.toastClasses = ''),
                (this.state = {
                  value: 'inactive',
                  params: { easeTime: this.toastPackage.config.easeTime, easing: 'ease-in' },
                }),
                (this.message = e.message),
                (this.title = e.title),
                (this.options = e.config),
                (this.originalTimeout = e.config.timeOut),
                (this.toastClasses = `${e.toastType} ${e.config.toastClass}`),
                (this.sub = e.toastRef.afterActivate().subscribe(() => {
                  this.activateToast();
                })),
                (this.sub1 = e.toastRef.manualClosed().subscribe(() => {
                  this.remove();
                })),
                (this.sub2 = e.toastRef.timeoutReset().subscribe(() => {
                  this.resetTimeout();
                })),
                (this.sub3 = e.toastRef.countDuplicate().subscribe((t) => {
                  this.duplicatesCount = t;
                }));
            }
            get displayStyle() {
              if ('inactive' === this.state.value) return 'none';
            }
            ngOnDestroy() {
              this.sub.unsubscribe(),
                this.sub1.unsubscribe(),
                this.sub2.unsubscribe(),
                this.sub3.unsubscribe(),
                clearInterval(this.intervalId),
                clearTimeout(this.timeout);
            }
            activateToast() {
              (this.state = Object.assign(Object.assign({}, this.state), { value: 'active' })),
                !0 !== this.options.disableTimeOut &&
                  'timeOut' !== this.options.disableTimeOut &&
                  this.options.timeOut &&
                  (this.outsideTimeout(() => this.remove(), this.options.timeOut),
                  (this.hideTime = new Date().getTime() + this.options.timeOut),
                  this.options.progressBar && this.outsideInterval(() => this.updateProgress(), 10));
            }
            updateProgress() {
              if (0 === this.width || 100 === this.width || !this.options.timeOut) return;
              const t = new Date().getTime();
              (this.width = ((this.hideTime - t) / this.options.timeOut) * 100),
                'increasing' === this.options.progressAnimation && (this.width = 100 - this.width),
                this.width <= 0 && (this.width = 0),
                this.width >= 100 && (this.width = 100);
            }
            resetTimeout() {
              clearTimeout(this.timeout),
                clearInterval(this.intervalId),
                (this.state = Object.assign(Object.assign({}, this.state), { value: 'active' })),
                this.outsideTimeout(() => this.remove(), this.originalTimeout),
                (this.options.timeOut = this.originalTimeout),
                (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
                (this.width = -1),
                this.options.progressBar && this.outsideInterval(() => this.updateProgress(), 10);
            }
            remove() {
              'removed' !== this.state.value &&
                (clearTimeout(this.timeout),
                (this.state = Object.assign(Object.assign({}, this.state), { value: 'removed' })),
                this.outsideTimeout(
                  () => this.toastrService.remove(this.toastPackage.toastId),
                  +this.toastPackage.config.easeTime
                ));
            }
            tapToast() {
              'removed' !== this.state.value &&
                (this.toastPackage.triggerTap(), this.options.tapToDismiss && this.remove());
            }
            stickAround() {
              'removed' !== this.state.value &&
                (clearTimeout(this.timeout),
                (this.options.timeOut = 0),
                (this.hideTime = 0),
                clearInterval(this.intervalId),
                (this.width = 0));
            }
            delayedHideToast() {
              !0 !== this.options.disableTimeOut &&
                'extendedTimeOut' !== this.options.disableTimeOut &&
                0 !== this.options.extendedTimeOut &&
                'removed' !== this.state.value &&
                (this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut),
                (this.options.timeOut = this.options.extendedTimeOut),
                (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
                (this.width = -1),
                this.options.progressBar && this.outsideInterval(() => this.updateProgress(), 10));
            }
            outsideTimeout(t, e) {
              this.ngZone
                ? this.ngZone.runOutsideAngular(() => (this.timeout = setTimeout(() => this.runInsideAngular(t), e)))
                : (this.timeout = setTimeout(() => t(), e));
            }
            outsideInterval(t, e) {
              this.ngZone
                ? this.ngZone.runOutsideAngular(
                    () => (this.intervalId = setInterval(() => this.runInsideAngular(t), e))
                  )
                : (this.intervalId = setInterval(() => t(), e));
            }
            runInsideAngular(t) {
              this.ngZone ? this.ngZone.run(() => t()) : t();
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(O), i.Vb(m), i.Vb(i.B));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['', 'toast-component', '']],
              hostVars: 5,
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('click', function () {
                    return e.tapToast();
                  })('mouseenter', function () {
                    return e.stickAround();
                  })('mouseleave', function () {
                    return e.delayedHideToast();
                  }),
                  2 & t && (i.Qc('@flyInOut', e.state), i.Kb(e.toastClasses), i.Jc('display', e.displayStyle));
              },
              attrs: c,
              decls: 5,
              vars: 5,
              consts: [
                ['class', 'toast-close-button', 'aria-label', 'Close', 3, 'click', 4, 'ngIf'],
                [3, 'class', 4, 'ngIf'],
                ['role', 'alertdialog', 'aria-live', 'polite', 3, 'class', 'innerHTML', 4, 'ngIf'],
                ['role', 'alertdialog', 'aria-live', 'polite', 3, 'class', 4, 'ngIf'],
                [4, 'ngIf'],
                ['aria-label', 'Close', 1, 'toast-close-button', 3, 'click'],
                ['aria-hidden', 'true'],
                ['role', 'alertdialog', 'aria-live', 'polite', 3, 'innerHTML'],
                ['role', 'alertdialog', 'aria-live', 'polite'],
                [1, 'toast-progress'],
              ],
              template: function (t, e) {
                1 & t &&
                  (i.Kc(0, l, 3, 0, 'button', 0),
                  i.Kc(1, h, 3, 5, 'div', 1),
                  i.Kc(2, d, 1, 3, 'div', 2),
                  i.Kc(3, p, 2, 4, 'div', 3),
                  i.Kc(4, f, 2, 2, 'div', 4)),
                  2 & t &&
                    (i.vc('ngIf', e.options.closeButton),
                    i.Ib(1),
                    i.vc('ngIf', e.title),
                    i.Ib(1),
                    i.vc('ngIf', e.message && e.options.enableHtml),
                    i.Ib(1),
                    i.vc('ngIf', e.message && !e.options.enableHtml),
                    i.Ib(1),
                    i.vc('ngIf', e.options.progressBar));
              },
              directives: [a.l],
              encapsulation: 2,
              data: {
                animation: [
                  Object(r.m)('flyInOut', [
                    Object(r.j)('inactive', Object(r.k)({ opacity: 0 })),
                    Object(r.j)('active', Object(r.k)({ opacity: 1 })),
                    Object(r.j)('removed', Object(r.k)({ opacity: 0 })),
                    Object(r.l)('inactive => active', Object(r.e)('{{ easeTime }}ms {{ easing }}')),
                    Object(r.l)('active => removed', Object(r.e)('{{ easeTime }}ms {{ easing }}')),
                  ]),
                ],
              },
            })),
            t
          );
        })();
      var E;
      const T = Object.assign(Object.assign({}, g), { toastComponent: S });
      let I = (() => {
        let t = (E = class {
          static forRoot(t = {}) {
            return { ngModule: E, providers: [{ provide: b, useValue: { default: T, config: t } }] };
          }
        });
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [[a.c]],
          })),
          t
        );
      })();
    },
    '6MUB': function (t, e, n) {
      'use strict';
      var i = function (t) {
        switch (typeof t) {
          case 'string':
            return t;
          case 'boolean':
            return t ? 'true' : 'false';
          case 'number':
            return isFinite(t) ? t : '';
          default:
            return '';
        }
      };
      t.exports = function (t, e, n, r) {
        return (
          (e = e || '&'),
          (n = n || '='),
          null === t && (t = void 0),
          'object' == typeof t
            ? Object.keys(t)
                .map(function (r) {
                  var s = encodeURIComponent(i(r)) + n;
                  return Array.isArray(t[r])
                    ? t[r]
                        .map(function (t) {
                          return s + encodeURIComponent(i(t));
                        })
                        .join(e)
                    : s + encodeURIComponent(i(t[r]));
                })
                .join(e)
            : r
            ? encodeURIComponent(i(r)) + n + encodeURIComponent(i(t))
            : ''
        );
      };
    },
    '7+OI': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('HDdC');
      function r(t) {
        return !!t && (t instanceof i.a || ('function' == typeof t.lift && 'function' == typeof t.subscribe));
      }
    },
    '71bx': function (t, e, n) {
      'use strict';
      function i(t, e, n) {
        return (null == e ? void 0 : e[t]) > (null == n ? void 0 : n[t])
          ? 1
          : (null == e ? void 0 : e[t]) < (null == n ? void 0 : n[t])
          ? -1
          : 0;
      }
      function r(t, e, n) {
        return (null == e ? void 0 : e[t]) > (null == n ? void 0 : n[t])
          ? -1
          : (null == e ? void 0 : e[t]) < (null == n ? void 0 : n[t])
          ? 1
          : 0;
      }
      function s(t) {
        return null != t ? t : { ids: [], entities: {} };
      }
      n.d(e, 'a', function () {
        return s;
      }),
        n.d(e, 'b', function () {
          return i;
        }),
        n.d(e, 'c', function () {
          return r;
        }),
        n('ofXK'),
        n('fXoL');
    },
    '7Hc7': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return d;
      });
      let i = 1;
      const r = (() => Promise.resolve())(),
        s = {};
      function o(t) {
        return t in s && (delete s[t], !0);
      }
      const a = {
        setImmediate(t) {
          const e = i++;
          return (s[e] = !0), r.then(() => o(e) && t()), e;
        },
        clearImmediate(t) {
          o(t);
        },
      };
      var c = n('3N8a');
      class l extends c.a {
        constructor(t, e) {
          super(t, e), (this.scheduler = t), (this.work = e);
        }
        requestAsyncId(t, e, n = 0) {
          return null !== n && n > 0
            ? super.requestAsyncId(t, e, n)
            : (t.actions.push(this), t.scheduled || (t.scheduled = a.setImmediate(t.flush.bind(t, null))));
        }
        recycleAsyncId(t, e, n = 0) {
          if ((null !== n && n > 0) || (null === n && this.delay > 0)) return super.recycleAsyncId(t, e, n);
          0 === t.actions.length && (a.clearImmediate(e), (t.scheduled = void 0));
        }
      }
      var u = n('IjjT');
      class h extends u.a {
        flush(t) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: e } = this;
          let n,
            i = -1,
            r = e.length;
          t = t || e.shift();
          do {
            if ((n = t.execute(t.state, t.delay))) break;
          } while (++i < r && (t = e.shift()));
          if (((this.active = !1), n)) {
            for (; ++i < r && (t = e.shift()); ) t.unsubscribe();
            throw n;
          }
        }
      }
      const d = new h(l);
    },
    '7ZcW': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      }),
        n.d(e, 'b', function () {
          return p;
        }),
        n.d(e, 'c', function () {
          return f;
        });
      var i = n('fXoL'),
        r = n('u47x'),
        s = n('FKr1'),
        o = n('kmnG'),
        a = n('8LU1'),
        c = n('3Pt+');
      class l {
        constructor(t, e = ', ') {
          (this._files = t), (this.delimiter = e), (this._fileNames = (this._files || []).map((t) => t.name).join(e));
        }
        get files() {
          return this._files || [];
        }
        get fileNames() {
          return this._fileNames;
        }
      }
      class u {
        constructor(t, e, n, i) {
          (this._defaultErrorStateMatcher = t),
            (this._parentForm = e),
            (this._parentFormGroup = n),
            (this.ngControl = i);
        }
      }
      const h = Object(s.y)(u);
      var d;
      let p = (() => {
          let t = (d = class extends h {
            constructor(t, e, n, i, r, s, o) {
              super(i, s, o, r),
                (this.fm = t),
                (this._elementRef = e),
                (this._renderer = n),
                (this._defaultErrorStateMatcher = i),
                (this.ngControl = r),
                (this._parentForm = s),
                (this._parentFormGroup = o),
                (this.focused = !1),
                (this.controlType = 'file-input'),
                (this.autofilled = !1),
                (this._required = !1),
                (this.accept = null),
                (this.id = `ngx-mat-file-input-${d.nextId++}`),
                (this.describedBy = ''),
                (this._onChange = (t) => {}),
                (this._onTouched = () => {}),
                null != this.ngControl && (this.ngControl.valueAccessor = this),
                t.monitor(e.nativeElement, !0).subscribe((t) => {
                  (this.focused = !!t), this.stateChanges.next();
                });
            }
            setDescribedByIds(t) {
              this.describedBy = t.join(' ');
            }
            get value() {
              return this.empty ? null : new l(this._elementRef.nativeElement.value || []);
            }
            set value(t) {
              t && (this.writeValue(t), this.stateChanges.next());
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(t) {
              (this._placeholder = t), this.stateChanges.next();
            }
            get empty() {
              return !this._elementRef.nativeElement.value || 0 === this._elementRef.nativeElement.value.length;
            }
            get shouldLabelFloat() {
              return this.focused || !this.empty || void 0 !== this.valuePlaceholder;
            }
            get required() {
              return this._required;
            }
            set required(t) {
              (this._required = Object(a.c)(t)), this.stateChanges.next();
            }
            get isDisabled() {
              return this.disabled;
            }
            get disabled() {
              return this._elementRef.nativeElement.disabled;
            }
            set disabled(t) {
              this.setDisabledState(Object(a.c)(t)), this.stateChanges.next();
            }
            onContainerClick(t) {
              'input' === t.target.tagName.toLowerCase() ||
                this.disabled ||
                (this._elementRef.nativeElement.querySelector('input').focus(), (this.focused = !0), this.open());
            }
            get fileNames() {
              return this.value ? this.value.fileNames : this.valuePlaceholder;
            }
            writeValue(t) {
              this._renderer.setProperty(this._elementRef.nativeElement, 'value', t instanceof l ? t.files : null);
            }
            registerOnChange(t) {
              this._onChange = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            clear(t) {
              t && (t.preventDefault(), t.stopPropagation()),
                (this.value = new l([])),
                (this._elementRef.nativeElement.querySelector('input').value = null),
                this._onChange(this.value);
            }
            change(t) {
              const e = t.target.files,
                n = [];
              if (e) for (let i = 0; i < e.length; i++) n.push(e[i]);
              (this.value = new l(n)), this._onChange(this.value);
            }
            blur() {
              (this.focused = !1), this._onTouched();
            }
            setDisabledState(t) {
              this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
            }
            ngOnInit() {
              this.multiple = Object(a.c)(this.multiple);
            }
            open() {
              this.disabled || this._elementRef.nativeElement.querySelector('input').click();
            }
            ngOnDestroy() {
              this.stateChanges.complete(), this.fm.stopMonitoring(this._elementRef.nativeElement);
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState();
            }
          });
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                i.Vb(r.g),
                i.Vb(i.m),
                i.Vb(i.G),
                i.Vb(s.b),
                i.Vb(c.m, 10),
                i.Vb(c.p, 8),
                i.Vb(c.h, 8)
              );
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-mat-file-input']],
              hostVars: 6,
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('change', function (t) {
                    return e.change(t);
                  })('focusout', function () {
                    return e.blur();
                  }),
                  2 & t &&
                    (i.ec('id', e.id),
                    i.Jb('aria-describedby', e.describedBy),
                    i.Mb('mat-form-field-should-float', e.shouldLabelFloat)('file-input-disabled', e.isDisabled));
              },
              inputs: {
                autofilled: 'autofilled',
                accept: 'accept',
                value: 'value',
                placeholder: 'placeholder',
                required: 'required',
                disabled: 'disabled',
                multiple: 'multiple',
                valuePlaceholder: 'valuePlaceholder',
                errorStateMatcher: 'errorStateMatcher',
              },
              features: [i.Hb([{ provide: o.e, useExisting: d }]), i.Fb],
              decls: 4,
              vars: 4,
              consts: [
                ['type', 'file'],
                ['input', ''],
                [1, 'filename', 3, 'title'],
              ],
              template: function (t, e) {
                1 & t && (i.Wb(0, 'input', 0, 1), i.bc(2, 'span', 2), i.Mc(3), i.ac()),
                  2 & t &&
                    (i.Jb('multiple', e.multiple ? '' : null)('accept', e.accept),
                    i.Ib(2),
                    i.vc('title', e.fileNames),
                    i.Ib(1),
                    i.Nc(e.fileNames));
              },
              styles: [
                '[_nghost-%COMP%]{display:inline-block;width:100%}[_nghost-%COMP%]:not(.file-input-disabled){cursor:pointer}input[_ngcontent-%COMP%]{width:0;height:0;opacity:0;overflow:hidden;position:absolute;z-index:-1}.filename[_ngcontent-%COMP%]{display:inline-block;text-overflow:ellipsis;overflow:hidden;width:100%}',
              ],
            })),
            (t.nextId = 0),
            t
          );
        })(),
        f = (() => {
          let t = class {};
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [r.g],
            })),
            t
          );
        })();
      var m;
      !(function (t) {
        t.maxContentSize = function (t) {
          return (e) => {
            const n = e && e.value ? e.value.files.map((t) => t.size).reduce((t, e) => t + e, 0) : 0;
            return t >= n ? null : { maxContentSize: { actualSize: n, maxSize: t } };
          };
        };
      })(m || (m = {}));
    },
    '7o/Q': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('n6bG'),
        r = n('gRHU'),
        s = n('quSY'),
        o = n('2QA8'),
        a = n('2fFW'),
        c = n('NJ4a');
      class l extends s.a {
        constructor(t, e, n) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = r.a;
              break;
            case 1:
              if (!t) {
                this.destination = r.a;
                break;
              }
              if ('object' == typeof t) {
                t instanceof l
                  ? ((this.syncErrorThrowable = t.syncErrorThrowable), (this.destination = t), t.add(this))
                  : ((this.syncErrorThrowable = !0), (this.destination = new u(this, t)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0), (this.destination = new u(this, t, e, n));
          }
        }
        [o.a]() {
          return this;
        }
        static create(t, e, n) {
          const i = new l(t, e, n);
          return (i.syncErrorThrowable = !1), i;
        }
        next(t) {
          this.isStopped || this._next(t);
        }
        error(t) {
          this.isStopped || ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          this.destination.error(t), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: t } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = t),
            this
          );
        }
      }
      class u extends l {
        constructor(t, e, n, s) {
          let o;
          super(), (this._parentSubscriber = t);
          let a = this;
          Object(i.a)(e)
            ? (o = e)
            : e &&
              ((o = e.next),
              (n = e.error),
              (s = e.complete),
              e !== r.a &&
                ((a = Object.create(e)),
                Object(i.a)(a.unsubscribe) && this.add(a.unsubscribe.bind(a)),
                (a.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = a),
            (this._next = o),
            (this._error = n),
            (this._complete = s);
        }
        next(t) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: e } = this;
            a.a.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable
              ? this.__tryOrSetError(e, this._next, t) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, t);
          }
        }
        error(t) {
          if (!this.isStopped) {
            const { _parentSubscriber: e } = this,
              { useDeprecatedSynchronousErrorHandling: n } = a.a;
            if (this._error)
              n && e.syncErrorThrowable
                ? (this.__tryOrSetError(e, this._error, t), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, t), this.unsubscribe());
            else if (e.syncErrorThrowable)
              n ? ((e.syncErrorValue = t), (e.syncErrorThrown = !0)) : Object(c.a)(t), this.unsubscribe();
            else {
              if ((this.unsubscribe(), n)) throw t;
              Object(c.a)(t);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: t } = this;
            if (this._complete) {
              const e = () => this._complete.call(this._context);
              a.a.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable
                ? (this.__tryOrSetError(t, e), this.unsubscribe())
                : (this.__tryOrUnsub(e), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(t, e) {
          try {
            t.call(this._context, e);
          } catch (n) {
            if ((this.unsubscribe(), a.a.useDeprecatedSynchronousErrorHandling)) throw n;
            Object(c.a)(n);
          }
        }
        __tryOrSetError(t, e, n) {
          if (!a.a.useDeprecatedSynchronousErrorHandling) throw new Error('bad call');
          try {
            e.call(this._context, n);
          } catch (i) {
            return a.a.useDeprecatedSynchronousErrorHandling
              ? ((t.syncErrorValue = i), (t.syncErrorThrown = !0), !0)
              : (Object(c.a)(i), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: t } = this;
          (this._context = null), (this._parentSubscriber = null), t.unsubscribe();
        }
      }
    },
    '81e5': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('0FS3'),
        r = n('fXoL'),
        s = n('3Pt+');
      let o = (() => {
        class t extends i.c {}
        return (
          (t.ɵfac = function (e) {
            return a(e || t);
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['app-formly-game-input']],
            features: [r.Fb],
            decls: 4,
            vars: 3,
            consts: [
              [1, 'game-input'],
              [3, 'formControl', 'formlyAttributes'],
            ],
            template: function (t, e) {
              1 & t && (r.bc(0, 'div', 0), r.bc(1, 'label'), r.Mc(2), r.ac(), r.Wb(3, 'input', 1), r.ac()),
                2 & t &&
                  (r.Ib(2), r.Nc(e.to.label), r.Ib(1), r.vc('formControl', e.formControl)('formlyAttributes', e.field));
            },
            directives: [s.c, s.n, s.f, i.e],
            styles: [
              '.game-input[_ngcontent-%COMP%]{width:100%;text-align:left;margin-bottom:15px}.game-input[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:5px;color:#fff}.game-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;border-radius:4px;border:none;box-shadow:none;background-color:#fff;padding:15px 5px;outline:none;box-shadow:0 1px 2px rgba(0,0,0,.39),0 -1px 1px #fff,0 1px 0 #fff}',
            ],
          })),
          t
        );
      })();
      const a = r.dc(o);
    },
    '8LU1': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      }),
        n.d(e, 'b', function () {
          return a;
        }),
        n.d(e, 'c', function () {
          return r;
        }),
        n.d(e, 'd', function () {
          return c;
        }),
        n.d(e, 'e', function () {
          return l;
        }),
        n.d(e, 'f', function () {
          return s;
        });
      var i = n('fXoL');
      function r(t) {
        return null != t && 'false' !== `${t}`;
      }
      function s(t, e = 0) {
        return o(t) ? Number(t) : e;
      }
      function o(t) {
        return !isNaN(parseFloat(t)) && !isNaN(Number(t));
      }
      function a(t) {
        return Array.isArray(t) ? t : [t];
      }
      function c(t) {
        return null == t ? '' : 'string' == typeof t ? t : `${t}px`;
      }
      function l(t) {
        return t instanceof i.m ? t.nativeElement : t;
      }
    },
    '9ppp': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => {
        function t() {
          return (
            Error.call(this), (this.message = 'object unsubscribed'), (this.name = 'ObjectUnsubscribedError'), this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
    },
    A7QW: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('jETI');
      const r = Object(i.a)({
        QUESTS: { path: 'quests', fullPath: '//admin/quests', inNav: !0, icon: 'search', title: 'QUESTS' },
        QUEST: { path: 'quests/:id', fullPath: '//admin/quests/:id' },
        QUEST_ROUND: { path: 'quests/:gameId/rounds/:roundId', fullPath: '//admin/quests/:gameId/rounds/:roundId' },
        QUIZZES: { path: 'quizzes', fullPath: '//admin/quizzes', inNav: !0, icon: 'question_answer', title: 'QUIZZES' },
        QUIZ: { path: 'quizzes/:id', fullPath: '//admin/quizzes/:id' },
        QUIZ_ROUND: { path: 'quizzes/:gameId/rounds/:roundId', fullPath: '//admin/quizzes/:gameId/rounds/:roundId' },
        QUIZ_PLAYER: {
          path: 'quizzes/:gameId/players/:playerId',
          fullPath: '//admin/quizzes/:gameId/players/:playerId',
        },
      });
    },
    AcyG: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return St;
      }),
        n.d(e, 'b', function () {
          return U;
        }),
        n.d(e, 'c', function () {
          return Dt;
        }),
        n.d(e, 'd', function () {
          return jt;
        }),
        n.d(e, 'e', function () {
          return kt;
        }),
        n.d(e, 'f', function () {
          return Et;
        }),
        n.d(e, 'g', function () {
          return Z;
        }),
        n.d(e, 'h', function () {
          return Y;
        }),
        n.d(e, 'i', function () {
          return J;
        }),
        n.d(e, 'j', function () {
          return Q;
        });
      var i = n('fXoL'),
        r = n('z5Zb'),
        s = n('ofXK'),
        o = n('HDdC'),
        a = n('XNiG'),
        c = n('2Vo4'),
        l = n('LRne'),
        u = n('cp0P'),
        h = n('z6cu'),
        d = n('EY2u'),
        p = n('Cfvw'),
        f = n('jtHE'),
        m = n('pLZG'),
        g = n('lJxs'),
        b = n('UXun'),
        _ = n('IzEk'),
        y = n('l7GE'),
        v = n('51Dv'),
        w = n('ZUHj');
      class x {
        constructor(t) {
          this.project = t;
        }
        call(t, e) {
          return e.subscribe(new C(t, this.project));
        }
      }
      class C extends y.a {
        constructor(t, e) {
          super(t), (this.project = e), (this.hasSubscription = !1), (this.hasCompleted = !1), (this.index = 0);
        }
        _next(t) {
          this.hasSubscription || this.tryNext(t);
        }
        tryNext(t) {
          let e;
          const n = this.index++;
          try {
            e = this.project(t, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          (this.hasSubscription = !0), this._innerSub(e, t, n);
        }
        _innerSub(t, e, n) {
          const i = new v.a(this, e, n),
            r = this.destination;
          r.add(i);
          const s = Object(w.a)(this, t, void 0, void 0, i);
          s !== i && r.add(s);
        }
        _complete() {
          (this.hasCompleted = !0), this.hasSubscription || this.destination.complete(), this.unsubscribe();
        }
        notifyNext(t, e, n, i, r) {
          this.destination.next(e);
        }
        notifyError(t) {
          this.destination.error(t);
        }
        notifyComplete(t) {
          this.destination.remove(t), (this.hasSubscription = !1), this.hasCompleted && this.destination.complete();
        }
      }
      var k = n('5+tZ'),
        O = n('xbPD'),
        S = n('JIr8'),
        E = n('1G5W'),
        T = n('vkgz'),
        I = n('/uUt');
      const A = (t) => `${t} is not a valid state name. It needs to be a valid object property name.`,
        D = () => "States must register a 'name' property",
        j = (t, e, n) => `State name '${t}' from ${e} already exists in ${n}`,
        R = () => 'States must be decorated with @State() decorator',
        P = () =>
          'Angular is running in production mode but NGXS is still running in the development mode!\nPlease set developmentMode to false on the NgxsModule options when in production mode.\nNgxsModule.forRoot(states, { developmentMode: !environment.production })',
        M = () =>
          'RECOMMENDATION: Set developmentMode to true on the NgxsModule when Angular is running in development mode.\nNgxsModule.forRoot(states, { developmentMode: !environment.production })',
        F = () =>
          'Your application was bootstrapped with nooped zone and your execution strategy requires an actual NgZone!\nPlease set the value of the executionStrategy property to NoopNgxsExecutionStrategy.\nNgxsModule.forRoot(states, { executionStrategy: NoopNgxsExecutionStrategy })',
        N = () => 'Patching arrays is not supported.',
        V = () => 'Patching primitives is not supported.',
        L = (t) => `'${t}' class should be decorated with @Injectable() right after the @State() decorator`;
      let H = (() => {
        class t {
          constructor(t, e) {
            (this._ngZone = t), (this._platformId = e), this.verifyZoneIsNotNooped(this._ngZone);
          }
          enter(t) {
            return Object(s.x)(this._platformId) ? this.runInsideAngular(t) : this.runOutsideAngular(t);
          }
          leave(t) {
            return this.runInsideAngular(t);
          }
          runInsideAngular(t) {
            return i.B.isInAngularZone() ? t() : this._ngZone.run(t);
          }
          runOutsideAngular(t) {
            return i.B.isInAngularZone() ? this._ngZone.runOutsideAngular(t) : t();
          }
          verifyZoneIsNotNooped(t) {
            t instanceof i.B || console.warn(F());
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(i.B), i.fc(i.D));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const z = new i.s('ROOT_STATE_TOKEN'),
        B = new i.s('FEATURE_STATE_TOKEN'),
        U = new i.s('NGXS_PLUGINS'),
        W = new i.s('NG_TEST_MODE'),
        $ = new i.s('NG_DEV_MODE'),
        q = 'NGXS_META';
      let G = (() => {
        class t {
          constructor() {
            (this.defaultsState = {}),
              (this.selectorOptions = { injectContainerState: !0, suppressErrors: !0 }),
              (this.compatibility = { strictContentSecurityPolicy: !1 }),
              (this.executionStrategy = H);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class X {
        constructor(t, e, n) {
          (this.previousValue = t), (this.currentValue = e), (this.firstChange = n);
        }
      }
      const K = new i.s('NGXS_EXECUTION_STRATEGY');
      function Y(t) {
        return t.constructor && t.constructor.type ? t.constructor.type : t.type;
      }
      function Z(t) {
        const e = Y(t);
        return function (t) {
          return e === Y(t);
        };
      }
      const Q = (t, e, n) => {
          t = Object.assign({}, t);
          const i = e.split('.'),
            r = i.length - 1;
          return (
            i.reduce(
              (t, e, i) => (
                (t[e] = i === r ? n : Array.isArray(t[e]) ? t[e].slice() : Object.assign({}, t[e])), t && t[e]
              ),
              t
            ),
            t
          );
        },
        J = (t, e) => e.split('.').reduce((t, e) => t && t[e], t);
      function tt(t) {
        return t[q];
      }
      function et(t, e) {
        const n = J(e.currentAppState, t.path),
          i = J(e.newAppState, t.path);
        return new X(n, i, !t.isInitialised);
      }
      function nt(...t) {
        return (function (t, e, n = it) {
          const i = t.reduce((t, e) => ((t[Y(e)] = !0), t), {}),
            r =
              e &&
              (function (t) {
                return t.reduce((t, e) => ((t[e] = !0), t), {});
              })(e);
          return function (t) {
            return t.pipe(
              (function (t, e) {
                return Object(m.a)((n) => {
                  const i = Y(n.action);
                  return t[i] && (!e || e[n.status]);
                });
              })(i, r),
              n()
            );
          };
        })(t, ['DISPATCHED']);
      }
      function it() {
        return Object(g.a)((t) => t.action);
      }
      function rt(t) {
        return (e) =>
          new o.a((n) =>
            e.subscribe({
              next(e) {
                t.leave(() => n.next(e));
              },
              error(e) {
                t.leave(() => n.error(e));
              },
              complete() {
                t.leave(() => n.complete());
              },
            })
          );
      }
      let st = (() => {
        class t {
          constructor(t) {
            this._executionStrategy = t;
          }
          enter(t) {
            return this._executionStrategy.enter(t);
          }
          leave(t) {
            return this._executionStrategy.leave(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(K));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class ot extends a.a {
        constructor() {
          super(...arguments), (this._itemQueue = []), (this._busyPushingNext = !1);
        }
        next(t) {
          if (this._busyPushingNext) this._itemQueue.unshift(t);
          else {
            for (this._busyPushingNext = !0, super.next(t); this._itemQueue.length > 0; ) {
              const t = this._itemQueue.pop();
              super.next(t);
            }
            this._busyPushingNext = !1;
          }
        }
      }
      let at = (() => {
        class t extends ot {}
        return (
          (t.ɵfac = function (e) {
            return ct(e || t);
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const ct = i.dc(at);
      let lt = (() => {
        class t extends o.a {
          constructor(t, e) {
            super((n) => {
              const i = t
                .pipe(rt(e))
                .subscribe({ next: (t) => n.next(t), error: (t) => n.error(t), complete: () => n.complete() });
              n.add(i);
            });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(at), i.fc(st));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const ut = (t) => (...e) => t.shift()(...e, (...e) => ut(t)(...e));
      let ht = (() => {
          class t extends c.a {
            constructor() {
              super({});
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        dt = (() => {
          class t {
            constructor(t, e) {
              (this._parentManager = t), (this._pluginHandlers = e), (this.plugins = []), this.registerHandlers();
            }
            get rootPlugins() {
              return (this._parentManager && this._parentManager.plugins) || this.plugins;
            }
            registerHandlers() {
              const t = this.getPluginHandlers();
              this.rootPlugins.push(...t);
            }
            getPluginHandlers() {
              return (this._pluginHandlers || []).map((t) => (t.handle ? t.handle.bind(t) : t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(t, 12), i.fc(U, 8));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        pt = (() => {
          class t extends a.a {}
          return (
            (t.ɵfac = function (e) {
              return ft(e || t);
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const ft = i.dc(pt);
      let mt = (() => {
        class t {
          constructor(t, e, n, i, r, s) {
            (this._errorHandler = t),
              (this._actions = e),
              (this._actionResults = n),
              (this._pluginManager = i),
              (this._stateStream = r),
              (this._ngxsExecutionStrategy = s);
          }
          dispatch(t) {
            const e = this._ngxsExecutionStrategy.enter(() => this.dispatchByEvents(t));
            return (
              e.subscribe({
                error: (t) =>
                  this._ngxsExecutionStrategy.leave(() => {
                    try {
                      this._errorHandler.handleError(t);
                    } catch (e) {}
                  }),
              }),
              e.pipe(rt(this._ngxsExecutionStrategy))
            );
          }
          dispatchByEvents(t) {
            return Array.isArray(t)
              ? 0 === t.length
                ? Object(l.a)(this._stateStream.getValue())
                : Object(u.a)(t.map((t) => this.dispatchSingle(t)))
              : this.dispatchSingle(t);
          }
          dispatchSingle(t) {
            const e = this._stateStream.getValue();
            return ut([
              ...this._pluginManager.plugins,
              (t, n) => {
                t !== e && this._stateStream.next(t);
                const i = this.getActionResultStream(n);
                return (
                  i.subscribe((t) => this._actions.next(t)),
                  this._actions.next({ action: n, status: 'DISPATCHED' }),
                  this.createDispatchObservable(i)
                );
              },
            ])(e, t).pipe(Object(b.a)());
          }
          getActionResultStream(t) {
            return this._actionResults.pipe(
              Object(m.a)((e) => e.action === t && 'DISPATCHED' !== e.status),
              Object(_.a)(1),
              Object(b.a)()
            );
          }
          createDispatchObservable(t) {
            return t
              .pipe(
                (function t(e, n) {
                  return n
                    ? (i) => i.pipe(t((t, i) => Object(p.a)(e(t, i)).pipe(Object(g.a)((e, r) => n(t, e, i, r)))))
                    : (t) => t.lift(new x(e));
                })((t) => {
                  switch (t.status) {
                    case 'SUCCESSFUL':
                      return Object(l.a)(this._stateStream.getValue());
                    case 'ERRORED':
                      return Object(h.a)(t.error);
                    default:
                      return d.a;
                  }
                })
              )
              .pipe(Object(b.a)());
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(i.o), i.fc(at), i.fc(pt), i.fc(dt), i.fc(ht), i.fc(st));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const gt = (t) => {
        Object.freeze(t);
        const e = 'function' == typeof t,
          n = Object.prototype.hasOwnProperty;
        return (
          Object.getOwnPropertyNames(t).forEach(function (i) {
            !n.call(t, i) ||
              (e && ('caller' === i || 'callee' === i || 'arguments' === i)) ||
              null === t[i] ||
              ('object' != typeof t[i] && 'function' != typeof t[i]) ||
              Object.isFrozen(t[i]) ||
              gt(t[i]);
          }),
          t
        );
      };
      let bt = (() => {
          class t {
            constructor(t, e) {
              (this.isDevMode = t), (this.isTestMode = e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc($), i.fc(W));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        _t = (() => {
          class t {
            constructor(t, e) {
              (this._host = t), (this._config = e);
            }
            get isIncorrectProduction() {
              return !this._host.isDevMode() && this._config.developmentMode;
            }
            get isIncorrectDevelopment() {
              return this._host.isDevMode() && !this._config.developmentMode;
            }
            verifyDevMode() {
              this._host.isTestMode() ||
                (this.isIncorrectProduction ? console.warn(P()) : this.isIncorrectDevelopment && console.warn(M()));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(bt), i.fc(G));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        yt = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._stateStream = t), (this._dispatcher = e), (this._config = n), i.verifyDevMode();
            }
            getRootStateOperations() {
              const t = {
                getState: () => this._stateStream.getValue(),
                setState: (t) => this._stateStream.next(t),
                dispatch: (t) => this._dispatcher.dispatch(t),
              };
              return this._config.developmentMode ? this.ensureStateAndActionsAreImmutable(t) : t;
            }
            ensureStateAndActionsAreImmutable(t) {
              return {
                getState: () => t.getState(),
                setState: (e) => {
                  const n = gt(e);
                  return t.setState(n);
                },
                dispatch: (e) => t.dispatch(e),
              };
            }
            setStateToTheCurrentWithNew(t) {
              const e = this.getRootStateOperations(),
                n = e.getState();
              e.setState(Object.assign({}, n, t.defaults));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(ht), i.fc(mt), i.fc(G), i.fc(_t));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        vt = (() => {
          class t {
            constructor(t) {
              this._internalStateOperations = t;
            }
            createStateContext(t) {
              const e = this._internalStateOperations.getRootStateOperations();
              function n(e) {
                return J(e, t.path);
              }
              function i(n, i) {
                const r = Q(n, t.path, i),
                  s = t.instance;
                if (s.ngxsOnChanges) {
                  const e = et(t, { currentAppState: n, newAppState: r });
                  s.ngxsOnChanges(e);
                }
                return e.setState(r), r;
              }
              function r(t, e) {
                return i(t, e(n(t)));
              }
              return {
                getState: () => n(e.getState()),
                patchState: (t) =>
                  r(
                    e.getState(),
                    (function (t) {
                      return (e) => {
                        if (Array.isArray(t)) throw new Error(N());
                        if ('object' != typeof t) throw new Error(V());
                        const n = Object.assign({}, e);
                        for (const i in t) n[i] = t[i];
                        return n;
                      };
                    })(t)
                  ),
                setState(t) {
                  const n = e.getState();
                  return 'function' == typeof t ? r(n, t) : i(n, t);
                },
                dispatch: (t) => e.dispatch(t),
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(yt));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        wt = (() => {
          class t {
            static stateNameErrorMessage(t) {
              return A(t);
            }
            static checkCorrectStateName(t) {
              if (!t) throw new Error(D());
              if (!this.stateNameRegex.test(t)) throw new Error(this.stateNameErrorMessage(t));
            }
            static checkStateNameIsUnique(t, e) {
              const n = this.getValidStateMeta(t).name,
                i = e[n];
              if (i && i !== t) throw new Error(j(n, t.name, i.name));
              return n;
            }
            static getValidStateMeta(t) {
              const e = tt(t);
              if (!e) throw new Error(R());
              return e;
            }
          }
          return (t.stateNameRegex = new RegExp('^[a-zA-Z0-9_]+$')), t;
        })(),
        xt = (() => {
          class t {
            constructor(t, e, n, i, s, o, a) {
              (this._injector = t),
                (this._config = e),
                (this._parentFactory = n),
                (this._actions = i),
                (this._actionResults = s),
                (this._stateContextFactory = o),
                (this._initialState = a),
                (this._connected = !1),
                (this._states = []),
                (this._statesByName = {}),
                (this._statePaths = {}),
                (this.getRuntimeSelectorContext = Object(r.g)(() => {
                  const t = this;
                  return this._parentFactory
                    ? this._parentFactory.getRuntimeSelectorContext()
                    : {
                        getStateGetter(e) {
                          const n = t.statePaths[e];
                          return n
                            ? ((i = n.split('.')),
                              (r = t._config) && r.compatibility && r.compatibility.strictContentSecurityPolicy
                                ? (function (t) {
                                    const e = t.slice();
                                    return (t) => e.reduce((t, e) => t && t[e], t);
                                  })(i)
                                : (function (t) {
                                    const e = t;
                                    let n = 'store.' + e[0],
                                      i = 0;
                                    const r = e.length;
                                    let s = n;
                                    for (; ++i < r; ) s = s + ' && ' + (n = n + '.' + e[i]);
                                    return new Function('store', 'return ' + s + ';');
                                  })(i))
                            : () => {};
                          var i, r;
                        },
                        getSelectorOptions: (e) => Object.assign({}, t._config.selectorOptions, e || {}),
                      };
                }));
            }
            get states() {
              return this._parentFactory ? this._parentFactory.states : this._states;
            }
            get statesByName() {
              return this._parentFactory ? this._parentFactory.statesByName : this._statesByName;
            }
            get statePaths() {
              return this._parentFactory ? this._parentFactory.statePaths : this._statePaths;
            }
            static cloneDefaults(t) {
              let e = {};
              var n;
              return (
                (e = Array.isArray(t)
                  ? t.slice()
                  : ('object' == typeof (n = t) && null !== n) || 'function' == typeof n
                  ? Object.assign({}, t)
                  : void 0 === t
                  ? {}
                  : t),
                e
              );
            }
            static checkStatesAreValid(t) {
              t.forEach(wt.getValidStateMeta);
            }
            add(e) {
              t.checkStatesAreValid(e);
              const { newStates: n } = this.addToStatesMap(e);
              if (!n.length) return [];
              const i = (function (t) {
                  const e = (e) => {
                    const n = t.find((t) => t === e);
                    if (!n)
                      throw new Error(
                        `Child state not found: ${e}. \r\nYou may have forgotten to add states to module`
                      );
                    return n[q].name;
                  };
                  return t.reduce((t, n) => {
                    const { name: i, children: r } = n[q];
                    return (t[i] = (r || []).map(e)), t;
                  }, {});
                })(n),
                r = (function (t) {
                  const e = [],
                    n = {},
                    i = (r, s = []) => {
                      Array.isArray(s) || (s = []),
                        s.push(r),
                        (n[r] = !0),
                        t[r].forEach((t) => {
                          if (s.indexOf(t) >= 0)
                            throw new Error(`Circular dependency '${t}' is required by '${r}': ${s.join(' -> ')}`);
                          n[t] || i(t, s.slice(0));
                        }),
                        e.indexOf(r) < 0 && e.push(r);
                    };
                  return Object.keys(t).forEach((t) => i(t)), e.reverse();
                })(i),
                s = (function (t, e = {}) {
                  const n = (t, e) => {
                    for (const i in t)
                      if (t.hasOwnProperty(i) && t[i].indexOf(e) >= 0) {
                        const e = n(t, i);
                        return null !== e ? `${e}.${i}` : i;
                      }
                    return null;
                  };
                  for (const i in t)
                    if (t.hasOwnProperty(i)) {
                      const r = n(t, i);
                      e[i] = r ? `${r}.${i}` : i;
                    }
                  return e;
                })(i),
                o = n.reduce((t, e) => ((t[e[q].name] = e), t), {}),
                a = [];
              for (const c of r) {
                const e = o[c],
                  n = s[c],
                  i = e[q];
                this.addRuntimeInfoToMeta(i, n);
                const r = {
                  name: c,
                  path: n,
                  isInitialised: !1,
                  actions: i.actions,
                  instance: this._injector.get(e),
                  defaults: t.cloneDefaults(i.defaults),
                };
                this.hasBeenMountedAndBootstrapped(c, n) || a.push(r), this.states.push(r);
              }
              return a;
            }
            addAndReturnDefaults(t) {
              const e = this.add(t || []);
              return { defaults: e.reduce((t, e) => Q(t, e.path, e.defaults), {}), states: e };
            }
            connectActionHandlers() {
              this._connected ||
                (this._actions
                  .pipe(
                    Object(m.a)((t) => 'DISPATCHED' === t.status),
                    Object(k.a)(({ action: t }) =>
                      this.invokeActions(this._actions, t).pipe(
                        Object(g.a)(() => ({ action: t, status: 'SUCCESSFUL' })),
                        Object(O.a)({ action: t, status: 'CANCELED' }),
                        Object(S.a)((e) => Object(l.a)({ action: t, status: 'ERRORED', error: e }))
                      )
                    )
                  )
                  .subscribe((t) => this._actionResults.next(t)),
                (this._connected = !0));
            }
            invokeActions(t, e) {
              const n = [];
              for (const r of this.states) {
                const s = Y(e),
                  a = r.actions[s];
                if (a)
                  for (const c of a) {
                    const s = this._stateContextFactory.createStateContext(r);
                    try {
                      let i = r.instance[c.fn](s, e);
                      i instanceof Promise && (i = Object(p.a)(i)),
                        i instanceof o.a
                          ? c.options.cancelUncompleted && (i = i.pipe(Object(E.a)(t.pipe(nt(e)))))
                          : (i = Object(l.a)({}).pipe(Object(b.a)())),
                        n.push(i);
                    } catch (i) {
                      n.push(Object(h.a)(i));
                    }
                  }
              }
              return n.length || n.push(Object(l.a)({})), Object(u.a)(n);
            }
            addToStatesMap(t) {
              const e = [],
                n = this.statesByName;
              for (const i of t) {
                const t = wt.checkStateNameIsUnique(i, n);
                !n[t] && (e.push(i), (n[t] = i));
              }
              return { newStates: e };
            }
            addRuntimeInfoToMeta(t, e) {
              (this.statePaths[t.name] = e), (t.path = e);
            }
            hasBeenMountedAndBootstrapped(t, e) {
              const n = void 0 !== J(this._initialState, e);
              return this.statesByName[t] && n;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(i.t), i.fc(G), i.fc(t, 12), i.fc(at), i.fc(pt), i.fc(vt), i.fc(r.a, 8));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Ct = (() => {
          class t {
            constructor(t, e, n) {
              (this.internalStateOperations = t), (this.stateContextFactory = e), (this.bootstrapper = n);
            }
            ngxsBootstrap(t, e) {
              this.internalStateOperations
                .getRootStateOperations()
                .dispatch(t)
                .pipe(
                  Object(m.a)(() => !!e),
                  Object(T.a)(() => this.invokeInit(e.states)),
                  Object(k.a)(() => this.bootstrapper.appBootstrapped$),
                  Object(m.a)((t) => !!t)
                )
                .subscribe(() => this.invokeBootstrap(e.states));
            }
            invokeInit(t) {
              for (const e of t) {
                const t = e.instance;
                if (t.ngxsOnChanges) {
                  const n = et(e, {
                    currentAppState: {},
                    newAppState: this.internalStateOperations.getRootStateOperations().getState(),
                  });
                  t.ngxsOnChanges(n);
                }
                t.ngxsOnInit && t.ngxsOnInit(this.getStateContext(e)), (e.isInitialised = !0);
              }
            }
            invokeBootstrap(t) {
              for (const e of t) {
                const t = e.instance;
                t.ngxsAfterBootstrap && t.ngxsAfterBootstrap(this.getStateContext(e));
              }
            }
            getStateContext(t) {
              return this.stateContextFactory.createStateContext(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(yt), i.fc(vt), i.fc(r.e));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        kt = (() => {
          class t {
            constructor(t, e, n, i, r, s) {
              (this._stateStream = t),
                (this._internalStateOperations = e),
                (this._config = n),
                (this._internalExecutionStrategy = i),
                (this._stateFactory = r),
                this.initStateStream(s);
            }
            dispatch(t) {
              return this._internalStateOperations.getRootStateOperations().dispatch(t);
            }
            select(t) {
              const e = this.getStoreBoundSelectorFn(t);
              return this._stateStream.pipe(
                Object(g.a)(e),
                Object(S.a)((t) => {
                  const { suppressErrors: e } = this._config.selectorOptions;
                  return t instanceof TypeError && e ? Object(l.a)(void 0) : Object(h.a)(t);
                }),
                Object(I.a)(),
                rt(this._internalExecutionStrategy)
              );
            }
            selectOnce(t) {
              return this.select(t).pipe(Object(_.a)(1));
            }
            selectSnapshot(t) {
              return this.getStoreBoundSelectorFn(t)(this._stateStream.getValue());
            }
            subscribe(t) {
              return this._stateStream.pipe(rt(this._internalExecutionStrategy)).subscribe(t);
            }
            snapshot() {
              return this._internalStateOperations.getRootStateOperations().getState();
            }
            reset(t) {
              return this._internalStateOperations.getRootStateOperations().setState(t);
            }
            getStoreBoundSelectorFn(t) {
              return (function (t) {
                const e = t.NGXS_SELECTOR_META || tt(t);
                return (e && e.makeRootSelector) || (() => t);
              })(t)(this._stateFactory.getRuntimeSelectorContext());
            }
            initStateStream(t) {
              const e = this._stateStream.value;
              if (!e || 0 === Object.keys(e).length) {
                const e =
                  Object.keys(this._config.defaultsState).length > 0
                    ? Object.assign({}, this._config.defaultsState, t)
                    : t;
                this._stateStream.next(e);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(ht), i.fc(yt), i.fc(G), i.fc(st), i.fc(xt), i.fc(r.a, 8));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Ot = (() => {
          class t {
            constructor(e, n) {
              (t.store = e), (t.config = n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(kt), i.fc(G));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            (t.store = null),
            (t.config = null),
            t
          );
        })();
      class St {
        static get type() {
          return '@@INIT';
        }
      }
      class Et {
        constructor(t) {
          this.addedStates = t;
        }
        static get type() {
          return '@@UPDATE_STATE';
        }
      }
      const Tt = new f.a(1);
      let It = (() => {
          class t {
            constructor(t, e, n, r, s = [], o) {
              !(function () {
                try {
                  const t = window.ng,
                    e = !(t.probe && t.coreTokens) && Object(i.bb)();
                  Tt.next(e);
                } catch (t) {
                  Tt.next(!1);
                } finally {
                  Tt.complete();
                }
              })();
              const a = t.addAndReturnDefaults(s);
              e.setStateToTheCurrentWithNew(a), t.connectActionHandlers(), o.ngxsBootstrap(new St(), a);
            }
          }
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)(i.fc(xt), i.fc(yt), i.fc(kt), i.fc(Ot), i.fc(z, 8), i.fc(Ct));
              },
            })),
            t
          );
        })(),
        At = (() => {
          class t {
            constructor(e, n, i, r = [], s) {
              const o = t.flattenStates(r),
                a = i.addAndReturnDefaults(o);
              a.states.length && (n.setStateToTheCurrentWithNew(a), s.ngxsBootstrap(new Et(a.defaults), a));
            }
            static flattenStates(t = []) {
              return t.reduce((t, e) => t.concat(e), []);
            }
          }
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)(i.fc(kt), i.fc(yt), i.fc(xt), i.fc(B, 8), i.fc(Ct));
              },
            })),
            t
          );
        })(),
        Dt = (() => {
          class t {
            static forRoot(e = [], n = {}) {
              return {
                ngModule: It,
                providers: [
                  xt,
                  vt,
                  lt,
                  at,
                  r.e,
                  _t,
                  bt,
                  Ct,
                  mt,
                  pt,
                  yt,
                  st,
                  kt,
                  ht,
                  Ot,
                  dt,
                  ...e,
                  ...t.ngxsTokenProviders(e, n),
                ],
              };
            }
            static forFeature(t = []) {
              return { ngModule: At, providers: [xt, dt, ...t, { provide: B, multi: !0, useValue: t }] };
            }
            static ngxsTokenProviders(e, n) {
              return [
                { provide: W, useValue: r.f },
                { provide: $, useValue: i.bb },
                { provide: K, useClass: n.executionStrategy || H },
                { provide: z, useValue: e },
                { provide: t.ROOT_OPTIONS, useValue: n },
                { provide: G, useFactory: t.ngxsConfigFactory, deps: [t.ROOT_OPTIONS] },
                { provide: i.b, useFactory: t.appBootstrapListenerFactory, multi: !0, deps: [r.e] },
                { provide: r.a, useFactory: t.getInitialState },
                { provide: r.c, useExisting: vt },
                { provide: r.d, useExisting: xt },
              ];
            }
            static ngxsConfigFactory(t) {
              return Object.assign(new G(), t);
            }
            static appBootstrapListenerFactory(t) {
              return () => t.bootstrap();
            }
            static getInitialState() {
              return r.b.pop();
            }
          }
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            (t.ROOT_OPTIONS = new i.s('ROOT_OPTIONS')),
            t
          );
        })();
      function jt(t) {
        return (e) => {
          !(function (t) {
            Tt.asObservable().subscribe((e) => {
              e && (t.ɵprov || console.warn(L(t.name)));
            });
          })(e);
          const n = e,
            i = (function (t) {
              if (!t.hasOwnProperty(q)) {
                const e = {
                  name: null,
                  actions: {},
                  defaults: {},
                  path: null,
                  makeRootSelector: (t) => t.getStateGetter(e.name),
                  children: [],
                };
                Object.defineProperty(t, q, { value: e });
              }
              return tt(t);
            })(n),
            r = Object.getPrototypeOf(n),
            s = (function (e) {
              return Object.assign({}, e.NGXS_OPTIONS_META || {}, t);
            })(r);
          !(function (t) {
            const { meta: e, inheritedStateClass: n, optionsWithInheritance: i } = t,
              { children: r, defaults: s, name: o } = i,
              a = 'string' == typeof o ? o : (o && o.getName()) || null;
            wt.checkCorrectStateName(a),
              n.hasOwnProperty(q) && (e.actions = Object.assign({}, e.actions, (n[q] || {}).actions)),
              (e.children = r),
              (e.defaults = s),
              (e.name = a);
          })({ meta: i, inheritedStateClass: r, optionsWithInheritance: s }),
            (n.NGXS_OPTIONS_META = s);
        };
      }
    },
    AytR: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      const i = 'http://207.154.250.129/',
        r = {
          production: !1,
          serverUrl: i,
          apiUrl: `${i}api/v1/`,
          authEndpoint: 'auth/',
          gamesEndpoint: 'games/',
          roundsEndpoint: 'rounds/',
          questionsEndpoint: 'questions/',
          answersEndpoint: 'answers/',
          usersEndpoint: 'users/',
          imagesEndpoint: 'images/',
          playersEndpoint: 'players/',
          authUrl: `${i}auth/`,
          jwtWhitelist: [i.replace('http://', '').replace('https://', '').split(/[/?#]/)[0]],
          rollbarToken: 'token',
        };
    },
    BLNc: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return h;
      });
      var i = n('fXoL'),
        r = n('wZkO'),
        s = n('ofXK'),
        o = n('CS/5'),
        a = n('sYmb');
      function c(t, e) {}
      function l(t, e) {
        if ((1 & t && i.Kc(0, c, 0, 0, 'ng-template', 3), 2 & t)) {
          const t = i.nc().$implicit;
          i.vc('ngComponentOutlet', t.component)('ndcDynamicInputs', t.inputs)('ndcDynamicOutputs', t.outputs);
        }
      }
      function u(t, e) {
        1 & t && (i.bc(0, 'mat-tab', 1), i.oc(1, 'translate'), i.Kc(2, l, 1, 3, 'ng-template', 2), i.ac()),
          2 & t && i.vc('label', i.pc(1, 1, 'TABS.' + e.$implicit.name));
      }
      let h = (() => {
        class t {
          constructor() {}
          trackByFn(t, e) {
            return t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-tabs']],
            inputs: { tabs: 'tabs' },
            decls: 2,
            vars: 2,
            consts: [
              [3, 'label', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
              [3, 'label'],
              ['matTabContent', ''],
              [3, 'ngComponentOutlet', 'ndcDynamicInputs', 'ndcDynamicOutputs'],
            ],
            template: function (t, e) {
              1 & t && (i.bc(0, 'mat-tab-group'), i.Kc(1, u, 3, 3, 'mat-tab', 0), i.ac()),
                2 & t && (i.Ib(1), i.vc('ngForOf', e.tabs)('ngForTrackBy', e.trackByFn));
            },
            directives: [r.c, s.k, r.a, r.b, s.j, o.a, o.b],
            pipes: [a.d],
            styles: [''],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    BOF4: function (t, e, n) {
      'use strict';
      var i = n('evrj');
      function r(t) {
        this.message = t;
      }
      ((r.prototype = new Error()).name = 'InvalidTokenError'),
        (t.exports = function (t, e) {
          if ('string' != typeof t) throw new r('Invalid token specified');
          var n = !0 === (e = e || {}).header ? 0 : 1;
          try {
            return JSON.parse(i(t.split('.')[n]));
          } catch (s) {
            throw new r('Invalid token specified: ' + s.message);
          }
        }),
        (t.exports.InvalidTokenError = r);
    },
    Blkl: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('mrSG'),
        r = n('vD0D'),
        s = n('mxbh'),
        o = n('lJxs');
      let a = (() => {
        class t extends r.a {
          get values$() {
            return this.state$.pipe(Object(o.a)(() => this.selectAll()));
          }
          get values() {
            return this.selectAll();
          }
          get total$() {
            return this.state$.pipe(Object(o.a)((t) => t.total));
          }
          get total() {
            return this.getState().total;
          }
          setTotal(t) {
            this.ctx.setState((e) => Object.assign(Object.assign({}, e), { total: t }));
          }
          increaseTotal(t) {
            this.ctx.setState((e) => Object.assign(Object.assign({}, e), { total: e.total + t }));
          }
        }
        return (
          Object(i.b)([Object(s.a)()], t.prototype, 'values$', null),
          Object(i.b)([Object(s.a)()], t.prototype, 'values', null),
          Object(i.b)([Object(s.a)()], t.prototype, 'total$', null),
          Object(i.b)([Object(s.a)()], t.prototype, 'total', null),
          Object(i.b)([Object(s.b)()], t.prototype, 'setTotal', null),
          Object(i.b)([Object(s.b)()], t.prototype, 'increaseTotal', null),
          t
        );
      })();
    },
    'CS/5': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      }),
        n.d(e, 'b', function () {
          return y;
        }),
        n.d(e, 'c', function () {
          return v;
        });
      var i = n('fXoL'),
        r = n('ofXK'),
        s = n('XNiG'),
        o = n('1G5W');
      const a = new i.s('EventArgument', {
          providedIn: 'root',
          factory: function () {
            return '$event';
          },
        }),
        c = new i.s('DynamicComponentInjector');
      let l = (() => {
          class t {
            constructor(t) {
              this.componentOutlet = t;
            }
            get componentRef() {
              return this.componentOutlet._componentRef;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(r.j, 1));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngComponentOutlet', '']],
              exportAs: ['ndcComponentOutletInjector'],
              features: [i.Hb([{ provide: c, useExisting: t }])],
            })),
            t
          );
        })(),
        u = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c]],
            })),
            t
          );
        })();
      function h(t) {
        return new i.L(void 0, t, !0);
      }
      function d(t, e) {
        return (n) =>
          e(
            n,
            (function (t, e = !1) {
              return e ? h(t.currentValue) : new i.L(t.previousValue, t.currentValue, !1);
            })(n, t)
          );
      }
      const p = { isFirstChanges: !1, onlyNewChanges: !1 };
      function f(t = p) {
        return t.onlyNewChanges
          ? ((e = t.isFirstChanges),
            (t) =>
              d(e, (e, n) => {
                t[e.key] || (t[e.key] = n);
              }))
          : (function (t) {
              return (e) => d(t, (t, n) => (e[t.key] = n));
            })(t.isFirstChanges);
        var e;
      }
      function m() {}
      const g = f({ isFirstChanges: !0 }),
        b = f({ onlyNewChanges: !0 });
      let _ = (() => {
          class t {
            constructor(t, e, n) {
              (this.differs = t),
                (this.cfr = e),
                (this.eventArgument = n),
                (this.checkInit = this.failInit),
                (this.lastComponentInst = null),
                (this.inputsDiffer = this.differs.find({}).create()),
                (this.compFactory = null),
                (this.outputsShouldDisconnect$ = new s.a()),
                (this.outputsChanged = () => !1);
            }
            get compRef() {
              return this.compInjector.componentRef;
            }
            get componentInst() {
              return this.compRef ? this.compRef.instance : null;
            }
            get componentInstChanged() {
              return (
                this.lastComponentInst !== this.componentInst && ((this.lastComponentInst = this.componentInst), !0)
              );
            }
            get compCdr() {
              return this.compRef ? this.compRef.injector.get(i.i) : null;
            }
            ngOnDestroy() {
              this._disconnectOutputs();
            }
            init(t, e = {}) {
              if (((this.checkInit = t ? m : this.failInit), (this.compInjector = t), e.trackOutputChanges)) {
                const t = this.differs.find({}).create();
                this.outputsChanged = (e) => !!t.diff(e);
              }
            }
            update(t, e, n, i) {
              this.checkInit(), this.updateIO(t, e);
              const r = this.componentInstChanged;
              if (r || n) {
                const t = this._getInputsChanges();
                t && this._updateInputChanges(t), this.updateInputs(r || !this.lastInputChanges);
              }
              (r || i) && this.bindOutputs();
            }
            maybeUpdate() {
              if ((this.checkInit(), this.componentInstChanged)) return this.updateInputs(!0), void this.bindOutputs();
              if ((this.outputsChanged(this.outputs) && this.bindOutputs(), !this.inputs)) return;
              const t = this._getInputsChanges();
              if (t) {
                const e = !!this.lastInputChanges;
                this._updateInputChanges(t), e && this.updateInputs();
              }
            }
            updateIO(t, e) {
              (this.inputs = t), (this.outputs = e);
            }
            updateInputs(t = !1) {
              t && this._updateCompFactory();
              const e = this.componentInst;
              let n = this.inputs;
              n &&
                e &&
                ((n = this._resolveInputs(n)),
                Object.keys(n).forEach((t) => (e[t] = n[t])),
                this.compCdr && this.compCdr.markForCheck(),
                this.notifyOnInputChanges(this.lastInputChanges, t));
            }
            bindOutputs() {
              this._disconnectOutputs();
              const t = this.componentInst;
              let e = this.outputs;
              e &&
                t &&
                ((e = this._resolveOutputs(e)),
                Object.keys(e)
                  .filter((e) => t[e])
                  .forEach((n) => t[n].pipe(Object(o.a)(this.outputsShouldDisconnect$)).subscribe((t) => e[n](t))));
            }
            notifyOnInputChanges(t = {}, e) {
              this.componentInst.ngOnChanges &&
                (e && (t = this._collectFirstChanges()), this.componentInst.ngOnChanges(t));
            }
            _disconnectOutputs() {
              this.outputsShouldDisconnect$.next();
            }
            _getInputsChanges() {
              return this.inputsDiffer.diff(this.inputs);
            }
            _updateInputChanges(t) {
              this.lastInputChanges = this._collectChangesFromDiffer(t);
            }
            _collectFirstChanges() {
              const t = {},
                e = this.inputs;
              return Object.keys(e).forEach((n) => (t[n] = h(e[n]))), this._resolveChanges(t);
            }
            _collectChangesFromDiffer(t) {
              const e = {};
              return t.forEachAddedItem(g(e)), t.forEachItem(b(e)), this._resolveChanges(e);
            }
            _resolveCompFactory() {
              try {
                try {
                  return this.cfr.resolveComponentFactory(this.compRef.componentType);
                } catch (t) {
                  return this.cfr.resolveComponentFactory(this.compRef.instance.constructor);
                }
              } catch (t) {
                return null;
              }
            }
            _updateCompFactory() {
              this.compFactory = this._resolveCompFactory();
            }
            _resolveInputs(t) {
              return this.compFactory ? this._remapIO(t, this.compFactory.inputs) : t;
            }
            _resolveOutputs(t) {
              return (t = this._processOutputs(t)), this.compFactory ? this._remapIO(t, this.compFactory.outputs) : t;
            }
            _processOutputs(t) {
              const e = {};
              return (
                Object.keys(t).forEach((n) => {
                  const i = t[n];
                  e[n] = 'function' == typeof i ? i : i && this._processOutputArgs(i);
                }),
                e
              );
            }
            _processOutputArgs(t) {
              const { handler: e } = t,
                n = 'args' in t ? t.args || [] : [this.eventArgument];
              return (t) => e(...n.map((e) => (e === this.eventArgument ? t : e)));
            }
            _resolveChanges(t) {
              return this.compFactory ? this._remapIO(t, this.compFactory.inputs) : t;
            }
            _remapIO(t, e) {
              const n = {};
              return (
                Object.keys(t).forEach((i) => {
                  const r = this._findPropByTplInMapping(i, e) || i;
                  n[r] = t[i];
                }),
                n
              );
            }
            _findPropByTplInMapping(t, e) {
              for (const n of e) if (n.templateName === t) return n.propName;
              return null;
            }
            failInit() {
              throw Error('IoService: ComponentInjector was not set! Please call init() method!');
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(i.v), i.fc(i.k), i.fc(a));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        y = (() => {
          class t {
            constructor(t, e, n) {
              (this.ioService = t),
                (this.componentInjector = e),
                (this.componentOutletInjector = n),
                this.ioService.init(this.compInjector);
            }
            get inputs() {
              return this.ndcDynamicInputs || this.ngComponentOutletNdcDynamicInputs;
            }
            get outputs() {
              return this.ndcDynamicOutputs || this.ngComponentOutletNdcDynamicOutputs;
            }
            get compInjector() {
              return this.componentOutletInjector || this.componentInjector;
            }
            ngOnChanges(t) {
              this.ioService.update(this.inputs, this.outputs, this.inputsChanged(t), this.outputsChanged(t));
            }
            ngDoCheck() {
              this.ioService.maybeUpdate();
            }
            inputsChanged(t) {
              return 'ngComponentOutletNdcDynamicInputs' in t || 'ndcDynamicInputs' in t;
            }
            outputsChanged(t) {
              return 'ngComponentOutletNdcDynamicOutputs' in t || 'ndcDynamicOutputs' in t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(_), i.Vb(c, 8), i.Vb(l, 9));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'ndcDynamicInputs', ''],
                ['', 'ndcDynamicOutputs', ''],
                ['', 'ngComponentOutletNdcDynamicInputs', ''],
                ['', 'ngComponentOutletNdcDynamicOutputs', ''],
              ],
              inputs: {
                ndcDynamicInputs: 'ndcDynamicInputs',
                ngComponentOutletNdcDynamicInputs: 'ngComponentOutletNdcDynamicInputs',
                ndcDynamicOutputs: 'ndcDynamicOutputs',
                ngComponentOutletNdcDynamicOutputs: 'ngComponentOutletNdcDynamicOutputs',
              },
              features: [i.Hb([_]), i.Gb],
            })),
            t
          );
        })(),
        v = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, u], u],
            })),
            t
          );
        })();
    },
    Cfvw: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return h;
      });
      var i = n('HDdC'),
        r = n('SeVD'),
        s = n('quSY'),
        o = n('kJWO'),
        a = n('jZKg'),
        c = n('Lhse'),
        l = n('c2HN'),
        u = n('I55L');
      function h(t, e) {
        return e
          ? (function (t, e) {
              if (null != t) {
                if (
                  (function (t) {
                    return t && 'function' == typeof t[o.a];
                  })(t)
                )
                  return (function (t, e) {
                    return new i.a((n) => {
                      const i = new s.a();
                      return (
                        i.add(
                          e.schedule(() => {
                            const r = t[o.a]();
                            i.add(
                              r.subscribe({
                                next(t) {
                                  i.add(e.schedule(() => n.next(t)));
                                },
                                error(t) {
                                  i.add(e.schedule(() => n.error(t)));
                                },
                                complete() {
                                  i.add(e.schedule(() => n.complete()));
                                },
                              })
                            );
                          })
                        ),
                        i
                      );
                    });
                  })(t, e);
                if (Object(l.a)(t))
                  return (function (t, e) {
                    return new i.a((n) => {
                      const i = new s.a();
                      return (
                        i.add(
                          e.schedule(() =>
                            t.then(
                              (t) => {
                                i.add(
                                  e.schedule(() => {
                                    n.next(t), i.add(e.schedule(() => n.complete()));
                                  })
                                );
                              },
                              (t) => {
                                i.add(e.schedule(() => n.error(t)));
                              }
                            )
                          )
                        ),
                        i
                      );
                    });
                  })(t, e);
                if (Object(u.a)(t)) return Object(a.a)(t, e);
                if (
                  (function (t) {
                    return t && 'function' == typeof t[c.a];
                  })(t) ||
                  'string' == typeof t
                )
                  return (function (t, e) {
                    if (!t) throw new Error('Iterable cannot be null');
                    return new i.a((n) => {
                      const i = new s.a();
                      let r;
                      return (
                        i.add(() => {
                          r && 'function' == typeof r.return && r.return();
                        }),
                        i.add(
                          e.schedule(() => {
                            (r = t[c.a]()),
                              i.add(
                                e.schedule(function () {
                                  if (n.closed) return;
                                  let t, e;
                                  try {
                                    const n = r.next();
                                    (t = n.value), (e = n.done);
                                  } catch (i) {
                                    return void n.error(i);
                                  }
                                  e ? n.complete() : (n.next(t), this.schedule());
                                })
                              );
                          })
                        ),
                        i
                      );
                    });
                  })(t, e);
              }
              throw new TypeError(((null !== t && typeof t) || t) + ' is not observable');
            })(t, e)
          : t instanceof i.a
          ? t
          : new i.a(Object(r.a)(t));
      }
    },
    CxY0: function (t, e, n) {
      'use strict';
      var i = n('rWzI'),
        r = n('Nehr');
      function s() {
        (this.protocol = null),
          (this.slashes = null),
          (this.auth = null),
          (this.host = null),
          (this.port = null),
          (this.hostname = null),
          (this.hash = null),
          (this.search = null),
          (this.query = null),
          (this.pathname = null),
          (this.path = null),
          (this.href = null);
      }
      (e.parse = y),
        (e.resolve = function (t, e) {
          return y(t, !1, !0).resolve(e);
        }),
        (e.resolveObject = function (t, e) {
          return t ? y(t, !1, !0).resolveObject(e) : e;
        }),
        (e.format = function (t) {
          return r.isString(t) && (t = y(t)), t instanceof s ? t.format() : s.prototype.format.call(t);
        }),
        (e.Url = s);
      var o = /^([a-z0-9.+-]+:)/i,
        a = /:[0-9]*$/,
        c = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
        l = ['{', '}', '|', '\\', '^', '`'].concat(['<', '>', '"', '`', ' ', '\r', '\n', '\t']),
        u = ["'"].concat(l),
        h = ['%', '/', '?', ';', '#'].concat(u),
        d = ['/', '?', '#'],
        p = /^[+a-z0-9A-Z_-]{0,63}$/,
        f = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
        m = { javascript: !0, 'javascript:': !0 },
        g = { javascript: !0, 'javascript:': !0 },
        b = {
          http: !0,
          https: !0,
          ftp: !0,
          gopher: !0,
          file: !0,
          'http:': !0,
          'https:': !0,
          'ftp:': !0,
          'gopher:': !0,
          'file:': !0,
        },
        _ = n('r8II');
      function y(t, e, n) {
        if (t && r.isObject(t) && t instanceof s) return t;
        var i = new s();
        return i.parse(t, e, n), i;
      }
      (s.prototype.parse = function (t, e, n) {
        if (!r.isString(t)) throw new TypeError("Parameter 'url' must be a string, not " + typeof t);
        var s = t.indexOf('?'),
          a = -1 !== s && s < t.indexOf('#') ? '?' : '#',
          l = t.split(a);
        l[0] = l[0].replace(/\\/g, '/');
        var y = (t = l.join(a));
        if (((y = y.trim()), !n && 1 === t.split('#').length)) {
          var v = c.exec(y);
          if (v)
            return (
              (this.path = y),
              (this.href = y),
              (this.pathname = v[1]),
              v[2]
                ? ((this.search = v[2]), (this.query = e ? _.parse(this.search.substr(1)) : this.search.substr(1)))
                : e && ((this.search = ''), (this.query = {})),
              this
            );
        }
        var w = o.exec(y);
        if (w) {
          var x = (w = w[0]).toLowerCase();
          (this.protocol = x), (y = y.substr(w.length));
        }
        if (n || w || y.match(/^\/\/[^@\/]+@[^@\/]+/)) {
          var C = '//' === y.substr(0, 2);
          !C || (w && g[w]) || ((y = y.substr(2)), (this.slashes = !0));
        }
        if (!g[w] && (C || (w && !b[w]))) {
          for (var k, O, S = -1, E = 0; E < d.length; E++)
            -1 !== (T = y.indexOf(d[E])) && (-1 === S || T < S) && (S = T);
          for (
            -1 !== (O = -1 === S ? y.lastIndexOf('@') : y.lastIndexOf('@', S)) &&
              ((k = y.slice(0, O)), (y = y.slice(O + 1)), (this.auth = decodeURIComponent(k))),
              S = -1,
              E = 0;
            E < h.length;
            E++
          ) {
            var T;
            -1 !== (T = y.indexOf(h[E])) && (-1 === S || T < S) && (S = T);
          }
          -1 === S && (S = y.length),
            (this.host = y.slice(0, S)),
            (y = y.slice(S)),
            this.parseHost(),
            (this.hostname = this.hostname || '');
          var I = '[' === this.hostname[0] && ']' === this.hostname[this.hostname.length - 1];
          if (!I)
            for (var A = this.hostname.split(/\./), D = ((E = 0), A.length); E < D; E++) {
              var j = A[E];
              if (j && !j.match(p)) {
                for (var R = '', P = 0, M = j.length; P < M; P++) j.charCodeAt(P) > 127 ? (R += 'x') : (R += j[P]);
                if (!R.match(p)) {
                  var F = A.slice(0, E),
                    N = A.slice(E + 1),
                    V = j.match(f);
                  V && (F.push(V[1]), N.unshift(V[2])),
                    N.length && (y = '/' + N.join('.') + y),
                    (this.hostname = F.join('.'));
                  break;
                }
              }
            }
          (this.hostname = this.hostname.length > 255 ? '' : this.hostname.toLowerCase()),
            I || (this.hostname = i.toASCII(this.hostname)),
            (this.host = (this.hostname || '') + (this.port ? ':' + this.port : '')),
            (this.href += this.host),
            I && ((this.hostname = this.hostname.substr(1, this.hostname.length - 2)), '/' !== y[0] && (y = '/' + y));
        }
        if (!m[x])
          for (E = 0, D = u.length; E < D; E++) {
            var L = u[E];
            if (-1 !== y.indexOf(L)) {
              var H = encodeURIComponent(L);
              H === L && (H = escape(L)), (y = y.split(L).join(H));
            }
          }
        var z = y.indexOf('#');
        -1 !== z && ((this.hash = y.substr(z)), (y = y.slice(0, z)));
        var B = y.indexOf('?');
        return (
          -1 !== B
            ? ((this.search = y.substr(B)),
              (this.query = y.substr(B + 1)),
              e && (this.query = _.parse(this.query)),
              (y = y.slice(0, B)))
            : e && ((this.search = ''), (this.query = {})),
          y && (this.pathname = y),
          b[x] && this.hostname && !this.pathname && (this.pathname = '/'),
          (this.pathname || this.search) && (this.path = (this.pathname || '') + (this.search || '')),
          (this.href = this.format()),
          this
        );
      }),
        (s.prototype.format = function () {
          var t = this.auth || '';
          t && ((t = (t = encodeURIComponent(t)).replace(/%3A/i, ':')), (t += '@'));
          var e = this.protocol || '',
            n = this.pathname || '',
            i = this.hash || '',
            s = !1,
            o = '';
          this.host
            ? (s = t + this.host)
            : this.hostname &&
              ((s = t + (-1 === this.hostname.indexOf(':') ? this.hostname : '[' + this.hostname + ']')),
              this.port && (s += ':' + this.port)),
            this.query && r.isObject(this.query) && Object.keys(this.query).length && (o = _.stringify(this.query));
          var a = this.search || (o && '?' + o) || '';
          return (
            e && ':' !== e.substr(-1) && (e += ':'),
            this.slashes || ((!e || b[e]) && !1 !== s)
              ? ((s = '//' + (s || '')), n && '/' !== n.charAt(0) && (n = '/' + n))
              : s || (s = ''),
            i && '#' !== i.charAt(0) && (i = '#' + i),
            a && '?' !== a.charAt(0) && (a = '?' + a),
            e +
              s +
              (n = n.replace(/[?#]/g, function (t) {
                return encodeURIComponent(t);
              })) +
              (a = a.replace('#', '%23')) +
              i
          );
        }),
        (s.prototype.resolve = function (t) {
          return this.resolveObject(y(t, !1, !0)).format();
        }),
        (s.prototype.resolveObject = function (t) {
          if (r.isString(t)) {
            var e = new s();
            e.parse(t, !1, !0), (t = e);
          }
          for (var n = new s(), i = Object.keys(this), o = 0; o < i.length; o++) {
            var a = i[o];
            n[a] = this[a];
          }
          if (((n.hash = t.hash), '' === t.href)) return (n.href = n.format()), n;
          if (t.slashes && !t.protocol) {
            for (var c = Object.keys(t), l = 0; l < c.length; l++) {
              var u = c[l];
              'protocol' !== u && (n[u] = t[u]);
            }
            return b[n.protocol] && n.hostname && !n.pathname && (n.path = n.pathname = '/'), (n.href = n.format()), n;
          }
          if (t.protocol && t.protocol !== n.protocol) {
            if (!b[t.protocol]) {
              for (var h = Object.keys(t), d = 0; d < h.length; d++) {
                var p = h[d];
                n[p] = t[p];
              }
              return (n.href = n.format()), n;
            }
            if (((n.protocol = t.protocol), t.host || g[t.protocol])) n.pathname = t.pathname;
            else {
              for (var f = (t.pathname || '').split('/'); f.length && !(t.host = f.shift()); );
              t.host || (t.host = ''),
                t.hostname || (t.hostname = ''),
                '' !== f[0] && f.unshift(''),
                f.length < 2 && f.unshift(''),
                (n.pathname = f.join('/'));
            }
            return (
              (n.search = t.search),
              (n.query = t.query),
              (n.host = t.host || ''),
              (n.auth = t.auth),
              (n.hostname = t.hostname || t.host),
              (n.port = t.port),
              (n.pathname || n.search) && (n.path = (n.pathname || '') + (n.search || '')),
              (n.slashes = n.slashes || t.slashes),
              (n.href = n.format()),
              n
            );
          }
          var m = n.pathname && '/' === n.pathname.charAt(0),
            _ = t.host || (t.pathname && '/' === t.pathname.charAt(0)),
            y = _ || m || (n.host && t.pathname),
            v = y,
            w = (n.pathname && n.pathname.split('/')) || [],
            x = ((f = (t.pathname && t.pathname.split('/')) || []), n.protocol && !b[n.protocol]);
          if (
            (x &&
              ((n.hostname = ''),
              (n.port = null),
              n.host && ('' === w[0] ? (w[0] = n.host) : w.unshift(n.host)),
              (n.host = ''),
              t.protocol &&
                ((t.hostname = null),
                (t.port = null),
                t.host && ('' === f[0] ? (f[0] = t.host) : f.unshift(t.host)),
                (t.host = null)),
              (y = y && ('' === f[0] || '' === w[0]))),
            _)
          )
            (n.host = t.host || '' === t.host ? t.host : n.host),
              (n.hostname = t.hostname || '' === t.hostname ? t.hostname : n.hostname),
              (n.search = t.search),
              (n.query = t.query),
              (w = f);
          else if (f.length) w || (w = []), w.pop(), (w = w.concat(f)), (n.search = t.search), (n.query = t.query);
          else if (!r.isNullOrUndefined(t.search))
            return (
              x &&
                ((n.hostname = n.host = w.shift()),
                (E = !!(n.host && n.host.indexOf('@') > 0) && n.host.split('@')) &&
                  ((n.auth = E.shift()), (n.host = n.hostname = E.shift()))),
              (n.search = t.search),
              (n.query = t.query),
              (r.isNull(n.pathname) && r.isNull(n.search)) ||
                (n.path = (n.pathname ? n.pathname : '') + (n.search ? n.search : '')),
              (n.href = n.format()),
              n
            );
          if (!w.length)
            return (n.pathname = null), (n.path = n.search ? '/' + n.search : null), (n.href = n.format()), n;
          for (
            var C = w.slice(-1)[0],
              k = ((n.host || t.host || w.length > 1) && ('.' === C || '..' === C)) || '' === C,
              O = 0,
              S = w.length;
            S >= 0;
            S--
          )
            '.' === (C = w[S]) ? w.splice(S, 1) : '..' === C ? (w.splice(S, 1), O++) : O && (w.splice(S, 1), O--);
          if (!y && !v) for (; O--; O) w.unshift('..');
          !y || '' === w[0] || (w[0] && '/' === w[0].charAt(0)) || w.unshift(''),
            k && '/' !== w.join('/').substr(-1) && w.push('');
          var E,
            T = '' === w[0] || (w[0] && '/' === w[0].charAt(0));
          return (
            x &&
              ((n.hostname = n.host = T ? '' : w.length ? w.shift() : ''),
              (E = !!(n.host && n.host.indexOf('@') > 0) && n.host.split('@')) &&
                ((n.auth = E.shift()), (n.host = n.hostname = E.shift()))),
            (y = y || (n.host && w.length)) && !T && w.unshift(''),
            w.length ? (n.pathname = w.join('/')) : ((n.pathname = null), (n.path = null)),
            (r.isNull(n.pathname) && r.isNull(n.search)) ||
              (n.path = (n.pathname ? n.pathname : '') + (n.search ? n.search : '')),
            (n.auth = t.auth || n.auth),
            (n.slashes = n.slashes || t.slashes),
            (n.href = n.format()),
            n
          );
        }),
        (s.prototype.parseHost = function () {
          var t = this.host,
            e = a.exec(t);
          e && (':' !== (e = e[0]) && (this.port = e.substr(1)), (t = t.substr(0, t.length - e.length))),
            t && (this.hostname = t);
        });
    },
    D0XW: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('3N8a');
      const r = new (n('IjjT').a)(i.a);
    },
    DH7j: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => Array.isArray || ((t) => t && 'number' == typeof t.length))();
    },
    Dd7e: function (t, e, n) {
      'use strict';
      n.d(e, 'b', function () {
        return d;
      }),
        n.d(e, 'a', function () {
          return u;
        });
      var i = n('ofXK'),
        r = n('0FS3'),
        s = n('3Pt+'),
        o = n('c2SN'),
        a = n('bSwM'),
        c = n('fXoL');
      function l(t, e) {
        1 & t && (c.bc(0, 'span', 2), c.Mc(1, '*'), c.ac());
      }
      let u = (() => {
        class t extends o.a {
          constructor() {
            super(...arguments),
              (this.defaultOptions = {
                templateOptions: {
                  hideFieldUnderline: !0,
                  indeterminate: !0,
                  floatLabel: 'always',
                  hideLabel: !0,
                  align: 'start',
                  color: 'accent',
                },
              });
          }
          onContainerClick(t) {
            this.checkbox.focus(), super.onContainerClick(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return h(e || t);
          }),
          (t.ɵcmp = c.Pb({
            type: t,
            selectors: [['formly-field-mat-checkbox']],
            viewQuery: function (t, e) {
              var n;
              1 & t && c.Rc(a.a, !0), 2 & t && c.Ac((n = c.kc())) && (e.checkbox = n.first);
            },
            features: [c.Fb],
            decls: 3,
            vars: 10,
            consts: [
              [
                3,
                'formControl',
                'id',
                'required',
                'formlyAttributes',
                'tabindex',
                'indeterminate',
                'color',
                'labelPosition',
              ],
              ['class', 'mat-form-field-required-marker', 4, 'ngIf'],
              [1, 'mat-form-field-required-marker'],
            ],
            template: function (t, e) {
              1 & t && (c.bc(0, 'mat-checkbox', 0), c.Mc(1), c.Kc(2, l, 2, 0, 'span', 1), c.ac()),
                2 & t &&
                  (c.vc('formControl', e.formControl)('id', e.id)('required', e.to.required)(
                    'formlyAttributes',
                    e.field
                  )('tabindex', e.to.tabindex)('indeterminate', e.to.indeterminate && null === e.formControl.value)(
                    'color',
                    e.to.color
                  )('labelPosition', e.to.align || e.to.labelPosition),
                  c.Ib(1),
                  c.Oc(' ', e.to.label, ' '),
                  c.Ib(1),
                  c.vc('ngIf', e.to.required && !0 !== e.to.hideRequiredMarker));
            },
            directives: [a.a, a.c, s.n, s.f, s.t, r.e, i.l],
            encapsulation: 2,
          })),
          t
        );
      })();
      const h = c.dc(u);
      let d = (() => {
        class t {}
        return (
          (t.ɵmod = c.Tb({ type: t })),
          (t.ɵinj = c.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [
              [
                i.c,
                s.s,
                a.b,
                o.b,
                r.i.forChild({ types: [{ name: 'checkbox', component: u, wrappers: ['form-field'] }] }),
              ],
            ],
          })),
          t
        );
      })();
    },
    EY2u: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      }),
        n.d(e, 'b', function () {
          return s;
        });
      var i = n('HDdC');
      const r = new i.a((t) => t.complete());
      function s(t) {
        return t
          ? (function (t) {
              return new i.a((e) => t.schedule(() => e.complete()));
            })(t)
          : r;
      }
    },
    ExVU: function (t, e, n) {
      'use strict';
      function i(t, e) {
        for (var n = 0; n < e.length; n++) {
          var i = e[n];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            'value' in i && (i.writable = !0),
            Object.defineProperty(t, i.key, i);
        }
      }
      function r(t, e, n) {
        return e && i(t.prototype, e), n && i(t, n), t;
      }
      function s(t, e) {
        (t.prototype = Object.create(e.prototype)), (t.prototype.constructor = t), (t.__proto__ = e);
      }
      function o(t) {
        return (o = Object.setPrototypeOf
          ? Object.getPrototypeOf
          : function (t) {
              return t.__proto__ || Object.getPrototypeOf(t);
            })(t);
      }
      function a(t, e) {
        return (a =
          Object.setPrototypeOf ||
          function (t, e) {
            return (t.__proto__ = e), t;
          })(t, e);
      }
      function c() {
        if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ('function' == typeof Proxy) return !0;
        try {
          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }
      function l(t, e, n) {
        return (l = c()
          ? Reflect.construct
          : function (t, e, n) {
              var i = [null];
              i.push.apply(i, e);
              var r = new (Function.bind.apply(t, i))();
              return n && a(r, n.prototype), r;
            }).apply(null, arguments);
      }
      function u(t) {
        var e = 'function' == typeof Map ? new Map() : void 0;
        return (u = function (t) {
          if (null === t || -1 === Function.toString.call(t).indexOf('[native code]')) return t;
          if ('function' != typeof t) throw new TypeError('Super expression must either be null or a function');
          if (void 0 !== e) {
            if (e.has(t)) return e.get(t);
            e.set(t, n);
          }
          function n() {
            return l(t, arguments, o(this).constructor);
          }
          return (
            (n.prototype = Object.create(t.prototype, {
              constructor: { value: n, enumerable: !1, writable: !0, configurable: !0 },
            })),
            a(n, t)
          );
        })(t);
      }
      function h(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, i = new Array(e); n < e; n++) i[n] = t[n];
        return i;
      }
      function d(t) {
        var e = 0;
        if ('undefined' == typeof Symbol || null == t[Symbol.iterator]) {
          if (
            Array.isArray(t) ||
            (t = (function (t, e) {
              if (t) {
                if ('string' == typeof t) return h(t, void 0);
                var n = Object.prototype.toString.call(t).slice(8, -1);
                return (
                  'Object' === n && t.constructor && (n = t.constructor.name),
                  'Map' === n || 'Set' === n
                    ? Array.from(n)
                    : 'Arguments' === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                    ? h(t, void 0)
                    : void 0
                );
              }
            })(t))
          )
            return function () {
              return e >= t.length ? { done: !0 } : { done: !1, value: t[e++] };
            };
          throw new TypeError(
            'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }
        return (e = t[Symbol.iterator]()).next.bind(e);
      }
      Object.defineProperty(e, '__esModule', { value: !0 });
      var p = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          return s(e, t), e;
        })(u(Error)),
        f = (function (t) {
          function e(e) {
            return t.call(this, 'Invalid DateTime: ' + e.toMessage()) || this;
          }
          return s(e, t), e;
        })(p),
        m = (function (t) {
          function e(e) {
            return t.call(this, 'Invalid Interval: ' + e.toMessage()) || this;
          }
          return s(e, t), e;
        })(p),
        g = (function (t) {
          function e(e) {
            return t.call(this, 'Invalid Duration: ' + e.toMessage()) || this;
          }
          return s(e, t), e;
        })(p),
        b = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          return s(e, t), e;
        })(p),
        _ = (function (t) {
          function e(e) {
            return t.call(this, 'Invalid unit ' + e) || this;
          }
          return s(e, t), e;
        })(p),
        y = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          return s(e, t), e;
        })(p),
        v = (function (t) {
          function e() {
            return t.call(this, 'Zone is an abstract class') || this;
          }
          return s(e, t), e;
        })(p),
        w = 'numeric',
        x = 'short',
        C = 'long',
        k = { year: w, month: w, day: w },
        O = { year: w, month: x, day: w },
        S = { year: w, month: C, day: w },
        E = { year: w, month: C, day: w, weekday: C },
        T = { hour: w, minute: w },
        I = { hour: w, minute: w, second: w },
        A = { hour: w, minute: w, second: w, timeZoneName: x },
        D = { hour: w, minute: w, second: w, timeZoneName: C },
        j = { hour: w, minute: w, hour12: !1 },
        R = { hour: w, minute: w, second: w, hour12: !1 },
        P = { hour: w, minute: w, second: w, hour12: !1, timeZoneName: x },
        M = { hour: w, minute: w, second: w, hour12: !1, timeZoneName: C },
        F = { year: w, month: w, day: w, hour: w, minute: w },
        N = { year: w, month: w, day: w, hour: w, minute: w, second: w },
        V = { year: w, month: x, day: w, hour: w, minute: w },
        L = { year: w, month: x, day: w, hour: w, minute: w, second: w },
        H = { year: w, month: x, day: w, weekday: x, hour: w, minute: w },
        z = { year: w, month: C, day: w, hour: w, minute: w, timeZoneName: x },
        B = { year: w, month: C, day: w, hour: w, minute: w, second: w, timeZoneName: x },
        U = { year: w, month: C, day: w, weekday: C, hour: w, minute: w, timeZoneName: C },
        W = { year: w, month: C, day: w, weekday: C, hour: w, minute: w, second: w, timeZoneName: C };
      function $(t) {
        return void 0 === t;
      }
      function q(t) {
        return 'number' == typeof t;
      }
      function G(t) {
        return 'number' == typeof t && t % 1 == 0;
      }
      function X() {
        try {
          return 'undefined' != typeof Intl && Intl.DateTimeFormat;
        } catch (t) {
          return !1;
        }
      }
      function K() {
        return !$(Intl.DateTimeFormat.prototype.formatToParts);
      }
      function Y() {
        try {
          return 'undefined' != typeof Intl && !!Intl.RelativeTimeFormat;
        } catch (t) {
          return !1;
        }
      }
      function Z(t, e, n) {
        if (0 !== t.length)
          return t.reduce(function (t, i) {
            var r = [e(i), i];
            return t && n(t[0], r[0]) === t[0] ? t : r;
          }, null)[1];
      }
      function Q(t, e) {
        return e.reduce(function (e, n) {
          return (e[n] = t[n]), e;
        }, {});
      }
      function J(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e);
      }
      function tt(t, e, n) {
        return G(t) && t >= e && t <= n;
      }
      function et(t, e) {
        return void 0 === e && (e = 2), t.toString().length < e ? ('0'.repeat(e) + t).slice(-e) : t.toString();
      }
      function nt(t) {
        return $(t) || null === t || '' === t ? void 0 : parseInt(t, 10);
      }
      function it(t) {
        if (!$(t) && null !== t && '' !== t) {
          var e = 1e3 * parseFloat('0.' + t);
          return Math.floor(e);
        }
      }
      function rt(t, e, n) {
        void 0 === n && (n = !1);
        var i = Math.pow(10, e);
        return (n ? Math.trunc : Math.round)(t * i) / i;
      }
      function st(t) {
        return t % 4 == 0 && (t % 100 != 0 || t % 400 == 0);
      }
      function ot(t) {
        return st(t) ? 366 : 365;
      }
      function at(t, e) {
        var n,
          i = (n = e - 1) - 12 * Math.floor(n / 12) + 1;
        return 2 === i ? (st(t + (e - i) / 12) ? 29 : 28) : [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][i - 1];
      }
      function ct(t) {
        var e = Date.UTC(t.year, t.month - 1, t.day, t.hour, t.minute, t.second, t.millisecond);
        return t.year < 100 && t.year >= 0 && (e = new Date(e)).setUTCFullYear(e.getUTCFullYear() - 1900), +e;
      }
      function lt(t) {
        var e = (t + Math.floor(t / 4) - Math.floor(t / 100) + Math.floor(t / 400)) % 7,
          n = t - 1,
          i = (n + Math.floor(n / 4) - Math.floor(n / 100) + Math.floor(n / 400)) % 7;
        return 4 === e || 3 === i ? 53 : 52;
      }
      function ut(t) {
        return t > 99 ? t : t > 60 ? 1900 + t : 2e3 + t;
      }
      function ht(t, e, n, i) {
        void 0 === i && (i = null);
        var r = new Date(t),
          s = { hour12: !1, year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };
        i && (s.timeZone = i);
        var o = Object.assign({ timeZoneName: e }, s),
          a = X();
        if (a && K()) {
          var c = new Intl.DateTimeFormat(n, o).formatToParts(r).find(function (t) {
            return 'timezonename' === t.type.toLowerCase();
          });
          return c ? c.value : null;
        }
        if (a) {
          var l = new Intl.DateTimeFormat(n, s).format(r);
          return new Intl.DateTimeFormat(n, o)
            .format(r)
            .substring(l.length)
            .replace(/^[, \u200e]+/, '');
        }
        return null;
      }
      function dt(t, e) {
        var n = parseInt(t, 10);
        Number.isNaN(n) && (n = 0);
        var i = parseInt(e, 10) || 0;
        return 60 * n + (n < 0 || Object.is(n, -0) ? -i : i);
      }
      function pt(t) {
        var e = Number(t);
        if ('boolean' == typeof t || '' === t || Number.isNaN(e)) throw new y('Invalid unit value ' + t);
        return e;
      }
      function ft(t, e, n) {
        var i = {};
        for (var r in t)
          if (J(t, r)) {
            if (n.indexOf(r) >= 0) continue;
            var s = t[r];
            if (null == s) continue;
            i[e(r)] = pt(s);
          }
        return i;
      }
      function mt(t, e) {
        var n = Math.trunc(t / 60),
          i = Math.abs(t % 60),
          r = n >= 0 && !Object.is(n, -0) ? '+' : '-',
          s = '' + r + Math.abs(n);
        switch (e) {
          case 'short':
            return '' + r + et(Math.abs(n), 2) + ':' + et(i, 2);
          case 'narrow':
            return i > 0 ? s + ':' + i : s;
          case 'techie':
            return '' + r + et(Math.abs(n), 2) + et(i, 2);
          default:
            throw new RangeError('Value format ' + e + ' is out of range for property format');
        }
      }
      function gt(t) {
        return Q(t, ['hour', 'minute', 'second', 'millisecond']);
      }
      var bt = /[A-Za-z_+-]{1,256}(:?\/[A-Za-z_+-]{1,256}(\/[A-Za-z_+-]{1,256})?)?/;
      function _t(t) {
        return JSON.stringify(t, Object.keys(t).sort());
      }
      var yt = [
          'January',
          'February',
          'March',
          'April',
          'May',
          'June',
          'July',
          'August',
          'September',
          'October',
          'November',
          'December',
        ],
        vt = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        wt = ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'];
      function xt(t) {
        switch (t) {
          case 'narrow':
            return wt;
          case 'short':
            return vt;
          case 'long':
            return yt;
          case 'numeric':
            return ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];
          case '2-digit':
            return ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];
          default:
            return null;
        }
      }
      var Ct = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
        kt = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
        Ot = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];
      function St(t) {
        switch (t) {
          case 'narrow':
            return Ot;
          case 'short':
            return kt;
          case 'long':
            return Ct;
          case 'numeric':
            return ['1', '2', '3', '4', '5', '6', '7'];
          default:
            return null;
        }
      }
      var Et = ['AM', 'PM'],
        Tt = ['Before Christ', 'Anno Domini'],
        It = ['BC', 'AD'],
        At = ['B', 'A'];
      function Dt(t) {
        switch (t) {
          case 'narrow':
            return At;
          case 'short':
            return It;
          case 'long':
            return Tt;
          default:
            return null;
        }
      }
      function jt(t, e) {
        for (var n, i = '', r = d(t); !(n = r()).done; ) {
          var s = n.value;
          i += s.literal ? s.val : e(s.val);
        }
        return i;
      }
      var Rt = {
          D: k,
          DD: O,
          DDD: S,
          DDDD: E,
          t: T,
          tt: I,
          ttt: A,
          tttt: D,
          T: j,
          TT: R,
          TTT: P,
          TTTT: M,
          f: F,
          ff: V,
          fff: z,
          ffff: U,
          F: N,
          FF: L,
          FFF: B,
          FFFF: W,
        },
        Pt = (function () {
          function t(t, e) {
            (this.opts = e), (this.loc = t), (this.systemLoc = null);
          }
          (t.create = function (e, n) {
            return void 0 === n && (n = {}), new t(e, n);
          }),
            (t.parseFormat = function (t) {
              for (var e = null, n = '', i = !1, r = [], s = 0; s < t.length; s++) {
                var o = t.charAt(s);
                "'" === o
                  ? (n.length > 0 && r.push({ literal: i, val: n }), (e = null), (n = ''), (i = !i))
                  : i || o === e
                  ? (n += o)
                  : (n.length > 0 && r.push({ literal: !1, val: n }), (n = o), (e = o));
              }
              return n.length > 0 && r.push({ literal: i, val: n }), r;
            }),
            (t.macroTokenToFormatOpts = function (t) {
              return Rt[t];
            });
          var e = t.prototype;
          return (
            (e.formatWithSystemDefault = function (t, e) {
              return (
                null === this.systemLoc && (this.systemLoc = this.loc.redefaultToSystem()),
                this.systemLoc.dtFormatter(t, Object.assign({}, this.opts, e)).format()
              );
            }),
            (e.formatDateTime = function (t, e) {
              return void 0 === e && (e = {}), this.loc.dtFormatter(t, Object.assign({}, this.opts, e)).format();
            }),
            (e.formatDateTimeParts = function (t, e) {
              return void 0 === e && (e = {}), this.loc.dtFormatter(t, Object.assign({}, this.opts, e)).formatToParts();
            }),
            (e.resolvedOptions = function (t, e) {
              return (
                void 0 === e && (e = {}), this.loc.dtFormatter(t, Object.assign({}, this.opts, e)).resolvedOptions()
              );
            }),
            (e.num = function (t, e) {
              if ((void 0 === e && (e = 0), this.opts.forceSimple)) return et(t, e);
              var n = Object.assign({}, this.opts);
              return e > 0 && (n.padTo = e), this.loc.numberFormatter(n).format(t);
            }),
            (e.formatDateTimeFromString = function (e, n) {
              var i = this,
                r = 'en' === this.loc.listingMode(),
                s = this.loc.outputCalendar && 'gregory' !== this.loc.outputCalendar && K(),
                o = function (t, n) {
                  return i.loc.extract(e, t, n);
                },
                a = function (t) {
                  return e.isOffsetFixed && 0 === e.offset && t.allowZ
                    ? 'Z'
                    : e.isValid
                    ? e.zone.formatOffset(e.ts, t.format)
                    : '';
                },
                c = function (t, n) {
                  return r
                    ? (function (t, e) {
                        return xt(e)[t.month - 1];
                      })(e, t)
                    : o(n ? { month: t } : { month: t, day: 'numeric' }, 'month');
                },
                l = function (t, n) {
                  return r
                    ? (function (t, e) {
                        return St(e)[t.weekday - 1];
                      })(e, t)
                    : o(n ? { weekday: t } : { weekday: t, month: 'long', day: 'numeric' }, 'weekday');
                },
                u = function (t) {
                  return r
                    ? (function (t, e) {
                        return Dt(e)[t.year < 0 ? 0 : 1];
                      })(e, t)
                    : o({ era: t }, 'era');
                };
              return jt(t.parseFormat(n), function (n) {
                switch (n) {
                  case 'S':
                    return i.num(e.millisecond);
                  case 'u':
                  case 'SSS':
                    return i.num(e.millisecond, 3);
                  case 's':
                    return i.num(e.second);
                  case 'ss':
                    return i.num(e.second, 2);
                  case 'm':
                    return i.num(e.minute);
                  case 'mm':
                    return i.num(e.minute, 2);
                  case 'h':
                    return i.num(e.hour % 12 == 0 ? 12 : e.hour % 12);
                  case 'hh':
                    return i.num(e.hour % 12 == 0 ? 12 : e.hour % 12, 2);
                  case 'H':
                    return i.num(e.hour);
                  case 'HH':
                    return i.num(e.hour, 2);
                  case 'Z':
                    return a({ format: 'narrow', allowZ: i.opts.allowZ });
                  case 'ZZ':
                    return a({ format: 'short', allowZ: i.opts.allowZ });
                  case 'ZZZ':
                    return a({ format: 'techie', allowZ: i.opts.allowZ });
                  case 'ZZZZ':
                    return console.log(e.zone), e.zone.offsetName(e.ts, { format: 'short', locale: i.loc.locale });
                  case 'ZZZZZ':
                    return e.zone.offsetName(e.ts, { format: 'long', locale: i.loc.locale });
                  case 'z':
                    return e.zoneName;
                  case 'a':
                    return r
                      ? (function (t) {
                          return Et[t.hour < 12 ? 0 : 1];
                        })(e)
                      : o({ hour: 'numeric', hour12: !0 }, 'dayperiod');
                  case 'd':
                    return s ? o({ day: 'numeric' }, 'day') : i.num(e.day);
                  case 'dd':
                    return s ? o({ day: '2-digit' }, 'day') : i.num(e.day, 2);
                  case 'c':
                    return i.num(e.weekday);
                  case 'ccc':
                    return l('short', !0);
                  case 'cccc':
                    return l('long', !0);
                  case 'ccccc':
                    return l('narrow', !0);
                  case 'E':
                    return i.num(e.weekday);
                  case 'EEE':
                    return l('short', !1);
                  case 'EEEE':
                    return l('long', !1);
                  case 'EEEEE':
                    return l('narrow', !1);
                  case 'L':
                    return s ? o({ month: 'numeric', day: 'numeric' }, 'month') : i.num(e.month);
                  case 'LL':
                    return s ? o({ month: '2-digit', day: 'numeric' }, 'month') : i.num(e.month, 2);
                  case 'LLL':
                    return c('short', !0);
                  case 'LLLL':
                    return c('long', !0);
                  case 'LLLLL':
                    return c('narrow', !0);
                  case 'M':
                    return s ? o({ month: 'numeric' }, 'month') : i.num(e.month);
                  case 'MM':
                    return s ? o({ month: '2-digit' }, 'month') : i.num(e.month, 2);
                  case 'MMM':
                    return c('short', !1);
                  case 'MMMM':
                    return c('long', !1);
                  case 'MMMMM':
                    return c('narrow', !1);
                  case 'y':
                    return s ? o({ year: 'numeric' }, 'year') : i.num(e.year);
                  case 'yy':
                    return s ? o({ year: '2-digit' }, 'year') : i.num(e.year.toString().slice(-2), 2);
                  case 'yyyy':
                    return s ? o({ year: 'numeric' }, 'year') : i.num(e.year, 4);
                  case 'yyyyyy':
                    return s ? o({ year: 'numeric' }, 'year') : i.num(e.year, 6);
                  case 'G':
                    return u('short');
                  case 'GG':
                    return u('long');
                  case 'GGGGG':
                    return u('narrow');
                  case 'kk':
                    return i.num(e.weekYear.toString().slice(-2), 2);
                  case 'kkkk':
                    return i.num(e.weekYear, 4);
                  case 'W':
                    return i.num(e.weekNumber);
                  case 'WW':
                    return i.num(e.weekNumber, 2);
                  case 'o':
                    return i.num(e.ordinal);
                  case 'ooo':
                    return i.num(e.ordinal, 3);
                  case 'q':
                    return i.num(e.quarter);
                  case 'qq':
                    return i.num(e.quarter, 2);
                  case 'X':
                    return i.num(Math.floor(e.ts / 1e3));
                  case 'x':
                    return i.num(e.ts);
                  default:
                    return (function (n) {
                      var r = t.macroTokenToFormatOpts(n);
                      return r ? i.formatWithSystemDefault(e, r) : n;
                    })(n);
                }
              });
            }),
            (e.formatDurationFromString = function (e, n) {
              var i,
                r = this,
                s = function (t) {
                  switch (t[0]) {
                    case 'S':
                      return 'millisecond';
                    case 's':
                      return 'second';
                    case 'm':
                      return 'minute';
                    case 'h':
                      return 'hour';
                    case 'd':
                      return 'day';
                    case 'M':
                      return 'month';
                    case 'y':
                      return 'year';
                    default:
                      return null;
                  }
                },
                o = t.parseFormat(n),
                a = o.reduce(function (t, e) {
                  return e.literal ? t : t.concat(e.val);
                }, []),
                c = e.shiftTo.apply(
                  e,
                  a.map(s).filter(function (t) {
                    return t;
                  })
                );
              return jt(
                o,
                ((i = c),
                function (t) {
                  var e = s(t);
                  return e ? r.num(i.get(e), t.length) : t;
                })
              );
            }),
            t
          );
        })(),
        Mt = (function () {
          function t(t, e) {
            (this.reason = t), (this.explanation = e);
          }
          return (
            (t.prototype.toMessage = function () {
              return this.explanation ? this.reason + ': ' + this.explanation : this.reason;
            }),
            t
          );
        })(),
        Ft = (function () {
          function t() {}
          var e = t.prototype;
          return (
            (e.offsetName = function (t, e) {
              throw new v();
            }),
            (e.formatOffset = function (t, e) {
              throw new v();
            }),
            (e.offset = function (t) {
              throw new v();
            }),
            (e.equals = function (t) {
              throw new v();
            }),
            r(t, [
              {
                key: 'type',
                get: function () {
                  throw new v();
                },
              },
              {
                key: 'name',
                get: function () {
                  throw new v();
                },
              },
              {
                key: 'universal',
                get: function () {
                  throw new v();
                },
              },
              {
                key: 'isValid',
                get: function () {
                  throw new v();
                },
              },
            ]),
            t
          );
        })(),
        Nt = null,
        Vt = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          s(e, t);
          var n = e.prototype;
          return (
            (n.offsetName = function (t, e) {
              return ht(t, e.format, e.locale);
            }),
            (n.formatOffset = function (t, e) {
              return mt(this.offset(t), e);
            }),
            (n.offset = function (t) {
              return -new Date(t).getTimezoneOffset();
            }),
            (n.equals = function (t) {
              return 'local' === t.type;
            }),
            r(
              e,
              [
                {
                  key: 'type',
                  get: function () {
                    return 'local';
                  },
                },
                {
                  key: 'name',
                  get: function () {
                    return X() ? new Intl.DateTimeFormat().resolvedOptions().timeZone : 'local';
                  },
                },
                {
                  key: 'universal',
                  get: function () {
                    return !1;
                  },
                },
                {
                  key: 'isValid',
                  get: function () {
                    return !0;
                  },
                },
              ],
              [
                {
                  key: 'instance',
                  get: function () {
                    return null === Nt && (Nt = new e()), Nt;
                  },
                },
              ]
            ),
            e
          );
        })(Ft),
        Lt = RegExp('^' + bt.source + '$'),
        Ht = {},
        zt = { year: 0, month: 1, day: 2, hour: 3, minute: 4, second: 5 },
        Bt = {},
        Ut = (function (t) {
          function e(n) {
            var i;
            return ((i = t.call(this) || this).zoneName = n), (i.valid = e.isValidZone(n)), i;
          }
          s(e, t),
            (e.create = function (t) {
              return Bt[t] || (Bt[t] = new e(t)), Bt[t];
            }),
            (e.resetCache = function () {
              (Bt = {}), (Ht = {});
            }),
            (e.isValidSpecifier = function (t) {
              return !(!t || !t.match(Lt));
            }),
            (e.isValidZone = function (t) {
              try {
                return new Intl.DateTimeFormat('en-US', { timeZone: t }).format(), !0;
              } catch (e) {
                return !1;
              }
            }),
            (e.parseGMTOffset = function (t) {
              if (t) {
                var e = t.match(/^Etc\/GMT([+-]\d{1,2})$/i);
                if (e) return -60 * parseInt(e[1]);
              }
              return null;
            });
          var n = e.prototype;
          return (
            (n.offsetName = function (t, e) {
              return ht(t, e.format, e.locale, this.name);
            }),
            (n.formatOffset = function (t, e) {
              return mt(this.offset(t), e);
            }),
            (n.offset = function (t) {
              var e,
                n = new Date(t),
                i =
                  (Ht[(e = this.name)] ||
                    (Ht[e] = new Intl.DateTimeFormat('en-US', {
                      hour12: !1,
                      timeZone: e,
                      year: 'numeric',
                      month: '2-digit',
                      day: '2-digit',
                      hour: '2-digit',
                      minute: '2-digit',
                      second: '2-digit',
                    })),
                  Ht[e]),
                r = i.formatToParts
                  ? (function (t, e) {
                      for (var n = t.formatToParts(e), i = [], r = 0; r < n.length; r++) {
                        var s = n[r],
                          o = s.value,
                          a = zt[s.type];
                        $(a) || (i[a] = parseInt(o, 10));
                      }
                      return i;
                    })(i, n)
                  : (function (t, e) {
                      var n = t.format(e).replace(/\u200E/g, ''),
                        i = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(n);
                      return [i[3], i[1], i[2], i[4], i[5], i[6]];
                    })(i, n),
                s = r[3],
                o = +n,
                a = o % 1e3;
              return (
                (ct({
                  year: r[0],
                  month: r[1],
                  day: r[2],
                  hour: 24 === s ? 0 : s,
                  minute: r[4],
                  second: r[5],
                  millisecond: 0,
                }) -
                  (o -= a >= 0 ? a : 1e3 + a)) /
                6e4
              );
            }),
            (n.equals = function (t) {
              return 'iana' === t.type && t.name === this.name;
            }),
            r(e, [
              {
                key: 'type',
                get: function () {
                  return 'iana';
                },
              },
              {
                key: 'name',
                get: function () {
                  return this.zoneName;
                },
              },
              {
                key: 'universal',
                get: function () {
                  return !1;
                },
              },
              {
                key: 'isValid',
                get: function () {
                  return this.valid;
                },
              },
            ]),
            e
          );
        })(Ft),
        Wt = null,
        $t = (function (t) {
          function e(e) {
            var n;
            return ((n = t.call(this) || this).fixed = e), n;
          }
          s(e, t),
            (e.instance = function (t) {
              return 0 === t ? e.utcInstance : new e(t);
            }),
            (e.parseSpecifier = function (t) {
              if (t) {
                var n = t.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);
                if (n) return new e(dt(n[1], n[2]));
              }
              return null;
            }),
            r(e, null, [
              {
                key: 'utcInstance',
                get: function () {
                  return null === Wt && (Wt = new e(0)), Wt;
                },
              },
            ]);
          var n = e.prototype;
          return (
            (n.offsetName = function () {
              return this.name;
            }),
            (n.formatOffset = function (t, e) {
              return mt(this.fixed, e);
            }),
            (n.offset = function () {
              return this.fixed;
            }),
            (n.equals = function (t) {
              return 'fixed' === t.type && t.fixed === this.fixed;
            }),
            r(e, [
              {
                key: 'type',
                get: function () {
                  return 'fixed';
                },
              },
              {
                key: 'name',
                get: function () {
                  return 0 === this.fixed ? 'UTC' : 'UTC' + mt(this.fixed, 'narrow');
                },
              },
              {
                key: 'universal',
                get: function () {
                  return !0;
                },
              },
              {
                key: 'isValid',
                get: function () {
                  return !0;
                },
              },
            ]),
            e
          );
        })(Ft),
        qt = (function (t) {
          function e(e) {
            var n;
            return ((n = t.call(this) || this).zoneName = e), n;
          }
          s(e, t);
          var n = e.prototype;
          return (
            (n.offsetName = function () {
              return null;
            }),
            (n.formatOffset = function () {
              return '';
            }),
            (n.offset = function () {
              return NaN;
            }),
            (n.equals = function () {
              return !1;
            }),
            r(e, [
              {
                key: 'type',
                get: function () {
                  return 'invalid';
                },
              },
              {
                key: 'name',
                get: function () {
                  return this.zoneName;
                },
              },
              {
                key: 'universal',
                get: function () {
                  return !1;
                },
              },
              {
                key: 'isValid',
                get: function () {
                  return !1;
                },
              },
            ]),
            e
          );
        })(Ft);
      function Gt(t, e) {
        var n;
        if ($(t) || null === t) return e;
        if (t instanceof Ft) return t;
        if ('string' == typeof t) {
          var i = t.toLowerCase();
          return 'local' === i
            ? e
            : 'utc' === i || 'gmt' === i
            ? $t.utcInstance
            : null != (n = Ut.parseGMTOffset(t))
            ? $t.instance(n)
            : Ut.isValidSpecifier(i)
            ? Ut.create(t)
            : $t.parseSpecifier(i) || new qt(t);
        }
        return q(t) ? $t.instance(t) : 'object' == typeof t && t.offset && 'number' == typeof t.offset ? t : new qt(t);
      }
      var Xt = function () {
          return Date.now();
        },
        Kt = null,
        Yt = null,
        Zt = null,
        Qt = null,
        Jt = !1,
        te = (function () {
          function t() {}
          return (
            (t.resetCaches = function () {
              ue.resetCache(), Ut.resetCache();
            }),
            r(t, null, [
              {
                key: 'now',
                get: function () {
                  return Xt;
                },
                set: function (t) {
                  Xt = t;
                },
              },
              {
                key: 'defaultZoneName',
                get: function () {
                  return t.defaultZone.name;
                },
                set: function (t) {
                  Kt = t ? Gt(t) : null;
                },
              },
              {
                key: 'defaultZone',
                get: function () {
                  return Kt || Vt.instance;
                },
              },
              {
                key: 'defaultLocale',
                get: function () {
                  return Yt;
                },
                set: function (t) {
                  Yt = t;
                },
              },
              {
                key: 'defaultNumberingSystem',
                get: function () {
                  return Zt;
                },
                set: function (t) {
                  Zt = t;
                },
              },
              {
                key: 'defaultOutputCalendar',
                get: function () {
                  return Qt;
                },
                set: function (t) {
                  Qt = t;
                },
              },
              {
                key: 'throwOnInvalid',
                get: function () {
                  return Jt;
                },
                set: function (t) {
                  Jt = t;
                },
              },
            ]),
            t
          );
        })(),
        ee = {};
      function ne(t, e) {
        void 0 === e && (e = {});
        var n = JSON.stringify([t, e]),
          i = ee[n];
        return i || ((i = new Intl.DateTimeFormat(t, e)), (ee[n] = i)), i;
      }
      var ie = {},
        re = {},
        se = null;
      function oe(t, e, n, i, r) {
        var s = t.listingMode(n);
        return 'error' === s ? null : 'en' === s ? i(e) : r(e);
      }
      var ae = (function () {
          function t(t, e, n) {
            if (((this.padTo = n.padTo || 0), (this.floor = n.floor || !1), !e && X())) {
              var i = { useGrouping: !1 };
              n.padTo > 0 && (i.minimumIntegerDigits = n.padTo),
                (this.inf = (function (t, e) {
                  void 0 === e && (e = {});
                  var n = JSON.stringify([t, e]),
                    i = ie[n];
                  return i || ((i = new Intl.NumberFormat(t, e)), (ie[n] = i)), i;
                })(t, i));
            }
          }
          return (
            (t.prototype.format = function (t) {
              if (this.inf) {
                var e = this.floor ? Math.floor(t) : t;
                return this.inf.format(e);
              }
              return et(this.floor ? Math.floor(t) : rt(t, 3), this.padTo);
            }),
            t
          );
        })(),
        ce = (function () {
          function t(t, e, n) {
            var i;
            if (
              ((this.opts = n),
              (this.hasIntl = X()),
              t.zone.universal && this.hasIntl
                ? ((i = 'UTC'),
                  (this.dt = n.timeZoneName || 0 === t.offset ? t : ii.fromMillis(t.ts + 60 * t.offset * 1e3)))
                : 'local' === t.zone.type
                ? (this.dt = t)
                : ((this.dt = t), (i = t.zone.name)),
              this.hasIntl)
            ) {
              var r = Object.assign({}, this.opts);
              i && (r.timeZone = i), (this.dtf = ne(e, r));
            }
          }
          var e = t.prototype;
          return (
            (e.format = function () {
              if (this.hasIntl) return this.dtf.format(this.dt.toJSDate());
              var t = (function (t) {
                  switch (
                    _t(
                      Q(t, [
                        'weekday',
                        'era',
                        'year',
                        'month',
                        'day',
                        'hour',
                        'minute',
                        'second',
                        'timeZoneName',
                        'hour12',
                      ])
                    )
                  ) {
                    case _t(k):
                      return 'M/d/yyyy';
                    case _t(O):
                      return 'LLL d, yyyy';
                    case _t(S):
                      return 'LLLL d, yyyy';
                    case _t(E):
                      return 'EEEE, LLLL d, yyyy';
                    case _t(T):
                      return 'h:mm a';
                    case _t(I):
                      return 'h:mm:ss a';
                    case _t(A):
                    case _t(D):
                      return 'h:mm a';
                    case _t(j):
                      return 'HH:mm';
                    case _t(R):
                      return 'HH:mm:ss';
                    case _t(P):
                    case _t(M):
                      return 'HH:mm';
                    case _t(F):
                      return 'M/d/yyyy, h:mm a';
                    case _t(V):
                      return 'LLL d, yyyy, h:mm a';
                    case _t(z):
                      return 'LLLL d, yyyy, h:mm a';
                    case _t(U):
                      return 'EEEE, LLLL d, yyyy, h:mm a';
                    case _t(N):
                      return 'M/d/yyyy, h:mm:ss a';
                    case _t(L):
                      return 'LLL d, yyyy, h:mm:ss a';
                    case _t(H):
                      return 'EEE, d LLL yyyy, h:mm a';
                    case _t(B):
                      return 'LLLL d, yyyy, h:mm:ss a';
                    case _t(W):
                      return 'EEEE, LLLL d, yyyy, h:mm:ss a';
                    default:
                      return 'EEEE, LLLL d, yyyy, h:mm a';
                  }
                })(this.opts),
                e = ue.create('en-US');
              return Pt.create(e).formatDateTimeFromString(this.dt, t);
            }),
            (e.formatToParts = function () {
              return this.hasIntl && K() ? this.dtf.formatToParts(this.dt.toJSDate()) : [];
            }),
            (e.resolvedOptions = function () {
              return this.hasIntl
                ? this.dtf.resolvedOptions()
                : { locale: 'en-US', numberingSystem: 'latn', outputCalendar: 'gregory' };
            }),
            t
          );
        })(),
        le = (function () {
          function t(t, e, n) {
            (this.opts = Object.assign({ style: 'long' }, n)),
              !e &&
                Y() &&
                (this.rtf = (function (t, e) {
                  void 0 === e && (e = {});
                  var n = (function (t, e) {
                      if (null == t) return {};
                      var n,
                        i,
                        r = {},
                        s = Object.keys(t);
                      for (i = 0; i < s.length; i++) e.indexOf((n = s[i])) >= 0 || (r[n] = t[n]);
                      return r;
                    })(e, ['base']),
                    i = JSON.stringify([t, n]),
                    r = re[i];
                  return r || ((r = new Intl.RelativeTimeFormat(t, e)), (re[i] = r)), r;
                })(t, n));
          }
          var e = t.prototype;
          return (
            (e.format = function (t, e) {
              return this.rtf
                ? this.rtf.format(t, e)
                : (function (t, e, n, i) {
                    void 0 === n && (n = 'always'), void 0 === i && (i = !1);
                    var r = {
                        years: ['year', 'yr.'],
                        quarters: ['quarter', 'qtr.'],
                        months: ['month', 'mo.'],
                        weeks: ['week', 'wk.'],
                        days: ['day', 'day', 'days'],
                        hours: ['hour', 'hr.'],
                        minutes: ['minute', 'min.'],
                        seconds: ['second', 'sec.'],
                      },
                      s = -1 === ['hours', 'minutes', 'seconds'].indexOf(t);
                    if ('auto' === n && s) {
                      var o = 'days' === t;
                      switch (e) {
                        case 1:
                          return o ? 'tomorrow' : 'next ' + r[t][0];
                        case -1:
                          return o ? 'yesterday' : 'last ' + r[t][0];
                        case 0:
                          return o ? 'today' : 'this ' + r[t][0];
                      }
                    }
                    var a = Object.is(e, -0) || e < 0,
                      c = Math.abs(e),
                      l = 1 === c,
                      u = r[t],
                      h = i ? (l ? u[1] : u[2] || u[1]) : l ? r[t][0] : t;
                    return a ? c + ' ' + h + ' ago' : 'in ' + c + ' ' + h;
                  })(e, t, this.opts.numeric, 'long' !== this.opts.style);
            }),
            (e.formatToParts = function (t, e) {
              return this.rtf ? this.rtf.formatToParts(t, e) : [];
            }),
            t
          );
        })(),
        ue = (function () {
          function t(t, e, n, i) {
            var r = (function (t) {
                var e = t.indexOf('-u-');
                if (-1 === e) return [t];
                var n,
                  i = t.substring(0, e);
                try {
                  n = ne(t).resolvedOptions();
                } catch (r) {
                  n = ne(i).resolvedOptions();
                }
                return [i, n.numberingSystem, n.calendar];
              })(t),
              s = r[1],
              o = r[2];
            (this.locale = r[0]),
              (this.numberingSystem = e || s || null),
              (this.outputCalendar = n || o || null),
              (this.intl = (function (t, e, n) {
                return X() ? (n || e ? ((t += '-u'), n && (t += '-ca-' + n), e && (t += '-nu-' + e), t) : t) : [];
              })(this.locale, this.numberingSystem, this.outputCalendar)),
              (this.weekdaysCache = { format: {}, standalone: {} }),
              (this.monthsCache = { format: {}, standalone: {} }),
              (this.meridiemCache = null),
              (this.eraCache = {}),
              (this.specifiedLocale = i),
              (this.fastNumbersCached = null);
          }
          (t.fromOpts = function (e) {
            return t.create(e.locale, e.numberingSystem, e.outputCalendar, e.defaultToEN);
          }),
            (t.create = function (e, n, i, r) {
              void 0 === r && (r = !1);
              var s = e || te.defaultLocale;
              return new t(
                s ||
                  (r
                    ? 'en-US'
                    : (function () {
                        if (se) return se;
                        if (X()) {
                          var t = new Intl.DateTimeFormat().resolvedOptions().locale;
                          return (se = t && 'und' !== t ? t : 'en-US');
                        }
                        return (se = 'en-US');
                      })()),
                n || te.defaultNumberingSystem,
                i || te.defaultOutputCalendar,
                s
              );
            }),
            (t.resetCache = function () {
              (se = null), (ee = {}), (ie = {}), (re = {});
            }),
            (t.fromObject = function (e) {
              var n = void 0 === e ? {} : e;
              return t.create(n.locale, n.numberingSystem, n.outputCalendar);
            });
          var e = t.prototype;
          return (
            (e.listingMode = function (t) {
              void 0 === t && (t = !0);
              var e = X() && K(),
                n = this.isEnglish(),
                i = !(
                  (null !== this.numberingSystem && 'latn' !== this.numberingSystem) ||
                  (null !== this.outputCalendar && 'gregory' !== this.outputCalendar)
                );
              return e || (n && i) || t ? (!e || (n && i) ? 'en' : 'intl') : 'error';
            }),
            (e.clone = function (e) {
              return e && 0 !== Object.getOwnPropertyNames(e).length
                ? t.create(
                    e.locale || this.specifiedLocale,
                    e.numberingSystem || this.numberingSystem,
                    e.outputCalendar || this.outputCalendar,
                    e.defaultToEN || !1
                  )
                : this;
            }),
            (e.redefaultToEN = function (t) {
              return void 0 === t && (t = {}), this.clone(Object.assign({}, t, { defaultToEN: !0 }));
            }),
            (e.redefaultToSystem = function (t) {
              return void 0 === t && (t = {}), this.clone(Object.assign({}, t, { defaultToEN: !1 }));
            }),
            (e.months = function (t, e, n) {
              var i = this;
              return (
                void 0 === e && (e = !1),
                void 0 === n && (n = !0),
                oe(this, t, n, xt, function () {
                  var n = e ? { month: t, day: 'numeric' } : { month: t },
                    r = e ? 'format' : 'standalone';
                  return (
                    i.monthsCache[r][t] ||
                      (i.monthsCache[r][t] = (function (t) {
                        for (var e = [], n = 1; n <= 12; n++) {
                          var i = ii.utc(2016, n, 1);
                          e.push(t(i));
                        }
                        return e;
                      })(function (t) {
                        return i.extract(t, n, 'month');
                      })),
                    i.monthsCache[r][t]
                  );
                })
              );
            }),
            (e.weekdays = function (t, e, n) {
              var i = this;
              return (
                void 0 === e && (e = !1),
                void 0 === n && (n = !0),
                oe(this, t, n, St, function () {
                  var n = e ? { weekday: t, year: 'numeric', month: 'long', day: 'numeric' } : { weekday: t },
                    r = e ? 'format' : 'standalone';
                  return (
                    i.weekdaysCache[r][t] ||
                      (i.weekdaysCache[r][t] = (function (t) {
                        for (var e = [], n = 1; n <= 7; n++) {
                          var i = ii.utc(2016, 11, 13 + n);
                          e.push(t(i));
                        }
                        return e;
                      })(function (t) {
                        return i.extract(t, n, 'weekday');
                      })),
                    i.weekdaysCache[r][t]
                  );
                })
              );
            }),
            (e.meridiems = function (t) {
              var e = this;
              return (
                void 0 === t && (t = !0),
                oe(
                  this,
                  void 0,
                  t,
                  function () {
                    return Et;
                  },
                  function () {
                    if (!e.meridiemCache) {
                      var t = { hour: 'numeric', hour12: !0 };
                      e.meridiemCache = [ii.utc(2016, 11, 13, 9), ii.utc(2016, 11, 13, 19)].map(function (n) {
                        return e.extract(n, t, 'dayperiod');
                      });
                    }
                    return e.meridiemCache;
                  }
                )
              );
            }),
            (e.eras = function (t, e) {
              var n = this;
              return (
                void 0 === e && (e = !0),
                oe(this, t, e, Dt, function () {
                  var e = { era: t };
                  return (
                    n.eraCache[t] ||
                      (n.eraCache[t] = [ii.utc(-40, 1, 1), ii.utc(2017, 1, 1)].map(function (t) {
                        return n.extract(t, e, 'era');
                      })),
                    n.eraCache[t]
                  );
                })
              );
            }),
            (e.extract = function (t, e, n) {
              var i = this.dtFormatter(t, e)
                .formatToParts()
                .find(function (t) {
                  return t.type.toLowerCase() === n;
                });
              return i ? i.value : null;
            }),
            (e.numberFormatter = function (t) {
              return void 0 === t && (t = {}), new ae(this.intl, t.forceSimple || this.fastNumbers, t);
            }),
            (e.dtFormatter = function (t, e) {
              return void 0 === e && (e = {}), new ce(t, this.intl, e);
            }),
            (e.relFormatter = function (t) {
              return void 0 === t && (t = {}), new le(this.intl, this.isEnglish(), t);
            }),
            (e.isEnglish = function () {
              return (
                'en' === this.locale ||
                'en-us' === this.locale.toLowerCase() ||
                (X() && new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith('en-us'))
              );
            }),
            (e.equals = function (t) {
              return (
                this.locale === t.locale &&
                this.numberingSystem === t.numberingSystem &&
                this.outputCalendar === t.outputCalendar
              );
            }),
            r(t, [
              {
                key: 'fastNumbers',
                get: function () {
                  return (
                    null == this.fastNumbersCached &&
                      (this.fastNumbersCached =
                        (!this.numberingSystem || 'latn' === this.numberingSystem) &&
                        ('latn' === this.numberingSystem ||
                          !this.locale ||
                          this.locale.startsWith('en') ||
                          (X() && 'latn' === new Intl.DateTimeFormat(this.intl).resolvedOptions().numberingSystem))),
                    this.fastNumbersCached
                  );
                },
              },
            ]),
            t
          );
        })();
      function he() {
        for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
        var i = e.reduce(function (t, e) {
          return t + e.source;
        }, '');
        return RegExp('^' + i + '$');
      }
      function de() {
        for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
        return function (t) {
          return e
            .reduce(
              function (e, n) {
                var i = e[0],
                  r = e[1],
                  s = n(t, e[2]),
                  o = s[1],
                  a = s[2];
                return [Object.assign(i, s[0]), r || o, a];
              },
              [{}, null, 1]
            )
            .slice(0, 2);
        };
      }
      function pe(t) {
        if (null == t) return [null, null];
        for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++) n[i - 1] = arguments[i];
        for (var r = 0, s = n; r < s.length; r++) {
          var o = s[r],
            a = o[0],
            c = o[1],
            l = a.exec(t);
          if (l) return c(l);
        }
        return [null, null];
      }
      function fe() {
        for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
        return function (t, n) {
          var i,
            r = {};
          for (i = 0; i < e.length; i++) r[e[i]] = nt(t[n + i]);
          return [r, null, n + i];
        };
      }
      var me = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,
        ge = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,9}))?)?)?/,
        be = RegExp('' + ge.source + me.source + '?'),
        _e = RegExp('(?:T' + be.source + ')?'),
        ye = fe('weekYear', 'weekNumber', 'weekDay'),
        ve = fe('year', 'ordinal'),
        we = RegExp(ge.source + ' ?(?:' + me.source + '|(' + bt.source + '))?'),
        xe = RegExp('(?: ' + we.source + ')?');
      function Ce(t, e, n) {
        var i = t[e];
        return $(i) ? n : nt(i);
      }
      function ke(t, e) {
        return [{ year: Ce(t, e), month: Ce(t, e + 1, 1), day: Ce(t, e + 2, 1) }, null, e + 3];
      }
      function Oe(t, e) {
        return [
          { hour: Ce(t, e, 0), minute: Ce(t, e + 1, 0), second: Ce(t, e + 2, 0), millisecond: it(t[e + 3]) },
          null,
          e + 4,
        ];
      }
      function Se(t, e) {
        var n = !t[e] && !t[e + 1],
          i = dt(t[e + 1], t[e + 2]);
        return [{}, n ? null : $t.instance(i), e + 3];
      }
      function Ee(t, e) {
        return [{}, t[e] ? Ut.create(t[e]) : null, e + 1];
      }
      var Te = /^-?P(?:(?:(-?\d{1,9})Y)?(?:(-?\d{1,9})M)?(?:(-?\d{1,9})W)?(?:(-?\d{1,9})D)?(?:T(?:(-?\d{1,9})H)?(?:(-?\d{1,9})M)?(?:(-?\d{1,9})(?:[.,](-?\d{1,9}))?S)?)?)$/;
      function Ie(t) {
        var e = t[2],
          n = t[3],
          i = t[4],
          r = t[5],
          s = t[6],
          o = t[7],
          a = t[8],
          c = '-' === t[0][0],
          l = function (t) {
            return t && c ? -t : t;
          };
        return [
          {
            years: l(nt(t[1])),
            months: l(nt(e)),
            weeks: l(nt(n)),
            days: l(nt(i)),
            hours: l(nt(r)),
            minutes: l(nt(s)),
            seconds: l(nt(o)),
            milliseconds: l(it(a)),
          },
        ];
      }
      var Ae = { GMT: 0, EDT: -240, EST: -300, CDT: -300, CST: -360, MDT: -360, MST: -420, PDT: -420, PST: -480 };
      function De(t, e, n, i, r, s, o) {
        var a = {
          year: 2 === e.length ? ut(nt(e)) : nt(e),
          month: vt.indexOf(n) + 1,
          day: nt(i),
          hour: nt(r),
          minute: nt(s),
        };
        return o && (a.second = nt(o)), t && (a.weekday = t.length > 3 ? Ct.indexOf(t) + 1 : kt.indexOf(t) + 1), a;
      }
      var je = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;
      function Re(t) {
        var e,
          n = t[8],
          i = t[9],
          r = t[10],
          s = t[11],
          o = De(t[1], t[4], t[3], t[2], t[5], t[6], t[7]);
        return (e = n ? Ae[n] : i ? 0 : dt(r, s)), [o, new $t(e)];
      }
      var Pe = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,
        Me = /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,
        Fe = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;
      function Ne(t) {
        return [De(t[1], t[4], t[3], t[2], t[5], t[6], t[7]), $t.utcInstance];
      }
      function Ve(t) {
        return [De(t[1], t[7], t[2], t[3], t[4], t[5], t[6]), $t.utcInstance];
      }
      var Le = he(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/, _e),
        He = he(/(\d{4})-?W(\d\d)(?:-?(\d))?/, _e),
        ze = he(/(\d{4})-?(\d{3})/, _e),
        Be = he(be),
        Ue = de(ke, Oe, Se),
        We = de(ye, Oe, Se),
        $e = de(ve, Oe),
        qe = de(Oe, Se),
        Ge = he(/(\d{4})-(\d\d)-(\d\d)/, xe),
        Xe = he(we),
        Ke = de(ke, Oe, Se, Ee),
        Ye = de(Oe, Se, Ee),
        Ze = {
          weeks: { days: 7, hours: 168, minutes: 10080, seconds: 604800, milliseconds: 6048e5 },
          days: { hours: 24, minutes: 1440, seconds: 86400, milliseconds: 864e5 },
          hours: { minutes: 60, seconds: 3600, milliseconds: 36e5 },
          minutes: { seconds: 60, milliseconds: 6e4 },
          seconds: { milliseconds: 1e3 },
        },
        Qe = Object.assign(
          {
            years: {
              months: 12,
              weeks: 52,
              days: 365,
              hours: 8760,
              minutes: 525600,
              seconds: 31536e3,
              milliseconds: 31536e6,
            },
            quarters: { months: 3, weeks: 13, days: 91, hours: 2184, minutes: 131040, milliseconds: 78624e5 },
            months: { weeks: 4, days: 30, hours: 720, minutes: 43200, seconds: 2592e3, milliseconds: 2592e6 },
          },
          Ze
        ),
        Je = Object.assign(
          {
            years: {
              months: 12,
              weeks: 52.1775,
              days: 365.2425,
              hours: 8765.82,
              minutes: 525949.2,
              seconds: 525949.2 * 60,
              milliseconds: 525949.2 * 60 * 1e3,
            },
            quarters: {
              months: 3,
              weeks: 13.044375,
              days: 91.310625,
              hours: 2191.455,
              minutes: 131487.3,
              seconds: (525949.2 * 60) / 4,
              milliseconds: 7889237999.999999,
            },
            months: {
              weeks: 30.436875 / 7,
              days: 30.436875,
              hours: 730.485,
              minutes: 43829.1,
              seconds: 2629746,
              milliseconds: 2629746e3,
            },
          },
          Ze
        ),
        tn = ['years', 'quarters', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds', 'milliseconds'],
        en = tn.slice(0).reverse();
      function nn(t, e, n) {
        void 0 === n && (n = !1);
        var i = {
          values: n ? e.values : Object.assign({}, t.values, e.values || {}),
          loc: t.loc.clone(e.loc),
          conversionAccuracy: e.conversionAccuracy || t.conversionAccuracy,
        };
        return new on(i);
      }
      function rn(t, e, n, i, r) {
        var s = t[r][n],
          o = e[n] / s,
          a =
            Math.sign(o) !== Math.sign(i[r]) && 0 !== i[r] && Math.abs(o) <= 1
              ? (function (t) {
                  return t < 0 ? Math.floor(t) : Math.ceil(t);
                })(o)
              : Math.trunc(o);
        (i[r] += a), (e[n] -= a * s);
      }
      function sn(t, e) {
        en.reduce(function (n, i) {
          return $(e[i]) ? n : (n && rn(t, e, n, e, i), i);
        }, null);
      }
      var on = (function () {
        function t(t) {
          var e = 'longterm' === t.conversionAccuracy || !1;
          (this.values = t.values),
            (this.loc = t.loc || ue.create()),
            (this.conversionAccuracy = e ? 'longterm' : 'casual'),
            (this.invalid = t.invalid || null),
            (this.matrix = e ? Je : Qe),
            (this.isLuxonDuration = !0);
        }
        (t.fromMillis = function (e, n) {
          return t.fromObject(Object.assign({ milliseconds: e }, n));
        }),
          (t.fromObject = function (e) {
            if (null == e || 'object' != typeof e)
              throw new y(
                'Duration.fromObject: argument expected to be an object, got ' + (null === e ? 'null' : typeof e)
              );
            return new t({
              values: ft(e, t.normalizeUnit, ['locale', 'numberingSystem', 'conversionAccuracy', 'zone']),
              loc: ue.fromObject(e),
              conversionAccuracy: e.conversionAccuracy,
            });
          }),
          (t.fromISO = function (e, n) {
            var i = (function (t) {
              return pe(t, [Te, Ie]);
            })(e)[0];
            if (i) {
              var r = Object.assign(i, n);
              return t.fromObject(r);
            }
            return t.invalid('unparsable', 'the input "' + e + '" can\'t be parsed as ISO 8601');
          }),
          (t.invalid = function (e, n) {
            if ((void 0 === n && (n = null), !e)) throw new y('need to specify a reason the Duration is invalid');
            var i = e instanceof Mt ? e : new Mt(e, n);
            if (te.throwOnInvalid) throw new g(i);
            return new t({ invalid: i });
          }),
          (t.normalizeUnit = function (t) {
            var e = {
              year: 'years',
              years: 'years',
              quarter: 'quarters',
              quarters: 'quarters',
              month: 'months',
              months: 'months',
              week: 'weeks',
              weeks: 'weeks',
              day: 'days',
              days: 'days',
              hour: 'hours',
              hours: 'hours',
              minute: 'minutes',
              minutes: 'minutes',
              second: 'seconds',
              seconds: 'seconds',
              millisecond: 'milliseconds',
              milliseconds: 'milliseconds',
            }[t ? t.toLowerCase() : t];
            if (!e) throw new _(t);
            return e;
          }),
          (t.isDuration = function (t) {
            return (t && t.isLuxonDuration) || !1;
          });
        var e = t.prototype;
        return (
          (e.toFormat = function (t, e) {
            void 0 === e && (e = {});
            var n = Object.assign({}, e, { floor: !1 !== e.round && !1 !== e.floor });
            return this.isValid ? Pt.create(this.loc, n).formatDurationFromString(this, t) : 'Invalid Duration';
          }),
          (e.toObject = function (t) {
            if ((void 0 === t && (t = {}), !this.isValid)) return {};
            var e = Object.assign({}, this.values);
            return (
              t.includeConfig &&
                ((e.conversionAccuracy = this.conversionAccuracy),
                (e.numberingSystem = this.loc.numberingSystem),
                (e.locale = this.loc.locale)),
              e
            );
          }),
          (e.toISO = function () {
            if (!this.isValid) return null;
            var t = 'P';
            return (
              0 !== this.years && (t += this.years + 'Y'),
              (0 === this.months && 0 === this.quarters) || (t += this.months + 3 * this.quarters + 'M'),
              0 !== this.weeks && (t += this.weeks + 'W'),
              0 !== this.days && (t += this.days + 'D'),
              (0 === this.hours && 0 === this.minutes && 0 === this.seconds && 0 === this.milliseconds) || (t += 'T'),
              0 !== this.hours && (t += this.hours + 'H'),
              0 !== this.minutes && (t += this.minutes + 'M'),
              (0 === this.seconds && 0 === this.milliseconds) ||
                (t += rt(this.seconds + this.milliseconds / 1e3, 3) + 'S'),
              'P' === t && (t += 'T0S'),
              t
            );
          }),
          (e.toJSON = function () {
            return this.toISO();
          }),
          (e.toString = function () {
            return this.toISO();
          }),
          (e.valueOf = function () {
            return this.as('milliseconds');
          }),
          (e.plus = function (t) {
            if (!this.isValid) return this;
            for (var e, n = an(t), i = {}, r = d(tn); !(e = r()).done; ) {
              var s = e.value;
              (J(n.values, s) || J(this.values, s)) && (i[s] = n.get(s) + this.get(s));
            }
            return nn(this, { values: i }, !0);
          }),
          (e.minus = function (t) {
            if (!this.isValid) return this;
            var e = an(t);
            return this.plus(e.negate());
          }),
          (e.mapUnits = function (t) {
            if (!this.isValid) return this;
            for (var e = {}, n = 0, i = Object.keys(this.values); n < i.length; n++) {
              var r = i[n];
              e[r] = pt(t(this.values[r], r));
            }
            return nn(this, { values: e }, !0);
          }),
          (e.get = function (e) {
            return this[t.normalizeUnit(e)];
          }),
          (e.set = function (e) {
            return this.isValid ? nn(this, { values: Object.assign(this.values, ft(e, t.normalizeUnit, [])) }) : this;
          }),
          (e.reconfigure = function (t) {
            var e = void 0 === t ? {} : t,
              n = e.conversionAccuracy,
              i = { loc: this.loc.clone({ locale: e.locale, numberingSystem: e.numberingSystem }) };
            return n && (i.conversionAccuracy = n), nn(this, i);
          }),
          (e.as = function (t) {
            return this.isValid ? this.shiftTo(t).get(t) : NaN;
          }),
          (e.normalize = function () {
            if (!this.isValid) return this;
            var t = this.toObject();
            return sn(this.matrix, t), nn(this, { values: t }, !0);
          }),
          (e.shiftTo = function () {
            for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
            if (!this.isValid) return this;
            if (0 === n.length) return this;
            n = n.map(function (e) {
              return t.normalizeUnit(e);
            });
            var r,
              s = {},
              o = {},
              a = this.toObject();
            sn(this.matrix, a);
            for (var c, l = d(tn); !(c = l()).done; ) {
              var u = c.value;
              if (n.indexOf(u) >= 0) {
                r = u;
                var h = 0;
                for (var p in o) (h += this.matrix[p][u] * o[p]), (o[p] = 0);
                q(a[u]) && (h += a[u]);
                var f = Math.trunc(h);
                for (var m in ((s[u] = f), (o[u] = h - f), a))
                  tn.indexOf(m) > tn.indexOf(u) && rn(this.matrix, a, m, s, u);
              } else q(a[u]) && (o[u] = a[u]);
            }
            for (var g in o) 0 !== o[g] && (s[r] += g === r ? o[g] : o[g] / this.matrix[r][g]);
            return nn(this, { values: s }, !0).normalize();
          }),
          (e.negate = function () {
            if (!this.isValid) return this;
            for (var t = {}, e = 0, n = Object.keys(this.values); e < n.length; e++) {
              var i = n[e];
              t[i] = -this.values[i];
            }
            return nn(this, { values: t }, !0);
          }),
          (e.equals = function (t) {
            if (!this.isValid || !t.isValid) return !1;
            if (!this.loc.equals(t.loc)) return !1;
            for (var e, n = d(tn); !(e = n()).done; ) {
              var i = e.value;
              if (this.values[i] !== t.values[i]) return !1;
            }
            return !0;
          }),
          r(t, [
            {
              key: 'locale',
              get: function () {
                return this.isValid ? this.loc.locale : null;
              },
            },
            {
              key: 'numberingSystem',
              get: function () {
                return this.isValid ? this.loc.numberingSystem : null;
              },
            },
            {
              key: 'years',
              get: function () {
                return this.isValid ? this.values.years || 0 : NaN;
              },
            },
            {
              key: 'quarters',
              get: function () {
                return this.isValid ? this.values.quarters || 0 : NaN;
              },
            },
            {
              key: 'months',
              get: function () {
                return this.isValid ? this.values.months || 0 : NaN;
              },
            },
            {
              key: 'weeks',
              get: function () {
                return this.isValid ? this.values.weeks || 0 : NaN;
              },
            },
            {
              key: 'days',
              get: function () {
                return this.isValid ? this.values.days || 0 : NaN;
              },
            },
            {
              key: 'hours',
              get: function () {
                return this.isValid ? this.values.hours || 0 : NaN;
              },
            },
            {
              key: 'minutes',
              get: function () {
                return this.isValid ? this.values.minutes || 0 : NaN;
              },
            },
            {
              key: 'seconds',
              get: function () {
                return this.isValid ? this.values.seconds || 0 : NaN;
              },
            },
            {
              key: 'milliseconds',
              get: function () {
                return this.isValid ? this.values.milliseconds || 0 : NaN;
              },
            },
            {
              key: 'isValid',
              get: function () {
                return null === this.invalid;
              },
            },
            {
              key: 'invalidReason',
              get: function () {
                return this.invalid ? this.invalid.reason : null;
              },
            },
            {
              key: 'invalidExplanation',
              get: function () {
                return this.invalid ? this.invalid.explanation : null;
              },
            },
          ]),
          t
        );
      })();
      function an(t) {
        if (q(t)) return on.fromMillis(t);
        if (on.isDuration(t)) return t;
        if ('object' == typeof t) return on.fromObject(t);
        throw new y('Unknown duration argument ' + t + ' of type ' + typeof t);
      }
      var cn = 'Invalid Interval';
      function ln(t, e) {
        return t && t.isValid
          ? e && e.isValid
            ? e < t
              ? un.invalid(
                  'end before start',
                  'The end of an interval must be after its start, but you had start=' +
                    t.toISO() +
                    ' and end=' +
                    e.toISO()
                )
              : null
            : un.invalid('missing or invalid end')
          : un.invalid('missing or invalid start');
      }
      var un = (function () {
          function t(t) {
            (this.s = t.start), (this.e = t.end), (this.invalid = t.invalid || null), (this.isLuxonInterval = !0);
          }
          (t.invalid = function (e, n) {
            if ((void 0 === n && (n = null), !e)) throw new y('need to specify a reason the Interval is invalid');
            var i = e instanceof Mt ? e : new Mt(e, n);
            if (te.throwOnInvalid) throw new m(i);
            return new t({ invalid: i });
          }),
            (t.fromDateTimes = function (e, n) {
              var i = ri(e),
                r = ri(n),
                s = ln(i, r);
              return null == s ? new t({ start: i, end: r }) : s;
            }),
            (t.after = function (e, n) {
              var i = an(n),
                r = ri(e);
              return t.fromDateTimes(r, r.plus(i));
            }),
            (t.before = function (e, n) {
              var i = an(n),
                r = ri(e);
              return t.fromDateTimes(r.minus(i), r);
            }),
            (t.fromISO = function (e, n) {
              var i = (e || '').split('/', 2),
                r = i[0],
                s = i[1];
              if (r && s) {
                var o = ii.fromISO(r, n),
                  a = ii.fromISO(s, n);
                if (o.isValid && a.isValid) return t.fromDateTimes(o, a);
                if (o.isValid) {
                  var c = on.fromISO(s, n);
                  if (c.isValid) return t.after(o, c);
                } else if (a.isValid) {
                  var l = on.fromISO(r, n);
                  if (l.isValid) return t.before(a, l);
                }
              }
              return t.invalid('unparsable', 'the input "' + e + '" can\'t be parsed as ISO 8601');
            }),
            (t.isInterval = function (t) {
              return (t && t.isLuxonInterval) || !1;
            });
          var e = t.prototype;
          return (
            (e.length = function (t) {
              return void 0 === t && (t = 'milliseconds'), this.isValid ? this.toDuration.apply(this, [t]).get(t) : NaN;
            }),
            (e.count = function (t) {
              if ((void 0 === t && (t = 'milliseconds'), !this.isValid)) return NaN;
              var e = this.start.startOf(t),
                n = this.end.startOf(t);
              return Math.floor(n.diff(e, t).get(t)) + 1;
            }),
            (e.hasSame = function (t) {
              return !!this.isValid && this.e.minus(1).hasSame(this.s, t);
            }),
            (e.isEmpty = function () {
              return this.s.valueOf() === this.e.valueOf();
            }),
            (e.isAfter = function (t) {
              return !!this.isValid && this.s > t;
            }),
            (e.isBefore = function (t) {
              return !!this.isValid && this.e <= t;
            }),
            (e.contains = function (t) {
              return !!this.isValid && this.s <= t && this.e > t;
            }),
            (e.set = function (e) {
              var n = void 0 === e ? {} : e;
              return this.isValid ? t.fromDateTimes(n.start || this.s, n.end || this.e) : this;
            }),
            (e.splitAt = function () {
              var e = this;
              if (!this.isValid) return [];
              for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++) i[r] = arguments[r];
              for (
                var s = i
                    .map(ri)
                    .filter(function (t) {
                      return e.contains(t);
                    })
                    .sort(),
                  o = [],
                  a = this.s,
                  c = 0;
                a < this.e;

              ) {
                var l = s[c] || this.e,
                  u = +l > +this.e ? this.e : l;
                o.push(t.fromDateTimes(a, u)), (a = u), (c += 1);
              }
              return o;
            }),
            (e.splitBy = function (e) {
              var n = an(e);
              if (!this.isValid || !n.isValid || 0 === n.as('milliseconds')) return [];
              for (var i, r, s = this.s, o = []; s < this.e; )
                (i = s.plus(n)), o.push(t.fromDateTimes(s, (r = +i > +this.e ? this.e : i))), (s = r);
              return o;
            }),
            (e.divideEqually = function (t) {
              return this.isValid ? this.splitBy(this.length() / t).slice(0, t) : [];
            }),
            (e.overlaps = function (t) {
              return this.e > t.s && this.s < t.e;
            }),
            (e.abutsStart = function (t) {
              return !!this.isValid && +this.e == +t.s;
            }),
            (e.abutsEnd = function (t) {
              return !!this.isValid && +t.e == +this.s;
            }),
            (e.engulfs = function (t) {
              return !!this.isValid && this.s <= t.s && this.e >= t.e;
            }),
            (e.equals = function (t) {
              return !(!this.isValid || !t.isValid) && this.s.equals(t.s) && this.e.equals(t.e);
            }),
            (e.intersection = function (e) {
              if (!this.isValid) return this;
              var n = this.s > e.s ? this.s : e.s,
                i = this.e < e.e ? this.e : e.e;
              return n > i ? null : t.fromDateTimes(n, i);
            }),
            (e.union = function (e) {
              return this.isValid ? t.fromDateTimes(this.s < e.s ? this.s : e.s, this.e > e.e ? this.e : e.e) : this;
            }),
            (t.merge = function (t) {
              var e = t
                  .sort(function (t, e) {
                    return t.s - e.s;
                  })
                  .reduce(
                    function (t, e) {
                      var n = t[0],
                        i = t[1];
                      return i ? (i.overlaps(e) || i.abutsStart(e) ? [n, i.union(e)] : [n.concat([i]), e]) : [n, e];
                    },
                    [[], null]
                  ),
                n = e[0],
                i = e[1];
              return i && n.push(i), n;
            }),
            (t.xor = function (e) {
              for (
                var n,
                  i,
                  r = null,
                  s = 0,
                  o = [],
                  a = e.map(function (t) {
                    return [
                      { time: t.s, type: 's' },
                      { time: t.e, type: 'e' },
                    ];
                  }),
                  c = d(
                    (n = Array.prototype).concat.apply(n, a).sort(function (t, e) {
                      return t.time - e.time;
                    })
                  );
                !(i = c()).done;

              ) {
                var l = i.value;
                1 === (s += 's' === l.type ? 1 : -1)
                  ? (r = l.time)
                  : (r && +r != +l.time && o.push(t.fromDateTimes(r, l.time)), (r = null));
              }
              return t.merge(o);
            }),
            (e.difference = function () {
              for (var e = this, n = arguments.length, i = new Array(n), r = 0; r < n; r++) i[r] = arguments[r];
              return t
                .xor([this].concat(i))
                .map(function (t) {
                  return e.intersection(t);
                })
                .filter(function (t) {
                  return t && !t.isEmpty();
                });
            }),
            (e.toString = function () {
              return this.isValid ? '[' + this.s.toISO() + ' \u2013 ' + this.e.toISO() + ')' : cn;
            }),
            (e.toISO = function (t) {
              return this.isValid ? this.s.toISO(t) + '/' + this.e.toISO(t) : cn;
            }),
            (e.toISODate = function () {
              return this.isValid ? this.s.toISODate() + '/' + this.e.toISODate() : cn;
            }),
            (e.toISOTime = function (t) {
              return this.isValid ? this.s.toISOTime(t) + '/' + this.e.toISOTime(t) : cn;
            }),
            (e.toFormat = function (t, e) {
              var n = (void 0 === e ? {} : e).separator,
                i = void 0 === n ? ' \u2013 ' : n;
              return this.isValid ? '' + this.s.toFormat(t) + i + this.e.toFormat(t) : cn;
            }),
            (e.toDuration = function (t, e) {
              return this.isValid ? this.e.diff(this.s, t, e) : on.invalid(this.invalidReason);
            }),
            (e.mapEndpoints = function (e) {
              return t.fromDateTimes(e(this.s), e(this.e));
            }),
            r(t, [
              {
                key: 'start',
                get: function () {
                  return this.isValid ? this.s : null;
                },
              },
              {
                key: 'end',
                get: function () {
                  return this.isValid ? this.e : null;
                },
              },
              {
                key: 'isValid',
                get: function () {
                  return null === this.invalidReason;
                },
              },
              {
                key: 'invalidReason',
                get: function () {
                  return this.invalid ? this.invalid.reason : null;
                },
              },
              {
                key: 'invalidExplanation',
                get: function () {
                  return this.invalid ? this.invalid.explanation : null;
                },
              },
            ]),
            t
          );
        })(),
        hn = (function () {
          function t() {}
          return (
            (t.hasDST = function (t) {
              void 0 === t && (t = te.defaultZone);
              var e = ii.local().setZone(t).set({ month: 12 });
              return !t.universal && e.offset !== e.set({ month: 6 }).offset;
            }),
            (t.isValidIANAZone = function (t) {
              return Ut.isValidSpecifier(t) && Ut.isValidZone(t);
            }),
            (t.normalizeZone = function (t) {
              return Gt(t, te.defaultZone);
            }),
            (t.months = function (t, e) {
              void 0 === t && (t = 'long');
              var n = void 0 === e ? {} : e,
                i = n.locale,
                r = n.numberingSystem,
                s = n.outputCalendar;
              return ue
                .create(void 0 === i ? null : i, void 0 === r ? null : r, void 0 === s ? 'gregory' : s)
                .months(t);
            }),
            (t.monthsFormat = function (t, e) {
              void 0 === t && (t = 'long');
              var n = void 0 === e ? {} : e,
                i = n.locale,
                r = n.numberingSystem,
                s = n.outputCalendar;
              return ue
                .create(void 0 === i ? null : i, void 0 === r ? null : r, void 0 === s ? 'gregory' : s)
                .months(t, !0);
            }),
            (t.weekdays = function (t, e) {
              void 0 === t && (t = 'long');
              var n = void 0 === e ? {} : e,
                i = n.locale,
                r = n.numberingSystem;
              return ue.create(void 0 === i ? null : i, void 0 === r ? null : r, null).weekdays(t);
            }),
            (t.weekdaysFormat = function (t, e) {
              void 0 === t && (t = 'long');
              var n = void 0 === e ? {} : e,
                i = n.locale,
                r = n.numberingSystem;
              return ue.create(void 0 === i ? null : i, void 0 === r ? null : r, null).weekdays(t, !0);
            }),
            (t.meridiems = function (t) {
              var e = (void 0 === t ? {} : t).locale;
              return ue.create(void 0 === e ? null : e).meridiems();
            }),
            (t.eras = function (t, e) {
              void 0 === t && (t = 'short');
              var n = (void 0 === e ? {} : e).locale;
              return ue.create(void 0 === n ? null : n, null, 'gregory').eras(t);
            }),
            (t.features = function () {
              var t = !1,
                e = !1,
                n = !1,
                i = !1;
              if (X()) {
                (t = !0), (e = K()), (i = Y());
                try {
                  n =
                    'America/New_York' ===
                    new Intl.DateTimeFormat('en', { timeZone: 'America/New_York' }).resolvedOptions().timeZone;
                } catch (r) {
                  n = !1;
                }
              }
              return { intl: t, intlTokens: e, zones: n, relative: i };
            }),
            t
          );
        })();
      function dn(t, e) {
        var n = function (t) {
            return t.toUTC(0, { keepLocalTime: !0 }).startOf('day').valueOf();
          },
          i = n(e) - n(t);
        return Math.floor(on.fromMillis(i).as('days'));
      }
      var pn = {
          arab: '[\u0660-\u0669]',
          arabext: '[\u06f0-\u06f9]',
          bali: '[\u1b50-\u1b59]',
          beng: '[\u09e6-\u09ef]',
          deva: '[\u0966-\u096f]',
          fullwide: '[\uff10-\uff19]',
          gujr: '[\u0ae6-\u0aef]',
          hanidec: '[\u3007|\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d]',
          khmr: '[\u17e0-\u17e9]',
          knda: '[\u0ce6-\u0cef]',
          laoo: '[\u0ed0-\u0ed9]',
          limb: '[\u1946-\u194f]',
          mlym: '[\u0d66-\u0d6f]',
          mong: '[\u1810-\u1819]',
          mymr: '[\u1040-\u1049]',
          orya: '[\u0b66-\u0b6f]',
          tamldec: '[\u0be6-\u0bef]',
          telu: '[\u0c66-\u0c6f]',
          thai: '[\u0e50-\u0e59]',
          tibt: '[\u0f20-\u0f29]',
          latn: '\\d',
        },
        fn = {
          arab: [1632, 1641],
          arabext: [1776, 1785],
          bali: [6992, 7001],
          beng: [2534, 2543],
          deva: [2406, 2415],
          fullwide: [65296, 65303],
          gujr: [2790, 2799],
          khmr: [6112, 6121],
          knda: [3302, 3311],
          laoo: [3792, 3801],
          limb: [6470, 6479],
          mlym: [3430, 3439],
          mong: [6160, 6169],
          mymr: [4160, 4169],
          orya: [2918, 2927],
          tamldec: [3046, 3055],
          telu: [3174, 3183],
          thai: [3664, 3673],
          tibt: [3872, 3881],
        },
        mn = pn.hanidec.replace(/[\[|\]]/g, '').split('');
      function gn(t, e) {
        return void 0 === e && (e = ''), new RegExp('' + pn[t.numberingSystem || 'latn'] + e);
      }
      function bn(t, e) {
        return (
          void 0 === e &&
            (e = function (t) {
              return t;
            }),
          {
            regex: t,
            deser: function (t) {
              return e(
                (function (t) {
                  var e = parseInt(t, 10);
                  if (isNaN(e)) {
                    e = '';
                    for (var n = 0; n < t.length; n++) {
                      var i = t.charCodeAt(n);
                      if (-1 !== t[n].search(pn.hanidec)) e += mn.indexOf(t[n]);
                      else
                        for (var r in fn) {
                          var s = fn[r],
                            o = s[0];
                          i >= o && i <= s[1] && (e += i - o);
                        }
                    }
                    return parseInt(e, 10);
                  }
                  return e;
                })(t[0])
              );
            },
          }
        );
      }
      function _n(t) {
        return t.replace(/\./, '\\.?');
      }
      function yn(t) {
        return t.replace(/\./, '').toLowerCase();
      }
      function vn(t, e) {
        return null === t
          ? null
          : {
              regex: RegExp(t.map(_n).join('|')),
              deser: function (n) {
                var i = n[0];
                return (
                  t.findIndex(function (t) {
                    return yn(i) === yn(t);
                  }) + e
                );
              },
            };
      }
      function wn(t, e) {
        return {
          regex: t,
          deser: function (t) {
            return dt(t[1], t[2]);
          },
          groups: e,
        };
      }
      function xn(t) {
        return {
          regex: t,
          deser: function (t) {
            return t[0];
          },
        };
      }
      var Cn = {
          year: { '2-digit': 'yy', numeric: 'yyyyy' },
          month: { numeric: 'M', '2-digit': 'MM', short: 'MMM', long: 'MMMM' },
          day: { numeric: 'd', '2-digit': 'dd' },
          weekday: { short: 'EEE', long: 'EEEE' },
          dayperiod: 'a',
          dayPeriod: 'a',
          hour: { numeric: 'h', '2-digit': 'hh' },
          minute: { numeric: 'm', '2-digit': 'mm' },
          second: { numeric: 's', '2-digit': 'ss' },
        },
        kn = null;
      function On(t, e, n) {
        var i = (function (t, e) {
            var n;
            return (n = Array.prototype).concat.apply(
              n,
              t.map(function (t) {
                return (function (t, e) {
                  if (t.literal) return t;
                  var n = Pt.macroTokenToFormatOpts(t.val);
                  if (!n) return t;
                  var i = Pt.create(e, n)
                    .formatDateTimeParts((kn || (kn = ii.fromMillis(1555555555555)), kn))
                    .map(function (t) {
                      return (function (t, e, n) {
                        var i = t.type;
                        if ('literal' === i) return { literal: !0, val: t.value };
                        var r = Cn[i];
                        return 'object' == typeof r && (r = r[n[i]]), r ? { literal: !1, val: r } : void 0;
                      })(t, 0, n);
                    });
                  return i.includes(void 0) ? t : i;
                })(t, e);
              })
            );
          })(Pt.parseFormat(n), t),
          r = i.map(function (e) {
            return (
              (n = e),
              (r = gn((i = t))),
              (s = gn(i, '{2}')),
              (o = gn(i, '{3}')),
              (a = gn(i, '{4}')),
              (c = gn(i, '{6}')),
              (l = gn(i, '{1,2}')),
              (u = gn(i, '{1,3}')),
              (h = gn(i, '{1,6}')),
              (d = gn(i, '{1,9}')),
              (p = gn(i, '{2,4}')),
              (f = gn(i, '{4,6}')),
              (m = function (t) {
                return {
                  regex: RegExp(((e = t.val), e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&'))),
                  deser: function (t) {
                    return t[0];
                  },
                  literal: !0,
                };
                var e;
              }),
              ((g = (function (t) {
                if (n.literal) return m(t);
                switch (t.val) {
                  case 'G':
                    return vn(i.eras('short', !1), 0);
                  case 'GG':
                    return vn(i.eras('long', !1), 0);
                  case 'y':
                    return bn(h);
                  case 'yy':
                    return bn(p, ut);
                  case 'yyyy':
                    return bn(a);
                  case 'yyyyy':
                    return bn(f);
                  case 'yyyyyy':
                    return bn(c);
                  case 'M':
                    return bn(l);
                  case 'MM':
                    return bn(s);
                  case 'MMM':
                    return vn(i.months('short', !0, !1), 1);
                  case 'MMMM':
                    return vn(i.months('long', !0, !1), 1);
                  case 'L':
                    return bn(l);
                  case 'LL':
                    return bn(s);
                  case 'LLL':
                    return vn(i.months('short', !1, !1), 1);
                  case 'LLLL':
                    return vn(i.months('long', !1, !1), 1);
                  case 'd':
                    return bn(l);
                  case 'dd':
                    return bn(s);
                  case 'o':
                    return bn(u);
                  case 'ooo':
                    return bn(o);
                  case 'HH':
                    return bn(s);
                  case 'H':
                    return bn(l);
                  case 'hh':
                    return bn(s);
                  case 'h':
                    return bn(l);
                  case 'mm':
                    return bn(s);
                  case 'm':
                  case 'q':
                    return bn(l);
                  case 'qq':
                    return bn(s);
                  case 's':
                    return bn(l);
                  case 'ss':
                    return bn(s);
                  case 'S':
                    return bn(u);
                  case 'SSS':
                    return bn(o);
                  case 'u':
                    return xn(d);
                  case 'a':
                    return vn(i.meridiems(), 0);
                  case 'kkkk':
                    return bn(a);
                  case 'kk':
                    return bn(p, ut);
                  case 'W':
                    return bn(l);
                  case 'WW':
                    return bn(s);
                  case 'E':
                  case 'c':
                    return bn(r);
                  case 'EEE':
                    return vn(i.weekdays('short', !1, !1), 1);
                  case 'EEEE':
                    return vn(i.weekdays('long', !1, !1), 1);
                  case 'ccc':
                    return vn(i.weekdays('short', !0, !1), 1);
                  case 'cccc':
                    return vn(i.weekdays('long', !0, !1), 1);
                  case 'Z':
                  case 'ZZ':
                    return wn(new RegExp('([+-]' + l.source + ')(?::(' + s.source + '))?'), 2);
                  case 'ZZZ':
                    return wn(new RegExp('([+-]' + l.source + ')(' + s.source + ')?'), 2);
                  case 'z':
                    return xn(/[a-z_+-/]{1,256}?/i);
                  default:
                    return m(t);
                }
              })(n) || { invalidReason: 'missing Intl.DateTimeFormat.formatToParts support' }).token = n),
              g
            );
            var n, i, r, s, o, a, c, l, u, h, d, p, f, m, g;
          }),
          s = r.find(function (t) {
            return t.invalidReason;
          });
        if (s) return { input: e, tokens: i, invalidReason: s.invalidReason };
        var o = (function (t) {
            return [
              '^' +
                t
                  .map(function (t) {
                    return t.regex;
                  })
                  .reduce(function (t, e) {
                    return t + '(' + e.source + ')';
                  }, '') +
                '$',
              t,
            ];
          })(r),
          a = o[1],
          c = RegExp(o[0], 'i'),
          l = (function (t, e, n) {
            var i = t.match(e);
            if (i) {
              var r = {},
                s = 1;
              for (var o in n)
                if (J(n, o)) {
                  var a = n[o],
                    c = a.groups ? a.groups + 1 : 1;
                  !a.literal && a.token && (r[a.token.val[0]] = a.deser(i.slice(s, s + c))), (s += c);
                }
              return [i, r];
            }
            return [i, {}];
          })(e, c, a),
          u = l[0],
          h = l[1],
          d = h
            ? (function (t) {
                var e;
                return (
                  (e = $(t.Z) ? ($(t.z) ? null : Ut.create(t.z)) : new $t(t.Z)),
                  $(t.q) || (t.M = 3 * (t.q - 1) + 1),
                  $(t.h) || (t.h < 12 && 1 === t.a ? (t.h += 12) : 12 === t.h && 0 === t.a && (t.h = 0)),
                  0 === t.G && t.y && (t.y = -t.y),
                  $(t.u) || (t.S = it(t.u)),
                  [
                    Object.keys(t).reduce(function (e, n) {
                      var i = (function (t) {
                        switch (t) {
                          case 'S':
                            return 'millisecond';
                          case 's':
                            return 'second';
                          case 'm':
                            return 'minute';
                          case 'h':
                          case 'H':
                            return 'hour';
                          case 'd':
                            return 'day';
                          case 'o':
                            return 'ordinal';
                          case 'L':
                          case 'M':
                            return 'month';
                          case 'y':
                            return 'year';
                          case 'E':
                          case 'c':
                            return 'weekday';
                          case 'W':
                            return 'weekNumber';
                          case 'k':
                            return 'weekYear';
                          case 'q':
                            return 'quarter';
                          default:
                            return null;
                        }
                      })(n);
                      return i && (e[i] = t[n]), e;
                    }, {}),
                    e,
                  ]
                );
              })(h)
            : [null, null],
          p = d[0],
          f = d[1];
        if (J(h, 'a') && J(h, 'H')) throw new b("Can't include meridiem when specifying 24-hour format");
        return { input: e, tokens: i, regex: c, rawMatches: u, matches: h, result: p, zone: f };
      }
      var Sn = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
        En = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
      function Tn(t, e) {
        return new Mt(
          'unit out of range',
          'you specified ' + e + ' (of type ' + typeof e + ') as a ' + t + ', which is invalid'
        );
      }
      function In(t, e, n) {
        var i = new Date(Date.UTC(t, e - 1, n)).getUTCDay();
        return 0 === i ? 7 : i;
      }
      function An(t, e, n) {
        return n + (st(t) ? En : Sn)[e - 1];
      }
      function Dn(t, e) {
        var n = st(t) ? En : Sn,
          i = n.findIndex(function (t) {
            return t < e;
          });
        return { month: i + 1, day: e - n[i] };
      }
      function jn(t) {
        var e,
          n = t.year,
          i = t.month,
          r = t.day,
          s = An(n, i, r),
          o = In(n, i, r),
          a = Math.floor((s - o + 10) / 7);
        return (
          a < 1 ? (a = lt((e = n - 1))) : a > lt(n) ? ((e = n + 1), (a = 1)) : (e = n),
          Object.assign({ weekYear: e, weekNumber: a, weekday: o }, gt(t))
        );
      }
      function Rn(t) {
        var e,
          n = t.weekYear,
          i = t.weekNumber,
          r = t.weekday,
          s = In(n, 1, 4),
          o = ot(n),
          a = 7 * i + r - s - 3;
        a < 1 ? (a += ot((e = n - 1))) : a > o ? ((e = n + 1), (a -= ot(n))) : (e = n);
        var c = Dn(e, a);
        return Object.assign({ year: e, month: c.month, day: c.day }, gt(t));
      }
      function Pn(t) {
        var e = t.year,
          n = An(e, t.month, t.day);
        return Object.assign({ year: e, ordinal: n }, gt(t));
      }
      function Mn(t) {
        var e = t.year,
          n = Dn(e, t.ordinal);
        return Object.assign({ year: e, month: n.month, day: n.day }, gt(t));
      }
      function Fn(t) {
        var e = G(t.year),
          n = tt(t.month, 1, 12),
          i = tt(t.day, 1, at(t.year, t.month));
        return e ? (n ? !i && Tn('day', t.day) : Tn('month', t.month)) : Tn('year', t.year);
      }
      function Nn(t) {
        var e = t.hour,
          n = t.minute,
          i = t.second,
          r = t.millisecond,
          s = tt(e, 0, 23) || (24 === e && 0 === n && 0 === i && 0 === r),
          o = tt(n, 0, 59),
          a = tt(i, 0, 59),
          c = tt(r, 0, 999);
        return s ? (o ? (a ? !c && Tn('millisecond', r) : Tn('second', i)) : Tn('minute', n)) : Tn('hour', e);
      }
      function Vn(t) {
        return new Mt('unsupported zone', 'the zone "' + t.name + '" is not supported');
      }
      function Ln(t) {
        return null === t.weekData && (t.weekData = jn(t.c)), t.weekData;
      }
      function Hn(t, e) {
        var n = { ts: t.ts, zone: t.zone, c: t.c, o: t.o, loc: t.loc, invalid: t.invalid };
        return new ii(Object.assign({}, n, e, { old: n }));
      }
      function zn(t, e, n) {
        var i = t - 60 * e * 1e3,
          r = n.offset(i);
        if (e === r) return [i, e];
        var s = n.offset((i -= 60 * (r - e) * 1e3));
        return r === s ? [i, r] : [t - 60 * Math.min(r, s) * 1e3, Math.max(r, s)];
      }
      function Bn(t, e) {
        var n = new Date((t += 60 * e * 1e3));
        return {
          year: n.getUTCFullYear(),
          month: n.getUTCMonth() + 1,
          day: n.getUTCDate(),
          hour: n.getUTCHours(),
          minute: n.getUTCMinutes(),
          second: n.getUTCSeconds(),
          millisecond: n.getUTCMilliseconds(),
        };
      }
      function Un(t, e, n) {
        return zn(ct(t), e, n);
      }
      function Wn(t, e) {
        var n,
          i = Object.keys(e.values);
        -1 === i.indexOf('milliseconds') && i.push('milliseconds'), (e = (n = e).shiftTo.apply(n, i));
        var r = t.o,
          s = t.c.year + e.years,
          o = t.c.month + e.months + 3 * e.quarters,
          a = Object.assign({}, t.c, { year: s, month: o, day: Math.min(t.c.day, at(s, o)) + e.days + 7 * e.weeks }),
          c = on
            .fromObject({ hours: e.hours, minutes: e.minutes, seconds: e.seconds, milliseconds: e.milliseconds })
            .as('milliseconds'),
          l = zn(ct(a), r, t.zone),
          u = l[0],
          h = l[1];
        return 0 !== c && (h = t.zone.offset((u += c))), { ts: u, o: h };
      }
      function $n(t, e, n, i, r) {
        var s = n.setZone,
          o = n.zone;
        if (t && 0 !== Object.keys(t).length) {
          var a = ii.fromObject(Object.assign(t, n, { zone: e || o, setZone: void 0 }));
          return s ? a : a.setZone(o);
        }
        return ii.invalid(new Mt('unparsable', 'the input "' + r + '" can\'t be parsed as ' + i));
      }
      function qn(t, e, n) {
        return (
          void 0 === n && (n = !0),
          t.isValid
            ? Pt.create(ue.create('en-US'), { allowZ: n, forceSimple: !0 }).formatDateTimeFromString(t, e)
            : null
        );
      }
      function Gn(t, e) {
        var n = e.suppressSeconds,
          i = e.suppressMilliseconds,
          r = e.includeOffset,
          s = e.includeZone,
          o = void 0 !== s && s,
          a = e.spaceZone,
          c = e.format,
          l = void 0 === c ? 'extended' : c,
          u = 'basic' === l ? 'HHmm' : 'HH:mm';
        return (
          (void 0 !== n && n && 0 === t.second && 0 === t.millisecond) ||
            ((u += 'basic' === l ? 'ss' : ':ss'), (void 0 !== i && i && 0 === t.millisecond) || (u += '.SSS')),
          (o || r) && void 0 !== a && a && (u += ' '),
          o ? (u += 'z') : r && (u += 'basic' === l ? 'ZZZ' : 'ZZ'),
          qn(t, u)
        );
      }
      var Xn = { month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0 },
        Kn = { weekNumber: 1, weekday: 1, hour: 0, minute: 0, second: 0, millisecond: 0 },
        Yn = { ordinal: 1, hour: 0, minute: 0, second: 0, millisecond: 0 },
        Zn = ['year', 'month', 'day', 'hour', 'minute', 'second', 'millisecond'],
        Qn = ['weekYear', 'weekNumber', 'weekday', 'hour', 'minute', 'second', 'millisecond'],
        Jn = ['year', 'ordinal', 'hour', 'minute', 'second', 'millisecond'];
      function ti(t) {
        var e = {
          year: 'year',
          years: 'year',
          month: 'month',
          months: 'month',
          day: 'day',
          days: 'day',
          hour: 'hour',
          hours: 'hour',
          minute: 'minute',
          minutes: 'minute',
          quarter: 'quarter',
          quarters: 'quarter',
          second: 'second',
          seconds: 'second',
          millisecond: 'millisecond',
          milliseconds: 'millisecond',
          weekday: 'weekday',
          weekdays: 'weekday',
          weeknumber: 'weekNumber',
          weeksnumber: 'weekNumber',
          weeknumbers: 'weekNumber',
          weekyear: 'weekYear',
          weekyears: 'weekYear',
          ordinal: 'ordinal',
        }[t.toLowerCase()];
        if (!e) throw new _(t);
        return e;
      }
      function ei(t, e) {
        for (var n, i = d(Zn); !(n = i()).done; ) {
          var r = n.value;
          $(t[r]) && (t[r] = Xn[r]);
        }
        var s = Fn(t) || Nn(t);
        if (s) return ii.invalid(s);
        var o = te.now(),
          a = Un(t, e.offset(o), e);
        return new ii({ ts: a[0], zone: e, o: a[1] });
      }
      function ni(t, e, n) {
        var i = !!$(n.round) || n.round,
          r = function (t, r) {
            return (t = rt(t, i || n.calendary ? 0 : 2, !0)), e.loc.clone(n).relFormatter(n).format(t, r);
          },
          s = function (i) {
            return n.calendary
              ? e.hasSame(t, i)
                ? 0
                : e.startOf(i).diff(t.startOf(i), i).get(i)
              : e.diff(t, i).get(i);
          };
        if (n.unit) return r(s(n.unit), n.unit);
        for (var o, a = d(n.units); !(o = a()).done; ) {
          var c = o.value,
            l = s(c);
          if (Math.abs(l) >= 1) return r(l, c);
        }
        return r(0, n.units[n.units.length - 1]);
      }
      var ii = (function () {
        function t(t) {
          var e = t.zone || te.defaultZone,
            n = t.invalid || (Number.isNaN(t.ts) ? new Mt('invalid input') : null) || (e.isValid ? null : Vn(e));
          this.ts = $(t.ts) ? te.now() : t.ts;
          var i = null,
            r = null;
          if (!n)
            if (t.old && t.old.ts === this.ts && t.old.zone.equals(e)) {
              var s = [t.old.c, t.old.o];
              (i = s[0]), (r = s[1]);
            } else {
              var o = e.offset(this.ts);
              (i = Bn(this.ts, o)),
                (i = (n = Number.isNaN(i.year) ? new Mt('invalid input') : null) ? null : i),
                (r = n ? null : o);
            }
          (this._zone = e),
            (this.loc = t.loc || ue.create()),
            (this.invalid = n),
            (this.weekData = null),
            (this.c = i),
            (this.o = r),
            (this.isLuxonDateTime = !0);
        }
        (t.local = function (e, n, i, r, s, o, a) {
          return $(e)
            ? new t({ ts: te.now() })
            : ei({ year: e, month: n, day: i, hour: r, minute: s, second: o, millisecond: a }, te.defaultZone);
        }),
          (t.utc = function (e, n, i, r, s, o, a) {
            return $(e)
              ? new t({ ts: te.now(), zone: $t.utcInstance })
              : ei({ year: e, month: n, day: i, hour: r, minute: s, second: o, millisecond: a }, $t.utcInstance);
          }),
          (t.fromJSDate = function (e, n) {
            void 0 === n && (n = {});
            var i = '[object Date]' === Object.prototype.toString.call(e) ? e.valueOf() : NaN;
            if (Number.isNaN(i)) return t.invalid('invalid input');
            var r = Gt(n.zone, te.defaultZone);
            return r.isValid ? new t({ ts: i, zone: r, loc: ue.fromObject(n) }) : t.invalid(Vn(r));
          }),
          (t.fromMillis = function (e, n) {
            if ((void 0 === n && (n = {}), q(e)))
              return e < -864e13 || e > 864e13
                ? t.invalid('Timestamp out of range')
                : new t({ ts: e, zone: Gt(n.zone, te.defaultZone), loc: ue.fromObject(n) });
            throw new y('fromMillis requires a numerical input, but received a ' + typeof e + ' with value ' + e);
          }),
          (t.fromSeconds = function (e, n) {
            if ((void 0 === n && (n = {}), q(e)))
              return new t({ ts: 1e3 * e, zone: Gt(n.zone, te.defaultZone), loc: ue.fromObject(n) });
            throw new y('fromSeconds requires a numerical input');
          }),
          (t.fromObject = function (e) {
            var n = Gt(e.zone, te.defaultZone);
            if (!n.isValid) return t.invalid(Vn(n));
            var i = te.now(),
              r = n.offset(i),
              s = ft(e, ti, ['zone', 'locale', 'outputCalendar', 'numberingSystem']),
              o = !$(s.ordinal),
              a = !$(s.year),
              c = !$(s.month) || !$(s.day),
              l = a || c,
              u = s.weekYear || s.weekNumber,
              h = ue.fromObject(e);
            if ((l || o) && u) throw new b("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
            if (c && o) throw new b("Can't mix ordinal dates with month/day");
            var p,
              f,
              m = u || (s.weekday && !l),
              g = Bn(i, r);
            m ? ((p = Qn), (f = Kn), (g = jn(g))) : o ? ((p = Jn), (f = Yn), (g = Pn(g))) : ((p = Zn), (f = Xn));
            for (var _, y = !1, v = d(p); !(_ = v()).done; ) {
              var w = _.value;
              $(s[w]) ? (s[w] = y ? f[w] : g[w]) : (y = !0);
            }
            var x =
              (m
                ? (function (t) {
                    var e = G(t.weekYear),
                      n = tt(t.weekNumber, 1, lt(t.weekYear)),
                      i = tt(t.weekday, 1, 7);
                    return e ? (n ? !i && Tn('weekday', t.weekday) : Tn('week', t.week)) : Tn('weekYear', t.weekYear);
                  })(s)
                : o
                ? (function (t) {
                    var e = G(t.year),
                      n = tt(t.ordinal, 1, ot(t.year));
                    return e ? !n && Tn('ordinal', t.ordinal) : Tn('year', t.year);
                  })(s)
                : Fn(s)) || Nn(s);
            if (x) return t.invalid(x);
            var C = Un(m ? Rn(s) : o ? Mn(s) : s, r, n),
              k = new t({ ts: C[0], zone: n, o: C[1], loc: h });
            return s.weekday && l && e.weekday !== k.weekday
              ? t.invalid(
                  'mismatched weekday',
                  "you can't specify both a weekday of " + s.weekday + ' and a date of ' + k.toISO()
                )
              : k;
          }),
          (t.fromISO = function (t, e) {
            void 0 === e && (e = {});
            var n = (function (t) {
              return pe(t, [Le, Ue], [He, We], [ze, $e], [Be, qe]);
            })(t);
            return $n(n[0], n[1], e, 'ISO 8601', t);
          }),
          (t.fromRFC2822 = function (t, e) {
            void 0 === e && (e = {});
            var n = (function (t) {
              return pe(
                (function (t) {
                  return t
                    .replace(/\([^)]*\)|[\n\t]/g, ' ')
                    .replace(/(\s\s+)/g, ' ')
                    .trim();
                })(t),
                [je, Re]
              );
            })(t);
            return $n(n[0], n[1], e, 'RFC 2822', t);
          }),
          (t.fromHTTP = function (t, e) {
            void 0 === e && (e = {});
            var n = (function (t) {
              return pe(t, [Pe, Ne], [Me, Ne], [Fe, Ve]);
            })(t);
            return $n(n[0], n[1], e, 'HTTP', e);
          }),
          (t.fromFormat = function (e, n, i) {
            if ((void 0 === i && (i = {}), $(e) || $(n)))
              throw new y('fromFormat requires an input string and a format');
            var r,
              s = i.locale,
              o = i.numberingSystem,
              a = [
                (r = On(
                  ue.fromOpts({
                    locale: void 0 === s ? null : s,
                    numberingSystem: void 0 === o ? null : o,
                    defaultToEN: !0,
                  }),
                  e,
                  n
                )).result,
                r.zone,
                r.invalidReason,
              ],
              c = a[0],
              l = a[1],
              u = a[2];
            return u ? t.invalid(u) : $n(c, l, i, 'format ' + n, e);
          }),
          (t.fromString = function (e, n, i) {
            return void 0 === i && (i = {}), t.fromFormat(e, n, i);
          }),
          (t.fromSQL = function (t, e) {
            void 0 === e && (e = {});
            var n = (function (t) {
              return pe(t, [Ge, Ke], [Xe, Ye]);
            })(t);
            return $n(n[0], n[1], e, 'SQL', t);
          }),
          (t.invalid = function (e, n) {
            if ((void 0 === n && (n = null), !e)) throw new y('need to specify a reason the DateTime is invalid');
            var i = e instanceof Mt ? e : new Mt(e, n);
            if (te.throwOnInvalid) throw new f(i);
            return new t({ invalid: i });
          }),
          (t.isDateTime = function (t) {
            return (t && t.isLuxonDateTime) || !1;
          });
        var e = t.prototype;
        return (
          (e.get = function (t) {
            return this[t];
          }),
          (e.resolvedLocaleOpts = function (t) {
            void 0 === t && (t = {});
            var e = Pt.create(this.loc.clone(t), t).resolvedOptions(this);
            return { locale: e.locale, numberingSystem: e.numberingSystem, outputCalendar: e.calendar };
          }),
          (e.toUTC = function (t, e) {
            return void 0 === t && (t = 0), void 0 === e && (e = {}), this.setZone($t.instance(t), e);
          }),
          (e.toLocal = function () {
            return this.setZone(te.defaultZone);
          }),
          (e.setZone = function (e, n) {
            var i = void 0 === n ? {} : n,
              r = i.keepLocalTime,
              s = void 0 !== r && r,
              o = i.keepCalendarTime,
              a = void 0 !== o && o;
            if ((e = Gt(e, te.defaultZone)).equals(this.zone)) return this;
            if (e.isValid) {
              var c = this.ts;
              if (s || a) {
                var l = e.offset(this.ts);
                c = Un(this.toObject(), l, e)[0];
              }
              return Hn(this, { ts: c, zone: e });
            }
            return t.invalid(Vn(e));
          }),
          (e.reconfigure = function (t) {
            var e = void 0 === t ? {} : t;
            return Hn(this, {
              loc: this.loc.clone({
                locale: e.locale,
                numberingSystem: e.numberingSystem,
                outputCalendar: e.outputCalendar,
              }),
            });
          }),
          (e.setLocale = function (t) {
            return this.reconfigure({ locale: t });
          }),
          (e.set = function (t) {
            if (!this.isValid) return this;
            var e,
              n = ft(t, ti, []);
            $(n.weekYear) && $(n.weekNumber) && $(n.weekday)
              ? $(n.ordinal)
                ? ((e = Object.assign(this.toObject(), n)), $(n.day) && (e.day = Math.min(at(e.year, e.month), e.day)))
                : (e = Mn(Object.assign(Pn(this.c), n)))
              : (e = Rn(Object.assign(jn(this.c), n)));
            var i = Un(e, this.o, this.zone);
            return Hn(this, { ts: i[0], o: i[1] });
          }),
          (e.plus = function (t) {
            return this.isValid ? Hn(this, Wn(this, an(t))) : this;
          }),
          (e.minus = function (t) {
            return this.isValid ? Hn(this, Wn(this, an(t).negate())) : this;
          }),
          (e.startOf = function (t) {
            if (!this.isValid) return this;
            var e = {},
              n = on.normalizeUnit(t);
            switch (n) {
              case 'years':
                e.month = 1;
              case 'quarters':
              case 'months':
                e.day = 1;
              case 'weeks':
              case 'days':
                e.hour = 0;
              case 'hours':
                e.minute = 0;
              case 'minutes':
                e.second = 0;
              case 'seconds':
                e.millisecond = 0;
            }
            if (('weeks' === n && (e.weekday = 1), 'quarters' === n)) {
              var i = Math.ceil(this.month / 3);
              e.month = 3 * (i - 1) + 1;
            }
            return this.set(e);
          }),
          (e.endOf = function (t) {
            var e;
            return this.isValid
              ? this.plus(((e = {}), (e[t] = 1), e))
                  .startOf(t)
                  .minus(1)
              : this;
          }),
          (e.toFormat = function (t, e) {
            return (
              void 0 === e && (e = {}),
              this.isValid ? Pt.create(this.loc.redefaultToEN(e)).formatDateTimeFromString(this, t) : 'Invalid DateTime'
            );
          }),
          (e.toLocaleString = function (t) {
            return (
              void 0 === t && (t = k),
              this.isValid ? Pt.create(this.loc.clone(t), t).formatDateTime(this) : 'Invalid DateTime'
            );
          }),
          (e.toLocaleParts = function (t) {
            return (
              void 0 === t && (t = {}), this.isValid ? Pt.create(this.loc.clone(t), t).formatDateTimeParts(this) : []
            );
          }),
          (e.toISO = function (t) {
            return void 0 === t && (t = {}), this.isValid ? this.toISODate(t) + 'T' + this.toISOTime(t) : null;
          }),
          (e.toISODate = function (t) {
            var e = (void 0 === t ? {} : t).format,
              n = 'basic' === (void 0 === e ? 'extended' : e) ? 'yyyyMMdd' : 'yyyy-MM-dd';
            return this.year > 9999 && (n = '+' + n), qn(this, n);
          }),
          (e.toISOWeekDate = function () {
            return qn(this, "kkkk-'W'WW-c");
          }),
          (e.toISOTime = function (t) {
            var e = void 0 === t ? {} : t,
              n = e.suppressMilliseconds,
              i = e.suppressSeconds,
              r = e.includeOffset,
              s = e.format;
            return Gn(this, {
              suppressSeconds: void 0 !== i && i,
              suppressMilliseconds: void 0 !== n && n,
              includeOffset: void 0 === r || r,
              format: void 0 === s ? 'extended' : s,
            });
          }),
          (e.toRFC2822 = function () {
            return qn(this, 'EEE, dd LLL yyyy HH:mm:ss ZZZ', !1);
          }),
          (e.toHTTP = function () {
            return qn(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'");
          }),
          (e.toSQLDate = function () {
            return qn(this, 'yyyy-MM-dd');
          }),
          (e.toSQLTime = function (t) {
            var e = void 0 === t ? {} : t,
              n = e.includeOffset,
              i = e.includeZone;
            return Gn(this, { includeOffset: void 0 === n || n, includeZone: void 0 !== i && i, spaceZone: !0 });
          }),
          (e.toSQL = function (t) {
            return void 0 === t && (t = {}), this.isValid ? this.toSQLDate() + ' ' + this.toSQLTime(t) : null;
          }),
          (e.toString = function () {
            return this.isValid ? this.toISO() : 'Invalid DateTime';
          }),
          (e.valueOf = function () {
            return this.toMillis();
          }),
          (e.toMillis = function () {
            return this.isValid ? this.ts : NaN;
          }),
          (e.toSeconds = function () {
            return this.isValid ? this.ts / 1e3 : NaN;
          }),
          (e.toJSON = function () {
            return this.toISO();
          }),
          (e.toBSON = function () {
            return this.toJSDate();
          }),
          (e.toObject = function (t) {
            if ((void 0 === t && (t = {}), !this.isValid)) return {};
            var e = Object.assign({}, this.c);
            return (
              t.includeConfig &&
                ((e.outputCalendar = this.outputCalendar),
                (e.numberingSystem = this.loc.numberingSystem),
                (e.locale = this.loc.locale)),
              e
            );
          }),
          (e.toJSDate = function () {
            return new Date(this.isValid ? this.ts : NaN);
          }),
          (e.diff = function (t, e, n) {
            if ((void 0 === e && (e = 'milliseconds'), void 0 === n && (n = {}), !this.isValid || !t.isValid))
              return on.invalid(this.invalid || t.invalid, 'created by diffing an invalid DateTime');
            var i,
              r = Object.assign({ locale: this.locale, numberingSystem: this.numberingSystem }, n),
              s = ((i = e), Array.isArray(i) ? i : [i]).map(on.normalizeUnit),
              o = t.valueOf() > this.valueOf(),
              a = (function (t, e, n, i) {
                var r,
                  s = (function (t, e, n) {
                    for (
                      var i,
                        r,
                        s = {},
                        o = 0,
                        a = [
                          [
                            'years',
                            function (t, e) {
                              return e.year - t.year;
                            },
                          ],
                          [
                            'months',
                            function (t, e) {
                              return e.month - t.month + 12 * (e.year - t.year);
                            },
                          ],
                          [
                            'weeks',
                            function (t, e) {
                              var n = dn(t, e);
                              return (n - (n % 7)) / 7;
                            },
                          ],
                          ['days', dn],
                        ];
                      o < a.length;
                      o++
                    ) {
                      var c = a[o],
                        l = c[0],
                        u = c[1];
                      if (n.indexOf(l) >= 0) {
                        var h;
                        i = l;
                        var d,
                          p = u(t, e);
                        (r = t.plus((((h = {})[l] = p), h))) > e
                          ? ((t = t.plus((((d = {})[l] = p - 1), d))), (p -= 1))
                          : (t = r),
                          (s[l] = p);
                      }
                    }
                    return [t, s, r, i];
                  })(t, e, n),
                  o = s[0],
                  a = s[1],
                  c = s[2],
                  l = s[3],
                  u = e - o,
                  h = n.filter(function (t) {
                    return ['hours', 'minutes', 'seconds', 'milliseconds'].indexOf(t) >= 0;
                  });
                0 === h.length &&
                  (c < e && (c = o.plus((((r = {})[l] = 1), r))), c !== o && (a[l] = (a[l] || 0) + u / (c - o)));
                var d,
                  p = on.fromObject(Object.assign(a, i));
                return h.length > 0 ? (d = on.fromMillis(u, i)).shiftTo.apply(d, h).plus(p) : p;
              })(o ? this : t, o ? t : this, s, r);
            return o ? a.negate() : a;
          }),
          (e.diffNow = function (e, n) {
            return void 0 === e && (e = 'milliseconds'), void 0 === n && (n = {}), this.diff(t.local(), e, n);
          }),
          (e.until = function (t) {
            return this.isValid ? un.fromDateTimes(this, t) : this;
          }),
          (e.hasSame = function (t, e) {
            if (!this.isValid) return !1;
            if ('millisecond' === e) return this.valueOf() === t.valueOf();
            var n = t.valueOf();
            return this.startOf(e) <= n && n <= this.endOf(e);
          }),
          (e.equals = function (t) {
            return (
              this.isValid &&
              t.isValid &&
              this.valueOf() === t.valueOf() &&
              this.zone.equals(t.zone) &&
              this.loc.equals(t.loc)
            );
          }),
          (e.toRelative = function (e) {
            if ((void 0 === e && (e = {}), !this.isValid)) return null;
            var n = e.base || t.fromObject({ zone: this.zone });
            return ni(
              n,
              this.plus(e.padding ? (this < n ? -e.padding : e.padding) : 0),
              Object.assign(e, { numeric: 'always', units: ['years', 'months', 'days', 'hours', 'minutes', 'seconds'] })
            );
          }),
          (e.toRelativeCalendar = function (e) {
            return (
              void 0 === e && (e = {}),
              this.isValid
                ? ni(
                    e.base || t.fromObject({ zone: this.zone }),
                    this,
                    Object.assign(e, { numeric: 'auto', units: ['years', 'months', 'days'], calendary: !0 })
                  )
                : null
            );
          }),
          (t.min = function () {
            for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
            if (!n.every(t.isDateTime)) throw new y('min requires all arguments be DateTimes');
            return Z(
              n,
              function (t) {
                return t.valueOf();
              },
              Math.min
            );
          }),
          (t.max = function () {
            for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
            if (!n.every(t.isDateTime)) throw new y('max requires all arguments be DateTimes');
            return Z(
              n,
              function (t) {
                return t.valueOf();
              },
              Math.max
            );
          }),
          (t.fromFormatExplain = function (t, e, n) {
            void 0 === n && (n = {});
            var i = n.locale,
              r = n.numberingSystem;
            return On(
              ue.fromOpts({
                locale: void 0 === i ? null : i,
                numberingSystem: void 0 === r ? null : r,
                defaultToEN: !0,
              }),
              t,
              e
            );
          }),
          (t.fromStringExplain = function (e, n, i) {
            return void 0 === i && (i = {}), t.fromFormatExplain(e, n, i);
          }),
          r(
            t,
            [
              {
                key: 'isValid',
                get: function () {
                  return null === this.invalid;
                },
              },
              {
                key: 'invalidReason',
                get: function () {
                  return this.invalid ? this.invalid.reason : null;
                },
              },
              {
                key: 'invalidExplanation',
                get: function () {
                  return this.invalid ? this.invalid.explanation : null;
                },
              },
              {
                key: 'locale',
                get: function () {
                  return this.isValid ? this.loc.locale : null;
                },
              },
              {
                key: 'numberingSystem',
                get: function () {
                  return this.isValid ? this.loc.numberingSystem : null;
                },
              },
              {
                key: 'outputCalendar',
                get: function () {
                  return this.isValid ? this.loc.outputCalendar : null;
                },
              },
              {
                key: 'zone',
                get: function () {
                  return this._zone;
                },
              },
              {
                key: 'zoneName',
                get: function () {
                  return this.isValid ? this.zone.name : null;
                },
              },
              {
                key: 'year',
                get: function () {
                  return this.isValid ? this.c.year : NaN;
                },
              },
              {
                key: 'quarter',
                get: function () {
                  return this.isValid ? Math.ceil(this.c.month / 3) : NaN;
                },
              },
              {
                key: 'month',
                get: function () {
                  return this.isValid ? this.c.month : NaN;
                },
              },
              {
                key: 'day',
                get: function () {
                  return this.isValid ? this.c.day : NaN;
                },
              },
              {
                key: 'hour',
                get: function () {
                  return this.isValid ? this.c.hour : NaN;
                },
              },
              {
                key: 'minute',
                get: function () {
                  return this.isValid ? this.c.minute : NaN;
                },
              },
              {
                key: 'second',
                get: function () {
                  return this.isValid ? this.c.second : NaN;
                },
              },
              {
                key: 'millisecond',
                get: function () {
                  return this.isValid ? this.c.millisecond : NaN;
                },
              },
              {
                key: 'weekYear',
                get: function () {
                  return this.isValid ? Ln(this).weekYear : NaN;
                },
              },
              {
                key: 'weekNumber',
                get: function () {
                  return this.isValid ? Ln(this).weekNumber : NaN;
                },
              },
              {
                key: 'weekday',
                get: function () {
                  return this.isValid ? Ln(this).weekday : NaN;
                },
              },
              {
                key: 'ordinal',
                get: function () {
                  return this.isValid ? Pn(this.c).ordinal : NaN;
                },
              },
              {
                key: 'monthShort',
                get: function () {
                  return this.isValid ? hn.months('short', { locale: this.locale })[this.month - 1] : null;
                },
              },
              {
                key: 'monthLong',
                get: function () {
                  return this.isValid ? hn.months('long', { locale: this.locale })[this.month - 1] : null;
                },
              },
              {
                key: 'weekdayShort',
                get: function () {
                  return this.isValid ? hn.weekdays('short', { locale: this.locale })[this.weekday - 1] : null;
                },
              },
              {
                key: 'weekdayLong',
                get: function () {
                  return this.isValid ? hn.weekdays('long', { locale: this.locale })[this.weekday - 1] : null;
                },
              },
              {
                key: 'offset',
                get: function () {
                  return this.isValid ? +this.o : NaN;
                },
              },
              {
                key: 'offsetNameShort',
                get: function () {
                  return this.isValid ? this.zone.offsetName(this.ts, { format: 'short', locale: this.locale }) : null;
                },
              },
              {
                key: 'offsetNameLong',
                get: function () {
                  return this.isValid ? this.zone.offsetName(this.ts, { format: 'long', locale: this.locale }) : null;
                },
              },
              {
                key: 'isOffsetFixed',
                get: function () {
                  return this.isValid ? this.zone.universal : null;
                },
              },
              {
                key: 'isInDST',
                get: function () {
                  return (
                    !this.isOffsetFixed &&
                    (this.offset > this.set({ month: 1 }).offset || this.offset > this.set({ month: 5 }).offset)
                  );
                },
              },
              {
                key: 'isInLeapYear',
                get: function () {
                  return st(this.year);
                },
              },
              {
                key: 'daysInMonth',
                get: function () {
                  return at(this.year, this.month);
                },
              },
              {
                key: 'daysInYear',
                get: function () {
                  return this.isValid ? ot(this.year) : NaN;
                },
              },
              {
                key: 'weeksInWeekYear',
                get: function () {
                  return this.isValid ? lt(this.weekYear) : NaN;
                },
              },
            ],
            [
              {
                key: 'DATE_SHORT',
                get: function () {
                  return k;
                },
              },
              {
                key: 'DATE_MED',
                get: function () {
                  return O;
                },
              },
              {
                key: 'DATE_FULL',
                get: function () {
                  return S;
                },
              },
              {
                key: 'DATE_HUGE',
                get: function () {
                  return E;
                },
              },
              {
                key: 'TIME_SIMPLE',
                get: function () {
                  return T;
                },
              },
              {
                key: 'TIME_WITH_SECONDS',
                get: function () {
                  return I;
                },
              },
              {
                key: 'TIME_WITH_SHORT_OFFSET',
                get: function () {
                  return A;
                },
              },
              {
                key: 'TIME_WITH_LONG_OFFSET',
                get: function () {
                  return D;
                },
              },
              {
                key: 'TIME_24_SIMPLE',
                get: function () {
                  return j;
                },
              },
              {
                key: 'TIME_24_WITH_SECONDS',
                get: function () {
                  return R;
                },
              },
              {
                key: 'TIME_24_WITH_SHORT_OFFSET',
                get: function () {
                  return P;
                },
              },
              {
                key: 'TIME_24_WITH_LONG_OFFSET',
                get: function () {
                  return M;
                },
              },
              {
                key: 'DATETIME_SHORT',
                get: function () {
                  return F;
                },
              },
              {
                key: 'DATETIME_SHORT_WITH_SECONDS',
                get: function () {
                  return N;
                },
              },
              {
                key: 'DATETIME_MED',
                get: function () {
                  return V;
                },
              },
              {
                key: 'DATETIME_MED_WITH_SECONDS',
                get: function () {
                  return L;
                },
              },
              {
                key: 'DATETIME_MED_WITH_WEEKDAY',
                get: function () {
                  return H;
                },
              },
              {
                key: 'DATETIME_FULL',
                get: function () {
                  return z;
                },
              },
              {
                key: 'DATETIME_FULL_WITH_SECONDS',
                get: function () {
                  return B;
                },
              },
              {
                key: 'DATETIME_HUGE',
                get: function () {
                  return U;
                },
              },
              {
                key: 'DATETIME_HUGE_WITH_SECONDS',
                get: function () {
                  return W;
                },
              },
            ]
          ),
          t
        );
      })();
      function ri(t) {
        if (ii.isDateTime(t)) return t;
        if (t && t.valueOf && q(t.valueOf())) return ii.fromJSDate(t);
        if (t && 'object' == typeof t) return ii.fromObject(t);
        throw new y('Unknown datetime argument: ' + t + ', of type ' + typeof t);
      }
      (e.DateTime = ii),
        (e.Duration = on),
        (e.FixedOffsetZone = $t),
        (e.IANAZone = Ut),
        (e.Info = hn),
        (e.Interval = un),
        (e.InvalidZone = qt),
        (e.LocalZone = Vt),
        (e.Settings = te),
        (e.Zone = Ft);
    },
    F454: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('0FS3'),
        r = n('fXoL');
      let s = (() => {
        class t extends i.d {}
        return (
          (t.ɵfac = function (e) {
            return o(e || t);
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['app-formly-group-wrapper']],
            features: [r.Fb],
            decls: 6,
            vars: 1,
            consts: [
              [1, 'card'],
              [1, 'card-header'],
              [1, 'card-body'],
              ['fieldComponent', ''],
            ],
            template: function (t, e) {
              1 & t &&
                (r.bc(0, 'div', 0),
                r.bc(1, 'h3', 1),
                r.Mc(2),
                r.ac(),
                r.bc(3, 'div', 2),
                r.Xb(4, null, 3),
                r.ac(),
                r.ac()),
                2 & t && (r.Ib(2), r.Nc(e.to.label));
            },
            styles: [''],
          })),
          t
        );
      })();
      const o = r.dc(s);
    },
    FKr1: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return E;
      }),
        n.d(e, 'b', function () {
          return L;
        }),
        n.d(e, 'c', function () {
          return T;
        }),
        n.d(e, 'd', function () {
          return pt;
        }),
        n.d(e, 'e', function () {
          return ct;
        }),
        n.d(e, 'f', function () {
          return Y;
        }),
        n.d(e, 'g', function () {
          return v;
        }),
        n.d(e, 'h', function () {
          return H;
        }),
        n.d(e, 'i', function () {
          return U;
        }),
        n.d(e, 'j', function () {
          return V;
        }),
        n.d(e, 'k', function () {
          return rt;
        }),
        n.d(e, 'l', function () {
          return lt;
        }),
        n.d(e, 'm', function () {
          return dt;
        }),
        n.d(e, 'n', function () {
          return at;
        }),
        n.d(e, 'o', function () {
          return J;
        }),
        n.d(e, 'p', function () {
          return tt;
        }),
        n.d(e, 'q', function () {
          return Z;
        }),
        n.d(e, 'r', function () {
          return Q;
        }),
        n.d(e, 's', function () {
          return K;
        }),
        n.d(e, 't', function () {
          return ut;
        }),
        n.d(e, 'u', function () {
          return ht;
        }),
        n.d(e, 'v', function () {
          return x;
        }),
        n.d(e, 'w', function () {
          return C;
        }),
        n.d(e, 'x', function () {
          return w;
        }),
        n.d(e, 'y', function () {
          return O;
        }),
        n.d(e, 'z', function () {
          return k;
        }),
        n.d(e, 'A', function () {
          return z;
        });
      var i = n('fXoL'),
        r = n('u47x'),
        s = n('cH1L');
      const o = new i.R('9.2.4');
      var a = n('ofXK'),
        c = n('8LU1'),
        l = n('XNiG'),
        u = (n('HDdC'), n('nLfN')),
        h = (n('jhN1'), n('JX91')),
        d = n('R1ws'),
        p = n('FtGj');
      const f = ['*', [['mat-option'], ['ng-container']]],
        m = ['*', 'mat-option, ng-container'];
      function g(t, e) {
        if ((1 & t && i.Wb(0, 'mat-pseudo-checkbox', 3), 2 & t)) {
          const t = i.nc();
          i.vc('state', t.selected ? 'checked' : 'unchecked')('disabled', t.disabled);
        }
      }
      const b = ['*'],
        _ = new i.R('9.2.4'),
        y = new i.s('mat-sanity-checks', {
          providedIn: 'root',
          factory: function () {
            return !0;
          },
        });
      let v = (() => {
        class t {
          constructor(t, e, n) {
            (this._hasDoneGlobalChecks = !1),
              (this._document = n),
              t._applyBodyHighContrastModeCssClasses(),
              (this._sanityChecks = e),
              this._hasDoneGlobalChecks ||
                (this._checkDoctypeIsDefined(),
                this._checkThemeIsPresent(),
                this._checkCdkVersionMatch(),
                (this._hasDoneGlobalChecks = !0));
          }
          _getDocument() {
            const t = this._document || document;
            return 'object' == typeof t && t ? t : null;
          }
          _getWindow() {
            const t = this._getDocument(),
              e = (null == t ? void 0 : t.defaultView) || window;
            return 'object' == typeof e && e ? e : null;
          }
          _checksAreEnabled() {
            return Object(i.bb)() && !this._isTestEnv();
          }
          _isTestEnv() {
            const t = this._getWindow();
            return t && (t.__karma__ || t.jasmine);
          }
          _checkDoctypeIsDefined() {
            const t = this._checksAreEnabled() && (!0 === this._sanityChecks || this._sanityChecks.doctype),
              e = this._getDocument();
            t &&
              e &&
              !e.doctype &&
              console.warn(
                'Current document does not have a doctype. This may cause some Angular Material components not to behave as expected.'
              );
          }
          _checkThemeIsPresent() {
            const t = !this._checksAreEnabled() || !1 === this._sanityChecks || !this._sanityChecks.theme,
              e = this._getDocument();
            if (t || !e || !e.body || 'function' != typeof getComputedStyle) return;
            const n = e.createElement('div');
            n.classList.add('mat-theme-loaded-marker'), e.body.appendChild(n);
            const i = getComputedStyle(n);
            i &&
              'none' !== i.display &&
              console.warn(
                'Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming'
              ),
              e.body.removeChild(n);
          }
          _checkCdkVersionMatch() {
            this._checksAreEnabled() &&
              (!0 === this._sanityChecks || this._sanityChecks.version) &&
              _.full !== o.full &&
              console.warn(
                'The Angular Material version (' +
                  _.full +
                  ') does not match the Angular CDK version (' +
                  o.full +
                  ').\nPlease ensure the versions of these two packages exactly match.'
              );
          }
        }
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)(i.fc(r.i), i.fc(y, 8), i.fc(a.d, 8));
            },
            imports: [[s.a], s.a],
          })),
          t
        );
      })();
      function w(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = Object(c.c)(t);
          }
        };
      }
      function x(t, e) {
        return class extends t {
          constructor(...t) {
            super(...t), (this.color = e);
          }
          get color() {
            return this._color;
          }
          set color(t) {
            const n = t || e;
            n !== this._color &&
              (this._color && this._elementRef.nativeElement.classList.remove(`mat-${this._color}`),
              n && this._elementRef.nativeElement.classList.add(`mat-${n}`),
              (this._color = n));
          }
        };
      }
      function C(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = Object(c.c)(t);
          }
        };
      }
      function k(t, e = 0) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._tabIndex = e);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(t) {
            this._tabIndex = null != t ? t : e;
          }
        };
      }
      function O(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this.errorState = !1), (this.stateChanges = new l.a());
          }
          updateErrorState() {
            const t = this.errorState,
              e = (this.errorStateMatcher || this._defaultErrorStateMatcher).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            e !== t && ((this.errorState = e), this.stateChanges.next());
          }
        };
      }
      const S = new i.s('MAT_DATE_LOCALE', {
        providedIn: 'root',
        factory: function () {
          return Object(i.ab)(i.w);
        },
      });
      class E {
        constructor() {
          this._localeChanges = new l.a();
        }
        get localeChanges() {
          return this._localeChanges;
        }
        deserialize(t) {
          return null == t || (this.isDateInstance(t) && this.isValid(t)) ? t : this.invalid();
        }
        setLocale(t) {
          (this.locale = t), this._localeChanges.next();
        }
        compareDate(t, e) {
          return (
            this.getYear(t) - this.getYear(e) ||
            this.getMonth(t) - this.getMonth(e) ||
            this.getDate(t) - this.getDate(e)
          );
        }
        sameDate(t, e) {
          if (t && e) {
            let n = this.isValid(t),
              i = this.isValid(e);
            return n && i ? !this.compareDate(t, e) : n == i;
          }
          return t == e;
        }
        clampDate(t, e, n) {
          return e && this.compareDate(t, e) < 0 ? e : n && this.compareDate(t, n) > 0 ? n : t;
        }
      }
      const T = new i.s('mat-date-formats');
      let I;
      try {
        I = 'undefined' != typeof Intl;
      } catch (ft) {
        I = !1;
      }
      const A = {
          long: [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
          short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
        },
        D = P(31, (t) => String(t + 1)),
        j = {
          long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
          short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
        },
        R = /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function P(t, e) {
        const n = Array(t);
        for (let i = 0; i < t; i++) n[i] = e(i);
        return n;
      }
      let M = (() => {
          class t extends E {
            constructor(t, e) {
              super(),
                (this.useUtcForDisplay = !0),
                super.setLocale(t),
                (this.useUtcForDisplay = !e.TRIDENT),
                (this._clampDate = e.TRIDENT || e.EDGE);
            }
            getYear(t) {
              return t.getFullYear();
            }
            getMonth(t) {
              return t.getMonth();
            }
            getDate(t) {
              return t.getDate();
            }
            getDayOfWeek(t) {
              return t.getDay();
            }
            getMonthNames(t) {
              if (I) {
                const e = new Intl.DateTimeFormat(this.locale, { month: t, timeZone: 'utc' });
                return P(12, (t) => this._stripDirectionalityCharacters(this._format(e, new Date(2017, t, 1))));
              }
              return A[t];
            }
            getDateNames() {
              if (I) {
                const t = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });
                return P(31, (e) => this._stripDirectionalityCharacters(this._format(t, new Date(2017, 0, e + 1))));
              }
              return D;
            }
            getDayOfWeekNames(t) {
              if (I) {
                const e = new Intl.DateTimeFormat(this.locale, { weekday: t, timeZone: 'utc' });
                return P(7, (t) => this._stripDirectionalityCharacters(this._format(e, new Date(2017, 0, t + 1))));
              }
              return j[t];
            }
            getYearName(t) {
              if (I) {
                const e = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });
                return this._stripDirectionalityCharacters(this._format(e, t));
              }
              return String(this.getYear(t));
            }
            getFirstDayOfWeek() {
              return 0;
            }
            getNumDaysInMonth(t) {
              return this.getDate(this._createDateWithOverflow(this.getYear(t), this.getMonth(t) + 1, 0));
            }
            clone(t) {
              return new Date(t.getTime());
            }
            createDate(t, e, n) {
              if (e < 0 || e > 11) throw Error(`Invalid month index "${e}". Month index has to be between 0 and 11.`);
              if (n < 1) throw Error(`Invalid date "${n}". Date has to be greater than 0.`);
              let i = this._createDateWithOverflow(t, e, n);
              if (i.getMonth() != e) throw Error(`Invalid date "${n}" for month with index "${e}".`);
              return i;
            }
            today() {
              return new Date();
            }
            parse(t) {
              return 'number' == typeof t ? new Date(t) : t ? new Date(Date.parse(t)) : null;
            }
            format(t, e) {
              if (!this.isValid(t)) throw Error('NativeDateAdapter: Cannot format invalid date.');
              if (I) {
                this._clampDate &&
                  (t.getFullYear() < 1 || t.getFullYear() > 9999) &&
                  (t = this.clone(t)).setFullYear(Math.max(1, Math.min(9999, t.getFullYear()))),
                  (e = Object.assign(Object.assign({}, e), { timeZone: 'utc' }));
                const n = new Intl.DateTimeFormat(this.locale, e);
                return this._stripDirectionalityCharacters(this._format(n, t));
              }
              return this._stripDirectionalityCharacters(t.toDateString());
            }
            addCalendarYears(t, e) {
              return this.addCalendarMonths(t, 12 * e);
            }
            addCalendarMonths(t, e) {
              let n = this._createDateWithOverflow(this.getYear(t), this.getMonth(t) + e, this.getDate(t));
              return (
                this.getMonth(n) != (((this.getMonth(t) + e) % 12) + 12) % 12 &&
                  (n = this._createDateWithOverflow(this.getYear(n), this.getMonth(n), 0)),
                n
              );
            }
            addCalendarDays(t, e) {
              return this._createDateWithOverflow(this.getYear(t), this.getMonth(t), this.getDate(t) + e);
            }
            toIso8601(t) {
              return [t.getUTCFullYear(), this._2digit(t.getUTCMonth() + 1), this._2digit(t.getUTCDate())].join('-');
            }
            deserialize(t) {
              if ('string' == typeof t) {
                if (!t) return null;
                if (R.test(t)) {
                  let e = new Date(t);
                  if (this.isValid(e)) return e;
                }
              }
              return super.deserialize(t);
            }
            isDateInstance(t) {
              return t instanceof Date;
            }
            isValid(t) {
              return !isNaN(t.getTime());
            }
            invalid() {
              return new Date(NaN);
            }
            _createDateWithOverflow(t, e, n) {
              const i = new Date(t, e, n);
              return t >= 0 && t < 100 && i.setFullYear(this.getYear(i) - 1900), i;
            }
            _2digit(t) {
              return ('00' + t).slice(-2);
            }
            _stripDirectionalityCharacters(t) {
              return t.replace(/[\u200e\u200f]/g, '');
            }
            _format(t, e) {
              const n = new Date(
                Date.UTC(
                  e.getFullYear(),
                  e.getMonth(),
                  e.getDate(),
                  e.getHours(),
                  e.getMinutes(),
                  e.getSeconds(),
                  e.getMilliseconds()
                )
              );
              return t.format(n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(S, 8), i.fc(u.a));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        F = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [{ provide: E, useClass: M }],
              imports: [[u.b]],
            })),
            t
          );
        })();
      const N = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },
          monthYearLabel: { year: 'numeric', month: 'short' },
          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
          monthYearA11yLabel: { year: 'numeric', month: 'long' },
        },
      };
      let V = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [{ provide: T, useValue: N }],
              imports: [[F]],
            })),
            t
          );
        })(),
        L = (() => {
          class t {
            isErrorState(t, e) {
              return !!(t && t.invalid && (t.touched || (e && e.submitted)));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(i.Rb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        H = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'mat-line', ''],
                ['', 'matLine', ''],
              ],
              hostAttrs: [1, 'mat-line'],
            })),
            t
          );
        })();
      function z(t, e, n = 'mat') {
        t.changes.pipe(Object(h.a)(t)).subscribe(({ length: t }) => {
          B(e, `${n}-2-line`, !1),
            B(e, `${n}-3-line`, !1),
            B(e, `${n}-multi-line`, !1),
            2 === t || 3 === t ? B(e, `${n}-${t}-line`, !0) : t > 3 && B(e, `${n}-multi-line`, !0);
        });
      }
      function B(t, e, n) {
        const i = t.nativeElement.classList;
        n ? i.add(e) : i.remove(e);
      }
      let U = (() => {
        class t {}
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [[v], v],
          })),
          t
        );
      })();
      class W {
        constructor(t, e, n) {
          (this._renderer = t), (this.element = e), (this.config = n), (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const $ = { enterDuration: 450, exitDuration: 400 },
        q = Object(u.f)({ passive: !0 }),
        G = ['mousedown', 'touchstart'],
        X = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class K {
        constructor(t, e, n, i) {
          (this._target = t),
            (this._ngZone = e),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            i.isBrowser && (this._containerElement = Object(c.e)(n));
        }
        fadeInRipple(t, e, n = {}) {
          const i = (this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect()),
            r = Object.assign(Object.assign({}, $), n.animation);
          n.centered && ((t = i.left + i.width / 2), (e = i.top + i.height / 2));
          const s =
              n.radius ||
              (function (t, e, n) {
                const i = Math.max(Math.abs(t - n.left), Math.abs(t - n.right)),
                  r = Math.max(Math.abs(e - n.top), Math.abs(e - n.bottom));
                return Math.sqrt(i * i + r * r);
              })(t, e, i),
            o = t - i.left,
            a = e - i.top,
            c = r.enterDuration,
            l = document.createElement('div');
          l.classList.add('mat-ripple-element'),
            (l.style.left = `${o - s}px`),
            (l.style.top = `${a - s}px`),
            (l.style.height = `${2 * s}px`),
            (l.style.width = `${2 * s}px`),
            null != n.color && (l.style.backgroundColor = n.color),
            (l.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(l),
            window.getComputedStyle(l).getPropertyValue('opacity'),
            (l.style.transform = 'scale(1)');
          const u = new W(this, l, n);
          return (
            (u.state = 0),
            this._activeRipples.add(u),
            n.persistent || (this._mostRecentTransientRipple = u),
            this._runTimeoutOutsideZone(() => {
              const t = u === this._mostRecentTransientRipple;
              (u.state = 1), n.persistent || (t && this._isPointerDown) || u.fadeOut();
            }, c),
            u
          );
        }
        fadeOutRipple(t) {
          const e = this._activeRipples.delete(t);
          if (
            (t === this._mostRecentTransientRipple && (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !e)
          )
            return;
          const n = t.element,
            i = Object.assign(Object.assign({}, $), t.config.animation);
          (n.style.transitionDuration = `${i.exitDuration}ms`),
            (n.style.opacity = '0'),
            (t.state = 2),
            this._runTimeoutOutsideZone(() => {
              (t.state = 3), n.parentNode.removeChild(n);
            }, i.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((t) => t.fadeOut());
        }
        setupTriggerEvents(t) {
          const e = Object(c.e)(t);
          e &&
            e !== this._triggerElement &&
            (this._removeTriggerEvents(), (this._triggerElement = e), this._registerEvents(G));
        }
        handleEvent(t) {
          'mousedown' === t.type
            ? this._onMousedown(t)
            : 'touchstart' === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered || (this._registerEvents(X), (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(t) {
          const e = Object(r.k)(t),
            n = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + 800;
          this._target.rippleDisabled ||
            e ||
            n ||
            ((this._isPointerDown = !0), this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled) {
            (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let t = 0; t < e.length; t++) this.fadeInRipple(e[t].clientX, e[t].clientY, this._target.rippleConfig);
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((t) => {
              !t.config.persistent &&
                (1 === t.state || (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(t, e = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(t, e));
        }
        _registerEvents(t) {
          this._ngZone.runOutsideAngular(() => {
            t.forEach((t) => {
              this._triggerElement.addEventListener(t, this, q);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (G.forEach((t) => {
              this._triggerElement.removeEventListener(t, this, q);
            }),
            this._pointerUpEventsRegistered &&
              X.forEach((t) => {
                this._triggerElement.removeEventListener(t, this, q);
              }));
        }
      }
      const Y = new i.s('mat-ripple-global-options');
      let Z = (() => {
          class t {
            constructor(t, e, n, i, r) {
              (this._elementRef = t),
                (this._animationMode = r),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = i || {}),
                (this._rippleRenderer = new K(this, e, t, n));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              (this._disabled = t), this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(t) {
              (this._trigger = t), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: Object.assign(
                  Object.assign(
                    Object.assign({}, this._globalOptions.animation),
                    'NoopAnimations' === this._animationMode ? { enterDuration: 0, exitDuration: 0 } : {}
                  ),
                  this.animation
                ),
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled && this._isInitialized && this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(t, e = 0, n) {
              return 'number' == typeof t
                ? this._rippleRenderer.fadeInRipple(t, e, Object.assign(Object.assign({}, this.rippleConfig), n))
                : this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(i.B), i.Vb(u.a), i.Vb(Y, 8), i.Vb(d.a, 8));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && i.Mb('mat-ripple-unbounded', e.unbounded);
              },
              inputs: {
                radius: ['matRippleRadius', 'radius'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                animation: ['matRippleAnimation', 'animation'],
              },
              exportAs: ['matRipple'],
            })),
            t
          );
        })(),
        Q = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[v, u.b], v],
            })),
            t
          );
        })(),
        J = (() => {
          class t {
            constructor(t) {
              (this._animationMode = t), (this.state = 'unchecked'), (this.disabled = !1);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(d.a, 8));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['mat-pseudo-checkbox']],
              hostAttrs: [1, 'mat-pseudo-checkbox'],
              hostVars: 8,
              hostBindings: function (t, e) {
                2 & t &&
                  i.Mb('mat-pseudo-checkbox-indeterminate', 'indeterminate' === e.state)(
                    'mat-pseudo-checkbox-checked',
                    'checked' === e.state
                  )('mat-pseudo-checkbox-disabled', e.disabled)(
                    '_mat-animation-noopable',
                    'NoopAnimations' === e._animationMode
                  );
              },
              inputs: { state: 'state', disabled: 'disabled' },
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        tt = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })();
      class et {}
      const nt = w(et);
      let it = 0,
        rt = (() => {
          class t extends nt {
            constructor() {
              super(...arguments), (this._labelId = `mat-optgroup-label-${it++}`);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return st(e || t);
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['mat-optgroup']],
              hostAttrs: ['role', 'group', 1, 'mat-optgroup'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  (i.Jb('aria-disabled', e.disabled.toString())('aria-labelledby', e._labelId),
                  i.Mb('mat-optgroup-disabled', e.disabled));
              },
              inputs: { disabled: 'disabled', label: 'label' },
              exportAs: ['matOptgroup'],
              features: [i.Fb],
              ngContentSelectors: m,
              decls: 4,
              vars: 2,
              consts: [[1, 'mat-optgroup-label', 3, 'id']],
              template: function (t, e) {
                1 & t && (i.uc(f), i.bc(0, 'label', 0), i.Mc(1), i.tc(2), i.ac(), i.tc(3, 1)),
                  2 & t && (i.vc('id', e._labelId), i.Ib(1), i.Oc('', e.label, ' '));
              },
              styles: [
                '.mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      const st = i.dc(rt);
      let ot = 0;
      class at {
        constructor(t, e = !1) {
          (this.source = t), (this.isUserInput = e);
        }
      }
      const ct = new i.s('MAT_OPTION_PARENT_COMPONENT');
      let lt = (() => {
        class t {
          constructor(t, e, n, r) {
            (this._element = t),
              (this._changeDetectorRef = e),
              (this._parent = n),
              (this.group = r),
              (this._selected = !1),
              (this._active = !1),
              (this._disabled = !1),
              (this._mostRecentViewValue = ''),
              (this.id = `mat-option-${ot++}`),
              (this.onSelectionChange = new i.p()),
              (this._stateChanges = new l.a());
          }
          get multiple() {
            return this._parent && this._parent.multiple;
          }
          get selected() {
            return this._selected;
          }
          get disabled() {
            return (this.group && this.group.disabled) || this._disabled;
          }
          set disabled(t) {
            this._disabled = Object(c.c)(t);
          }
          get disableRipple() {
            return this._parent && this._parent.disableRipple;
          }
          get active() {
            return this._active;
          }
          get viewValue() {
            return (this._getHostElement().textContent || '').trim();
          }
          select() {
            this._selected ||
              ((this._selected = !0), this._changeDetectorRef.markForCheck(), this._emitSelectionChangeEvent());
          }
          deselect() {
            this._selected &&
              ((this._selected = !1), this._changeDetectorRef.markForCheck(), this._emitSelectionChangeEvent());
          }
          focus(t, e) {
            const n = this._getHostElement();
            'function' == typeof n.focus && n.focus(e);
          }
          setActiveStyles() {
            this._active || ((this._active = !0), this._changeDetectorRef.markForCheck());
          }
          setInactiveStyles() {
            this._active && ((this._active = !1), this._changeDetectorRef.markForCheck());
          }
          getLabel() {
            return this.viewValue;
          }
          _handleKeydown(t) {
            (t.keyCode !== p.f && t.keyCode !== p.n) ||
              Object(p.s)(t) ||
              (this._selectViaInteraction(), t.preventDefault());
          }
          _selectViaInteraction() {
            this.disabled ||
              ((this._selected = !this.multiple || !this._selected),
              this._changeDetectorRef.markForCheck(),
              this._emitSelectionChangeEvent(!0));
          }
          _getAriaSelected() {
            return this.selected || (!this.multiple && null);
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._element.nativeElement;
          }
          ngAfterViewChecked() {
            if (this._selected) {
              const t = this.viewValue;
              t !== this._mostRecentViewValue && ((this._mostRecentViewValue = t), this._stateChanges.next());
            }
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
          _emitSelectionChangeEvent(t = !1) {
            this.onSelectionChange.emit(new at(this, t));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(i.m), i.Vb(i.i), i.Vb(ct, 8), i.Vb(rt, 8));
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['mat-option']],
            hostAttrs: ['role', 'option', 1, 'mat-option', 'mat-focus-indicator'],
            hostVars: 12,
            hostBindings: function (t, e) {
              1 & t &&
                i.jc('click', function () {
                  return e._selectViaInteraction();
                })('keydown', function (t) {
                  return e._handleKeydown(t);
                }),
                2 & t &&
                  (i.ec('id', e.id),
                  i.Jb('tabindex', e._getTabIndex())('aria-selected', e._getAriaSelected())(
                    'aria-disabled',
                    e.disabled.toString()
                  ),
                  i.Mb('mat-selected', e.selected)('mat-option-multiple', e.multiple)('mat-active', e.active)(
                    'mat-option-disabled',
                    e.disabled
                  ));
            },
            inputs: { id: 'id', disabled: 'disabled', value: 'value' },
            outputs: { onSelectionChange: 'onSelectionChange' },
            exportAs: ['matOption'],
            ngContentSelectors: b,
            decls: 4,
            vars: 3,
            consts: [
              ['class', 'mat-option-pseudo-checkbox', 3, 'state', 'disabled', 4, 'ngIf'],
              [1, 'mat-option-text'],
              ['mat-ripple', '', 1, 'mat-option-ripple', 3, 'matRippleTrigger', 'matRippleDisabled'],
              [1, 'mat-option-pseudo-checkbox', 3, 'state', 'disabled'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.uc(),
                i.Kc(0, g, 1, 2, 'mat-pseudo-checkbox', 0),
                i.bc(1, 'span', 1),
                i.tc(2),
                i.ac(),
                i.Wb(3, 'div', 2)),
                2 & t &&
                  (i.vc('ngIf', e.multiple),
                  i.Ib(3),
                  i.vc('matRippleTrigger', e._getHostElement())('matRippleDisabled', e.disabled || e.disableRipple));
            },
            directives: [a.l, Z, J],
            styles: [
              '.mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      function ut(t, e, n) {
        if (n.length) {
          let i = e.toArray(),
            r = n.toArray(),
            s = 0;
          for (let e = 0; e < t + 1; e++) i[e].group && i[e].group === r[s] && s++;
          return s;
        }
        return 0;
      }
      function ht(t, e, n, i) {
        const r = t * e;
        return r < n ? r : r + e > n + i ? Math.max(0, r - i + e) : n;
      }
      let dt = (() => {
        class t {}
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [[Q, a.c, tt]],
          })),
          t
        );
      })();
      const pt = new i.s('mat-label-global-options');
    },
    FtGj: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return y;
      }),
        n.d(e, 'b', function () {
          return i;
        }),
        n.d(e, 'c', function () {
          return g;
        }),
        n.d(e, 'd', function () {
          return m;
        }),
        n.d(e, 'e', function () {
          return u;
        }),
        n.d(e, 'f', function () {
          return s;
        }),
        n.d(e, 'g', function () {
          return o;
        }),
        n.d(e, 'h', function () {
          return h;
        }),
        n.d(e, 'i', function () {
          return d;
        }),
        n.d(e, 'j', function () {
          return _;
        }),
        n.d(e, 'k', function () {
          return l;
        }),
        n.d(e, 'l', function () {
          return c;
        }),
        n.d(e, 'm', function () {
          return f;
        }),
        n.d(e, 'n', function () {
          return a;
        }),
        n.d(e, 'o', function () {
          return r;
        }),
        n.d(e, 'p', function () {
          return p;
        }),
        n.d(e, 'q', function () {
          return v;
        }),
        n.d(e, 'r', function () {
          return b;
        }),
        n.d(e, 's', function () {
          return w;
        });
      const i = 8,
        r = 9,
        s = 13,
        o = 27,
        a = 32,
        c = 33,
        l = 34,
        u = 35,
        h = 36,
        d = 37,
        p = 38,
        f = 39,
        m = 40,
        g = 46,
        b = 48,
        _ = 57,
        y = 65,
        v = 90;
      function w(t, ...e) {
        return e.length ? e.some((e) => t[e]) : t.altKey || t.shiftKey || t.ctrlKey || t.metaKey;
      }
    },
    GU7r: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return u;
      }),
        n.d(e, 'b', function () {
          return l;
        }),
        n.d(e, 'c', function () {
          return h;
        });
      var i = n('8LU1'),
        r = n('fXoL'),
        s = n('HDdC'),
        o = n('XNiG'),
        a = n('Kj3r');
      let c = (() => {
          class t {
            create(t) {
              return 'undefined' == typeof MutationObserver ? null : new MutationObserver(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(r.Rb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        l = (() => {
          class t {
            constructor(t) {
              (this._mutationObserverFactory = t), (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((t, e) => this._cleanupObserver(e));
            }
            observe(t) {
              const e = Object(i.e)(t);
              return new s.a((t) => {
                const n = this._observeElement(e).subscribe(t);
                return () => {
                  n.unsubscribe(), this._unobserveElement(e);
                };
              });
            }
            _observeElement(t) {
              if (this._observedElements.has(t)) this._observedElements.get(t).count++;
              else {
                const e = new o.a(),
                  n = this._mutationObserverFactory.create((t) => e.next(t));
                n && n.observe(t, { characterData: !0, childList: !0, subtree: !0 }),
                  this._observedElements.set(t, { observer: n, stream: e, count: 1 });
              }
              return this._observedElements.get(t).stream;
            }
            _unobserveElement(t) {
              this._observedElements.has(t) &&
                (this._observedElements.get(t).count--,
                this._observedElements.get(t).count || this._cleanupObserver(t));
            }
            _cleanupObserver(t) {
              if (this._observedElements.has(t)) {
                const { observer: e, stream: n } = this._observedElements.get(t);
                e && e.disconnect(), n.complete(), this._observedElements.delete(t);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(c));
            }),
            (t.ɵprov = Object(r.Rb)({
              factory: function () {
                return new t(Object(r.fc)(c));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        u = (() => {
          class t {
            constructor(t, e, n) {
              (this._contentObserver = t),
                (this._elementRef = e),
                (this._ngZone = n),
                (this.event = new r.p()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              (this._disabled = Object(i.c)(t)), this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(t) {
              (this._debounce = Object(i.f)(t)), this._subscribe();
            }
            ngAfterContentInit() {
              this._currentSubscription || this.disabled || this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const t = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (this.debounce ? t.pipe(Object(a.a)(this.debounce)) : t).subscribe(
                  this.event
                );
              });
            }
            _unsubscribe() {
              this._currentSubscription && this._currentSubscription.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(l), r.Vb(r.m), r.Vb(r.B));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'cdkObserveContent', '']],
              inputs: { disabled: ['cdkObserveContentDisabled', 'disabled'], debounce: 'debounce' },
              outputs: { event: 'cdkObserveContent' },
              exportAs: ['cdkObserveContent'],
            })),
            t
          );
        })(),
        h = (() => {
          class t {}
          return (
            (t.ɵmod = r.Tb({ type: t })),
            (t.ɵinj = r.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [c],
            })),
            t
          );
        })();
    },
    GyhO: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('LRne'),
        r = n('0EUg');
      function s(...t) {
        return Object(r.a)()(Object(i.a)(...t));
      }
    },
    HDdC: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('7o/Q'),
        r = n('2QA8'),
        s = n('gRHU'),
        o = n('kJWO'),
        a = n('mCNh'),
        c = n('2fFW');
      let l = (() => {
        class t {
          constructor(t) {
            (this._isScalar = !1), t && (this._subscribe = t);
          }
          lift(e) {
            const n = new t();
            return (n.source = this), (n.operator = e), n;
          }
          subscribe(t, e, n) {
            const { operator: o } = this,
              a = (function (t, e, n) {
                if (t) {
                  if (t instanceof i.a) return t;
                  if (t[r.a]) return t[r.a]();
                }
                return t || e || n ? new i.a(t, e, n) : new i.a(s.a);
              })(t, e, n);
            if (
              (a.add(
                o
                  ? o.call(a, this.source)
                  : this.source || (c.a.useDeprecatedSynchronousErrorHandling && !a.syncErrorThrowable)
                  ? this._subscribe(a)
                  : this._trySubscribe(a)
              ),
              c.a.useDeprecatedSynchronousErrorHandling &&
                a.syncErrorThrowable &&
                ((a.syncErrorThrowable = !1), a.syncErrorThrown))
            )
              throw a.syncErrorValue;
            return a;
          }
          _trySubscribe(t) {
            try {
              return this._subscribe(t);
            } catch (e) {
              c.a.useDeprecatedSynchronousErrorHandling && ((t.syncErrorThrown = !0), (t.syncErrorValue = e)),
                (function (t) {
                  for (; t; ) {
                    const { closed: e, destination: n, isStopped: r } = t;
                    if (e || r) return !1;
                    t = n && n instanceof i.a ? n : null;
                  }
                  return !0;
                })(t)
                  ? t.error(e)
                  : console.warn(e);
            }
          }
          forEach(t, e) {
            return new (e = u(e))((e, n) => {
              let i;
              i = this.subscribe(
                (e) => {
                  try {
                    t(e);
                  } catch (r) {
                    n(r), i && i.unsubscribe();
                  }
                },
                n,
                e
              );
            });
          }
          _subscribe(t) {
            const { source: e } = this;
            return e && e.subscribe(t);
          }
          [o.a]() {
            return this;
          }
          pipe(...t) {
            return 0 === t.length ? this : Object(a.b)(t)(this);
          }
          toPromise(t) {
            return new (t = u(t))((t, e) => {
              let n;
              this.subscribe(
                (t) => (n = t),
                (t) => e(t),
                () => t(n)
              );
            });
          }
        }
        return (t.create = (e) => new t(e)), t;
      })();
      function u(t) {
        if ((t || (t = c.a.Promise || Promise), !t)) throw new Error('no Promise impl found');
        return t;
      }
    },
    I55L: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (t) => t && 'number' == typeof t.length && 'function' != typeof t;
    },
    I5W0: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      const i = (t) => t || 'string' == typeof t,
        r = (t) => 'string' == typeof t && 0 === t.length,
        s = (t) =>
          t
            .split(/(?=[A-Z])/)
            .join('_')
            .toUpperCase();
      var o = n('fXoL');
      let a = (() => {
        class t {
          constructor() {
            (this.forms = {}),
              (this.types = {
                users: 'repeat',
                email: 'email',
                date: 'datepicker',
                description: 'textarea',
                comment: 'textarea',
                image: 'file',
                icon: 'file',
                logo: 'file',
                preview: 'file',
                background: 'file',
                media: 'file',
                medias: 'file',
                password: 'password',
              }),
              (this.getForm = (t) => this.forms[t]);
          }
          setForm(t, e) {
            this.forms[t] = e;
          }
          setForms(t) {
            for (const e in t) t.hasOwnProperty(e) && this.setForm(e, t[e]);
          }
          generateFormlyField(t) {
            const e = t.group ? '' : t.hideTemplate ? 'hide' : i(t.array) ? 'repeat' : this.types[t.key] || 'input',
              n = t.key && `FORM.${s(t.key)}`,
              o = t.key && `FORM.${s(t.key)}_PLACEHOLDER`,
              a = t.group ? ['group'] : null,
              {
                key: c,
                wrappers: l = a,
                hide: u,
                hideTemplate: h,
                defaultValue: d = i(t.array) ? [] : '',
                type: p = e,
                label: f = n,
                placeholder: m = o,
                translate: g = !r(t.key),
                required: b = !1,
                readonly: _ = !1,
                array: y,
                group: v,
                actions: w,
                rows: x = 3,
                theme: C,
                hideExpression: k,
                showAddButton: O = !0,
                showDeleteButton: S = !0,
                showSubmitButton: E = !1,
                showIndex: T = !0,
                limit: I = 1 / 0,
              } = t;
            let A;
            return (
              i(y) &&
                (A = i(y.group)
                  ? { fieldGroup: y.group.map((t) => this.generateFormlyField(t)) }
                  : this.generateFormlyField('string' == typeof y ? { key: y } : y)),
              {
                key: c,
                wrappers: l,
                type: p,
                hide: u,
                defaultValue: d,
                fieldArray: A,
                fieldGroup: v && this.generateFormlyFields({ fields: v }),
                hideExpression: k,
                templateOptions: {
                  limit: I,
                  label: f,
                  placeholder: m,
                  translate: g,
                  required: b,
                  readonly: _,
                  actions: w,
                  hideTemplate: h,
                  rows: x,
                  theme: C,
                  showAddButton: O,
                  showDeleteButton: S,
                  showSubmitButton: E,
                  showIndex: T,
                },
              }
            );
          }
          generateFormlyFields(t) {
            const { type: e } = t,
              n = [],
              i = 'string' == typeof t.fields ? this.getForm(t.fields) : t.fields;
            return i
              ? (Array.isArray(i)
                  ? i.forEach((t) => {
                      const i = e || t.type,
                        r =
                          'string' == typeof t ? { key: t, type: i } : Object.assign(Object.assign({}, t), { type: i });
                      n.push(this.generateFormlyField(r));
                    })
                  : Object.keys(i).forEach((t) => {
                      const r = e || i[t].type,
                        s = 'string' == typeof i[t] ? { key: t, type: r } : Object.assign({ key: t, type: r }, i[t]);
                      n.push(this.generateFormlyField(s));
                    }),
                n)
              : [];
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = o.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
    },
    IjjT: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      let i = (() => {
        class t {
          constructor(e, n = t.now) {
            (this.SchedulerAction = e), (this.now = n);
          }
          schedule(t, e = 0, n) {
            return new this.SchedulerAction(this, t).schedule(n, e);
          }
        }
        return (t.now = () => Date.now()), t;
      })();
      class r extends i {
        constructor(t, e = i.now) {
          super(t, () => (r.delegate && r.delegate !== this ? r.delegate.now() : e())),
            (this.actions = []),
            (this.active = !1),
            (this.scheduled = void 0);
        }
        schedule(t, e = 0, n) {
          return r.delegate && r.delegate !== this ? r.delegate.schedule(t, e, n) : super.schedule(t, e, n);
        }
        flush(t) {
          const { actions: e } = this;
          if (this.active) return void e.push(t);
          let n;
          this.active = !0;
          do {
            if ((n = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this.active = !1), n)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw n;
          }
        }
      }
    },
    IzEk: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('7o/Q'),
        r = n('4I5i'),
        s = n('EY2u');
      function o(t) {
        return (e) => (0 === t ? Object(s.b)() : e.lift(new a(t)));
      }
      class a {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new r.a();
        }
        call(t, e) {
          return e.subscribe(new c(t, this.total));
        }
      }
      class c extends i.a {
        constructor(t, e) {
          super(t), (this.total = e), (this.count = 0);
        }
        _next(t) {
          const e = this.total,
            n = ++this.count;
          n <= e && (this.destination.next(t), n === e && (this.destination.complete(), this.unsubscribe()));
        }
      }
    },
    JIr8: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('l7GE'),
        r = n('51Dv'),
        s = n('ZUHj');
      function o(t) {
        return function (e) {
          const n = new a(t),
            i = e.lift(n);
          return (n.caught = i);
        };
      }
      class a {
        constructor(t) {
          this.selector = t;
        }
        call(t, e) {
          return e.subscribe(new c(t, this.selector, this.caught));
        }
      }
      class c extends i.a {
        constructor(t, e, n) {
          super(t), (this.selector = e), (this.caught = n);
        }
        error(t) {
          if (!this.isStopped) {
            let n;
            try {
              n = this.selector(t, this.caught);
            } catch (e) {
              return void super.error(e);
            }
            this._unsubscribeAndRecycle();
            const i = new r.a(this, void 0, void 0);
            this.add(i);
            const o = Object(s.a)(this, n, void 0, void 0, i);
            o !== i && this.add(o);
          }
        }
      }
    },
    JX91: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('GyhO'),
        r = n('z+Ro');
      function s(...t) {
        const e = t[t.length - 1];
        return Object(r.a)(e) ? (t.pop(), (n) => Object(i.a)(t, n, e)) : (e) => Object(i.a)(t, e);
      }
    },
    JbvS: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return g;
      }),
        n.d(e, 'b', function () {
          return b;
        }),
        n.d(e, 'c', function () {
          return y;
        }),
        n.d(e, 'd', function () {
          return _;
        });
      var i = n('fXoL'),
        r = n('bTqV'),
        s = n('ofXK'),
        o = n('xgIS'),
        a = n('cp0P'),
        c = n('IzEk');
      function l(t, e) {
        1 & t && i.tc(0, 0, ['*ngIf', 'miniFabVisible']);
      }
      const u = [[['', 'mat-mini-fab', '']]],
        h = ['[mat-mini-fab]'],
        d = [[['eco-fab-speed-dial-trigger']], [['eco-fab-speed-dial-actions']]],
        p = ['eco-fab-speed-dial-trigger', 'eco-fab-speed-dial-actions'],
        f = [[['', 'mat-fab', '']]],
        m = ['[mat-fab]'];
      let g = (() => {
          let t = class {
            constructor(t, e) {
              (this.renderer = e), (this.miniFabVisible = !1), (this._parent = t.get(b));
            }
            ngAfterContentInit() {
              this._buttons.changes.subscribe(() => {
                this.initButtonStates(), this._parent.setActionsVisibility();
              }),
                this.initButtonStates();
            }
            initButtonStates() {
              this._buttons.forEach((t, e) => {
                this.renderer.addClass(t._getHostElement(), 'eco-fab-action-item'),
                  this.changeElementStyle(t._getHostElement(), 'z-index', '' + (23 - e));
              });
            }
            show() {
              this._buttons &&
                (this.resetAnimationState(),
                (this.miniFabVisible = !0),
                (this.showMiniFabAnimation = setTimeout(() => {
                  this._buttons.forEach((t, e) => {
                    let n,
                      i = 0;
                    'scale' === this._parent.animationMode
                      ? ((i = 3 + 65 * e), (n = 'scale(1)'))
                      : (n = this.getTranslateFunction('0'));
                    const r = t._getHostElement();
                    this.changeElementStyle(r, 'transition-delay', i + 'ms'),
                      this.changeElementStyle(r, 'opacity', '1'),
                      this.changeElementStyle(r, 'transform', n);
                  });
                }, 50)));
            }
            resetAnimationState() {
              clearTimeout(this.showMiniFabAnimation),
                this.hideMiniFab && (this.hideMiniFab.unsubscribe(), (this.hideMiniFab = null));
            }
            hide() {
              if (!this._buttons) return;
              this.resetAnimationState();
              const t = this._buttons.map((t, e) => {
                let n,
                  i = '1',
                  r = 0;
                'scale' === this._parent.animationMode
                  ? ((r = 3 - 65 * e), (n = 'scale(0)'), (i = '0'))
                  : (n = this.getTranslateFunction(55 * (e + 1) - 5 * e + 'px'));
                const s = t._getHostElement();
                return (
                  this.changeElementStyle(s, 'transition-delay', r + 'ms'),
                  this.changeElementStyle(s, 'opacity', i),
                  this.changeElementStyle(s, 'transform', n),
                  Object(o.a)(s, 'transitionend').pipe(Object(c.a)(1))
                );
              });
              this.hideMiniFab = Object(a.a)(t).subscribe(() => (this.miniFabVisible = !1));
            }
            getTranslateFunction(t) {
              const e = this._parent.direction;
              return (
                ('up' === e || 'down' === e ? 'translateY' : 'translateX') +
                '(' +
                ('down' === e || 'right' === e ? '-' : '') +
                t +
                ')'
              );
            }
            changeElementStyle(t, e, n) {
              this.renderer.setStyle(t, e, n);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.t), i.Vb(i.G));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['eco-fab-speed-dial-actions']],
              contentQueries: function (t, e, n) {
                var s;
                1 & t && i.Ob(n, r.a, !1), 2 & t && i.Ac((s = i.kc())) && (e._buttons = s);
              },
              ngContentSelectors: h,
              decls: 1,
              vars: 1,
              consts: [[4, 'ngIf']],
              template: function (t, e) {
                1 & t && (i.uc(u), i.Kc(0, l, 1, 0, void 0, 0)), 2 & t && i.vc('ngIf', e.miniFabVisible);
              },
              directives: [s.l],
              encapsulation: 2,
            })),
            t
          );
        })(),
        b = (() => {
          let t = class {
            constructor(t, e, n) {
              (this.elementRef = t),
                (this.renderer = e),
                (this.document = n),
                (this.isInitialized = !1),
                (this._direction = 'up'),
                (this._open = !1),
                (this._animationMode = 'fling'),
                (this._fixed = !1),
                (this._documentClickUnlistener = null),
                (this.openChange = new i.p());
            }
            get fixed() {
              return this._fixed;
            }
            set fixed(t) {
              (this._fixed = t), this._processOutsideClickState();
            }
            get open() {
              return this._open;
            }
            set open(t) {
              const e = this._open;
              (this._open = t),
                e !== this._open &&
                  (this.openChange.emit(this._open), this.isInitialized && this.setActionsVisibility());
            }
            get direction() {
              return this._direction;
            }
            set direction(t) {
              const e = this._direction;
              (this._direction = t),
                e !== this.direction &&
                  (this._setElementClass(e, !1),
                  this._setElementClass(this.direction, !0),
                  this.isInitialized && this.setActionsVisibility());
            }
            get animationMode() {
              return this._animationMode;
            }
            set animationMode(t) {
              const e = this._animationMode;
              (this._animationMode = t),
                e !== this._animationMode &&
                  (this._setElementClass(e, !1),
                  this._setElementClass(this.animationMode, !0),
                  this.isInitialized && Promise.resolve(null).then(() => (this.open = !1)));
            }
            ngAfterContentInit() {
              (this.isInitialized = !0),
                this.setActionsVisibility(),
                this._setElementClass(this.direction, !0),
                this._setElementClass(this.animationMode, !0);
            }
            ngOnDestroy() {
              this._unsetDocumentClickListener();
            }
            toggle() {
              this.open = !this.open;
            }
            _onClick() {
              !this.fixed && this.open && (this.open = !1);
            }
            setActionsVisibility() {
              this._childActions &&
                (this.open ? this._childActions.show() : this._childActions.hide(), this._processOutsideClickState());
            }
            _setElementClass(t, e) {
              const n = `eco-${t}`;
              e
                ? this.renderer.addClass(this.elementRef.nativeElement, n)
                : this.renderer.removeClass(this.elementRef.nativeElement, n);
            }
            _processOutsideClickState() {
              !this.fixed && this.open ? this._setDocumentClickListener() : this._unsetDocumentClickListener();
            }
            _setDocumentClickListener() {
              this._documentClickUnlistener ||
                (this._documentClickUnlistener = this.renderer.listen(this.document, 'click', () => {
                  this.open = !1;
                }));
            }
            _unsetDocumentClickListener() {
              this._documentClickUnlistener &&
                (this._documentClickUnlistener(), (this._documentClickUnlistener = null));
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(i.G), i.Vb(s.d));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['eco-fab-speed-dial']],
              contentQueries: function (t, e, n) {
                var r;
                1 & t && i.Ob(n, g, !0), 2 & t && i.Ac((r = i.kc())) && (e._childActions = r.first);
              },
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('click', function () {
                    return e._onClick();
                  }),
                  2 & t && i.Mb('eco-opened', e.open);
              },
              inputs: { fixed: 'fixed', open: 'open', direction: 'direction', animationMode: 'animationMode' },
              outputs: { openChange: 'openChange' },
              ngContentSelectors: p,
              decls: 3,
              vars: 0,
              consts: [[1, 'eco-fab-speed-dial-container']],
              template: function (t, e) {
                1 & t && (i.uc(d), i.bc(0, 'div', 0), i.tc(1), i.tc(2, 1), i.ac());
              },
              styles: [
                'eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:.6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:.3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:.3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}',
              ],
              encapsulation: 2,
            })),
            t
          );
        })(),
        _ = (() => {
          let t = class {
            constructor(t) {
              (this.spin = !1), (this._parent = t.get(b));
            }
            get sp() {
              return this.spin;
            }
            _onClick(t) {
              this._parent.fixed || (this._parent.toggle(), t.stopPropagation());
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.t));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['eco-fab-speed-dial-trigger']],
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('click', function (t) {
                    return e._onClick(t);
                  }),
                  2 & t && i.Mb('eco-spin', e.sp);
              },
              inputs: { spin: 'spin' },
              ngContentSelectors: m,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (i.uc(f), i.tc(0));
              },
              encapsulation: 2,
            })),
            t
          );
        })(),
        y = (() => {
          let t = class {};
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[s.c]],
            })),
            t
          );
        })();
    },
    Kj3r: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('7o/Q'),
        r = n('D0XW');
      function s(t, e = r.a) {
        return (n) => n.lift(new o(t, e));
      }
      class o {
        constructor(t, e) {
          (this.dueTime = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new a(t, this.dueTime, this.scheduler));
        }
      }
      class a extends i.a {
        constructor(t, e, n) {
          super(t),
            (this.dueTime = e),
            (this.scheduler = n),
            (this.debouncedSubscription = null),
            (this.lastValue = null),
            (this.hasValue = !1);
        }
        _next(t) {
          this.clearDebounce(),
            (this.lastValue = t),
            (this.hasValue = !0),
            this.add((this.debouncedSubscription = this.scheduler.schedule(c, this.dueTime, this)));
        }
        _complete() {
          this.debouncedNext(), this.destination.complete();
        }
        debouncedNext() {
          if ((this.clearDebounce(), this.hasValue)) {
            const { lastValue: t } = this;
            (this.lastValue = null), (this.hasValue = !1), this.destination.next(t);
          }
        }
        clearDebounce() {
          const t = this.debouncedSubscription;
          null !== t && (this.remove(t), t.unsubscribe(), (this.debouncedSubscription = null));
        }
      }
      function c(t) {
        t.debouncedNext();
      }
    },
    LRne: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('z+Ro'),
        r = n('yCtX'),
        s = n('jZKg');
      function o(...t) {
        let e = t[t.length - 1];
        return Object(i.a)(e) ? (t.pop(), Object(s.a)(t, e)) : Object(r.a)(t);
      }
    },
    Lhse: function (t, e, n) {
      'use strict';
      function i() {
        return 'function' == typeof Symbol && Symbol.iterator ? Symbol.iterator : '@@iterator';
      }
      n.d(e, 'a', function () {
        return r;
      });
      const r = i();
    },
    Ll0r: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return f;
      });
      var i = n('c2SN'),
        r = n('qFsG'),
        s = n('/1cH'),
        o = n('JX91'),
        a = n('eIep'),
        c = n('fXoL'),
        l = n('3Pt+'),
        u = n('0FS3'),
        h = n('ofXK'),
        d = n('FKr1');
      function p(t, e) {
        if ((1 & t && (c.bc(0, 'mat-option', 4), c.Mc(1), c.ac()), 2 & t)) {
          const t = e.$implicit;
          c.vc('value', t), c.Ib(1), c.Oc(' ', t.name, ' ');
        }
      }
      let f = (() => {
        class t extends i.a {
          constructor() {
            super(...arguments), (this.getDisplayFn = () => (t) => (t ? t.name || t : ''));
          }
          trackByFn(t, e) {
            return t;
          }
          ngOnInit() {
            super.ngOnInit(),
              (this.filter = this.formControl.valueChanges.pipe(
                Object(o.a)(''),
                Object(a.a)((t) => this.to.filter(t))
              ));
          }
          ngAfterViewInit() {
            super.ngAfterViewInit(), (this.autocomplete._formField = this.formField);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return m(e || t);
          }),
          (t.ɵcmp = c.Pb({
            type: t,
            selectors: [['app-formly-autocomplete']],
            viewQuery: function (t, e) {
              var n;
              1 & t && (c.Rc(r.b, !0), c.Rc(s.c, !0)),
                2 & t &&
                  (c.Ac((n = c.kc())) && (e.formFieldControl = n.first),
                  c.Ac((n = c.kc())) && (e.autocomplete = n.first));
            },
            features: [c.Fb],
            decls: 5,
            vars: 10,
            consts: [
              [
                'matInput',
                '',
                3,
                'matAutocomplete',
                'formControl',
                'formlyAttributes',
                'placeholder',
                'errorStateMatcher',
              ],
              [3, 'displayWith'],
              ['auto', 'matAutocomplete'],
              [3, 'value', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
              [3, 'value'],
            ],
            template: function (t, e) {
              if (
                (1 & t &&
                  (c.Wb(0, 'input', 0),
                  c.bc(1, 'mat-autocomplete', 1, 2),
                  c.Kc(3, p, 2, 2, 'mat-option', 3),
                  c.oc(4, 'async'),
                  c.ac()),
                2 & t)
              ) {
                const t = c.Bc(2);
                c.vc('matAutocomplete', t)('formControl', e.formControl)('formlyAttributes', e.field)(
                  'placeholder',
                  e.to.placeholder
                )('errorStateMatcher', e.errorStateMatcher),
                  c.Ib(1),
                  c.vc('displayWith', e.getDisplayFn()),
                  c.Ib(2),
                  c.vc('ngForOf', c.pc(4, 8, e.filter))('ngForTrackBy', e.trackByFn);
              }
            },
            directives: [r.b, s.c, l.c, l.n, l.f, u.e, s.a, h.k, d.l],
            pipes: [h.b],
            styles: [''],
          })),
          t
        );
      })();
      const m = c.dc(f);
    },
    LvDl: function (t, e, n) {
      (function (t) {
        var i;
        (function () {
          var r = 'Expected a function',
            s = '__lodash_placeholder__',
            o = [
              ['ary', 128],
              ['bind', 1],
              ['bindKey', 2],
              ['curry', 8],
              ['curryRight', 16],
              ['flip', 512],
              ['partial', 32],
              ['partialRight', 64],
              ['rearg', 256],
            ],
            a = '[object Arguments]',
            c = '[object Array]',
            l = '[object Boolean]',
            u = '[object Date]',
            h = '[object Error]',
            d = '[object Function]',
            p = '[object GeneratorFunction]',
            f = '[object Map]',
            m = '[object Number]',
            g = '[object Object]',
            b = '[object RegExp]',
            _ = '[object Set]',
            y = '[object String]',
            v = '[object Symbol]',
            w = '[object WeakMap]',
            x = '[object ArrayBuffer]',
            C = '[object DataView]',
            k = '[object Float32Array]',
            O = '[object Float64Array]',
            S = '[object Int8Array]',
            E = '[object Int16Array]',
            T = '[object Int32Array]',
            I = '[object Uint8Array]',
            A = '[object Uint16Array]',
            D = '[object Uint32Array]',
            j = /\b__p \+= '';/g,
            R = /\b(__p \+=) '' \+/g,
            P = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
            M = /&(?:amp|lt|gt|quot|#39);/g,
            F = /[&<>"']/g,
            N = RegExp(M.source),
            V = RegExp(F.source),
            L = /<%-([\s\S]+?)%>/g,
            H = /<%([\s\S]+?)%>/g,
            z = /<%=([\s\S]+?)%>/g,
            B = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            U = /^\w*$/,
            W = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
            $ = /[\\^$.*+?()[\]{}|]/g,
            q = RegExp($.source),
            G = /^\s+|\s+$/g,
            X = /^\s+/,
            K = /\s+$/,
            Y = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
            Z = /\{\n\/\* \[wrapped with (.+)\] \*/,
            Q = /,? & /,
            J = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
            tt = /\\(\\)?/g,
            et = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
            nt = /\w*$/,
            it = /^[-+]0x[0-9a-f]+$/i,
            rt = /^0b[01]+$/i,
            st = /^\[object .+?Constructor\]$/,
            ot = /^0o[0-7]+$/i,
            at = /^(?:0|[1-9]\d*)$/,
            ct = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
            lt = /($^)/,
            ut = /['\n\r\u2028\u2029\\]/g,
            ht = '\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff',
            dt =
              '\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
            pt = '[' + dt + ']',
            ft = '[' + ht + ']',
            mt = '\\d+',
            gt = '[a-z\\xdf-\\xf6\\xf8-\\xff]',
            bt = '[^\\ud800-\\udfff' + dt + mt + '\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]',
            _t = '\\ud83c[\\udffb-\\udfff]',
            yt = '[^\\ud800-\\udfff]',
            vt = '(?:\\ud83c[\\udde6-\\uddff]){2}',
            wt = '[\\ud800-\\udbff][\\udc00-\\udfff]',
            xt = '[A-Z\\xc0-\\xd6\\xd8-\\xde]',
            Ct = '(?:' + gt + '|' + bt + ')',
            kt = '(?:' + xt + '|' + bt + ')',
            Ot = '(?:' + ft + '|' + _t + ')?',
            St = '[\\ufe0e\\ufe0f]?' + Ot + '(?:\\u200d(?:' + [yt, vt, wt].join('|') + ')[\\ufe0e\\ufe0f]?' + Ot + ')*',
            Et = '(?:' + ['[\\u2700-\\u27bf]', vt, wt].join('|') + ')' + St,
            Tt = '(?:' + [yt + ft + '?', ft, vt, wt, '[\\ud800-\\udfff]'].join('|') + ')',
            It = RegExp("['\u2019]", 'g'),
            At = RegExp(ft, 'g'),
            Dt = RegExp(_t + '(?=' + _t + ')|' + Tt + St, 'g'),
            jt = RegExp(
              [
                xt + '?' + gt + "+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=" + [pt, xt, '$'].join('|') + ')',
                kt + "+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=" + [pt, xt + Ct, '$'].join('|') + ')',
                xt + '?' + Ct + "+(?:['\u2019](?:d|ll|m|re|s|t|ve))?",
                xt + "+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?",
                '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
                '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
                mt,
                Et,
              ].join('|'),
              'g'
            ),
            Rt = RegExp('[\\u200d\\ud800-\\udfff' + ht + '\\ufe0e\\ufe0f]'),
            Pt = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
            Mt = [
              'Array',
              'Buffer',
              'DataView',
              'Date',
              'Error',
              'Float32Array',
              'Float64Array',
              'Function',
              'Int8Array',
              'Int16Array',
              'Int32Array',
              'Map',
              'Math',
              'Object',
              'Promise',
              'RegExp',
              'Set',
              'String',
              'Symbol',
              'TypeError',
              'Uint8Array',
              'Uint8ClampedArray',
              'Uint16Array',
              'Uint32Array',
              'WeakMap',
              '_',
              'clearTimeout',
              'isFinite',
              'parseInt',
              'setTimeout',
            ],
            Ft = -1,
            Nt = {};
          (Nt[k] = Nt[O] = Nt[S] = Nt[E] = Nt[T] = Nt[I] = Nt['[object Uint8ClampedArray]'] = Nt[A] = Nt[D] = !0),
            (Nt[a] = Nt[c] = Nt[x] = Nt[l] = Nt[C] = Nt[u] = Nt[h] = Nt[d] = Nt[f] = Nt[m] = Nt[g] = Nt[b] = Nt[_] = Nt[
              y
            ] = Nt[w] = !1);
          var Vt = {};
          (Vt[a] = Vt[c] = Vt[x] = Vt[C] = Vt[l] = Vt[u] = Vt[k] = Vt[O] = Vt[S] = Vt[E] = Vt[T] = Vt[f] = Vt[m] = Vt[
            g
          ] = Vt[b] = Vt[_] = Vt[y] = Vt[v] = Vt[I] = Vt['[object Uint8ClampedArray]'] = Vt[A] = Vt[D] = !0),
            (Vt[h] = Vt[d] = Vt[w] = !1);
          var Lt = { '\\': '\\', "'": "'", '\n': 'n', '\r': 'r', '\u2028': 'u2028', '\u2029': 'u2029' },
            Ht = parseFloat,
            zt = parseInt,
            Bt = 'object' == typeof global && global && global.Object === Object && global,
            Ut = 'object' == typeof self && self && self.Object === Object && self,
            Wt = Bt || Ut || Function('return this')(),
            $t = e && !e.nodeType && e,
            qt = $t && 'object' == typeof t && t && !t.nodeType && t,
            Gt = qt && qt.exports === $t,
            Xt = Gt && Bt.process,
            Kt = (function () {
              try {
                return (qt && qt.require && qt.require('util').types) || (Xt && Xt.binding && Xt.binding('util'));
              } catch (t) {}
            })(),
            Yt = Kt && Kt.isArrayBuffer,
            Zt = Kt && Kt.isDate,
            Qt = Kt && Kt.isMap,
            Jt = Kt && Kt.isRegExp,
            te = Kt && Kt.isSet,
            ee = Kt && Kt.isTypedArray;
          function ne(t, e, n) {
            switch (n.length) {
              case 0:
                return t.call(e);
              case 1:
                return t.call(e, n[0]);
              case 2:
                return t.call(e, n[0], n[1]);
              case 3:
                return t.call(e, n[0], n[1], n[2]);
            }
            return t.apply(e, n);
          }
          function ie(t, e, n, i) {
            for (var r = -1, s = null == t ? 0 : t.length; ++r < s; ) {
              var o = t[r];
              e(i, o, n(o), t);
            }
            return i;
          }
          function re(t, e) {
            for (var n = -1, i = null == t ? 0 : t.length; ++n < i && !1 !== e(t[n], n, t); );
            return t;
          }
          function se(t, e) {
            for (var n = null == t ? 0 : t.length; n-- && !1 !== e(t[n], n, t); );
            return t;
          }
          function oe(t, e) {
            for (var n = -1, i = null == t ? 0 : t.length; ++n < i; ) if (!e(t[n], n, t)) return !1;
            return !0;
          }
          function ae(t, e) {
            for (var n = -1, i = null == t ? 0 : t.length, r = 0, s = []; ++n < i; ) {
              var o = t[n];
              e(o, n, t) && (s[r++] = o);
            }
            return s;
          }
          function ce(t, e) {
            return !(null == t || !t.length) && _e(t, e, 0) > -1;
          }
          function le(t, e, n) {
            for (var i = -1, r = null == t ? 0 : t.length; ++i < r; ) if (n(e, t[i])) return !0;
            return !1;
          }
          function ue(t, e) {
            for (var n = -1, i = null == t ? 0 : t.length, r = Array(i); ++n < i; ) r[n] = e(t[n], n, t);
            return r;
          }
          function he(t, e) {
            for (var n = -1, i = e.length, r = t.length; ++n < i; ) t[r + n] = e[n];
            return t;
          }
          function de(t, e, n, i) {
            var r = -1,
              s = null == t ? 0 : t.length;
            for (i && s && (n = t[++r]); ++r < s; ) n = e(n, t[r], r, t);
            return n;
          }
          function pe(t, e, n, i) {
            var r = null == t ? 0 : t.length;
            for (i && r && (n = t[--r]); r--; ) n = e(n, t[r], r, t);
            return n;
          }
          function fe(t, e) {
            for (var n = -1, i = null == t ? 0 : t.length; ++n < i; ) if (e(t[n], n, t)) return !0;
            return !1;
          }
          var me = xe('length');
          function ge(t, e, n) {
            var i;
            return (
              n(t, function (t, n, r) {
                if (e(t, n, r)) return (i = n), !1;
              }),
              i
            );
          }
          function be(t, e, n, i) {
            for (var r = t.length, s = n + (i ? 1 : -1); i ? s-- : ++s < r; ) if (e(t[s], s, t)) return s;
            return -1;
          }
          function _e(t, e, n) {
            return e == e
              ? (function (t, e, n) {
                  for (var i = n - 1, r = t.length; ++i < r; ) if (t[i] === e) return i;
                  return -1;
                })(t, e, n)
              : be(t, ve, n);
          }
          function ye(t, e, n, i) {
            for (var r = n - 1, s = t.length; ++r < s; ) if (i(t[r], e)) return r;
            return -1;
          }
          function ve(t) {
            return t != t;
          }
          function we(t, e) {
            var n = null == t ? 0 : t.length;
            return n ? Oe(t, e) / n : NaN;
          }
          function xe(t) {
            return function (e) {
              return null == e ? void 0 : e[t];
            };
          }
          function Ce(t) {
            return function (e) {
              return null == t ? void 0 : t[e];
            };
          }
          function ke(t, e, n, i, r) {
            return (
              r(t, function (t, r, s) {
                n = i ? ((i = !1), t) : e(n, t, r, s);
              }),
              n
            );
          }
          function Oe(t, e) {
            for (var n, i = -1, r = t.length; ++i < r; ) {
              var s = e(t[i]);
              void 0 !== s && (n = void 0 === n ? s : n + s);
            }
            return n;
          }
          function Se(t, e) {
            for (var n = -1, i = Array(t); ++n < t; ) i[n] = e(n);
            return i;
          }
          function Ee(t) {
            return function (e) {
              return t(e);
            };
          }
          function Te(t, e) {
            return ue(e, function (e) {
              return t[e];
            });
          }
          function Ie(t, e) {
            return t.has(e);
          }
          function Ae(t, e) {
            for (var n = -1, i = t.length; ++n < i && _e(e, t[n], 0) > -1; );
            return n;
          }
          function De(t, e) {
            for (var n = t.length; n-- && _e(e, t[n], 0) > -1; );
            return n;
          }
          function je(t, e) {
            for (var n = t.length, i = 0; n--; ) t[n] === e && ++i;
            return i;
          }
          var Re = Ce({
              À: 'A',
              Á: 'A',
              Â: 'A',
              Ã: 'A',
              Ä: 'A',
              Å: 'A',
              à: 'a',
              á: 'a',
              â: 'a',
              ã: 'a',
              ä: 'a',
              å: 'a',
              Ç: 'C',
              ç: 'c',
              Ð: 'D',
              ð: 'd',
              È: 'E',
              É: 'E',
              Ê: 'E',
              Ë: 'E',
              è: 'e',
              é: 'e',
              ê: 'e',
              ë: 'e',
              Ì: 'I',
              Í: 'I',
              Î: 'I',
              Ï: 'I',
              ì: 'i',
              í: 'i',
              î: 'i',
              ï: 'i',
              Ñ: 'N',
              ñ: 'n',
              Ò: 'O',
              Ó: 'O',
              Ô: 'O',
              Õ: 'O',
              Ö: 'O',
              Ø: 'O',
              ò: 'o',
              ó: 'o',
              ô: 'o',
              õ: 'o',
              ö: 'o',
              ø: 'o',
              Ù: 'U',
              Ú: 'U',
              Û: 'U',
              Ü: 'U',
              ù: 'u',
              ú: 'u',
              û: 'u',
              ü: 'u',
              Ý: 'Y',
              ý: 'y',
              ÿ: 'y',
              Æ: 'Ae',
              æ: 'ae',
              Þ: 'Th',
              þ: 'th',
              ß: 'ss',
              Ā: 'A',
              Ă: 'A',
              Ą: 'A',
              ā: 'a',
              ă: 'a',
              ą: 'a',
              Ć: 'C',
              Ĉ: 'C',
              Ċ: 'C',
              Č: 'C',
              ć: 'c',
              ĉ: 'c',
              ċ: 'c',
              č: 'c',
              Ď: 'D',
              Đ: 'D',
              ď: 'd',
              đ: 'd',
              Ē: 'E',
              Ĕ: 'E',
              Ė: 'E',
              Ę: 'E',
              Ě: 'E',
              ē: 'e',
              ĕ: 'e',
              ė: 'e',
              ę: 'e',
              ě: 'e',
              Ĝ: 'G',
              Ğ: 'G',
              Ġ: 'G',
              Ģ: 'G',
              ĝ: 'g',
              ğ: 'g',
              ġ: 'g',
              ģ: 'g',
              Ĥ: 'H',
              Ħ: 'H',
              ĥ: 'h',
              ħ: 'h',
              Ĩ: 'I',
              Ī: 'I',
              Ĭ: 'I',
              Į: 'I',
              İ: 'I',
              ĩ: 'i',
              ī: 'i',
              ĭ: 'i',
              į: 'i',
              ı: 'i',
              Ĵ: 'J',
              ĵ: 'j',
              Ķ: 'K',
              ķ: 'k',
              ĸ: 'k',
              Ĺ: 'L',
              Ļ: 'L',
              Ľ: 'L',
              Ŀ: 'L',
              Ł: 'L',
              ĺ: 'l',
              ļ: 'l',
              ľ: 'l',
              ŀ: 'l',
              ł: 'l',
              Ń: 'N',
              Ņ: 'N',
              Ň: 'N',
              Ŋ: 'N',
              ń: 'n',
              ņ: 'n',
              ň: 'n',
              ŋ: 'n',
              Ō: 'O',
              Ŏ: 'O',
              Ő: 'O',
              ō: 'o',
              ŏ: 'o',
              ő: 'o',
              Ŕ: 'R',
              Ŗ: 'R',
              Ř: 'R',
              ŕ: 'r',
              ŗ: 'r',
              ř: 'r',
              Ś: 'S',
              Ŝ: 'S',
              Ş: 'S',
              Š: 'S',
              ś: 's',
              ŝ: 's',
              ş: 's',
              š: 's',
              Ţ: 'T',
              Ť: 'T',
              Ŧ: 'T',
              ţ: 't',
              ť: 't',
              ŧ: 't',
              Ũ: 'U',
              Ū: 'U',
              Ŭ: 'U',
              Ů: 'U',
              Ű: 'U',
              Ų: 'U',
              ũ: 'u',
              ū: 'u',
              ŭ: 'u',
              ů: 'u',
              ű: 'u',
              ų: 'u',
              Ŵ: 'W',
              ŵ: 'w',
              Ŷ: 'Y',
              ŷ: 'y',
              Ÿ: 'Y',
              Ź: 'Z',
              Ż: 'Z',
              Ž: 'Z',
              ź: 'z',
              ż: 'z',
              ž: 'z',
              Ĳ: 'IJ',
              ĳ: 'ij',
              Œ: 'Oe',
              œ: 'oe',
              ŉ: "'n",
              ſ: 's',
            }),
            Pe = Ce({ '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;' });
          function Me(t) {
            return '\\' + Lt[t];
          }
          function Fe(t) {
            return Rt.test(t);
          }
          function Ne(t) {
            var e = -1,
              n = Array(t.size);
            return (
              t.forEach(function (t, i) {
                n[++e] = [i, t];
              }),
              n
            );
          }
          function Ve(t, e) {
            return function (n) {
              return t(e(n));
            };
          }
          function Le(t, e) {
            for (var n = -1, i = t.length, r = 0, o = []; ++n < i; ) {
              var a = t[n];
              (a !== e && a !== s) || ((t[n] = s), (o[r++] = n));
            }
            return o;
          }
          function He(t) {
            var e = -1,
              n = Array(t.size);
            return (
              t.forEach(function (t) {
                n[++e] = t;
              }),
              n
            );
          }
          function ze(t) {
            var e = -1,
              n = Array(t.size);
            return (
              t.forEach(function (t) {
                n[++e] = [t, t];
              }),
              n
            );
          }
          function Be(t) {
            return Fe(t)
              ? (function (t) {
                  for (var e = (Dt.lastIndex = 0); Dt.test(t); ) ++e;
                  return e;
                })(t)
              : me(t);
          }
          function Ue(t) {
            return Fe(t)
              ? (function (t) {
                  return t.match(Dt) || [];
                })(t)
              : (function (t) {
                  return t.split('');
                })(t);
          }
          var We = Ce({ '&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '"', '&#39;': "'" }),
            $e = (function t(e) {
              var n,
                i = (e = null == e ? Wt : $e.defaults(Wt.Object(), e, $e.pick(Wt, Mt))).Array,
                ht = e.Date,
                dt = e.Error,
                pt = e.Function,
                ft = e.Math,
                mt = e.Object,
                gt = e.RegExp,
                bt = e.String,
                _t = e.TypeError,
                yt = i.prototype,
                vt = mt.prototype,
                wt = e['__core-js_shared__'],
                xt = pt.prototype.toString,
                Ct = vt.hasOwnProperty,
                kt = 0,
                Ot = (n = /[^.]+$/.exec((wt && wt.keys && wt.keys.IE_PROTO) || '')) ? 'Symbol(src)_1.' + n : '',
                St = vt.toString,
                Et = xt.call(mt),
                Tt = Wt._,
                Dt = gt(
                  '^' +
                    xt
                      .call(Ct)
                      .replace($, '\\$&')
                      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') +
                    '$'
                ),
                Rt = Gt ? e.Buffer : void 0,
                Lt = e.Symbol,
                Bt = e.Uint8Array,
                Ut = Rt ? Rt.allocUnsafe : void 0,
                $t = Ve(mt.getPrototypeOf, mt),
                qt = mt.create,
                Xt = vt.propertyIsEnumerable,
                Kt = yt.splice,
                me = Lt ? Lt.isConcatSpreadable : void 0,
                Ce = Lt ? Lt.iterator : void 0,
                qe = Lt ? Lt.toStringTag : void 0,
                Ge = (function () {
                  try {
                    var t = Zr(mt, 'defineProperty');
                    return t({}, '', {}), t;
                  } catch (e) {}
                })(),
                Xe = e.clearTimeout !== Wt.clearTimeout && e.clearTimeout,
                Ke = ht && ht.now !== Wt.Date.now && ht.now,
                Ye = e.setTimeout !== Wt.setTimeout && e.setTimeout,
                Ze = ft.ceil,
                Qe = ft.floor,
                Je = mt.getOwnPropertySymbols,
                tn = Rt ? Rt.isBuffer : void 0,
                en = e.isFinite,
                nn = yt.join,
                rn = Ve(mt.keys, mt),
                sn = ft.max,
                on = ft.min,
                an = ht.now,
                cn = e.parseInt,
                ln = ft.random,
                un = yt.reverse,
                hn = Zr(e, 'DataView'),
                dn = Zr(e, 'Map'),
                pn = Zr(e, 'Promise'),
                fn = Zr(e, 'Set'),
                mn = Zr(e, 'WeakMap'),
                gn = Zr(mt, 'create'),
                bn = mn && new mn(),
                _n = {},
                yn = Ss(hn),
                vn = Ss(dn),
                wn = Ss(pn),
                xn = Ss(fn),
                Cn = Ss(mn),
                kn = Lt ? Lt.prototype : void 0,
                On = kn ? kn.valueOf : void 0,
                Sn = kn ? kn.toString : void 0;
              function En(t) {
                if (Wo(t) && !Ro(t) && !(t instanceof Dn)) {
                  if (t instanceof An) return t;
                  if (Ct.call(t, '__wrapped__')) return Es(t);
                }
                return new An(t);
              }
              var Tn = (function () {
                function t() {}
                return function (e) {
                  if (!Uo(e)) return {};
                  if (qt) return qt(e);
                  t.prototype = e;
                  var n = new t();
                  return (t.prototype = void 0), n;
                };
              })();
              function In() {}
              function An(t, e) {
                (this.__wrapped__ = t),
                  (this.__actions__ = []),
                  (this.__chain__ = !!e),
                  (this.__index__ = 0),
                  (this.__values__ = void 0);
              }
              function Dn(t) {
                (this.__wrapped__ = t),
                  (this.__actions__ = []),
                  (this.__dir__ = 1),
                  (this.__filtered__ = !1),
                  (this.__iteratees__ = []),
                  (this.__takeCount__ = 4294967295),
                  (this.__views__ = []);
              }
              function jn(t) {
                var e = -1,
                  n = null == t ? 0 : t.length;
                for (this.clear(); ++e < n; ) {
                  var i = t[e];
                  this.set(i[0], i[1]);
                }
              }
              function Rn(t) {
                var e = -1,
                  n = null == t ? 0 : t.length;
                for (this.clear(); ++e < n; ) {
                  var i = t[e];
                  this.set(i[0], i[1]);
                }
              }
              function Pn(t) {
                var e = -1,
                  n = null == t ? 0 : t.length;
                for (this.clear(); ++e < n; ) {
                  var i = t[e];
                  this.set(i[0], i[1]);
                }
              }
              function Mn(t) {
                var e = -1,
                  n = null == t ? 0 : t.length;
                for (this.__data__ = new Pn(); ++e < n; ) this.add(t[e]);
              }
              function Fn(t) {
                var e = (this.__data__ = new Rn(t));
                this.size = e.size;
              }
              function Nn(t, e) {
                var n = Ro(t),
                  i = !n && jo(t),
                  r = !n && !i && No(t),
                  s = !n && !i && !r && Qo(t),
                  o = n || i || r || s,
                  a = o ? Se(t.length, bt) : [],
                  c = a.length;
                for (var l in t)
                  (!e && !Ct.call(t, l)) ||
                    (o &&
                      ('length' == l ||
                        (r && ('offset' == l || 'parent' == l)) ||
                        (s && ('buffer' == l || 'byteLength' == l || 'byteOffset' == l)) ||
                        rs(l, c))) ||
                    a.push(l);
                return a;
              }
              function Vn(t) {
                var e = t.length;
                return e ? t[Pi(0, e - 1)] : void 0;
              }
              function Ln(t, e) {
                return ws(mr(t), Xn(e, 0, t.length));
              }
              function Hn(t) {
                return ws(mr(t));
              }
              function zn(t, e, n) {
                ((void 0 !== n && !Io(t[e], n)) || (void 0 === n && !(e in t))) && qn(t, e, n);
              }
              function Bn(t, e, n) {
                var i = t[e];
                (Ct.call(t, e) && Io(i, n) && (void 0 !== n || e in t)) || qn(t, e, n);
              }
              function Un(t, e) {
                for (var n = t.length; n--; ) if (Io(t[n][0], e)) return n;
                return -1;
              }
              function Wn(t, e, n, i) {
                return (
                  Jn(t, function (t, r, s) {
                    e(i, t, n(t), s);
                  }),
                  i
                );
              }
              function $n(t, e) {
                return t && gr(e, va(e), t);
              }
              function qn(t, e, n) {
                '__proto__' == e && Ge
                  ? Ge(t, e, { configurable: !0, enumerable: !0, value: n, writable: !0 })
                  : (t[e] = n);
              }
              function Gn(t, e) {
                for (var n = -1, r = e.length, s = i(r), o = null == t; ++n < r; ) s[n] = o ? void 0 : ma(t, e[n]);
                return s;
              }
              function Xn(t, e, n) {
                return t == t && (void 0 !== n && (t = t <= n ? t : n), void 0 !== e && (t = t >= e ? t : e)), t;
              }
              function Kn(t, e, n, i, r, s) {
                var o,
                  c = 1 & e,
                  h = 2 & e,
                  w = 4 & e;
                if ((n && (o = r ? n(t, i, r, s) : n(t)), void 0 !== o)) return o;
                if (!Uo(t)) return t;
                var j = Ro(t);
                if (j) {
                  if (
                    ((o = (function (t) {
                      var e = t.length,
                        n = new t.constructor(e);
                      return (
                        e &&
                          'string' == typeof t[0] &&
                          Ct.call(t, 'index') &&
                          ((n.index = t.index), (n.input = t.input)),
                        n
                      );
                    })(t)),
                    !c)
                  )
                    return mr(t, o);
                } else {
                  var R = ts(t),
                    P = R == d || R == p;
                  if (No(t)) return lr(t, c);
                  if (R == g || R == a || (P && !r)) {
                    if (((o = h || P ? {} : ns(t)), !c))
                      return h
                        ? (function (t, e) {
                            return gr(t, Jr(t), e);
                          })(
                            t,
                            (function (t, e) {
                              return t && gr(e, wa(e), t);
                            })(o, t)
                          )
                        : (function (t, e) {
                            return gr(t, Qr(t), e);
                          })(t, $n(o, t));
                  } else {
                    if (!Vt[R]) return r ? t : {};
                    o = (function (t, e, n) {
                      var i = t.constructor;
                      switch (e) {
                        case x:
                          return ur(t);
                        case l:
                        case u:
                          return new i(+t);
                        case C:
                          return (function (t, e) {
                            var n = e ? ur(t.buffer) : t.buffer;
                            return new t.constructor(n, t.byteOffset, t.byteLength);
                          })(t, n);
                        case k:
                        case O:
                        case S:
                        case E:
                        case T:
                        case I:
                        case '[object Uint8ClampedArray]':
                        case A:
                        case D:
                          return hr(t, n);
                        case f:
                          return new i();
                        case m:
                        case y:
                          return new i(t);
                        case b:
                          return (function (t) {
                            var e = new t.constructor(t.source, nt.exec(t));
                            return (e.lastIndex = t.lastIndex), e;
                          })(t);
                        case _:
                          return new i();
                        case v:
                          return On ? mt(On.call(t)) : {};
                      }
                    })(t, R, c);
                  }
                }
                s || (s = new Fn());
                var M = s.get(t);
                if (M) return M;
                s.set(t, o),
                  Ko(t)
                    ? t.forEach(function (i) {
                        o.add(Kn(i, e, n, i, t, s));
                      })
                    : $o(t) &&
                      t.forEach(function (i, r) {
                        o.set(r, Kn(i, e, n, r, t, s));
                      });
                var F = j ? void 0 : (w ? (h ? Wr : Ur) : h ? wa : va)(t);
                return (
                  re(F || t, function (i, r) {
                    F && (i = t[(r = i)]), Bn(o, r, Kn(i, e, n, r, t, s));
                  }),
                  o
                );
              }
              function Yn(t, e, n) {
                var i = n.length;
                if (null == t) return !i;
                for (t = mt(t); i--; ) {
                  var r = n[i],
                    s = t[r];
                  if ((void 0 === s && !(r in t)) || !(0, e[r])(s)) return !1;
                }
                return !0;
              }
              function Zn(t, e, n) {
                if ('function' != typeof t) throw new _t(r);
                return bs(function () {
                  t.apply(void 0, n);
                }, e);
              }
              function Qn(t, e, n, i) {
                var r = -1,
                  s = ce,
                  o = !0,
                  a = t.length,
                  c = [],
                  l = e.length;
                if (!a) return c;
                n && (e = ue(e, Ee(n))),
                  i ? ((s = le), (o = !1)) : e.length >= 200 && ((s = Ie), (o = !1), (e = new Mn(e)));
                t: for (; ++r < a; ) {
                  var u = t[r],
                    h = null == n ? u : n(u);
                  if (((u = i || 0 !== u ? u : 0), o && h == h)) {
                    for (var d = l; d--; ) if (e[d] === h) continue t;
                    c.push(u);
                  } else s(e, h, i) || c.push(u);
                }
                return c;
              }
              (En.templateSettings = { escape: L, evaluate: H, interpolate: z, variable: '', imports: { _: En } }),
                ((En.prototype = In.prototype).constructor = En),
                ((An.prototype = Tn(In.prototype)).constructor = An),
                ((Dn.prototype = Tn(In.prototype)).constructor = Dn),
                (jn.prototype.clear = function () {
                  (this.__data__ = gn ? gn(null) : {}), (this.size = 0);
                }),
                (jn.prototype.delete = function (t) {
                  var e = this.has(t) && delete this.__data__[t];
                  return (this.size -= e ? 1 : 0), e;
                }),
                (jn.prototype.get = function (t) {
                  var e = this.__data__;
                  if (gn) {
                    var n = e[t];
                    return '__lodash_hash_undefined__' === n ? void 0 : n;
                  }
                  return Ct.call(e, t) ? e[t] : void 0;
                }),
                (jn.prototype.has = function (t) {
                  var e = this.__data__;
                  return gn ? void 0 !== e[t] : Ct.call(e, t);
                }),
                (jn.prototype.set = function (t, e) {
                  var n = this.__data__;
                  return (
                    (this.size += this.has(t) ? 0 : 1),
                    (n[t] = gn && void 0 === e ? '__lodash_hash_undefined__' : e),
                    this
                  );
                }),
                (Rn.prototype.clear = function () {
                  (this.__data__ = []), (this.size = 0);
                }),
                (Rn.prototype.delete = function (t) {
                  var e = this.__data__,
                    n = Un(e, t);
                  return !(n < 0 || (n == e.length - 1 ? e.pop() : Kt.call(e, n, 1), --this.size, 0));
                }),
                (Rn.prototype.get = function (t) {
                  var e = this.__data__,
                    n = Un(e, t);
                  return n < 0 ? void 0 : e[n][1];
                }),
                (Rn.prototype.has = function (t) {
                  return Un(this.__data__, t) > -1;
                }),
                (Rn.prototype.set = function (t, e) {
                  var n = this.__data__,
                    i = Un(n, t);
                  return i < 0 ? (++this.size, n.push([t, e])) : (n[i][1] = e), this;
                }),
                (Pn.prototype.clear = function () {
                  (this.size = 0), (this.__data__ = { hash: new jn(), map: new (dn || Rn)(), string: new jn() });
                }),
                (Pn.prototype.delete = function (t) {
                  var e = Kr(this, t).delete(t);
                  return (this.size -= e ? 1 : 0), e;
                }),
                (Pn.prototype.get = function (t) {
                  return Kr(this, t).get(t);
                }),
                (Pn.prototype.has = function (t) {
                  return Kr(this, t).has(t);
                }),
                (Pn.prototype.set = function (t, e) {
                  var n = Kr(this, t),
                    i = n.size;
                  return n.set(t, e), (this.size += n.size == i ? 0 : 1), this;
                }),
                (Mn.prototype.add = Mn.prototype.push = function (t) {
                  return this.__data__.set(t, '__lodash_hash_undefined__'), this;
                }),
                (Mn.prototype.has = function (t) {
                  return this.__data__.has(t);
                }),
                (Fn.prototype.clear = function () {
                  (this.__data__ = new Rn()), (this.size = 0);
                }),
                (Fn.prototype.delete = function (t) {
                  var e = this.__data__,
                    n = e.delete(t);
                  return (this.size = e.size), n;
                }),
                (Fn.prototype.get = function (t) {
                  return this.__data__.get(t);
                }),
                (Fn.prototype.has = function (t) {
                  return this.__data__.has(t);
                }),
                (Fn.prototype.set = function (t, e) {
                  var n = this.__data__;
                  if (n instanceof Rn) {
                    var i = n.__data__;
                    if (!dn || i.length < 199) return i.push([t, e]), (this.size = ++n.size), this;
                    n = this.__data__ = new Pn(i);
                  }
                  return n.set(t, e), (this.size = n.size), this;
                });
              var Jn = yr(ai),
                ti = yr(ci, !0);
              function ei(t, e) {
                var n = !0;
                return (
                  Jn(t, function (t, i, r) {
                    return (n = !!e(t, i, r));
                  }),
                  n
                );
              }
              function ni(t, e, n) {
                for (var i = -1, r = t.length; ++i < r; ) {
                  var s = t[i],
                    o = e(s);
                  if (null != o && (void 0 === a ? o == o && !Zo(o) : n(o, a)))
                    var a = o,
                      c = s;
                }
                return c;
              }
              function ii(t, e) {
                var n = [];
                return (
                  Jn(t, function (t, i, r) {
                    e(t, i, r) && n.push(t);
                  }),
                  n
                );
              }
              function ri(t, e, n, i, r) {
                var s = -1,
                  o = t.length;
                for (n || (n = is), r || (r = []); ++s < o; ) {
                  var a = t[s];
                  e > 0 && n(a) ? (e > 1 ? ri(a, e - 1, n, i, r) : he(r, a)) : i || (r[r.length] = a);
                }
                return r;
              }
              var si = vr(),
                oi = vr(!0);
              function ai(t, e) {
                return t && si(t, e, va);
              }
              function ci(t, e) {
                return t && oi(t, e, va);
              }
              function li(t, e) {
                return ae(e, function (e) {
                  return Ho(t[e]);
                });
              }
              function ui(t, e) {
                for (var n = 0, i = (e = sr(e, t)).length; null != t && n < i; ) t = t[Os(e[n++])];
                return n && n == i ? t : void 0;
              }
              function hi(t, e, n) {
                var i = e(t);
                return Ro(t) ? i : he(i, n(t));
              }
              function di(t) {
                return null == t
                  ? void 0 === t
                    ? '[object Undefined]'
                    : '[object Null]'
                  : qe && qe in mt(t)
                  ? (function (t) {
                      var e = Ct.call(t, qe),
                        n = t[qe];
                      try {
                        t[qe] = void 0;
                        var i = !0;
                      } catch (s) {}
                      var r = St.call(t);
                      return i && (e ? (t[qe] = n) : delete t[qe]), r;
                    })(t)
                  : (function (t) {
                      return St.call(t);
                    })(t);
              }
              function pi(t, e) {
                return t > e;
              }
              function fi(t, e) {
                return null != t && Ct.call(t, e);
              }
              function mi(t, e) {
                return null != t && e in mt(t);
              }
              function gi(t, e, n) {
                for (var r = n ? le : ce, s = t[0].length, o = t.length, a = o, c = i(o), l = 1 / 0, u = []; a--; ) {
                  var h = t[a];
                  a && e && (h = ue(h, Ee(e))),
                    (l = on(h.length, l)),
                    (c[a] = !n && (e || (s >= 120 && h.length >= 120)) ? new Mn(a && h) : void 0);
                }
                h = t[0];
                var d = -1,
                  p = c[0];
                t: for (; ++d < s && u.length < l; ) {
                  var f = h[d],
                    m = e ? e(f) : f;
                  if (((f = n || 0 !== f ? f : 0), !(p ? Ie(p, m) : r(u, m, n)))) {
                    for (a = o; --a; ) {
                      var g = c[a];
                      if (!(g ? Ie(g, m) : r(t[a], m, n))) continue t;
                    }
                    p && p.push(m), u.push(f);
                  }
                }
                return u;
              }
              function bi(t, e, n) {
                var i = null == (t = ps(t, (e = sr(e, t)))) ? t : t[Os(Vs(e))];
                return null == i ? void 0 : ne(i, t, n);
              }
              function _i(t) {
                return Wo(t) && di(t) == a;
              }
              function yi(t, e, n, i, r) {
                return (
                  t === e ||
                  (null == t || null == e || (!Wo(t) && !Wo(e))
                    ? t != t && e != e
                    : (function (t, e, n, i, r, s) {
                        var o = Ro(t),
                          d = Ro(e),
                          p = o ? c : ts(t),
                          w = d ? c : ts(e),
                          k = (p = p == a ? g : p) == g,
                          O = (w = w == a ? g : w) == g,
                          S = p == w;
                        if (S && No(t)) {
                          if (!No(e)) return !1;
                          (o = !0), (k = !1);
                        }
                        if (S && !k)
                          return (
                            s || (s = new Fn()),
                            o || Qo(t)
                              ? zr(t, e, n, i, r, s)
                              : (function (t, e, n, i, r, s, o) {
                                  switch (n) {
                                    case C:
                                      if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset) return !1;
                                      (t = t.buffer), (e = e.buffer);
                                    case x:
                                      return !(t.byteLength != e.byteLength || !s(new Bt(t), new Bt(e)));
                                    case l:
                                    case u:
                                    case m:
                                      return Io(+t, +e);
                                    case h:
                                      return t.name == e.name && t.message == e.message;
                                    case b:
                                    case y:
                                      return t == e + '';
                                    case f:
                                      var a = Ne;
                                    case _:
                                      if ((a || (a = He), t.size != e.size && !(1 & i))) return !1;
                                      var c = o.get(t);
                                      if (c) return c == e;
                                      (i |= 2), o.set(t, e);
                                      var d = zr(a(t), a(e), i, r, s, o);
                                      return o.delete(t), d;
                                    case v:
                                      if (On) return On.call(t) == On.call(e);
                                  }
                                  return !1;
                                })(t, e, p, n, i, r, s)
                          );
                        if (!(1 & n)) {
                          var E = k && Ct.call(t, '__wrapped__'),
                            T = O && Ct.call(e, '__wrapped__');
                          if (E || T) {
                            var I = E ? t.value() : t,
                              A = T ? e.value() : e;
                            return s || (s = new Fn()), r(I, A, n, i, s);
                          }
                        }
                        return (
                          !!S &&
                          (s || (s = new Fn()),
                          (function (t, e, n, i, r, s) {
                            var o = 1 & n,
                              a = Ur(t),
                              c = a.length;
                            if (c != Ur(e).length && !o) return !1;
                            for (var l = c; l--; ) {
                              var u = a[l];
                              if (!(o ? u in e : Ct.call(e, u))) return !1;
                            }
                            var h = s.get(t);
                            if (h && s.get(e)) return h == e;
                            var d = !0;
                            s.set(t, e), s.set(e, t);
                            for (var p = o; ++l < c; ) {
                              var f = t[(u = a[l])],
                                m = e[u];
                              if (i) var g = o ? i(m, f, u, e, t, s) : i(f, m, u, t, e, s);
                              if (!(void 0 === g ? f === m || r(f, m, n, i, s) : g)) {
                                d = !1;
                                break;
                              }
                              p || (p = 'constructor' == u);
                            }
                            if (d && !p) {
                              var b = t.constructor,
                                _ = e.constructor;
                              b == _ ||
                                !('constructor' in t) ||
                                !('constructor' in e) ||
                                ('function' == typeof b &&
                                  b instanceof b &&
                                  'function' == typeof _ &&
                                  _ instanceof _) ||
                                (d = !1);
                            }
                            return s.delete(t), s.delete(e), d;
                          })(t, e, n, i, r, s))
                        );
                      })(t, e, n, i, yi, r))
                );
              }
              function vi(t, e, n, i) {
                var r = n.length,
                  s = r,
                  o = !i;
                if (null == t) return !s;
                for (t = mt(t); r--; ) {
                  var a = n[r];
                  if (o && a[2] ? a[1] !== t[a[0]] : !(a[0] in t)) return !1;
                }
                for (; ++r < s; ) {
                  var c = (a = n[r])[0],
                    l = t[c],
                    u = a[1];
                  if (o && a[2]) {
                    if (void 0 === l && !(c in t)) return !1;
                  } else {
                    var h = new Fn();
                    if (i) var d = i(l, u, c, t, e, h);
                    if (!(void 0 === d ? yi(u, l, 3, i, h) : d)) return !1;
                  }
                }
                return !0;
              }
              function wi(t) {
                return !(!Uo(t) || ((e = t), Ot && Ot in e)) && (Ho(t) ? Dt : st).test(Ss(t));
                var e;
              }
              function xi(t) {
                return 'function' == typeof t
                  ? t
                  : null == t
                  ? qa
                  : 'object' == typeof t
                  ? Ro(t)
                    ? Ei(t[0], t[1])
                    : Si(t)
                  : ec(t);
              }
              function Ci(t) {
                if (!ls(t)) return rn(t);
                var e = [];
                for (var n in mt(t)) Ct.call(t, n) && 'constructor' != n && e.push(n);
                return e;
              }
              function ki(t, e) {
                return t < e;
              }
              function Oi(t, e) {
                var n = -1,
                  r = Mo(t) ? i(t.length) : [];
                return (
                  Jn(t, function (t, i, s) {
                    r[++n] = e(t, i, s);
                  }),
                  r
                );
              }
              function Si(t) {
                var e = Yr(t);
                return 1 == e.length && e[0][2]
                  ? hs(e[0][0], e[0][1])
                  : function (n) {
                      return n === t || vi(n, t, e);
                    };
              }
              function Ei(t, e) {
                return os(t) && us(e)
                  ? hs(Os(t), e)
                  : function (n) {
                      var i = ma(n, t);
                      return void 0 === i && i === e ? ga(n, t) : yi(e, i, 3);
                    };
              }
              function Ti(t, e, n, i, r) {
                t !== e &&
                  si(
                    e,
                    function (s, o) {
                      if ((r || (r = new Fn()), Uo(s)))
                        !(function (t, e, n, i, r, s, o) {
                          var a = ms(t, n),
                            c = ms(e, n),
                            l = o.get(c);
                          if (l) zn(t, n, l);
                          else {
                            var u = s ? s(a, c, n + '', t, e, o) : void 0,
                              h = void 0 === u;
                            if (h) {
                              var d = Ro(c),
                                p = !d && No(c),
                                f = !d && !p && Qo(c);
                              (u = c),
                                d || p || f
                                  ? Ro(a)
                                    ? (u = a)
                                    : Fo(a)
                                    ? (u = mr(a))
                                    : p
                                    ? ((h = !1), (u = lr(c, !0)))
                                    : f
                                    ? ((h = !1), (u = hr(c, !0)))
                                    : (u = [])
                                  : Go(c) || jo(c)
                                  ? ((u = a), jo(a) ? (u = oa(a)) : (Uo(a) && !Ho(a)) || (u = ns(c)))
                                  : (h = !1);
                            }
                            h && (o.set(c, u), r(u, c, i, s, o), o.delete(c)), zn(t, n, u);
                          }
                        })(t, e, o, n, Ti, i, r);
                      else {
                        var a = i ? i(ms(t, o), s, o + '', t, e, r) : void 0;
                        void 0 === a && (a = s), zn(t, o, a);
                      }
                    },
                    wa
                  );
              }
              function Ii(t, e) {
                var n = t.length;
                if (n) return rs((e += e < 0 ? n : 0), n) ? t[e] : void 0;
              }
              function Ai(t, e, n) {
                var i = -1;
                return (
                  (e = ue(e.length ? e : [qa], Ee(Xr()))),
                  (function (t, e) {
                    var i = t.length;
                    for (
                      t.sort(function (t, e) {
                        return (function (t, e, n) {
                          for (var i = -1, r = t.criteria, s = e.criteria, o = r.length, a = n.length; ++i < o; ) {
                            var c = dr(r[i], s[i]);
                            if (c) return i >= a ? c : c * ('desc' == n[i] ? -1 : 1);
                          }
                          return t.index - e.index;
                        })(t, e, n);
                      });
                      i--;

                    )
                      t[i] = t[i].value;
                    return t;
                  })(
                    Oi(t, function (t, n, r) {
                      return {
                        criteria: ue(e, function (e) {
                          return e(t);
                        }),
                        index: ++i,
                        value: t,
                      };
                    })
                  )
                );
              }
              function Di(t, e, n) {
                for (var i = -1, r = e.length, s = {}; ++i < r; ) {
                  var o = e[i],
                    a = ui(t, o);
                  n(a, o) && Li(s, sr(o, t), a);
                }
                return s;
              }
              function ji(t, e, n, i) {
                var r = i ? ye : _e,
                  s = -1,
                  o = e.length,
                  a = t;
                for (t === e && (e = mr(e)), n && (a = ue(t, Ee(n))); ++s < o; )
                  for (var c = 0, l = e[s], u = n ? n(l) : l; (c = r(a, u, c, i)) > -1; )
                    a !== t && Kt.call(a, c, 1), Kt.call(t, c, 1);
                return t;
              }
              function Ri(t, e) {
                for (var n = t ? e.length : 0, i = n - 1; n--; ) {
                  var r = e[n];
                  if (n == i || r !== s) {
                    var s = r;
                    rs(r) ? Kt.call(t, r, 1) : Zi(t, r);
                  }
                }
                return t;
              }
              function Pi(t, e) {
                return t + Qe(ln() * (e - t + 1));
              }
              function Mi(t, e) {
                var n = '';
                if (!t || e < 1 || e > 9007199254740991) return n;
                do {
                  e % 2 && (n += t), (e = Qe(e / 2)) && (t += t);
                } while (e);
                return n;
              }
              function Fi(t, e) {
                return _s(ds(t, e, qa), t + '');
              }
              function Ni(t) {
                return Vn(Ia(t));
              }
              function Vi(t, e) {
                var n = Ia(t);
                return ws(n, Xn(e, 0, n.length));
              }
              function Li(t, e, n, i) {
                if (!Uo(t)) return t;
                for (var r = -1, s = (e = sr(e, t)).length, o = s - 1, a = t; null != a && ++r < s; ) {
                  var c = Os(e[r]),
                    l = n;
                  if (r != o) {
                    var u = a[c];
                    void 0 === (l = i ? i(u, c, a) : void 0) && (l = Uo(u) ? u : rs(e[r + 1]) ? [] : {});
                  }
                  Bn(a, c, l), (a = a[c]);
                }
                return t;
              }
              var Hi = bn
                  ? function (t, e) {
                      return bn.set(t, e), t;
                    }
                  : qa,
                zi = Ge
                  ? function (t, e) {
                      return Ge(t, 'toString', { configurable: !0, enumerable: !1, value: Ua(e), writable: !0 });
                    }
                  : qa;
              function Bi(t) {
                return ws(Ia(t));
              }
              function Ui(t, e, n) {
                var r = -1,
                  s = t.length;
                e < 0 && (e = -e > s ? 0 : s + e),
                  (n = n > s ? s : n) < 0 && (n += s),
                  (s = e > n ? 0 : (n - e) >>> 0),
                  (e >>>= 0);
                for (var o = i(s); ++r < s; ) o[r] = t[r + e];
                return o;
              }
              function Wi(t, e) {
                var n;
                return (
                  Jn(t, function (t, i, r) {
                    return !(n = e(t, i, r));
                  }),
                  !!n
                );
              }
              function $i(t, e, n) {
                var i = 0,
                  r = null == t ? i : t.length;
                if ('number' == typeof e && e == e && r <= 2147483647) {
                  for (; i < r; ) {
                    var s = (i + r) >>> 1,
                      o = t[s];
                    null !== o && !Zo(o) && (n ? o <= e : o < e) ? (i = s + 1) : (r = s);
                  }
                  return r;
                }
                return qi(t, e, qa, n);
              }
              function qi(t, e, n, i) {
                e = n(e);
                for (
                  var r = 0, s = null == t ? 0 : t.length, o = e != e, a = null === e, c = Zo(e), l = void 0 === e;
                  r < s;

                ) {
                  var u = Qe((r + s) / 2),
                    h = n(t[u]),
                    d = void 0 !== h,
                    p = null === h,
                    f = h == h,
                    m = Zo(h);
                  if (o) var g = i || f;
                  else
                    g = l
                      ? f && (i || d)
                      : a
                      ? f && d && (i || !p)
                      : c
                      ? f && d && !p && (i || !m)
                      : !p && !m && (i ? h <= e : h < e);
                  g ? (r = u + 1) : (s = u);
                }
                return on(s, 4294967294);
              }
              function Gi(t, e) {
                for (var n = -1, i = t.length, r = 0, s = []; ++n < i; ) {
                  var o = t[n],
                    a = e ? e(o) : o;
                  if (!n || !Io(a, c)) {
                    var c = a;
                    s[r++] = 0 === o ? 0 : o;
                  }
                }
                return s;
              }
              function Xi(t) {
                return 'number' == typeof t ? t : Zo(t) ? NaN : +t;
              }
              function Ki(t) {
                if ('string' == typeof t) return t;
                if (Ro(t)) return ue(t, Ki) + '';
                if (Zo(t)) return Sn ? Sn.call(t) : '';
                var e = t + '';
                return '0' == e && 1 / t == -1 / 0 ? '-0' : e;
              }
              function Yi(t, e, n) {
                var i = -1,
                  r = ce,
                  s = t.length,
                  o = !0,
                  a = [],
                  c = a;
                if (n) (o = !1), (r = le);
                else if (s >= 200) {
                  var l = e ? null : Mr(t);
                  if (l) return He(l);
                  (o = !1), (r = Ie), (c = new Mn());
                } else c = e ? [] : a;
                t: for (; ++i < s; ) {
                  var u = t[i],
                    h = e ? e(u) : u;
                  if (((u = n || 0 !== u ? u : 0), o && h == h)) {
                    for (var d = c.length; d--; ) if (c[d] === h) continue t;
                    e && c.push(h), a.push(u);
                  } else r(c, h, n) || (c !== a && c.push(h), a.push(u));
                }
                return a;
              }
              function Zi(t, e) {
                return null == (t = ps(t, (e = sr(e, t)))) || delete t[Os(Vs(e))];
              }
              function Qi(t, e, n, i) {
                return Li(t, e, n(ui(t, e)), i);
              }
              function Ji(t, e, n, i) {
                for (var r = t.length, s = i ? r : -1; (i ? s-- : ++s < r) && e(t[s], s, t); );
                return n ? Ui(t, i ? 0 : s, i ? s + 1 : r) : Ui(t, i ? s + 1 : 0, i ? r : s);
              }
              function tr(t, e) {
                var n = t;
                return (
                  n instanceof Dn && (n = n.value()),
                  de(
                    e,
                    function (t, e) {
                      return e.func.apply(e.thisArg, he([t], e.args));
                    },
                    n
                  )
                );
              }
              function er(t, e, n) {
                var r = t.length;
                if (r < 2) return r ? Yi(t[0]) : [];
                for (var s = -1, o = i(r); ++s < r; )
                  for (var a = t[s], c = -1; ++c < r; ) c != s && (o[s] = Qn(o[s] || a, t[c], e, n));
                return Yi(ri(o, 1), e, n);
              }
              function nr(t, e, n) {
                for (var i = -1, r = t.length, s = e.length, o = {}; ++i < r; ) n(o, t[i], i < s ? e[i] : void 0);
                return o;
              }
              function ir(t) {
                return Fo(t) ? t : [];
              }
              function rr(t) {
                return 'function' == typeof t ? t : qa;
              }
              function sr(t, e) {
                return Ro(t) ? t : os(t, e) ? [t] : ks(aa(t));
              }
              var or = Fi;
              function ar(t, e, n) {
                var i = t.length;
                return (n = void 0 === n ? i : n), !e && n >= i ? t : Ui(t, e, n);
              }
              var cr =
                Xe ||
                function (t) {
                  return Wt.clearTimeout(t);
                };
              function lr(t, e) {
                if (e) return t.slice();
                var n = t.length,
                  i = Ut ? Ut(n) : new t.constructor(n);
                return t.copy(i), i;
              }
              function ur(t) {
                var e = new t.constructor(t.byteLength);
                return new Bt(e).set(new Bt(t)), e;
              }
              function hr(t, e) {
                var n = e ? ur(t.buffer) : t.buffer;
                return new t.constructor(n, t.byteOffset, t.length);
              }
              function dr(t, e) {
                if (t !== e) {
                  var n = void 0 !== t,
                    i = null === t,
                    r = t == t,
                    s = Zo(t),
                    o = void 0 !== e,
                    a = null === e,
                    c = e == e,
                    l = Zo(e);
                  if ((!a && !l && !s && t > e) || (s && o && c && !a && !l) || (i && o && c) || (!n && c) || !r)
                    return 1;
                  if ((!i && !s && !l && t < e) || (l && n && r && !i && !s) || (a && n && r) || (!o && r) || !c)
                    return -1;
                }
                return 0;
              }
              function pr(t, e, n, r) {
                for (
                  var s = -1, o = t.length, a = n.length, c = -1, l = e.length, u = sn(o - a, 0), h = i(l + u), d = !r;
                  ++c < l;

                )
                  h[c] = e[c];
                for (; ++s < a; ) (d || s < o) && (h[n[s]] = t[s]);
                for (; u--; ) h[c++] = t[s++];
                return h;
              }
              function fr(t, e, n, r) {
                for (
                  var s = -1,
                    o = t.length,
                    a = -1,
                    c = n.length,
                    l = -1,
                    u = e.length,
                    h = sn(o - c, 0),
                    d = i(h + u),
                    p = !r;
                  ++s < h;

                )
                  d[s] = t[s];
                for (var f = s; ++l < u; ) d[f + l] = e[l];
                for (; ++a < c; ) (p || s < o) && (d[f + n[a]] = t[s++]);
                return d;
              }
              function mr(t, e) {
                var n = -1,
                  r = t.length;
                for (e || (e = i(r)); ++n < r; ) e[n] = t[n];
                return e;
              }
              function gr(t, e, n, i) {
                var r = !n;
                n || (n = {});
                for (var s = -1, o = e.length; ++s < o; ) {
                  var a = e[s],
                    c = i ? i(n[a], t[a], a, n, t) : void 0;
                  void 0 === c && (c = t[a]), r ? qn(n, a, c) : Bn(n, a, c);
                }
                return n;
              }
              function br(t, e) {
                return function (n, i) {
                  var r = Ro(n) ? ie : Wn,
                    s = e ? e() : {};
                  return r(n, t, Xr(i, 2), s);
                };
              }
              function _r(t) {
                return Fi(function (e, n) {
                  var i = -1,
                    r = n.length,
                    s = r > 1 ? n[r - 1] : void 0,
                    o = r > 2 ? n[2] : void 0;
                  for (
                    s = t.length > 3 && 'function' == typeof s ? (r--, s) : void 0,
                      o && ss(n[0], n[1], o) && ((s = r < 3 ? void 0 : s), (r = 1)),
                      e = mt(e);
                    ++i < r;

                  ) {
                    var a = n[i];
                    a && t(e, a, i, s);
                  }
                  return e;
                });
              }
              function yr(t, e) {
                return function (n, i) {
                  if (null == n) return n;
                  if (!Mo(n)) return t(n, i);
                  for (var r = n.length, s = e ? r : -1, o = mt(n); (e ? s-- : ++s < r) && !1 !== i(o[s], s, o); );
                  return n;
                };
              }
              function vr(t) {
                return function (e, n, i) {
                  for (var r = -1, s = mt(e), o = i(e), a = o.length; a--; ) {
                    var c = o[t ? a : ++r];
                    if (!1 === n(s[c], c, s)) break;
                  }
                  return e;
                };
              }
              function wr(t) {
                return function (e) {
                  var n = Fe((e = aa(e))) ? Ue(e) : void 0,
                    i = n ? n[0] : e.charAt(0),
                    r = n ? ar(n, 1).join('') : e.slice(1);
                  return i[t]() + r;
                };
              }
              function xr(t) {
                return function (e) {
                  return de(Ha(ja(e).replace(It, '')), t, '');
                };
              }
              function Cr(t) {
                return function () {
                  var e = arguments;
                  switch (e.length) {
                    case 0:
                      return new t();
                    case 1:
                      return new t(e[0]);
                    case 2:
                      return new t(e[0], e[1]);
                    case 3:
                      return new t(e[0], e[1], e[2]);
                    case 4:
                      return new t(e[0], e[1], e[2], e[3]);
                    case 5:
                      return new t(e[0], e[1], e[2], e[3], e[4]);
                    case 6:
                      return new t(e[0], e[1], e[2], e[3], e[4], e[5]);
                    case 7:
                      return new t(e[0], e[1], e[2], e[3], e[4], e[5], e[6]);
                  }
                  var n = Tn(t.prototype),
                    i = t.apply(n, e);
                  return Uo(i) ? i : n;
                };
              }
              function kr(t) {
                return function (e, n, i) {
                  var r = mt(e);
                  if (!Mo(e)) {
                    var s = Xr(n, 3);
                    (e = va(e)),
                      (n = function (t) {
                        return s(r[t], t, r);
                      });
                  }
                  var o = t(e, n, i);
                  return o > -1 ? r[s ? e[o] : o] : void 0;
                };
              }
              function Or(t) {
                return Br(function (e) {
                  var n = e.length,
                    i = n,
                    s = An.prototype.thru;
                  for (t && e.reverse(); i--; ) {
                    var o = e[i];
                    if ('function' != typeof o) throw new _t(r);
                    if (s && !a && 'wrapper' == qr(o)) var a = new An([], !0);
                  }
                  for (i = a ? i : n; ++i < n; ) {
                    var c = qr((o = e[i])),
                      l = 'wrapper' == c ? $r(o) : void 0;
                    a =
                      l && as(l[0]) && 424 == l[1] && !l[4].length && 1 == l[9]
                        ? a[qr(l[0])].apply(a, l[3])
                        : 1 == o.length && as(o)
                        ? a[c]()
                        : a.thru(o);
                  }
                  return function () {
                    var t = arguments,
                      i = t[0];
                    if (a && 1 == t.length && Ro(i)) return a.plant(i).value();
                    for (var r = 0, s = n ? e[r].apply(this, t) : i; ++r < n; ) s = e[r].call(this, s);
                    return s;
                  };
                });
              }
              function Sr(t, e, n, r, s, o, a, c, l, u) {
                var h = 128 & e,
                  d = 1 & e,
                  p = 2 & e,
                  f = 24 & e,
                  m = 512 & e,
                  g = p ? void 0 : Cr(t);
                return function b() {
                  for (var _ = arguments.length, y = i(_), v = _; v--; ) y[v] = arguments[v];
                  if (f)
                    var w = Gr(b),
                      x = je(y, w);
                  if ((r && (y = pr(y, r, s, f)), o && (y = fr(y, o, a, f)), (_ -= x), f && _ < u)) {
                    var C = Le(y, w);
                    return Rr(t, e, Sr, b.placeholder, n, y, C, c, l, u - _);
                  }
                  var k = d ? n : this,
                    O = p ? k[t] : t;
                  return (
                    (_ = y.length),
                    c ? (y = fs(y, c)) : m && _ > 1 && y.reverse(),
                    h && l < _ && (y.length = l),
                    this && this !== Wt && this instanceof b && (O = g || Cr(O)),
                    O.apply(k, y)
                  );
                };
              }
              function Er(t, e) {
                return function (n, i) {
                  return (function (t, e, n, i) {
                    return (
                      ai(t, function (t, r, s) {
                        e(i, n(t), r, s);
                      }),
                      i
                    );
                  })(n, t, e(i), {});
                };
              }
              function Tr(t, e) {
                return function (n, i) {
                  var r;
                  if (void 0 === n && void 0 === i) return e;
                  if ((void 0 !== n && (r = n), void 0 !== i)) {
                    if (void 0 === r) return i;
                    'string' == typeof n || 'string' == typeof i
                      ? ((n = Ki(n)), (i = Ki(i)))
                      : ((n = Xi(n)), (i = Xi(i))),
                      (r = t(n, i));
                  }
                  return r;
                };
              }
              function Ir(t) {
                return Br(function (e) {
                  return (
                    (e = ue(e, Ee(Xr()))),
                    Fi(function (n) {
                      var i = this;
                      return t(e, function (t) {
                        return ne(t, i, n);
                      });
                    })
                  );
                });
              }
              function Ar(t, e) {
                var n = (e = void 0 === e ? ' ' : Ki(e)).length;
                if (n < 2) return n ? Mi(e, t) : e;
                var i = Mi(e, Ze(t / Be(e)));
                return Fe(e) ? ar(Ue(i), 0, t).join('') : i.slice(0, t);
              }
              function Dr(t) {
                return function (e, n, r) {
                  return (
                    r && 'number' != typeof r && ss(e, n, r) && (n = r = void 0),
                    (e = na(e)),
                    void 0 === n ? ((n = e), (e = 0)) : (n = na(n)),
                    (function (t, e, n, r) {
                      for (var s = -1, o = sn(Ze((e - t) / (n || 1)), 0), a = i(o); o--; )
                        (a[r ? o : ++s] = t), (t += n);
                      return a;
                    })(e, n, (r = void 0 === r ? (e < n ? 1 : -1) : na(r)), t)
                  );
                };
              }
              function jr(t) {
                return function (e, n) {
                  return ('string' == typeof e && 'string' == typeof n) || ((e = sa(e)), (n = sa(n))), t(e, n);
                };
              }
              function Rr(t, e, n, i, r, s, o, a, c, l) {
                var u = 8 & e;
                (e |= u ? 32 : 64), 4 & (e &= ~(u ? 64 : 32)) || (e &= -4);
                var h = [t, e, r, u ? s : void 0, u ? o : void 0, u ? void 0 : s, u ? void 0 : o, a, c, l],
                  d = n.apply(void 0, h);
                return as(t) && gs(d, h), (d.placeholder = i), ys(d, t, e);
              }
              function Pr(t) {
                var e = ft[t];
                return function (t, n) {
                  if (((t = sa(t)), (n = null == n ? 0 : on(ia(n), 292)) && en(t))) {
                    var i = (aa(t) + 'e').split('e');
                    return +((i = (aa(e(i[0] + 'e' + (+i[1] + n))) + 'e').split('e'))[0] + 'e' + (+i[1] - n));
                  }
                  return e(t);
                };
              }
              var Mr =
                fn && 1 / He(new fn([, -0]))[1] == 1 / 0
                  ? function (t) {
                      return new fn(t);
                    }
                  : Za;
              function Fr(t) {
                return function (e) {
                  var n = ts(e);
                  return n == f
                    ? Ne(e)
                    : n == _
                    ? ze(e)
                    : (function (t, e) {
                        return ue(e, function (e) {
                          return [e, t[e]];
                        });
                      })(e, t(e));
                };
              }
              function Nr(t, e, n, o, a, c, l, u) {
                var h = 2 & e;
                if (!h && 'function' != typeof t) throw new _t(r);
                var d = o ? o.length : 0;
                if (
                  (d || ((e &= -97), (o = a = void 0)),
                  (l = void 0 === l ? l : sn(ia(l), 0)),
                  (u = void 0 === u ? u : ia(u)),
                  (d -= a ? a.length : 0),
                  64 & e)
                ) {
                  var p = o,
                    f = a;
                  o = a = void 0;
                }
                var m = h ? void 0 : $r(t),
                  g = [t, e, n, o, a, p, f, c, l, u];
                if (
                  (m &&
                    (function (t, e) {
                      var n = t[1],
                        i = e[1],
                        r = n | i;
                      if (
                        !(
                          r < 131 ||
                          (128 == i && 8 == n) ||
                          (128 == i && 256 == n && t[7].length <= e[8]) ||
                          (384 == i && e[7].length <= e[8] && 8 == n)
                        )
                      )
                        return t;
                      1 & i && ((t[2] = e[2]), (r |= 1 & n ? 0 : 4));
                      var o = e[3];
                      if (o) {
                        var a = t[3];
                        (t[3] = a ? pr(a, o, e[4]) : o), (t[4] = a ? Le(t[3], s) : e[4]);
                      }
                      (o = e[5]) && ((t[5] = (a = t[5]) ? fr(a, o, e[6]) : o), (t[6] = a ? Le(t[5], s) : e[6])),
                        (o = e[7]) && (t[7] = o),
                        128 & i && (t[8] = null == t[8] ? e[8] : on(t[8], e[8])),
                        null == t[9] && (t[9] = e[9]),
                        (t[0] = e[0]),
                        (t[1] = r);
                    })(g, m),
                  (t = g[0]),
                  (e = g[1]),
                  (n = g[2]),
                  (o = g[3]),
                  (a = g[4]),
                  !(u = g[9] = void 0 === g[9] ? (h ? 0 : t.length) : sn(g[9] - d, 0)) && 24 & e && (e &= -25),
                  e && 1 != e)
                )
                  b =
                    8 == e || 16 == e
                      ? (function (t, e, n) {
                          var r = Cr(t);
                          return function s() {
                            for (var o = arguments.length, a = i(o), c = o, l = Gr(s); c--; ) a[c] = arguments[c];
                            var u = o < 3 && a[0] !== l && a[o - 1] !== l ? [] : Le(a, l);
                            if ((o -= u.length) < n)
                              return Rr(t, e, Sr, s.placeholder, void 0, a, u, void 0, void 0, n - o);
                            var h = this && this !== Wt && this instanceof s ? r : t;
                            return ne(h, this, a);
                          };
                        })(t, e, u)
                      : (32 != e && 33 != e) || a.length
                      ? Sr.apply(void 0, g)
                      : (function (t, e, n, r) {
                          var s = 1 & e,
                            o = Cr(t);
                          return function e() {
                            for (
                              var a = -1,
                                c = arguments.length,
                                l = -1,
                                u = r.length,
                                h = i(u + c),
                                d = this && this !== Wt && this instanceof e ? o : t;
                              ++l < u;

                            )
                              h[l] = r[l];
                            for (; c--; ) h[l++] = arguments[++a];
                            return ne(d, s ? n : this, h);
                          };
                        })(t, e, n, o);
                else
                  var b = (function (t, e, n) {
                    var i = 1 & e,
                      r = Cr(t);
                    return function e() {
                      var s = this && this !== Wt && this instanceof e ? r : t;
                      return s.apply(i ? n : this, arguments);
                    };
                  })(t, e, n);
                return ys((m ? Hi : gs)(b, g), t, e);
              }
              function Vr(t, e, n, i) {
                return void 0 === t || (Io(t, vt[n]) && !Ct.call(i, n)) ? e : t;
              }
              function Lr(t, e, n, i, r, s) {
                return Uo(t) && Uo(e) && (s.set(e, t), Ti(t, e, void 0, Lr, s), s.delete(e)), t;
              }
              function Hr(t) {
                return Go(t) ? void 0 : t;
              }
              function zr(t, e, n, i, r, s) {
                var o = 1 & n,
                  a = t.length,
                  c = e.length;
                if (a != c && !(o && c > a)) return !1;
                var l = s.get(t);
                if (l && s.get(e)) return l == e;
                var u = -1,
                  h = !0,
                  d = 2 & n ? new Mn() : void 0;
                for (s.set(t, e), s.set(e, t); ++u < a; ) {
                  var p = t[u],
                    f = e[u];
                  if (i) var m = o ? i(f, p, u, e, t, s) : i(p, f, u, t, e, s);
                  if (void 0 !== m) {
                    if (m) continue;
                    h = !1;
                    break;
                  }
                  if (d) {
                    if (
                      !fe(e, function (t, e) {
                        if (!Ie(d, e) && (p === t || r(p, t, n, i, s))) return d.push(e);
                      })
                    ) {
                      h = !1;
                      break;
                    }
                  } else if (p !== f && !r(p, f, n, i, s)) {
                    h = !1;
                    break;
                  }
                }
                return s.delete(t), s.delete(e), h;
              }
              function Br(t) {
                return _s(ds(t, void 0, Rs), t + '');
              }
              function Ur(t) {
                return hi(t, va, Qr);
              }
              function Wr(t) {
                return hi(t, wa, Jr);
              }
              var $r = bn
                ? function (t) {
                    return bn.get(t);
                  }
                : Za;
              function qr(t) {
                for (var e = t.name + '', n = _n[e], i = Ct.call(_n, e) ? n.length : 0; i--; ) {
                  var r = n[i],
                    s = r.func;
                  if (null == s || s == t) return r.name;
                }
                return e;
              }
              function Gr(t) {
                return (Ct.call(En, 'placeholder') ? En : t).placeholder;
              }
              function Xr() {
                var t = En.iteratee || Ga;
                return (t = t === Ga ? xi : t), arguments.length ? t(arguments[0], arguments[1]) : t;
              }
              function Kr(t, e) {
                var n,
                  i,
                  r = t.__data__;
                return (
                  'string' == (i = typeof (n = e)) || 'number' == i || 'symbol' == i || 'boolean' == i
                    ? '__proto__' !== n
                    : null === n
                )
                  ? r['string' == typeof e ? 'string' : 'hash']
                  : r.map;
              }
              function Yr(t) {
                for (var e = va(t), n = e.length; n--; ) {
                  var i = e[n],
                    r = t[i];
                  e[n] = [i, r, us(r)];
                }
                return e;
              }
              function Zr(t, e) {
                var n = (function (t, e) {
                  return null == t ? void 0 : t[e];
                })(t, e);
                return wi(n) ? n : void 0;
              }
              var Qr = Je
                  ? function (t) {
                      return null == t
                        ? []
                        : ((t = mt(t)),
                          ae(Je(t), function (e) {
                            return Xt.call(t, e);
                          }));
                    }
                  : rc,
                Jr = Je
                  ? function (t) {
                      for (var e = []; t; ) he(e, Qr(t)), (t = $t(t));
                      return e;
                    }
                  : rc,
                ts = di;
              function es(t, e, n) {
                for (var i = -1, r = (e = sr(e, t)).length, s = !1; ++i < r; ) {
                  var o = Os(e[i]);
                  if (!(s = null != t && n(t, o))) break;
                  t = t[o];
                }
                return s || ++i != r ? s : !!(r = null == t ? 0 : t.length) && Bo(r) && rs(o, r) && (Ro(t) || jo(t));
              }
              function ns(t) {
                return 'function' != typeof t.constructor || ls(t) ? {} : Tn($t(t));
              }
              function is(t) {
                return Ro(t) || jo(t) || !!(me && t && t[me]);
              }
              function rs(t, e) {
                var n = typeof t;
                return (
                  !!(e = null == e ? 9007199254740991 : e) &&
                  ('number' == n || ('symbol' != n && at.test(t))) &&
                  t > -1 &&
                  t % 1 == 0 &&
                  t < e
                );
              }
              function ss(t, e, n) {
                if (!Uo(n)) return !1;
                var i = typeof e;
                return !!('number' == i ? Mo(n) && rs(e, n.length) : 'string' == i && e in n) && Io(n[e], t);
              }
              function os(t, e) {
                if (Ro(t)) return !1;
                var n = typeof t;
                return (
                  !('number' != n && 'symbol' != n && 'boolean' != n && null != t && !Zo(t)) ||
                  U.test(t) ||
                  !B.test(t) ||
                  (null != e && t in mt(e))
                );
              }
              function as(t) {
                var e = qr(t),
                  n = En[e];
                if ('function' != typeof n || !(e in Dn.prototype)) return !1;
                if (t === n) return !0;
                var i = $r(n);
                return !!i && t === i[0];
              }
              ((hn && ts(new hn(new ArrayBuffer(1))) != C) ||
                (dn && ts(new dn()) != f) ||
                (pn && '[object Promise]' != ts(pn.resolve())) ||
                (fn && ts(new fn()) != _) ||
                (mn && ts(new mn()) != w)) &&
                (ts = function (t) {
                  var e = di(t),
                    n = e == g ? t.constructor : void 0,
                    i = n ? Ss(n) : '';
                  if (i)
                    switch (i) {
                      case yn:
                        return C;
                      case vn:
                        return f;
                      case wn:
                        return '[object Promise]';
                      case xn:
                        return _;
                      case Cn:
                        return w;
                    }
                  return e;
                });
              var cs = wt ? Ho : sc;
              function ls(t) {
                var e = t && t.constructor;
                return t === (('function' == typeof e && e.prototype) || vt);
              }
              function us(t) {
                return t == t && !Uo(t);
              }
              function hs(t, e) {
                return function (n) {
                  return null != n && n[t] === e && (void 0 !== e || t in mt(n));
                };
              }
              function ds(t, e, n) {
                return (
                  (e = sn(void 0 === e ? t.length - 1 : e, 0)),
                  function () {
                    for (var r = arguments, s = -1, o = sn(r.length - e, 0), a = i(o); ++s < o; ) a[s] = r[e + s];
                    s = -1;
                    for (var c = i(e + 1); ++s < e; ) c[s] = r[s];
                    return (c[e] = n(a)), ne(t, this, c);
                  }
                );
              }
              function ps(t, e) {
                return e.length < 2 ? t : ui(t, Ui(e, 0, -1));
              }
              function fs(t, e) {
                for (var n = t.length, i = on(e.length, n), r = mr(t); i--; ) {
                  var s = e[i];
                  t[i] = rs(s, n) ? r[s] : void 0;
                }
                return t;
              }
              function ms(t, e) {
                if (('constructor' !== e || 'function' != typeof t[e]) && '__proto__' != e) return t[e];
              }
              var gs = vs(Hi),
                bs =
                  Ye ||
                  function (t, e) {
                    return Wt.setTimeout(t, e);
                  },
                _s = vs(zi);
              function ys(t, e, n) {
                var i = e + '';
                return _s(
                  t,
                  (function (t, e) {
                    var n = e.length;
                    if (!n) return t;
                    var i = n - 1;
                    return (
                      (e[i] = (n > 1 ? '& ' : '') + e[i]),
                      (e = e.join(n > 2 ? ', ' : ' ')),
                      t.replace(Y, '{\n/* [wrapped with ' + e + '] */\n')
                    );
                  })(
                    i,
                    (function (t, e) {
                      return (
                        re(o, function (n) {
                          var i = '_.' + n[0];
                          e & n[1] && !ce(t, i) && t.push(i);
                        }),
                        t.sort()
                      );
                    })(
                      (function (t) {
                        var e = t.match(Z);
                        return e ? e[1].split(Q) : [];
                      })(i),
                      n
                    )
                  )
                );
              }
              function vs(t) {
                var e = 0,
                  n = 0;
                return function () {
                  var i = an(),
                    r = 16 - (i - n);
                  if (((n = i), r > 0)) {
                    if (++e >= 800) return arguments[0];
                  } else e = 0;
                  return t.apply(void 0, arguments);
                };
              }
              function ws(t, e) {
                var n = -1,
                  i = t.length,
                  r = i - 1;
                for (e = void 0 === e ? i : e; ++n < e; ) {
                  var s = Pi(n, r),
                    o = t[s];
                  (t[s] = t[n]), (t[n] = o);
                }
                return (t.length = e), t;
              }
              var xs,
                Cs,
                ks =
                  ((xs = Co(
                    function (t) {
                      var e = [];
                      return (
                        46 === t.charCodeAt(0) && e.push(''),
                        t.replace(W, function (t, n, i, r) {
                          e.push(i ? r.replace(tt, '$1') : n || t);
                        }),
                        e
                      );
                    },
                    function (t) {
                      return 500 === Cs.size && Cs.clear(), t;
                    }
                  )),
                  (Cs = xs.cache),
                  xs);
              function Os(t) {
                if ('string' == typeof t || Zo(t)) return t;
                var e = t + '';
                return '0' == e && 1 / t == -1 / 0 ? '-0' : e;
              }
              function Ss(t) {
                if (null != t) {
                  try {
                    return xt.call(t);
                  } catch (e) {}
                  try {
                    return t + '';
                  } catch (e) {}
                }
                return '';
              }
              function Es(t) {
                if (t instanceof Dn) return t.clone();
                var e = new An(t.__wrapped__, t.__chain__);
                return (
                  (e.__actions__ = mr(t.__actions__)), (e.__index__ = t.__index__), (e.__values__ = t.__values__), e
                );
              }
              var Ts = Fi(function (t, e) {
                  return Fo(t) ? Qn(t, ri(e, 1, Fo, !0)) : [];
                }),
                Is = Fi(function (t, e) {
                  var n = Vs(e);
                  return Fo(n) && (n = void 0), Fo(t) ? Qn(t, ri(e, 1, Fo, !0), Xr(n, 2)) : [];
                }),
                As = Fi(function (t, e) {
                  var n = Vs(e);
                  return Fo(n) && (n = void 0), Fo(t) ? Qn(t, ri(e, 1, Fo, !0), void 0, n) : [];
                });
              function Ds(t, e, n) {
                var i = null == t ? 0 : t.length;
                if (!i) return -1;
                var r = null == n ? 0 : ia(n);
                return r < 0 && (r = sn(i + r, 0)), be(t, Xr(e, 3), r);
              }
              function js(t, e, n) {
                var i = null == t ? 0 : t.length;
                if (!i) return -1;
                var r = i - 1;
                return void 0 !== n && ((r = ia(n)), (r = n < 0 ? sn(i + r, 0) : on(r, i - 1))), be(t, Xr(e, 3), r, !0);
              }
              function Rs(t) {
                return null != t && t.length ? ri(t, 1) : [];
              }
              function Ps(t) {
                return t && t.length ? t[0] : void 0;
              }
              var Ms = Fi(function (t) {
                  var e = ue(t, ir);
                  return e.length && e[0] === t[0] ? gi(e) : [];
                }),
                Fs = Fi(function (t) {
                  var e = Vs(t),
                    n = ue(t, ir);
                  return e === Vs(n) ? (e = void 0) : n.pop(), n.length && n[0] === t[0] ? gi(n, Xr(e, 2)) : [];
                }),
                Ns = Fi(function (t) {
                  var e = Vs(t),
                    n = ue(t, ir);
                  return (
                    (e = 'function' == typeof e ? e : void 0) && n.pop(),
                    n.length && n[0] === t[0] ? gi(n, void 0, e) : []
                  );
                });
              function Vs(t) {
                var e = null == t ? 0 : t.length;
                return e ? t[e - 1] : void 0;
              }
              var Ls = Fi(Hs);
              function Hs(t, e) {
                return t && t.length && e && e.length ? ji(t, e) : t;
              }
              var zs = Br(function (t, e) {
                var n = null == t ? 0 : t.length,
                  i = Gn(t, e);
                return (
                  Ri(
                    t,
                    ue(e, function (t) {
                      return rs(t, n) ? +t : t;
                    }).sort(dr)
                  ),
                  i
                );
              });
              function Bs(t) {
                return null == t ? t : un.call(t);
              }
              var Us = Fi(function (t) {
                  return Yi(ri(t, 1, Fo, !0));
                }),
                Ws = Fi(function (t) {
                  var e = Vs(t);
                  return Fo(e) && (e = void 0), Yi(ri(t, 1, Fo, !0), Xr(e, 2));
                }),
                $s = Fi(function (t) {
                  var e = Vs(t);
                  return (e = 'function' == typeof e ? e : void 0), Yi(ri(t, 1, Fo, !0), void 0, e);
                });
              function qs(t) {
                if (!t || !t.length) return [];
                var e = 0;
                return (
                  (t = ae(t, function (t) {
                    if (Fo(t)) return (e = sn(t.length, e)), !0;
                  })),
                  Se(e, function (e) {
                    return ue(t, xe(e));
                  })
                );
              }
              function Gs(t, e) {
                if (!t || !t.length) return [];
                var n = qs(t);
                return null == e
                  ? n
                  : ue(n, function (t) {
                      return ne(e, void 0, t);
                    });
              }
              var Xs = Fi(function (t, e) {
                  return Fo(t) ? Qn(t, e) : [];
                }),
                Ks = Fi(function (t) {
                  return er(ae(t, Fo));
                }),
                Ys = Fi(function (t) {
                  var e = Vs(t);
                  return Fo(e) && (e = void 0), er(ae(t, Fo), Xr(e, 2));
                }),
                Zs = Fi(function (t) {
                  var e = Vs(t);
                  return (e = 'function' == typeof e ? e : void 0), er(ae(t, Fo), void 0, e);
                }),
                Qs = Fi(qs),
                Js = Fi(function (t) {
                  var e = t.length,
                    n = e > 1 ? t[e - 1] : void 0;
                  return (n = 'function' == typeof n ? (t.pop(), n) : void 0), Gs(t, n);
                });
              function to(t) {
                var e = En(t);
                return (e.__chain__ = !0), e;
              }
              function eo(t, e) {
                return e(t);
              }
              var no = Br(function (t) {
                  var e = t.length,
                    n = e ? t[0] : 0,
                    i = this.__wrapped__,
                    r = function (e) {
                      return Gn(e, t);
                    };
                  return !(e > 1 || this.__actions__.length) && i instanceof Dn && rs(n)
                    ? ((i = i.slice(n, +n + (e ? 1 : 0))).__actions__.push({ func: eo, args: [r], thisArg: void 0 }),
                      new An(i, this.__chain__).thru(function (t) {
                        return e && !t.length && t.push(void 0), t;
                      }))
                    : this.thru(r);
                }),
                io = br(function (t, e, n) {
                  Ct.call(t, n) ? ++t[n] : qn(t, n, 1);
                }),
                ro = kr(Ds),
                so = kr(js);
              function oo(t, e) {
                return (Ro(t) ? re : Jn)(t, Xr(e, 3));
              }
              function ao(t, e) {
                return (Ro(t) ? se : ti)(t, Xr(e, 3));
              }
              var co = br(function (t, e, n) {
                  Ct.call(t, n) ? t[n].push(e) : qn(t, n, [e]);
                }),
                lo = Fi(function (t, e, n) {
                  var r = -1,
                    s = 'function' == typeof e,
                    o = Mo(t) ? i(t.length) : [];
                  return (
                    Jn(t, function (t) {
                      o[++r] = s ? ne(e, t, n) : bi(t, e, n);
                    }),
                    o
                  );
                }),
                uo = br(function (t, e, n) {
                  qn(t, n, e);
                });
              function ho(t, e) {
                return (Ro(t) ? ue : Oi)(t, Xr(e, 3));
              }
              var po = br(
                  function (t, e, n) {
                    t[n ? 0 : 1].push(e);
                  },
                  function () {
                    return [[], []];
                  }
                ),
                fo = Fi(function (t, e) {
                  if (null == t) return [];
                  var n = e.length;
                  return (
                    n > 1 && ss(t, e[0], e[1]) ? (e = []) : n > 2 && ss(e[0], e[1], e[2]) && (e = [e[0]]),
                    Ai(t, ri(e, 1), [])
                  );
                }),
                mo =
                  Ke ||
                  function () {
                    return Wt.Date.now();
                  };
              function go(t, e, n) {
                return (
                  (e = n ? void 0 : e), Nr(t, 128, void 0, void 0, void 0, void 0, (e = t && null == e ? t.length : e))
                );
              }
              function bo(t, e) {
                var n;
                if ('function' != typeof e) throw new _t(r);
                return (
                  (t = ia(t)),
                  function () {
                    return --t > 0 && (n = e.apply(this, arguments)), t <= 1 && (e = void 0), n;
                  }
                );
              }
              var _o = Fi(function (t, e, n) {
                  var i = 1;
                  if (n.length) {
                    var r = Le(n, Gr(_o));
                    i |= 32;
                  }
                  return Nr(t, i, e, n, r);
                }),
                yo = Fi(function (t, e, n) {
                  var i = 3;
                  if (n.length) {
                    var r = Le(n, Gr(yo));
                    i |= 32;
                  }
                  return Nr(e, i, t, n, r);
                });
              function vo(t, e, n) {
                var i,
                  s,
                  o,
                  a,
                  c,
                  l,
                  u = 0,
                  h = !1,
                  d = !1,
                  p = !0;
                if ('function' != typeof t) throw new _t(r);
                function f(e) {
                  var n = i,
                    r = s;
                  return (i = s = void 0), (u = e), (a = t.apply(r, n));
                }
                function m(t) {
                  return (u = t), (c = bs(b, e)), h ? f(t) : a;
                }
                function g(t) {
                  var n = t - l;
                  return void 0 === l || n >= e || n < 0 || (d && t - u >= o);
                }
                function b() {
                  var t = mo();
                  if (g(t)) return _(t);
                  c = bs(
                    b,
                    (function (t) {
                      var n = e - (t - l);
                      return d ? on(n, o - (t - u)) : n;
                    })(t)
                  );
                }
                function _(t) {
                  return (c = void 0), p && i ? f(t) : ((i = s = void 0), a);
                }
                function y() {
                  var t = mo(),
                    n = g(t);
                  if (((i = arguments), (s = this), (l = t), n)) {
                    if (void 0 === c) return m(l);
                    if (d) return cr(c), (c = bs(b, e)), f(l);
                  }
                  return void 0 === c && (c = bs(b, e)), a;
                }
                return (
                  (e = sa(e) || 0),
                  Uo(n) &&
                    ((h = !!n.leading),
                    (o = (d = 'maxWait' in n) ? sn(sa(n.maxWait) || 0, e) : o),
                    (p = 'trailing' in n ? !!n.trailing : p)),
                  (y.cancel = function () {
                    void 0 !== c && cr(c), (u = 0), (i = l = s = c = void 0);
                  }),
                  (y.flush = function () {
                    return void 0 === c ? a : _(mo());
                  }),
                  y
                );
              }
              var wo = Fi(function (t, e) {
                  return Zn(t, 1, e);
                }),
                xo = Fi(function (t, e, n) {
                  return Zn(t, sa(e) || 0, n);
                });
              function Co(t, e) {
                if ('function' != typeof t || (null != e && 'function' != typeof e)) throw new _t(r);
                var n = function () {
                  var i = arguments,
                    r = e ? e.apply(this, i) : i[0],
                    s = n.cache;
                  if (s.has(r)) return s.get(r);
                  var o = t.apply(this, i);
                  return (n.cache = s.set(r, o) || s), o;
                };
                return (n.cache = new (Co.Cache || Pn)()), n;
              }
              function ko(t) {
                if ('function' != typeof t) throw new _t(r);
                return function () {
                  var e = arguments;
                  switch (e.length) {
                    case 0:
                      return !t.call(this);
                    case 1:
                      return !t.call(this, e[0]);
                    case 2:
                      return !t.call(this, e[0], e[1]);
                    case 3:
                      return !t.call(this, e[0], e[1], e[2]);
                  }
                  return !t.apply(this, e);
                };
              }
              Co.Cache = Pn;
              var Oo = or(function (t, e) {
                  var n = (e = 1 == e.length && Ro(e[0]) ? ue(e[0], Ee(Xr())) : ue(ri(e, 1), Ee(Xr()))).length;
                  return Fi(function (i) {
                    for (var r = -1, s = on(i.length, n); ++r < s; ) i[r] = e[r].call(this, i[r]);
                    return ne(t, this, i);
                  });
                }),
                So = Fi(function (t, e) {
                  return Nr(t, 32, void 0, e, Le(e, Gr(So)));
                }),
                Eo = Fi(function (t, e) {
                  return Nr(t, 64, void 0, e, Le(e, Gr(Eo)));
                }),
                To = Br(function (t, e) {
                  return Nr(t, 256, void 0, void 0, void 0, e);
                });
              function Io(t, e) {
                return t === e || (t != t && e != e);
              }
              var Ao = jr(pi),
                Do = jr(function (t, e) {
                  return t >= e;
                }),
                jo = _i(
                  (function () {
                    return arguments;
                  })()
                )
                  ? _i
                  : function (t) {
                      return Wo(t) && Ct.call(t, 'callee') && !Xt.call(t, 'callee');
                    },
                Ro = i.isArray,
                Po = Yt
                  ? Ee(Yt)
                  : function (t) {
                      return Wo(t) && di(t) == x;
                    };
              function Mo(t) {
                return null != t && Bo(t.length) && !Ho(t);
              }
              function Fo(t) {
                return Wo(t) && Mo(t);
              }
              var No = tn || sc,
                Vo = Zt
                  ? Ee(Zt)
                  : function (t) {
                      return Wo(t) && di(t) == u;
                    };
              function Lo(t) {
                if (!Wo(t)) return !1;
                var e = di(t);
                return (
                  e == h ||
                  '[object DOMException]' == e ||
                  ('string' == typeof t.message && 'string' == typeof t.name && !Go(t))
                );
              }
              function Ho(t) {
                if (!Uo(t)) return !1;
                var e = di(t);
                return e == d || e == p || '[object AsyncFunction]' == e || '[object Proxy]' == e;
              }
              function zo(t) {
                return 'number' == typeof t && t == ia(t);
              }
              function Bo(t) {
                return 'number' == typeof t && t > -1 && t % 1 == 0 && t <= 9007199254740991;
              }
              function Uo(t) {
                var e = typeof t;
                return null != t && ('object' == e || 'function' == e);
              }
              function Wo(t) {
                return null != t && 'object' == typeof t;
              }
              var $o = Qt
                ? Ee(Qt)
                : function (t) {
                    return Wo(t) && ts(t) == f;
                  };
              function qo(t) {
                return 'number' == typeof t || (Wo(t) && di(t) == m);
              }
              function Go(t) {
                if (!Wo(t) || di(t) != g) return !1;
                var e = $t(t);
                if (null === e) return !0;
                var n = Ct.call(e, 'constructor') && e.constructor;
                return 'function' == typeof n && n instanceof n && xt.call(n) == Et;
              }
              var Xo = Jt
                  ? Ee(Jt)
                  : function (t) {
                      return Wo(t) && di(t) == b;
                    },
                Ko = te
                  ? Ee(te)
                  : function (t) {
                      return Wo(t) && ts(t) == _;
                    };
              function Yo(t) {
                return 'string' == typeof t || (!Ro(t) && Wo(t) && di(t) == y);
              }
              function Zo(t) {
                return 'symbol' == typeof t || (Wo(t) && di(t) == v);
              }
              var Qo = ee
                  ? Ee(ee)
                  : function (t) {
                      return Wo(t) && Bo(t.length) && !!Nt[di(t)];
                    },
                Jo = jr(ki),
                ta = jr(function (t, e) {
                  return t <= e;
                });
              function ea(t) {
                if (!t) return [];
                if (Mo(t)) return Yo(t) ? Ue(t) : mr(t);
                if (Ce && t[Ce])
                  return (function (t) {
                    for (var e, n = []; !(e = t.next()).done; ) n.push(e.value);
                    return n;
                  })(t[Ce]());
                var e = ts(t);
                return (e == f ? Ne : e == _ ? He : Ia)(t);
              }
              function na(t) {
                return t
                  ? (t = sa(t)) === 1 / 0 || t === -1 / 0
                    ? 17976931348623157e292 * (t < 0 ? -1 : 1)
                    : t == t
                    ? t
                    : 0
                  : 0 === t
                  ? t
                  : 0;
              }
              function ia(t) {
                var e = na(t),
                  n = e % 1;
                return e == e ? (n ? e - n : e) : 0;
              }
              function ra(t) {
                return t ? Xn(ia(t), 0, 4294967295) : 0;
              }
              function sa(t) {
                if ('number' == typeof t) return t;
                if (Zo(t)) return NaN;
                if (Uo(t)) {
                  var e = 'function' == typeof t.valueOf ? t.valueOf() : t;
                  t = Uo(e) ? e + '' : e;
                }
                if ('string' != typeof t) return 0 === t ? t : +t;
                t = t.replace(G, '');
                var n = rt.test(t);
                return n || ot.test(t) ? zt(t.slice(2), n ? 2 : 8) : it.test(t) ? NaN : +t;
              }
              function oa(t) {
                return gr(t, wa(t));
              }
              function aa(t) {
                return null == t ? '' : Ki(t);
              }
              var ca = _r(function (t, e) {
                  if (ls(e) || Mo(e)) gr(e, va(e), t);
                  else for (var n in e) Ct.call(e, n) && Bn(t, n, e[n]);
                }),
                la = _r(function (t, e) {
                  gr(e, wa(e), t);
                }),
                ua = _r(function (t, e, n, i) {
                  gr(e, wa(e), t, i);
                }),
                ha = _r(function (t, e, n, i) {
                  gr(e, va(e), t, i);
                }),
                da = Br(Gn),
                pa = Fi(function (t, e) {
                  t = mt(t);
                  var n = -1,
                    i = e.length,
                    r = i > 2 ? e[2] : void 0;
                  for (r && ss(e[0], e[1], r) && (i = 1); ++n < i; )
                    for (var s = e[n], o = wa(s), a = -1, c = o.length; ++a < c; ) {
                      var l = o[a],
                        u = t[l];
                      (void 0 === u || (Io(u, vt[l]) && !Ct.call(t, l))) && (t[l] = s[l]);
                    }
                  return t;
                }),
                fa = Fi(function (t) {
                  return t.push(void 0, Lr), ne(Ca, void 0, t);
                });
              function ma(t, e, n) {
                var i = null == t ? void 0 : ui(t, e);
                return void 0 === i ? n : i;
              }
              function ga(t, e) {
                return null != t && es(t, e, mi);
              }
              var ba = Er(function (t, e, n) {
                  null != e && 'function' != typeof e.toString && (e = St.call(e)), (t[e] = n);
                }, Ua(qa)),
                _a = Er(function (t, e, n) {
                  null != e && 'function' != typeof e.toString && (e = St.call(e)),
                    Ct.call(t, e) ? t[e].push(n) : (t[e] = [n]);
                }, Xr),
                ya = Fi(bi);
              function va(t) {
                return Mo(t) ? Nn(t) : Ci(t);
              }
              function wa(t) {
                return Mo(t)
                  ? Nn(t, !0)
                  : (function (t) {
                      if (!Uo(t))
                        return (function (t) {
                          var e = [];
                          if (null != t) for (var n in mt(t)) e.push(n);
                          return e;
                        })(t);
                      var e = ls(t),
                        n = [];
                      for (var i in t) ('constructor' != i || (!e && Ct.call(t, i))) && n.push(i);
                      return n;
                    })(t);
              }
              var xa = _r(function (t, e, n) {
                  Ti(t, e, n);
                }),
                Ca = _r(function (t, e, n, i) {
                  Ti(t, e, n, i);
                }),
                ka = Br(function (t, e) {
                  var n = {};
                  if (null == t) return n;
                  var i = !1;
                  (e = ue(e, function (e) {
                    return (e = sr(e, t)), i || (i = e.length > 1), e;
                  })),
                    gr(t, Wr(t), n),
                    i && (n = Kn(n, 7, Hr));
                  for (var r = e.length; r--; ) Zi(n, e[r]);
                  return n;
                }),
                Oa = Br(function (t, e) {
                  return null == t
                    ? {}
                    : (function (t, e) {
                        return Di(t, e, function (e, n) {
                          return ga(t, n);
                        });
                      })(t, e);
                });
              function Sa(t, e) {
                if (null == t) return {};
                var n = ue(Wr(t), function (t) {
                  return [t];
                });
                return (
                  (e = Xr(e)),
                  Di(t, n, function (t, n) {
                    return e(t, n[0]);
                  })
                );
              }
              var Ea = Fr(va),
                Ta = Fr(wa);
              function Ia(t) {
                return null == t ? [] : Te(t, va(t));
              }
              var Aa = xr(function (t, e, n) {
                return (e = e.toLowerCase()), t + (n ? Da(e) : e);
              });
              function Da(t) {
                return La(aa(t).toLowerCase());
              }
              function ja(t) {
                return (t = aa(t)) && t.replace(ct, Re).replace(At, '');
              }
              var Ra = xr(function (t, e, n) {
                  return t + (n ? '-' : '') + e.toLowerCase();
                }),
                Pa = xr(function (t, e, n) {
                  return t + (n ? ' ' : '') + e.toLowerCase();
                }),
                Ma = wr('toLowerCase'),
                Fa = xr(function (t, e, n) {
                  return t + (n ? '_' : '') + e.toLowerCase();
                }),
                Na = xr(function (t, e, n) {
                  return t + (n ? ' ' : '') + La(e);
                }),
                Va = xr(function (t, e, n) {
                  return t + (n ? ' ' : '') + e.toUpperCase();
                }),
                La = wr('toUpperCase');
              function Ha(t, e, n) {
                return (
                  (t = aa(t)),
                  void 0 === (e = n ? void 0 : e)
                    ? (function (t) {
                        return Pt.test(t);
                      })(t)
                      ? (function (t) {
                          return t.match(jt) || [];
                        })(t)
                      : (function (t) {
                          return t.match(J) || [];
                        })(t)
                    : t.match(e) || []
                );
              }
              var za = Fi(function (t, e) {
                  try {
                    return ne(t, void 0, e);
                  } catch (n) {
                    return Lo(n) ? n : new dt(n);
                  }
                }),
                Ba = Br(function (t, e) {
                  return (
                    re(e, function (e) {
                      (e = Os(e)), qn(t, e, _o(t[e], t));
                    }),
                    t
                  );
                });
              function Ua(t) {
                return function () {
                  return t;
                };
              }
              var Wa = Or(),
                $a = Or(!0);
              function qa(t) {
                return t;
              }
              function Ga(t) {
                return xi('function' == typeof t ? t : Kn(t, 1));
              }
              var Xa = Fi(function (t, e) {
                  return function (n) {
                    return bi(n, t, e);
                  };
                }),
                Ka = Fi(function (t, e) {
                  return function (n) {
                    return bi(t, n, e);
                  };
                });
              function Ya(t, e, n) {
                var i = va(e),
                  r = li(e, i);
                null != n || (Uo(e) && (r.length || !i.length)) || ((n = e), (e = t), (t = this), (r = li(e, va(e))));
                var s = !(Uo(n) && 'chain' in n && !n.chain),
                  o = Ho(t);
                return (
                  re(r, function (n) {
                    var i = e[n];
                    (t[n] = i),
                      o &&
                        (t.prototype[n] = function () {
                          var e = this.__chain__;
                          if (s || e) {
                            var n = t(this.__wrapped__),
                              r = (n.__actions__ = mr(this.__actions__));
                            return r.push({ func: i, args: arguments, thisArg: t }), (n.__chain__ = e), n;
                          }
                          return i.apply(t, he([this.value()], arguments));
                        });
                  }),
                  t
                );
              }
              function Za() {}
              var Qa = Ir(ue),
                Ja = Ir(oe),
                tc = Ir(fe);
              function ec(t) {
                return os(t)
                  ? xe(Os(t))
                  : (function (t) {
                      return function (e) {
                        return ui(e, t);
                      };
                    })(t);
              }
              var nc = Dr(),
                ic = Dr(!0);
              function rc() {
                return [];
              }
              function sc() {
                return !1;
              }
              var oc,
                ac = Tr(function (t, e) {
                  return t + e;
                }, 0),
                cc = Pr('ceil'),
                lc = Tr(function (t, e) {
                  return t / e;
                }, 1),
                uc = Pr('floor'),
                hc = Tr(function (t, e) {
                  return t * e;
                }, 1),
                dc = Pr('round'),
                pc = Tr(function (t, e) {
                  return t - e;
                }, 0);
              return (
                (En.after = function (t, e) {
                  if ('function' != typeof e) throw new _t(r);
                  return (
                    (t = ia(t)),
                    function () {
                      if (--t < 1) return e.apply(this, arguments);
                    }
                  );
                }),
                (En.ary = go),
                (En.assign = ca),
                (En.assignIn = la),
                (En.assignInWith = ua),
                (En.assignWith = ha),
                (En.at = da),
                (En.before = bo),
                (En.bind = _o),
                (En.bindAll = Ba),
                (En.bindKey = yo),
                (En.castArray = function () {
                  if (!arguments.length) return [];
                  var t = arguments[0];
                  return Ro(t) ? t : [t];
                }),
                (En.chain = to),
                (En.chunk = function (t, e, n) {
                  e = (n ? ss(t, e, n) : void 0 === e) ? 1 : sn(ia(e), 0);
                  var r = null == t ? 0 : t.length;
                  if (!r || e < 1) return [];
                  for (var s = 0, o = 0, a = i(Ze(r / e)); s < r; ) a[o++] = Ui(t, s, (s += e));
                  return a;
                }),
                (En.compact = function (t) {
                  for (var e = -1, n = null == t ? 0 : t.length, i = 0, r = []; ++e < n; ) {
                    var s = t[e];
                    s && (r[i++] = s);
                  }
                  return r;
                }),
                (En.concat = function () {
                  var t = arguments.length;
                  if (!t) return [];
                  for (var e = i(t - 1), n = arguments[0], r = t; r--; ) e[r - 1] = arguments[r];
                  return he(Ro(n) ? mr(n) : [n], ri(e, 1));
                }),
                (En.cond = function (t) {
                  var e = null == t ? 0 : t.length,
                    n = Xr();
                  return (
                    (t = e
                      ? ue(t, function (t) {
                          if ('function' != typeof t[1]) throw new _t(r);
                          return [n(t[0]), t[1]];
                        })
                      : []),
                    Fi(function (n) {
                      for (var i = -1; ++i < e; ) {
                        var r = t[i];
                        if (ne(r[0], this, n)) return ne(r[1], this, n);
                      }
                    })
                  );
                }),
                (En.conforms = function (t) {
                  return (function (t) {
                    var e = va(t);
                    return function (n) {
                      return Yn(n, t, e);
                    };
                  })(Kn(t, 1));
                }),
                (En.constant = Ua),
                (En.countBy = io),
                (En.create = function (t, e) {
                  var n = Tn(t);
                  return null == e ? n : $n(n, e);
                }),
                (En.curry = function t(e, n, i) {
                  var r = Nr(e, 8, void 0, void 0, void 0, void 0, void 0, (n = i ? void 0 : n));
                  return (r.placeholder = t.placeholder), r;
                }),
                (En.curryRight = function t(e, n, i) {
                  var r = Nr(e, 16, void 0, void 0, void 0, void 0, void 0, (n = i ? void 0 : n));
                  return (r.placeholder = t.placeholder), r;
                }),
                (En.debounce = vo),
                (En.defaults = pa),
                (En.defaultsDeep = fa),
                (En.defer = wo),
                (En.delay = xo),
                (En.difference = Ts),
                (En.differenceBy = Is),
                (En.differenceWith = As),
                (En.drop = function (t, e, n) {
                  var i = null == t ? 0 : t.length;
                  return i ? Ui(t, (e = n || void 0 === e ? 1 : ia(e)) < 0 ? 0 : e, i) : [];
                }),
                (En.dropRight = function (t, e, n) {
                  var i = null == t ? 0 : t.length;
                  return i ? Ui(t, 0, (e = i - (e = n || void 0 === e ? 1 : ia(e))) < 0 ? 0 : e) : [];
                }),
                (En.dropRightWhile = function (t, e) {
                  return t && t.length ? Ji(t, Xr(e, 3), !0, !0) : [];
                }),
                (En.dropWhile = function (t, e) {
                  return t && t.length ? Ji(t, Xr(e, 3), !0) : [];
                }),
                (En.fill = function (t, e, n, i) {
                  var r = null == t ? 0 : t.length;
                  return r
                    ? (n && 'number' != typeof n && ss(t, e, n) && ((n = 0), (i = r)),
                      (function (t, e, n, i) {
                        var r = t.length;
                        for (
                          (n = ia(n)) < 0 && (n = -n > r ? 0 : r + n),
                            (i = void 0 === i || i > r ? r : ia(i)) < 0 && (i += r),
                            i = n > i ? 0 : ra(i);
                          n < i;

                        )
                          t[n++] = e;
                        return t;
                      })(t, e, n, i))
                    : [];
                }),
                (En.filter = function (t, e) {
                  return (Ro(t) ? ae : ii)(t, Xr(e, 3));
                }),
                (En.flatMap = function (t, e) {
                  return ri(ho(t, e), 1);
                }),
                (En.flatMapDeep = function (t, e) {
                  return ri(ho(t, e), 1 / 0);
                }),
                (En.flatMapDepth = function (t, e, n) {
                  return (n = void 0 === n ? 1 : ia(n)), ri(ho(t, e), n);
                }),
                (En.flatten = Rs),
                (En.flattenDeep = function (t) {
                  return null != t && t.length ? ri(t, 1 / 0) : [];
                }),
                (En.flattenDepth = function (t, e) {
                  return null != t && t.length ? ri(t, (e = void 0 === e ? 1 : ia(e))) : [];
                }),
                (En.flip = function (t) {
                  return Nr(t, 512);
                }),
                (En.flow = Wa),
                (En.flowRight = $a),
                (En.fromPairs = function (t) {
                  for (var e = -1, n = null == t ? 0 : t.length, i = {}; ++e < n; ) {
                    var r = t[e];
                    i[r[0]] = r[1];
                  }
                  return i;
                }),
                (En.functions = function (t) {
                  return null == t ? [] : li(t, va(t));
                }),
                (En.functionsIn = function (t) {
                  return null == t ? [] : li(t, wa(t));
                }),
                (En.groupBy = co),
                (En.initial = function (t) {
                  return null != t && t.length ? Ui(t, 0, -1) : [];
                }),
                (En.intersection = Ms),
                (En.intersectionBy = Fs),
                (En.intersectionWith = Ns),
                (En.invert = ba),
                (En.invertBy = _a),
                (En.invokeMap = lo),
                (En.iteratee = Ga),
                (En.keyBy = uo),
                (En.keys = va),
                (En.keysIn = wa),
                (En.map = ho),
                (En.mapKeys = function (t, e) {
                  var n = {};
                  return (
                    (e = Xr(e, 3)),
                    ai(t, function (t, i, r) {
                      qn(n, e(t, i, r), t);
                    }),
                    n
                  );
                }),
                (En.mapValues = function (t, e) {
                  var n = {};
                  return (
                    (e = Xr(e, 3)),
                    ai(t, function (t, i, r) {
                      qn(n, i, e(t, i, r));
                    }),
                    n
                  );
                }),
                (En.matches = function (t) {
                  return Si(Kn(t, 1));
                }),
                (En.matchesProperty = function (t, e) {
                  return Ei(t, Kn(e, 1));
                }),
                (En.memoize = Co),
                (En.merge = xa),
                (En.mergeWith = Ca),
                (En.method = Xa),
                (En.methodOf = Ka),
                (En.mixin = Ya),
                (En.negate = ko),
                (En.nthArg = function (t) {
                  return (
                    (t = ia(t)),
                    Fi(function (e) {
                      return Ii(e, t);
                    })
                  );
                }),
                (En.omit = ka),
                (En.omitBy = function (t, e) {
                  return Sa(t, ko(Xr(e)));
                }),
                (En.once = function (t) {
                  return bo(2, t);
                }),
                (En.orderBy = function (t, e, n, i) {
                  return null == t
                    ? []
                    : (Ro(e) || (e = null == e ? [] : [e]),
                      Ro((n = i ? void 0 : n)) || (n = null == n ? [] : [n]),
                      Ai(t, e, n));
                }),
                (En.over = Qa),
                (En.overArgs = Oo),
                (En.overEvery = Ja),
                (En.overSome = tc),
                (En.partial = So),
                (En.partialRight = Eo),
                (En.partition = po),
                (En.pick = Oa),
                (En.pickBy = Sa),
                (En.property = ec),
                (En.propertyOf = function (t) {
                  return function (e) {
                    return null == t ? void 0 : ui(t, e);
                  };
                }),
                (En.pull = Ls),
                (En.pullAll = Hs),
                (En.pullAllBy = function (t, e, n) {
                  return t && t.length && e && e.length ? ji(t, e, Xr(n, 2)) : t;
                }),
                (En.pullAllWith = function (t, e, n) {
                  return t && t.length && e && e.length ? ji(t, e, void 0, n) : t;
                }),
                (En.pullAt = zs),
                (En.range = nc),
                (En.rangeRight = ic),
                (En.rearg = To),
                (En.reject = function (t, e) {
                  return (Ro(t) ? ae : ii)(t, ko(Xr(e, 3)));
                }),
                (En.remove = function (t, e) {
                  var n = [];
                  if (!t || !t.length) return n;
                  var i = -1,
                    r = [],
                    s = t.length;
                  for (e = Xr(e, 3); ++i < s; ) {
                    var o = t[i];
                    e(o, i, t) && (n.push(o), r.push(i));
                  }
                  return Ri(t, r), n;
                }),
                (En.rest = function (t, e) {
                  if ('function' != typeof t) throw new _t(r);
                  return Fi(t, (e = void 0 === e ? e : ia(e)));
                }),
                (En.reverse = Bs),
                (En.sampleSize = function (t, e, n) {
                  return (e = (n ? ss(t, e, n) : void 0 === e) ? 1 : ia(e)), (Ro(t) ? Ln : Vi)(t, e);
                }),
                (En.set = function (t, e, n) {
                  return null == t ? t : Li(t, e, n);
                }),
                (En.setWith = function (t, e, n, i) {
                  return (i = 'function' == typeof i ? i : void 0), null == t ? t : Li(t, e, n, i);
                }),
                (En.shuffle = function (t) {
                  return (Ro(t) ? Hn : Bi)(t);
                }),
                (En.slice = function (t, e, n) {
                  var i = null == t ? 0 : t.length;
                  return i
                    ? (n && 'number' != typeof n && ss(t, e, n)
                        ? ((e = 0), (n = i))
                        : ((e = null == e ? 0 : ia(e)), (n = void 0 === n ? i : ia(n))),
                      Ui(t, e, n))
                    : [];
                }),
                (En.sortBy = fo),
                (En.sortedUniq = function (t) {
                  return t && t.length ? Gi(t) : [];
                }),
                (En.sortedUniqBy = function (t, e) {
                  return t && t.length ? Gi(t, Xr(e, 2)) : [];
                }),
                (En.split = function (t, e, n) {
                  return (
                    n && 'number' != typeof n && ss(t, e, n) && (e = n = void 0),
                    (n = void 0 === n ? 4294967295 : n >>> 0)
                      ? (t = aa(t)) && ('string' == typeof e || (null != e && !Xo(e))) && !(e = Ki(e)) && Fe(t)
                        ? ar(Ue(t), 0, n)
                        : t.split(e, n)
                      : []
                  );
                }),
                (En.spread = function (t, e) {
                  if ('function' != typeof t) throw new _t(r);
                  return (
                    (e = null == e ? 0 : sn(ia(e), 0)),
                    Fi(function (n) {
                      var i = n[e],
                        r = ar(n, 0, e);
                      return i && he(r, i), ne(t, this, r);
                    })
                  );
                }),
                (En.tail = function (t) {
                  var e = null == t ? 0 : t.length;
                  return e ? Ui(t, 1, e) : [];
                }),
                (En.take = function (t, e, n) {
                  return t && t.length ? Ui(t, 0, (e = n || void 0 === e ? 1 : ia(e)) < 0 ? 0 : e) : [];
                }),
                (En.takeRight = function (t, e, n) {
                  var i = null == t ? 0 : t.length;
                  return i ? Ui(t, (e = i - (e = n || void 0 === e ? 1 : ia(e))) < 0 ? 0 : e, i) : [];
                }),
                (En.takeRightWhile = function (t, e) {
                  return t && t.length ? Ji(t, Xr(e, 3), !1, !0) : [];
                }),
                (En.takeWhile = function (t, e) {
                  return t && t.length ? Ji(t, Xr(e, 3)) : [];
                }),
                (En.tap = function (t, e) {
                  return e(t), t;
                }),
                (En.throttle = function (t, e, n) {
                  var i = !0,
                    s = !0;
                  if ('function' != typeof t) throw new _t(r);
                  return (
                    Uo(n) && ((i = 'leading' in n ? !!n.leading : i), (s = 'trailing' in n ? !!n.trailing : s)),
                    vo(t, e, { leading: i, maxWait: e, trailing: s })
                  );
                }),
                (En.thru = eo),
                (En.toArray = ea),
                (En.toPairs = Ea),
                (En.toPairsIn = Ta),
                (En.toPath = function (t) {
                  return Ro(t) ? ue(t, Os) : Zo(t) ? [t] : mr(ks(aa(t)));
                }),
                (En.toPlainObject = oa),
                (En.transform = function (t, e, n) {
                  var i = Ro(t),
                    r = i || No(t) || Qo(t);
                  if (((e = Xr(e, 4)), null == n)) {
                    var s = t && t.constructor;
                    n = r ? (i ? new s() : []) : Uo(t) && Ho(s) ? Tn($t(t)) : {};
                  }
                  return (
                    (r ? re : ai)(t, function (t, i, r) {
                      return e(n, t, i, r);
                    }),
                    n
                  );
                }),
                (En.unary = function (t) {
                  return go(t, 1);
                }),
                (En.union = Us),
                (En.unionBy = Ws),
                (En.unionWith = $s),
                (En.uniq = function (t) {
                  return t && t.length ? Yi(t) : [];
                }),
                (En.uniqBy = function (t, e) {
                  return t && t.length ? Yi(t, Xr(e, 2)) : [];
                }),
                (En.uniqWith = function (t, e) {
                  return (e = 'function' == typeof e ? e : void 0), t && t.length ? Yi(t, void 0, e) : [];
                }),
                (En.unset = function (t, e) {
                  return null == t || Zi(t, e);
                }),
                (En.unzip = qs),
                (En.unzipWith = Gs),
                (En.update = function (t, e, n) {
                  return null == t ? t : Qi(t, e, rr(n));
                }),
                (En.updateWith = function (t, e, n, i) {
                  return (i = 'function' == typeof i ? i : void 0), null == t ? t : Qi(t, e, rr(n), i);
                }),
                (En.values = Ia),
                (En.valuesIn = function (t) {
                  return null == t ? [] : Te(t, wa(t));
                }),
                (En.without = Xs),
                (En.words = Ha),
                (En.wrap = function (t, e) {
                  return So(rr(e), t);
                }),
                (En.xor = Ks),
                (En.xorBy = Ys),
                (En.xorWith = Zs),
                (En.zip = Qs),
                (En.zipObject = function (t, e) {
                  return nr(t || [], e || [], Bn);
                }),
                (En.zipObjectDeep = function (t, e) {
                  return nr(t || [], e || [], Li);
                }),
                (En.zipWith = Js),
                (En.entries = Ea),
                (En.entriesIn = Ta),
                (En.extend = la),
                (En.extendWith = ua),
                Ya(En, En),
                (En.add = ac),
                (En.attempt = za),
                (En.camelCase = Aa),
                (En.capitalize = Da),
                (En.ceil = cc),
                (En.clamp = function (t, e, n) {
                  return (
                    void 0 === n && ((n = e), (e = void 0)),
                    void 0 !== n && (n = (n = sa(n)) == n ? n : 0),
                    void 0 !== e && (e = (e = sa(e)) == e ? e : 0),
                    Xn(sa(t), e, n)
                  );
                }),
                (En.clone = function (t) {
                  return Kn(t, 4);
                }),
                (En.cloneDeep = function (t) {
                  return Kn(t, 5);
                }),
                (En.cloneDeepWith = function (t, e) {
                  return Kn(t, 5, (e = 'function' == typeof e ? e : void 0));
                }),
                (En.cloneWith = function (t, e) {
                  return Kn(t, 4, (e = 'function' == typeof e ? e : void 0));
                }),
                (En.conformsTo = function (t, e) {
                  return null == e || Yn(t, e, va(e));
                }),
                (En.deburr = ja),
                (En.defaultTo = function (t, e) {
                  return null == t || t != t ? e : t;
                }),
                (En.divide = lc),
                (En.endsWith = function (t, e, n) {
                  (t = aa(t)), (e = Ki(e));
                  var i = t.length,
                    r = (n = void 0 === n ? i : Xn(ia(n), 0, i));
                  return (n -= e.length) >= 0 && t.slice(n, r) == e;
                }),
                (En.eq = Io),
                (En.escape = function (t) {
                  return (t = aa(t)) && V.test(t) ? t.replace(F, Pe) : t;
                }),
                (En.escapeRegExp = function (t) {
                  return (t = aa(t)) && q.test(t) ? t.replace($, '\\$&') : t;
                }),
                (En.every = function (t, e, n) {
                  var i = Ro(t) ? oe : ei;
                  return n && ss(t, e, n) && (e = void 0), i(t, Xr(e, 3));
                }),
                (En.find = ro),
                (En.findIndex = Ds),
                (En.findKey = function (t, e) {
                  return ge(t, Xr(e, 3), ai);
                }),
                (En.findLast = so),
                (En.findLastIndex = js),
                (En.findLastKey = function (t, e) {
                  return ge(t, Xr(e, 3), ci);
                }),
                (En.floor = uc),
                (En.forEach = oo),
                (En.forEachRight = ao),
                (En.forIn = function (t, e) {
                  return null == t ? t : si(t, Xr(e, 3), wa);
                }),
                (En.forInRight = function (t, e) {
                  return null == t ? t : oi(t, Xr(e, 3), wa);
                }),
                (En.forOwn = function (t, e) {
                  return t && ai(t, Xr(e, 3));
                }),
                (En.forOwnRight = function (t, e) {
                  return t && ci(t, Xr(e, 3));
                }),
                (En.get = ma),
                (En.gt = Ao),
                (En.gte = Do),
                (En.has = function (t, e) {
                  return null != t && es(t, e, fi);
                }),
                (En.hasIn = ga),
                (En.head = Ps),
                (En.identity = qa),
                (En.includes = function (t, e, n, i) {
                  (t = Mo(t) ? t : Ia(t)), (n = n && !i ? ia(n) : 0);
                  var r = t.length;
                  return n < 0 && (n = sn(r + n, 0)), Yo(t) ? n <= r && t.indexOf(e, n) > -1 : !!r && _e(t, e, n) > -1;
                }),
                (En.indexOf = function (t, e, n) {
                  var i = null == t ? 0 : t.length;
                  if (!i) return -1;
                  var r = null == n ? 0 : ia(n);
                  return r < 0 && (r = sn(i + r, 0)), _e(t, e, r);
                }),
                (En.inRange = function (t, e, n) {
                  return (
                    (e = na(e)),
                    void 0 === n ? ((n = e), (e = 0)) : (n = na(n)),
                    (function (t, e, n) {
                      return t >= on(e, n) && t < sn(e, n);
                    })((t = sa(t)), e, n)
                  );
                }),
                (En.invoke = ya),
                (En.isArguments = jo),
                (En.isArray = Ro),
                (En.isArrayBuffer = Po),
                (En.isArrayLike = Mo),
                (En.isArrayLikeObject = Fo),
                (En.isBoolean = function (t) {
                  return !0 === t || !1 === t || (Wo(t) && di(t) == l);
                }),
                (En.isBuffer = No),
                (En.isDate = Vo),
                (En.isElement = function (t) {
                  return Wo(t) && 1 === t.nodeType && !Go(t);
                }),
                (En.isEmpty = function (t) {
                  if (null == t) return !0;
                  if (
                    Mo(t) &&
                    (Ro(t) || 'string' == typeof t || 'function' == typeof t.splice || No(t) || Qo(t) || jo(t))
                  )
                    return !t.length;
                  var e = ts(t);
                  if (e == f || e == _) return !t.size;
                  if (ls(t)) return !Ci(t).length;
                  for (var n in t) if (Ct.call(t, n)) return !1;
                  return !0;
                }),
                (En.isEqual = function (t, e) {
                  return yi(t, e);
                }),
                (En.isEqualWith = function (t, e, n) {
                  var i = (n = 'function' == typeof n ? n : void 0) ? n(t, e) : void 0;
                  return void 0 === i ? yi(t, e, void 0, n) : !!i;
                }),
                (En.isError = Lo),
                (En.isFinite = function (t) {
                  return 'number' == typeof t && en(t);
                }),
                (En.isFunction = Ho),
                (En.isInteger = zo),
                (En.isLength = Bo),
                (En.isMap = $o),
                (En.isMatch = function (t, e) {
                  return t === e || vi(t, e, Yr(e));
                }),
                (En.isMatchWith = function (t, e, n) {
                  return (n = 'function' == typeof n ? n : void 0), vi(t, e, Yr(e), n);
                }),
                (En.isNaN = function (t) {
                  return qo(t) && t != +t;
                }),
                (En.isNative = function (t) {
                  if (cs(t)) throw new dt('Unsupported core-js use. Try https://npms.io/search?q=ponyfill.');
                  return wi(t);
                }),
                (En.isNil = function (t) {
                  return null == t;
                }),
                (En.isNull = function (t) {
                  return null === t;
                }),
                (En.isNumber = qo),
                (En.isObject = Uo),
                (En.isObjectLike = Wo),
                (En.isPlainObject = Go),
                (En.isRegExp = Xo),
                (En.isSafeInteger = function (t) {
                  return zo(t) && t >= -9007199254740991 && t <= 9007199254740991;
                }),
                (En.isSet = Ko),
                (En.isString = Yo),
                (En.isSymbol = Zo),
                (En.isTypedArray = Qo),
                (En.isUndefined = function (t) {
                  return void 0 === t;
                }),
                (En.isWeakMap = function (t) {
                  return Wo(t) && ts(t) == w;
                }),
                (En.isWeakSet = function (t) {
                  return Wo(t) && '[object WeakSet]' == di(t);
                }),
                (En.join = function (t, e) {
                  return null == t ? '' : nn.call(t, e);
                }),
                (En.kebabCase = Ra),
                (En.last = Vs),
                (En.lastIndexOf = function (t, e, n) {
                  var i = null == t ? 0 : t.length;
                  if (!i) return -1;
                  var r = i;
                  return (
                    void 0 !== n && (r = (r = ia(n)) < 0 ? sn(i + r, 0) : on(r, i - 1)),
                    e == e
                      ? (function (t, e, n) {
                          for (var i = n + 1; i--; ) if (t[i] === e) return i;
                          return i;
                        })(t, e, r)
                      : be(t, ve, r, !0)
                  );
                }),
                (En.lowerCase = Pa),
                (En.lowerFirst = Ma),
                (En.lt = Jo),
                (En.lte = ta),
                (En.max = function (t) {
                  return t && t.length ? ni(t, qa, pi) : void 0;
                }),
                (En.maxBy = function (t, e) {
                  return t && t.length ? ni(t, Xr(e, 2), pi) : void 0;
                }),
                (En.mean = function (t) {
                  return we(t, qa);
                }),
                (En.meanBy = function (t, e) {
                  return we(t, Xr(e, 2));
                }),
                (En.min = function (t) {
                  return t && t.length ? ni(t, qa, ki) : void 0;
                }),
                (En.minBy = function (t, e) {
                  return t && t.length ? ni(t, Xr(e, 2), ki) : void 0;
                }),
                (En.stubArray = rc),
                (En.stubFalse = sc),
                (En.stubObject = function () {
                  return {};
                }),
                (En.stubString = function () {
                  return '';
                }),
                (En.stubTrue = function () {
                  return !0;
                }),
                (En.multiply = hc),
                (En.nth = function (t, e) {
                  return t && t.length ? Ii(t, ia(e)) : void 0;
                }),
                (En.noConflict = function () {
                  return Wt._ === this && (Wt._ = Tt), this;
                }),
                (En.noop = Za),
                (En.now = mo),
                (En.pad = function (t, e, n) {
                  t = aa(t);
                  var i = (e = ia(e)) ? Be(t) : 0;
                  if (!e || i >= e) return t;
                  var r = (e - i) / 2;
                  return Ar(Qe(r), n) + t + Ar(Ze(r), n);
                }),
                (En.padEnd = function (t, e, n) {
                  t = aa(t);
                  var i = (e = ia(e)) ? Be(t) : 0;
                  return e && i < e ? t + Ar(e - i, n) : t;
                }),
                (En.padStart = function (t, e, n) {
                  t = aa(t);
                  var i = (e = ia(e)) ? Be(t) : 0;
                  return e && i < e ? Ar(e - i, n) + t : t;
                }),
                (En.parseInt = function (t, e, n) {
                  return n || null == e ? (e = 0) : e && (e = +e), cn(aa(t).replace(X, ''), e || 0);
                }),
                (En.random = function (t, e, n) {
                  if (
                    (n && 'boolean' != typeof n && ss(t, e, n) && (e = n = void 0),
                    void 0 === n &&
                      ('boolean' == typeof e
                        ? ((n = e), (e = void 0))
                        : 'boolean' == typeof t && ((n = t), (t = void 0))),
                    void 0 === t && void 0 === e
                      ? ((t = 0), (e = 1))
                      : ((t = na(t)), void 0 === e ? ((e = t), (t = 0)) : (e = na(e))),
                    t > e)
                  ) {
                    var i = t;
                    (t = e), (e = i);
                  }
                  if (n || t % 1 || e % 1) {
                    var r = ln();
                    return on(t + r * (e - t + Ht('1e-' + ((r + '').length - 1))), e);
                  }
                  return Pi(t, e);
                }),
                (En.reduce = function (t, e, n) {
                  var i = Ro(t) ? de : ke,
                    r = arguments.length < 3;
                  return i(t, Xr(e, 4), n, r, Jn);
                }),
                (En.reduceRight = function (t, e, n) {
                  var i = Ro(t) ? pe : ke,
                    r = arguments.length < 3;
                  return i(t, Xr(e, 4), n, r, ti);
                }),
                (En.repeat = function (t, e, n) {
                  return (e = (n ? ss(t, e, n) : void 0 === e) ? 1 : ia(e)), Mi(aa(t), e);
                }),
                (En.replace = function () {
                  var t = arguments,
                    e = aa(t[0]);
                  return t.length < 3 ? e : e.replace(t[1], t[2]);
                }),
                (En.result = function (t, e, n) {
                  var i = -1,
                    r = (e = sr(e, t)).length;
                  for (r || ((r = 1), (t = void 0)); ++i < r; ) {
                    var s = null == t ? void 0 : t[Os(e[i])];
                    void 0 === s && ((i = r), (s = n)), (t = Ho(s) ? s.call(t) : s);
                  }
                  return t;
                }),
                (En.round = dc),
                (En.runInContext = t),
                (En.sample = function (t) {
                  return (Ro(t) ? Vn : Ni)(t);
                }),
                (En.size = function (t) {
                  if (null == t) return 0;
                  if (Mo(t)) return Yo(t) ? Be(t) : t.length;
                  var e = ts(t);
                  return e == f || e == _ ? t.size : Ci(t).length;
                }),
                (En.snakeCase = Fa),
                (En.some = function (t, e, n) {
                  var i = Ro(t) ? fe : Wi;
                  return n && ss(t, e, n) && (e = void 0), i(t, Xr(e, 3));
                }),
                (En.sortedIndex = function (t, e) {
                  return $i(t, e);
                }),
                (En.sortedIndexBy = function (t, e, n) {
                  return qi(t, e, Xr(n, 2));
                }),
                (En.sortedIndexOf = function (t, e) {
                  var n = null == t ? 0 : t.length;
                  if (n) {
                    var i = $i(t, e);
                    if (i < n && Io(t[i], e)) return i;
                  }
                  return -1;
                }),
                (En.sortedLastIndex = function (t, e) {
                  return $i(t, e, !0);
                }),
                (En.sortedLastIndexBy = function (t, e, n) {
                  return qi(t, e, Xr(n, 2), !0);
                }),
                (En.sortedLastIndexOf = function (t, e) {
                  if (null != t && t.length) {
                    var n = $i(t, e, !0) - 1;
                    if (Io(t[n], e)) return n;
                  }
                  return -1;
                }),
                (En.startCase = Na),
                (En.startsWith = function (t, e, n) {
                  return (
                    (t = aa(t)),
                    (n = null == n ? 0 : Xn(ia(n), 0, t.length)),
                    (e = Ki(e)),
                    t.slice(n, n + e.length) == e
                  );
                }),
                (En.subtract = pc),
                (En.sum = function (t) {
                  return t && t.length ? Oe(t, qa) : 0;
                }),
                (En.sumBy = function (t, e) {
                  return t && t.length ? Oe(t, Xr(e, 2)) : 0;
                }),
                (En.template = function (t, e, n) {
                  var i = En.templateSettings;
                  n && ss(t, e, n) && (e = void 0), (t = aa(t)), (e = ua({}, e, i, Vr));
                  var r,
                    s,
                    o = ua({}, e.imports, i.imports, Vr),
                    a = va(o),
                    c = Te(o, a),
                    l = 0,
                    u = e.interpolate || lt,
                    h = "__p += '",
                    d = gt(
                      (e.escape || lt).source +
                        '|' +
                        u.source +
                        '|' +
                        (u === z ? et : lt).source +
                        '|' +
                        (e.evaluate || lt).source +
                        '|$',
                      'g'
                    ),
                    p =
                      '//# sourceURL=' +
                      (Ct.call(e, 'sourceURL')
                        ? (e.sourceURL + '').replace(/[\r\n]/g, ' ')
                        : 'lodash.templateSources[' + ++Ft + ']') +
                      '\n';
                  t.replace(d, function (e, n, i, o, a, c) {
                    return (
                      i || (i = o),
                      (h += t.slice(l, c).replace(ut, Me)),
                      n && ((r = !0), (h += "' +\n__e(" + n + ") +\n'")),
                      a && ((s = !0), (h += "';\n" + a + ";\n__p += '")),
                      i && (h += "' +\n((__t = (" + i + ")) == null ? '' : __t) +\n'"),
                      (l = c + e.length),
                      e
                    );
                  }),
                    (h += "';\n");
                  var f = Ct.call(e, 'variable') && e.variable;
                  f || (h = 'with (obj) {\n' + h + '\n}\n'),
                    (h = (s ? h.replace(j, '') : h).replace(R, '$1').replace(P, '$1;')),
                    (h =
                      'function(' +
                      (f || 'obj') +
                      ') {\n' +
                      (f ? '' : 'obj || (obj = {});\n') +
                      "var __t, __p = ''" +
                      (r ? ', __e = _.escape' : '') +
                      (s
                        ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n"
                        : ';\n') +
                      h +
                      'return __p\n}');
                  var m = za(function () {
                    return pt(a, p + 'return ' + h).apply(void 0, c);
                  });
                  if (((m.source = h), Lo(m))) throw m;
                  return m;
                }),
                (En.times = function (t, e) {
                  if ((t = ia(t)) < 1 || t > 9007199254740991) return [];
                  var n = 4294967295,
                    i = on(t, 4294967295);
                  t -= 4294967295;
                  for (var r = Se(i, (e = Xr(e))); ++n < t; ) e(n);
                  return r;
                }),
                (En.toFinite = na),
                (En.toInteger = ia),
                (En.toLength = ra),
                (En.toLower = function (t) {
                  return aa(t).toLowerCase();
                }),
                (En.toNumber = sa),
                (En.toSafeInteger = function (t) {
                  return t ? Xn(ia(t), -9007199254740991, 9007199254740991) : 0 === t ? t : 0;
                }),
                (En.toString = aa),
                (En.toUpper = function (t) {
                  return aa(t).toUpperCase();
                }),
                (En.trim = function (t, e, n) {
                  if ((t = aa(t)) && (n || void 0 === e)) return t.replace(G, '');
                  if (!t || !(e = Ki(e))) return t;
                  var i = Ue(t),
                    r = Ue(e);
                  return ar(i, Ae(i, r), De(i, r) + 1).join('');
                }),
                (En.trimEnd = function (t, e, n) {
                  if ((t = aa(t)) && (n || void 0 === e)) return t.replace(K, '');
                  if (!t || !(e = Ki(e))) return t;
                  var i = Ue(t);
                  return ar(i, 0, De(i, Ue(e)) + 1).join('');
                }),
                (En.trimStart = function (t, e, n) {
                  if ((t = aa(t)) && (n || void 0 === e)) return t.replace(X, '');
                  if (!t || !(e = Ki(e))) return t;
                  var i = Ue(t);
                  return ar(i, Ae(i, Ue(e))).join('');
                }),
                (En.truncate = function (t, e) {
                  var n = 30,
                    i = '...';
                  if (Uo(e)) {
                    var r = 'separator' in e ? e.separator : r;
                    (n = 'length' in e ? ia(e.length) : n), (i = 'omission' in e ? Ki(e.omission) : i);
                  }
                  var s = (t = aa(t)).length;
                  if (Fe(t)) {
                    var o = Ue(t);
                    s = o.length;
                  }
                  if (n >= s) return t;
                  var a = n - Be(i);
                  if (a < 1) return i;
                  var c = o ? ar(o, 0, a).join('') : t.slice(0, a);
                  if (void 0 === r) return c + i;
                  if ((o && (a += c.length - a), Xo(r))) {
                    if (t.slice(a).search(r)) {
                      var l,
                        u = c;
                      for (r.global || (r = gt(r.source, aa(nt.exec(r)) + 'g')), r.lastIndex = 0; (l = r.exec(u)); )
                        var h = l.index;
                      c = c.slice(0, void 0 === h ? a : h);
                    }
                  } else if (t.indexOf(Ki(r), a) != a) {
                    var d = c.lastIndexOf(r);
                    d > -1 && (c = c.slice(0, d));
                  }
                  return c + i;
                }),
                (En.unescape = function (t) {
                  return (t = aa(t)) && N.test(t) ? t.replace(M, We) : t;
                }),
                (En.uniqueId = function (t) {
                  var e = ++kt;
                  return aa(t) + e;
                }),
                (En.upperCase = Va),
                (En.upperFirst = La),
                (En.each = oo),
                (En.eachRight = ao),
                (En.first = Ps),
                Ya(
                  En,
                  ((oc = {}),
                  ai(En, function (t, e) {
                    Ct.call(En.prototype, e) || (oc[e] = t);
                  }),
                  oc),
                  { chain: !1 }
                ),
                (En.VERSION = '4.17.15'),
                re(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (t) {
                  En[t].placeholder = En;
                }),
                re(['drop', 'take'], function (t, e) {
                  (Dn.prototype[t] = function (n) {
                    n = void 0 === n ? 1 : sn(ia(n), 0);
                    var i = this.__filtered__ && !e ? new Dn(this) : this.clone();
                    return (
                      i.__filtered__
                        ? (i.__takeCount__ = on(n, i.__takeCount__))
                        : i.__views__.push({ size: on(n, 4294967295), type: t + (i.__dir__ < 0 ? 'Right' : '') }),
                      i
                    );
                  }),
                    (Dn.prototype[t + 'Right'] = function (e) {
                      return this.reverse()[t](e).reverse();
                    });
                }),
                re(['filter', 'map', 'takeWhile'], function (t, e) {
                  var n = e + 1,
                    i = 1 == n || 3 == n;
                  Dn.prototype[t] = function (t) {
                    var e = this.clone();
                    return (
                      e.__iteratees__.push({ iteratee: Xr(t, 3), type: n }), (e.__filtered__ = e.__filtered__ || i), e
                    );
                  };
                }),
                re(['head', 'last'], function (t, e) {
                  var n = 'take' + (e ? 'Right' : '');
                  Dn.prototype[t] = function () {
                    return this[n](1).value()[0];
                  };
                }),
                re(['initial', 'tail'], function (t, e) {
                  var n = 'drop' + (e ? '' : 'Right');
                  Dn.prototype[t] = function () {
                    return this.__filtered__ ? new Dn(this) : this[n](1);
                  };
                }),
                (Dn.prototype.compact = function () {
                  return this.filter(qa);
                }),
                (Dn.prototype.find = function (t) {
                  return this.filter(t).head();
                }),
                (Dn.prototype.findLast = function (t) {
                  return this.reverse().find(t);
                }),
                (Dn.prototype.invokeMap = Fi(function (t, e) {
                  return 'function' == typeof t
                    ? new Dn(this)
                    : this.map(function (n) {
                        return bi(n, t, e);
                      });
                })),
                (Dn.prototype.reject = function (t) {
                  return this.filter(ko(Xr(t)));
                }),
                (Dn.prototype.slice = function (t, e) {
                  t = ia(t);
                  var n = this;
                  return n.__filtered__ && (t > 0 || e < 0)
                    ? new Dn(n)
                    : (t < 0 ? (n = n.takeRight(-t)) : t && (n = n.drop(t)),
                      void 0 !== e && (n = (e = ia(e)) < 0 ? n.dropRight(-e) : n.take(e - t)),
                      n);
                }),
                (Dn.prototype.takeRightWhile = function (t) {
                  return this.reverse().takeWhile(t).reverse();
                }),
                (Dn.prototype.toArray = function () {
                  return this.take(4294967295);
                }),
                ai(Dn.prototype, function (t, e) {
                  var n = /^(?:filter|find|map|reject)|While$/.test(e),
                    i = /^(?:head|last)$/.test(e),
                    r = En[i ? 'take' + ('last' == e ? 'Right' : '') : e],
                    s = i || /^find/.test(e);
                  r &&
                    (En.prototype[e] = function () {
                      var e = this.__wrapped__,
                        o = i ? [1] : arguments,
                        a = e instanceof Dn,
                        c = o[0],
                        l = a || Ro(e),
                        u = function (t) {
                          var e = r.apply(En, he([t], o));
                          return i && h ? e[0] : e;
                        };
                      l && n && 'function' == typeof c && 1 != c.length && (a = l = !1);
                      var h = this.__chain__,
                        d = !!this.__actions__.length,
                        p = s && !h,
                        f = a && !d;
                      if (!s && l) {
                        e = f ? e : new Dn(this);
                        var m = t.apply(e, o);
                        return m.__actions__.push({ func: eo, args: [u], thisArg: void 0 }), new An(m, h);
                      }
                      return p && f ? t.apply(this, o) : ((m = this.thru(u)), p ? (i ? m.value()[0] : m.value()) : m);
                    });
                }),
                re(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (t) {
                  var e = yt[t],
                    n = /^(?:push|sort|unshift)$/.test(t) ? 'tap' : 'thru',
                    i = /^(?:pop|shift)$/.test(t);
                  En.prototype[t] = function () {
                    var t = arguments;
                    if (i && !this.__chain__) {
                      var r = this.value();
                      return e.apply(Ro(r) ? r : [], t);
                    }
                    return this[n](function (n) {
                      return e.apply(Ro(n) ? n : [], t);
                    });
                  };
                }),
                ai(Dn.prototype, function (t, e) {
                  var n = En[e];
                  if (n) {
                    var i = n.name + '';
                    Ct.call(_n, i) || (_n[i] = []), _n[i].push({ name: e, func: n });
                  }
                }),
                (_n[Sr(void 0, 2).name] = [{ name: 'wrapper', func: void 0 }]),
                (Dn.prototype.clone = function () {
                  var t = new Dn(this.__wrapped__);
                  return (
                    (t.__actions__ = mr(this.__actions__)),
                    (t.__dir__ = this.__dir__),
                    (t.__filtered__ = this.__filtered__),
                    (t.__iteratees__ = mr(this.__iteratees__)),
                    (t.__takeCount__ = this.__takeCount__),
                    (t.__views__ = mr(this.__views__)),
                    t
                  );
                }),
                (Dn.prototype.reverse = function () {
                  if (this.__filtered__) {
                    var t = new Dn(this);
                    (t.__dir__ = -1), (t.__filtered__ = !0);
                  } else (t = this.clone()).__dir__ *= -1;
                  return t;
                }),
                (Dn.prototype.value = function () {
                  var t = this.__wrapped__.value(),
                    e = this.__dir__,
                    n = Ro(t),
                    i = e < 0,
                    r = n ? t.length : 0,
                    s = (function (t, e, n) {
                      for (var i = -1, r = n.length; ++i < r; ) {
                        var s = n[i],
                          o = s.size;
                        switch (s.type) {
                          case 'drop':
                            t += o;
                            break;
                          case 'dropRight':
                            e -= o;
                            break;
                          case 'take':
                            e = on(e, t + o);
                            break;
                          case 'takeRight':
                            t = sn(t, e - o);
                        }
                      }
                      return { start: t, end: e };
                    })(0, r, this.__views__),
                    o = s.start,
                    a = s.end,
                    c = a - o,
                    l = i ? a : o - 1,
                    u = this.__iteratees__,
                    h = u.length,
                    d = 0,
                    p = on(c, this.__takeCount__);
                  if (!n || (!i && r == c && p == c)) return tr(t, this.__actions__);
                  var f = [];
                  t: for (; c-- && d < p; ) {
                    for (var m = -1, g = t[(l += e)]; ++m < h; ) {
                      var b = u[m],
                        _ = b.type,
                        y = (0, b.iteratee)(g);
                      if (2 == _) g = y;
                      else if (!y) {
                        if (1 == _) continue t;
                        break t;
                      }
                    }
                    f[d++] = g;
                  }
                  return f;
                }),
                (En.prototype.at = no),
                (En.prototype.chain = function () {
                  return to(this);
                }),
                (En.prototype.commit = function () {
                  return new An(this.value(), this.__chain__);
                }),
                (En.prototype.next = function () {
                  void 0 === this.__values__ && (this.__values__ = ea(this.value()));
                  var t = this.__index__ >= this.__values__.length;
                  return { done: t, value: t ? void 0 : this.__values__[this.__index__++] };
                }),
                (En.prototype.plant = function (t) {
                  for (var e, n = this; n instanceof In; ) {
                    var i = Es(n);
                    (i.__index__ = 0), (i.__values__ = void 0), e ? (r.__wrapped__ = i) : (e = i);
                    var r = i;
                    n = n.__wrapped__;
                  }
                  return (r.__wrapped__ = t), e;
                }),
                (En.prototype.reverse = function () {
                  var t = this.__wrapped__;
                  if (t instanceof Dn) {
                    var e = t;
                    return (
                      this.__actions__.length && (e = new Dn(this)),
                      (e = e.reverse()).__actions__.push({ func: eo, args: [Bs], thisArg: void 0 }),
                      new An(e, this.__chain__)
                    );
                  }
                  return this.thru(Bs);
                }),
                (En.prototype.toJSON = En.prototype.valueOf = En.prototype.value = function () {
                  return tr(this.__wrapped__, this.__actions__);
                }),
                (En.prototype.first = En.prototype.head),
                Ce &&
                  (En.prototype[Ce] = function () {
                    return this;
                  }),
                En
              );
            })();
          (Wt._ = $e),
            void 0 ===
              (i = function () {
                return $e;
              }.call(e, n, e, t)) || (t.exports = i);
        }.call(this));
      }.call(this, n('YuTi')(t)));
    },
    M2ul: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      }),
        n.d(e, 'c', function () {
          return u;
        }),
        n.d(e, 'b', function () {
          return d;
        });
      var i = n('mrSG'),
        r = n('AcyG'),
        s = n('mxbh'),
        o = n('vD0D'),
        a = n('fXoL');
      let c = (() => {
        let t = class extends o.b {
          login(t) {
            this.ctx.setState(() => t);
          }
          logout() {
            this.ctx.setState(() => null);
          }
        };
        return (
          (t.ɵfac = function (e) {
            return l(e || t);
          }),
          (t.ɵprov = a.Rb({ token: t, factory: t.ɵfac })),
          Object(i.b)([Object(s.b)()], t.prototype, 'login', null),
          Object(i.b)([Object(s.b)()], t.prototype, 'logout', null),
          (t = Object(i.b)([Object(s.d)(), Object(r.d)({ name: 'auth', defaults: null })], t)),
          t
        );
      })();
      const l = a.dc(c);
      let u = (() => {
        let t = class extends o.b {
          set(t, e) {
            return this.ctx.setState((n) => Object.assign(Object.assign({}, n), { [t]: e })), this.getState();
          }
          get(t) {
            return this.getState()[t];
          }
        };
        return (
          (t.ɵfac = function (e) {
            return h(e || t);
          }),
          (t.ɵprov = a.Rb({ token: t, factory: t.ɵfac })),
          Object(i.b)([Object(s.b)()], t.prototype, 'set', null),
          Object(i.b)([Object(s.b)()], t.prototype, 'get', null),
          (t = Object(i.b)(
            [Object(s.d)(), Object(r.d)({ name: 'configs', defaults: { language: 'en', sidenav: !1, token: '' } })],
            t
          )),
          t
        );
      })();
      const h = a.dc(u),
        d = [c, u];
    },
    Mjy2: function (t, e, n) {
      'use strict';
      n.d(e, 'b', function () {
        return i;
      }),
        n.d(e, 'a', function () {
          return r;
        });
      var i = (function (t) {
          return (t.CREATE = 'CREATE'), (t.EDIT = 'EDIT'), t;
        })({}),
        r = (function (t) {
          return (t.CLOSE = 'CLOSE'), (t.DELETE = 'DELETE'), (t.SUBMIT = 'SUBMIT'), t;
        })({});
    },
    MutI: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return p;
      }),
        n.d(e, 'b', function () {
          return f;
        }),
        n.d(e, 'c', function () {
          return h;
        });
      var i = n('ofXK'),
        r = n('fXoL'),
        s = n('FKr1'),
        o = (n('8LU1'), n('XNiG')),
        a = (n('1G5W'), n('JX91'), n('u47x'), n('0EQZ'), n('FtGj'), n('3Pt+'), n('f0Cb'));
      const c = ['*'];
      class l {}
      const u = Object(s.x)(Object(s.w)(l));
      let h = (() => {
        class t extends u {
          constructor() {
            super(...arguments), (this._stateChanges = new o.a());
          }
          ngOnChanges() {
            this._stateChanges.next();
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return d(e || t);
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['mat-nav-list']],
            hostAttrs: ['role', 'navigation', 1, 'mat-nav-list', 'mat-list-base'],
            inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
            exportAs: ['matNavList'],
            features: [r.Fb, r.Gb],
            ngContentSelectors: c,
            decls: 1,
            vars: 0,
            template: function (t, e) {
              1 & t && (r.uc(), r.tc(0));
            },
            styles: [
              '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const d = r.dc(h);
      let p = (() => {
          class t extends u {
            constructor(t) {
              super(),
                (this._elementRef = t),
                (this._stateChanges = new o.a()),
                'action-list' === this._getListType() && t.nativeElement.classList.add('mat-action-list');
            }
            _getListType() {
              const t = this._elementRef.nativeElement.nodeName.toLowerCase();
              return 'mat-list' === t ? 'list' : 'mat-action-list' === t ? 'action-list' : null;
            }
            ngOnChanges() {
              this._stateChanges.next();
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m));
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['mat-list'], ['mat-action-list']],
              hostAttrs: [1, 'mat-list', 'mat-list-base'],
              inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
              exportAs: ['matList'],
              features: [r.Fb, r.Gb],
              ngContentSelectors: c,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (r.uc(), r.tc(0));
              },
              styles: [
                '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        f = (() => {
          class t {}
          return (
            (t.ɵmod = r.Tb({ type: t })),
            (t.ɵinj = r.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[s.i, s.r, s.g, s.p, i.c], s.i, s.g, s.p, a.b],
            })),
            t
          );
        })();
    },
    NFeN: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return R;
      }),
        n.d(e, 'b', function () {
          return P;
        });
      var i = n('fXoL'),
        r = n('FKr1'),
        s = n('8LU1'),
        o = n('ofXK'),
        a = n('LRne'),
        c = n('z6cu'),
        l = n('cp0P'),
        u = n('quSY'),
        h = n('vkgz'),
        d = n('lJxs'),
        p = n('JIr8'),
        f = n('nYR2'),
        m = n('w1tV'),
        g = n('IzEk'),
        b = n('tk/3'),
        _ = n('jhN1');
      const y = ['*'];
      function v(t) {
        return Error(`Unable to find icon with the name "${t}"`);
      }
      function w(t) {
        return Error(
          'The URL provided to MatIconRegistry was not trusted as a resource URL ' +
            `via Angular's DomSanitizer. Attempted URL was "${t}".`
        );
      }
      function x(t) {
        return Error(
          'The literal provided to MatIconRegistry was not trusted as safe HTML by ' +
            `Angular's DomSanitizer. Attempted literal was "${t}".`
        );
      }
      class C {
        constructor(t, e) {
          (this.options = e), t.nodeName ? (this.svgElement = t) : (this.url = t);
        }
      }
      let k = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._httpClient = t),
              (this._sanitizer = e),
              (this._errorHandler = i),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._defaultFontSetClass = 'material-icons'),
              (this._document = n);
          }
          addSvgIcon(t, e, n) {
            return this.addSvgIconInNamespace('', t, e, n);
          }
          addSvgIconLiteral(t, e, n) {
            return this.addSvgIconLiteralInNamespace('', t, e, n);
          }
          addSvgIconInNamespace(t, e, n, i) {
            return this._addSvgIconConfig(t, e, new C(n, i));
          }
          addSvgIconLiteralInNamespace(t, e, n, r) {
            const s = this._sanitizer.sanitize(i.K.HTML, n);
            if (!s) throw x(n);
            const o = this._createSvgElementForSingleIcon(s, r);
            return this._addSvgIconConfig(t, e, new C(o, r));
          }
          addSvgIconSet(t, e) {
            return this.addSvgIconSetInNamespace('', t, e);
          }
          addSvgIconSetLiteral(t, e) {
            return this.addSvgIconSetLiteralInNamespace('', t, e);
          }
          addSvgIconSetInNamespace(t, e, n) {
            return this._addSvgIconSetConfig(t, new C(e, n));
          }
          addSvgIconSetLiteralInNamespace(t, e, n) {
            const r = this._sanitizer.sanitize(i.K.HTML, e);
            if (!r) throw x(e);
            const s = this._svgElementFromString(r);
            return this._addSvgIconSetConfig(t, new C(s, n));
          }
          registerFontClassAlias(t, e = t) {
            return this._fontCssClassesByAlias.set(t, e), this;
          }
          classNameForFontAlias(t) {
            return this._fontCssClassesByAlias.get(t) || t;
          }
          setDefaultFontSetClass(t) {
            return (this._defaultFontSetClass = t), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(t) {
            const e = this._sanitizer.sanitize(i.K.RESOURCE_URL, t);
            if (!e) throw w(t);
            const n = this._cachedIconsByUrl.get(e);
            return n
              ? Object(a.a)(O(n))
              : this._loadSvgIconFromConfig(new C(t)).pipe(
                  Object(h.a)((t) => this._cachedIconsByUrl.set(e, t)),
                  Object(d.a)((t) => O(t))
                );
          }
          getNamedSvgIcon(t, e = '') {
            const n = S(e, t),
              i = this._svgIconConfigs.get(n);
            if (i) return this._getSvgFromConfig(i);
            const r = this._iconSetConfigs.get(e);
            return r ? this._getSvgFromIconSetConfigs(t, r) : Object(c.a)(v(n));
          }
          ngOnDestroy() {
            this._svgIconConfigs.clear(), this._iconSetConfigs.clear(), this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(t) {
            return t.svgElement
              ? Object(a.a)(O(t.svgElement))
              : this._loadSvgIconFromConfig(t).pipe(
                  Object(h.a)((e) => (t.svgElement = e)),
                  Object(d.a)((t) => O(t))
                );
          }
          _getSvgFromIconSetConfigs(t, e) {
            const n = this._extractIconWithNameFromAnySet(t, e);
            if (n) return Object(a.a)(n);
            const r = e
              .filter((t) => !t.svgElement)
              .map((t) =>
                this._loadSvgIconSetFromConfig(t).pipe(
                  Object(p.a)((e) => {
                    const n = `Loading icon set URL: ${this._sanitizer.sanitize(i.K.RESOURCE_URL, t.url)} failed: ${
                      e.message
                    }`;
                    return (
                      this._errorHandler ? this._errorHandler.handleError(new Error(n)) : console.error(n),
                      Object(a.a)(null)
                    );
                  })
                )
              );
            return Object(l.a)(r).pipe(
              Object(d.a)(() => {
                const n = this._extractIconWithNameFromAnySet(t, e);
                if (!n) throw v(t);
                return n;
              })
            );
          }
          _extractIconWithNameFromAnySet(t, e) {
            for (let n = e.length - 1; n >= 0; n--) {
              const i = e[n];
              if (i.svgElement) {
                const e = this._extractSvgIconFromSet(i.svgElement, t, i.options);
                if (e) return e;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(t) {
            return this._fetchUrl(t.url).pipe(Object(d.a)((e) => this._createSvgElementForSingleIcon(e, t.options)));
          }
          _loadSvgIconSetFromConfig(t) {
            return t.svgElement
              ? Object(a.a)(t.svgElement)
              : this._fetchUrl(t.url).pipe(
                  Object(d.a)((e) => (t.svgElement || (t.svgElement = this._svgElementFromString(e)), t.svgElement))
                );
          }
          _createSvgElementForSingleIcon(t, e) {
            const n = this._svgElementFromString(t);
            return this._setSvgAttributes(n, e), n;
          }
          _extractSvgIconFromSet(t, e, n) {
            const i = t.querySelector(`[id="${e}"]`);
            if (!i) return null;
            const r = i.cloneNode(!0);
            if ((r.removeAttribute('id'), 'svg' === r.nodeName.toLowerCase())) return this._setSvgAttributes(r, n);
            if ('symbol' === r.nodeName.toLowerCase()) return this._setSvgAttributes(this._toSvgElement(r), n);
            const s = this._svgElementFromString('<svg></svg>');
            return s.appendChild(r), this._setSvgAttributes(s, n);
          }
          _svgElementFromString(t) {
            const e = this._document.createElement('DIV');
            e.innerHTML = t;
            const n = e.querySelector('svg');
            if (!n) throw Error('<svg> tag not found');
            return n;
          }
          _toSvgElement(t) {
            const e = this._svgElementFromString('<svg></svg>'),
              n = t.attributes;
            for (let i = 0; i < n.length; i++) {
              const { name: t, value: r } = n[i];
              'id' !== t && e.setAttribute(t, r);
            }
            for (let i = 0; i < t.childNodes.length; i++)
              t.childNodes[i].nodeType === this._document.ELEMENT_NODE && e.appendChild(t.childNodes[i].cloneNode(!0));
            return e;
          }
          _setSvgAttributes(t, e) {
            return (
              t.setAttribute('fit', ''),
              t.setAttribute('height', '100%'),
              t.setAttribute('width', '100%'),
              t.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              t.setAttribute('focusable', 'false'),
              e && e.viewBox && t.setAttribute('viewBox', e.viewBox),
              t
            );
          }
          _fetchUrl(t) {
            if (!this._httpClient)
              throw Error(
                'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.'
              );
            if (null == t) throw Error(`Cannot fetch icon from URL "${t}".`);
            const e = this._sanitizer.sanitize(i.K.RESOURCE_URL, t);
            if (!e) throw w(t);
            const n = this._inProgressUrlFetches.get(e);
            if (n) return n;
            const r = this._httpClient.get(e, { responseType: 'text' }).pipe(
              Object(f.a)(() => this._inProgressUrlFetches.delete(e)),
              Object(m.a)()
            );
            return this._inProgressUrlFetches.set(e, r), r;
          }
          _addSvgIconConfig(t, e, n) {
            return this._svgIconConfigs.set(S(t, e), n), this;
          }
          _addSvgIconSetConfig(t, e) {
            const n = this._iconSetConfigs.get(t);
            return n ? n.push(e) : this._iconSetConfigs.set(t, [e]), this;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(b.b, 8), i.fc(_.b), i.fc(o.d, 8), i.fc(i.o, 8));
          }),
          (t.ɵprov = Object(i.Rb)({
            factory: function () {
              return new t(Object(i.fc)(b.b, 8), Object(i.fc)(_.b), Object(i.fc)(o.d, 8), Object(i.fc)(i.o, 8));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function O(t) {
        return t.cloneNode(!0);
      }
      function S(t, e) {
        return t + ':' + e;
      }
      class E {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const T = Object(r.v)(E),
        I = new i.s('mat-icon-location', {
          providedIn: 'root',
          factory: function () {
            const t = Object(i.ab)(o.d),
              e = t ? t.location : null;
            return { getPathname: () => (e ? e.pathname + e.search : '') };
          },
        }),
        A = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        D = A.map((t) => `[${t}]`).join(', '),
        j = /^url\(['"]?#(.*?)['"]?\)$/;
      let R = (() => {
          class t extends T {
            constructor(t, e, n, i, r) {
              super(t),
                (this._iconRegistry = e),
                (this._location = i),
                (this._errorHandler = r),
                (this._inline = !1),
                (this._currentIconFetch = u.a.EMPTY),
                n || t.nativeElement.setAttribute('aria-hidden', 'true');
            }
            get inline() {
              return this._inline;
            }
            set inline(t) {
              this._inline = Object(s.c)(t);
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(t) {
              this._fontSet = this._cleanupFontValue(t);
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(t) {
              this._fontIcon = this._cleanupFontValue(t);
            }
            _splitIconName(t) {
              if (!t) return ['', ''];
              const e = t.split(':');
              switch (e.length) {
                case 1:
                  return ['', e[0]];
                case 2:
                  return e;
                default:
                  throw Error(`Invalid icon name: "${t}"`);
              }
            }
            ngOnChanges(t) {
              const e = t.svgIcon;
              if (e)
                if ((this._currentIconFetch.unsubscribe(), this.svgIcon)) {
                  const [t, e] = this._splitIconName(this.svgIcon);
                  this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(e, t)
                    .pipe(Object(g.a)(1))
                    .subscribe(
                      (t) => this._setSvgElement(t),
                      (n) => {
                        const i = `Error retrieving icon ${t}:${e}! ${n.message}`;
                        this._errorHandler ? this._errorHandler.handleError(new Error(i)) : console.error(i);
                      }
                    );
                } else e.previousValue && this._clearSvgElement();
              this._usingFontIcon() && this._updateFontIconClasses();
            }
            ngOnInit() {
              this._usingFontIcon() && this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const t = this._elementsWithExternalReferences;
              if (t && this._location && t.size) {
                const t = this._location.getPathname();
                t !== this._previousPath && ((this._previousPath = t), this._prependPathToReferences(t));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(t) {
              this._clearSvgElement();
              const e = t.querySelectorAll('style');
              for (let n = 0; n < e.length; n++) e[n].textContent += ' ';
              if (this._location) {
                const e = this._location.getPathname();
                (this._previousPath = e),
                  this._cacheChildrenWithExternalReferences(t),
                  this._prependPathToReferences(e);
              }
              this._elementRef.nativeElement.appendChild(t);
            }
            _clearSvgElement() {
              const t = this._elementRef.nativeElement;
              let e = t.childNodes.length;
              for (this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear(); e--; ) {
                const n = t.childNodes[e];
                (1 === n.nodeType && 'svg' !== n.nodeName.toLowerCase()) || t.removeChild(n);
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const t = this._elementRef.nativeElement,
                e = this.fontSet
                  ? this._iconRegistry.classNameForFontAlias(this.fontSet)
                  : this._iconRegistry.getDefaultFontSetClass();
              e != this._previousFontSetClass &&
                (this._previousFontSetClass && t.classList.remove(this._previousFontSetClass),
                e && t.classList.add(e),
                (this._previousFontSetClass = e)),
                this.fontIcon != this._previousFontIconClass &&
                  (this._previousFontIconClass && t.classList.remove(this._previousFontIconClass),
                  this.fontIcon && t.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(t) {
              return 'string' == typeof t ? t.trim().split(' ')[0] : t;
            }
            _prependPathToReferences(t) {
              const e = this._elementsWithExternalReferences;
              e &&
                e.forEach((e, n) => {
                  e.forEach((e) => {
                    n.setAttribute(e.name, `url('${t}#${e.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(t) {
              const e = t.querySelectorAll(D),
                n = (this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map());
              for (let i = 0; i < e.length; i++)
                A.forEach((t) => {
                  const r = e[i],
                    s = r.getAttribute(t),
                    o = s ? s.match(j) : null;
                  if (o) {
                    let e = n.get(r);
                    e || ((e = []), n.set(r, e)), e.push({ name: t, value: o[1] });
                  }
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(k), i.gc('aria-hidden'), i.Vb(I, 8), i.Vb(i.o, 8));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  i.Mb('mat-icon-inline', e.inline)(
                    'mat-icon-no-color',
                    'primary' !== e.color && 'accent' !== e.color && 'warn' !== e.color
                  );
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
                svgIcon: 'svgIcon',
              },
              exportAs: ['matIcon'],
              features: [i.Fb, i.Gb],
              ngContentSelectors: y,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (i.uc(), i.tc(0));
              },
              styles: [
                '.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        P = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.g], r.g],
            })),
            t
          );
        })();
    },
    NJ4a: function (t, e, n) {
      'use strict';
      function i(t) {
        setTimeout(() => {
          throw t;
        }, 0);
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    NXyV: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('HDdC'),
        r = n('Cfvw'),
        s = n('EY2u');
      function o(t) {
        return new i.a((e) => {
          let n;
          try {
            n = t();
          } catch (i) {
            return void e.error(i);
          }
          return (n ? Object(r.a)(n) : Object(s.b)()).subscribe(e);
        });
      }
    },
    Nehr: function (t, e, n) {
      'use strict';
      t.exports = {
        isString: function (t) {
          return 'string' == typeof t;
        },
        isObject: function (t) {
          return 'object' == typeof t && null !== t;
        },
        isNull: function (t) {
          return null === t;
        },
        isNullOrUndefined: function (t) {
          return null == t;
        },
      };
    },
    Nwf9: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      }),
        n.d(e, 'b', function () {
          return c;
        }),
        n.d(e, 'c', function () {
          return s;
        }),
        n.d(e, 'd', function () {
          return r;
        }),
        n.d(e, 'e', function () {
          return i;
        }),
        n.d(e, 'f', function () {
          return o;
        });
      const i = 'NGXS_DATA_STORAGE_EVENT_TYPE',
        r = 'NGXS_DATA_META',
        s = {
          NGXS_PERSISTENCE_STATE: '@Persistence should be add before decorator @State and @StateRepository',
          NGXS_DATA_STATE: '@StateRepository should be add before decorator @State',
          NGXS_DATA_STATE_NAME_NOT_FOUND: 'State name not provided in class',
          NGXS_DATA_MODULE_EXCEPTION:
            'Metadata not created \n Maybe you forgot to import the NgxsDataPluginModule\n Also, you cannot use this.ctx.* until the application is fully rendered \n (use by default ngxsOnInit(ctx: StateContext), or ngxsAfterBootstrap(ctx: StateContext) !!!',
          NGXS_DATA_STATE_DECORATOR:
            'You forgot add decorator @StateRepository or initialize state!\nExample: NgxsModule.forRoot([ .. ]), or NgxsModule.forFeature([ .. ])',
          NGXS_DATA_STATIC_ACTION: 'Cannot support static methods with @action',
          NGXS_DATA_ACTION: '@action can only decorate a method implementation',
          NGXS_DATA_ASYNC_ACTION_RETURN_TYPE:
            'WARNING: If you use asynchronous actions `@Debounce() @DataAction()` the return result type should only void instead:',
          NGXS_PERSISTENCE_CONTAINER:
            'You forgot provide NGXS_DATA_STORAGE_CONTAINER or NGXS_DATA_STORAGE_EXTENSION!!! Example: \n\n@NgModule({\n imports: [ \n   NgxsDataPluginModule.forRoot([NGXS_DATA_STORAGE_PLUGIN]) \n ]\n})\nexport class AppModule {} \n\n',
          NGXS_PERSISTENCE_ENGINE:
            'Not found storage engine from `existingEngine` or not found instance after injecting by `useClass`.',
          NGXS_PERSISTENCE_SERIALIZE: 'Error occurred while serializing value',
          NGXS_PERSISTENCE_DESERIALIZE: 'Error occurred while deserializing value',
          NGXS_DATA_CHILDREN_CONVERT: 'Child states can only be added to an object',
          NGXS_INVALID_PAYLOAD_NAME: 'Payload name should be initialized',
          NGXS_INVALID_ARG_NAME: 'Argument name should be initialized',
          NGXS_COMPUTED_DECORATOR: 'The method must be a getter for the computed decorator to work properly.',
          NGXS_COMPARE: 'You must set the compare function before sorting.',
        },
        o = 'NGXS_META',
        a = 'NGXS_ARGUMENT_REGISTRY_META',
        c = 'NGXS_COMPUTED_OPTION';
    },
    PLFS: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('fXoL'),
        r = n('tyNb'),
        s = n('sYmb');
      const o = ['*'];
      let a = (() => {
        class t {
          constructor() {
            (this.routeTo = ''), (this.activeClass = 'active'), (this.text = '');
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-href']],
            inputs: { routeTo: 'routeTo', activeClass: 'activeClass', text: 'text' },
            ngContentSelectors: o,
            decls: 2,
            vars: 3,
            consts: [[3, 'routerLink', 'routerLinkActive', 'translate']],
            template: function (t, e) {
              1 & t && (i.uc(), i.bc(0, 'a', 0), i.tc(1), i.ac()),
                2 & t && i.vc('routerLink', e.routeTo)('routerLinkActive', e.activeClass)('translate', e.text);
            },
            directives: [r.e, r.d, s.a],
            styles: [''],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    PnYb: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return p;
      });
      var i = n('fXoL'),
        r = n('bTqV'),
        s = n('ofXK'),
        o = n('Xa2L'),
        a = n('iQeY'),
        c = n('NFeN');
      function l(t, e) {
        1 & t && i.Wb(0, 'mat-spinner', 3);
      }
      function u(t, e) {
        if ((1 & t && (i.bc(0, 'mat-icon'), i.Mc(1), i.ac()), 2 & t)) {
          const t = i.nc(2);
          i.Ib(1), i.Nc(t.icon);
        }
      }
      function h(t, e) {
        if (
          (1 & t && (i.Zb(0), i.Kc(1, u, 2, 1, 'mat-icon', 2), i.Wb(2, 'app-typography', 4), i.tc(3), i.Yb()), 2 & t)
        ) {
          const t = i.nc();
          i.Ib(1), i.vc('ngIf', t.icon), i.Ib(1), i.vc('data', t.text)('margin', !1);
        }
      }
      const d = ['*'];
      let p = (() => {
        class t {
          constructor() {
            (this.clicked = new i.p()), (this.type = 'button'), (this.loading = !1), (this.disabled = !1);
          }
          onClick(t) {
            this.clicked.emit(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-button']],
            inputs: {
              type: 'type',
              loading: 'loading',
              disabled: 'disabled',
              color: 'color',
              icon: 'icon',
              text: 'text',
              className: 'className',
            },
            outputs: { clicked: 'clicked' },
            ngContentSelectors: d,
            decls: 3,
            vars: 7,
            consts: [
              ['mat-raised-button', '', 3, 'type', 'color', 'disabled', 'click'],
              ['diameter', '20', 4, 'ngIf'],
              [4, 'ngIf'],
              ['diameter', '20'],
              [3, 'data', 'margin'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.uc(),
                i.bc(0, 'button', 0),
                i.jc('click', function (t) {
                  return e.onClick(t);
                }),
                i.Kc(1, l, 1, 0, 'mat-spinner', 1),
                i.Kc(2, h, 4, 3, 'ng-container', 2),
                i.ac()),
                2 & t &&
                  (i.Kb(e.className),
                  i.vc('type', e.type)('color', e.color)('disabled', e.disabled),
                  i.Ib(1),
                  i.vc('ngIf', e.loading),
                  i.Ib(1),
                  i.vc('ngIf', !e.loading));
            },
            directives: [r.a, s.l, o.b, a.a, c.a],
            styles: [
              'button[_ngcontent-%COMP%]{width:100%;height:36px;display:flex;align-items:center;justify-content:center}button.submit[_ngcontent-%COMP%]{background-color:#2e7d32;color:#fff}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    PqYM: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('HDdC'),
        r = n('D0XW'),
        s = n('Y7HM'),
        o = n('z+Ro');
      function a(t = 0, e, n) {
        let a = -1;
        return (
          Object(s.a)(e) ? (a = Number(e) < 1 ? 1 : Number(e)) : Object(o.a)(e) && (n = e),
          Object(o.a)(n) || (n = r.a),
          new i.a((e) => {
            const i = Object(s.a)(t) ? t : +t - n.now();
            return n.schedule(c, i, { index: 0, period: a, subscriber: e });
          })
        );
      }
      function c(t) {
        const { index: e, period: n, subscriber: i } = t;
        if ((i.next(e), !i.closed)) {
          if (-1 === n) return i.complete();
          (t.index = e + 1), this.schedule(t, n);
        }
      }
    },
    'Q/TZ': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('fXoL'),
        r = n('/t3+'),
        s = n('ofXK'),
        o = n('PnYb');
      function a(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'div'),
            i.bc(1, 'app-button', 2),
            i.jc('click', function () {
              return i.Dc(t), i.nc().onBurgerClick();
            }),
            i.ac(),
            i.ac();
        }
        2 & t && (i.Ib(1), i.vc('loading', !1));
      }
      const c = ['*'];
      let l = (() => {
        class t {
          constructor() {
            this.burgerClicked = new i.p();
          }
          trackByFn(t) {
            return t;
          }
          onBurgerClick() {
            this.burgerClicked.emit();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-header']],
            inputs: { showBurger: 'showBurger', user: 'user' },
            outputs: { burgerClicked: 'burgerClicked' },
            ngContentSelectors: c,
            decls: 4,
            vars: 1,
            consts: [
              [1, 'mat-elevation-z2'],
              [4, 'ngIf'],
              ['color', 'primary', 'icon', 'menu', 3, 'loading', 'click'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.uc(),
                i.bc(0, 'mat-toolbar', 0),
                i.Kc(1, a, 2, 1, 'div', 1),
                i.bc(2, 'div'),
                i.tc(3),
                i.ac(),
                i.ac()),
                2 & t && (i.Ib(1), i.vc('ngIf', e.showBurger));
            },
            directives: [r.a, s.l, o.a],
            styles: [
              'mat-toolbar[_ngcontent-%COMP%]{background-color:#fff;display:flex;justify-content:space-between;align-items:center}mat-toolbar[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{padding-right:16px}mat-toolbar[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:last-child{height:100%;flex:1}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    R0Ic: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      }),
        n.d(e, 'b', function () {
          return i;
        }),
        n.d(e, 'c', function () {
          return r;
        }),
        n.d(e, 'd', function () {
          return g;
        }),
        n.d(e, 'e', function () {
          return a;
        }),
        n.d(e, 'f', function () {
          return p;
        }),
        n.d(e, 'g', function () {
          return c;
        }),
        n.d(e, 'h', function () {
          return f;
        }),
        n.d(e, 'i', function () {
          return l;
        }),
        n.d(e, 'j', function () {
          return h;
        }),
        n.d(e, 'k', function () {
          return u;
        }),
        n.d(e, 'l', function () {
          return d;
        }),
        n.d(e, 'm', function () {
          return o;
        }),
        n.d(e, 'n', function () {
          return b;
        }),
        n.d(e, 'o', function () {
          return _;
        });
      class i {}
      class r {}
      const s = '*';
      function o(t, e) {
        return { type: 7, name: t, definitions: e, options: {} };
      }
      function a(t, e = null) {
        return { type: 4, styles: e, timings: t };
      }
      function c(t, e = null) {
        return { type: 3, steps: t, options: e };
      }
      function l(t, e = null) {
        return { type: 2, steps: t, options: e };
      }
      function u(t) {
        return { type: 6, styles: t, offset: null };
      }
      function h(t, e, n) {
        return { type: 0, name: t, styles: e, options: n };
      }
      function d(t, e, n = null) {
        return { type: 1, expr: t, animation: e, options: n };
      }
      function p(t = null) {
        return { type: 9, options: t };
      }
      function f(t, e, n = null) {
        return { type: 11, selector: t, animation: e, options: n };
      }
      function m(t) {
        Promise.resolve(null).then(t);
      }
      class g {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()), (this._started = !0);
        }
        triggerMicrotask() {
          m(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {}
        setPosition(t) {}
        getPosition() {
          return 0;
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      class b {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            n = 0,
            i = 0;
          const r = this.players.length;
          0 == r
            ? m(() => this._onFinish())
            : this.players.forEach((t) => {
                t.onDone(() => {
                  ++e == r && this._onFinish();
                }),
                  t.onDestroy(() => {
                    ++n == r && this._onDestroy();
                  }),
                  t.onStart(() => {
                    ++i == r && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce((t, e) => Math.max(t, e.totalTime), 0));
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() || ((this._started = !0), this._onStartFns.forEach((t) => t()), (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(), this._onStart(), this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()), (this._destroyed = !1), (this._finished = !1), (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((t) => {
            const n = t.totalTime ? Math.min(1, e / t.totalTime) : 1;
            t.setPosition(n);
          });
        }
        getPosition() {
          let t = 0;
          return (
            this.players.forEach((e) => {
              const n = e.getPosition();
              t = Math.min(n, t);
            }),
            t
          );
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      const _ = '!';
    },
    R1ws: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return me;
      }),
        n.d(e, 'b', function () {
          return be;
        });
      var i = n('fXoL'),
        r = n('jhN1'),
        s = n('R0Ic');
      function o() {
        return 'undefined' != typeof process && '[object process]' === {}.toString.call(process);
      }
      function a(t) {
        switch (t.length) {
          case 0:
            return new s.d();
          case 1:
            return t[0];
          default:
            return new s.n(t);
        }
      }
      function c(t, e, n, i, r = {}, o = {}) {
        const a = [],
          c = [];
        let l = -1,
          u = null;
        if (
          (i.forEach((t) => {
            const n = t.offset,
              i = n == l,
              h = (i && u) || {};
            Object.keys(t).forEach((n) => {
              let i = n,
                c = t[n];
              if ('offset' !== n)
                switch (((i = e.normalizePropertyName(i, a)), c)) {
                  case s.o:
                    c = r[n];
                    break;
                  case s.a:
                    c = o[n];
                    break;
                  default:
                    c = e.normalizeStyleValue(n, i, c, a);
                }
              h[i] = c;
            }),
              i || c.push(h),
              (u = h),
              (l = n);
          }),
          a.length)
        ) {
          const t = '\n - ';
          throw new Error(`Unable to animate due to the following errors:${t}${a.join(t)}`);
        }
        return c;
      }
      function l(t, e, n, i) {
        switch (e) {
          case 'start':
            t.onStart(() => i(n && u(n, 'start', t)));
            break;
          case 'done':
            t.onDone(() => i(n && u(n, 'done', t)));
            break;
          case 'destroy':
            t.onDestroy(() => i(n && u(n, 'destroy', t)));
        }
      }
      function u(t, e, n) {
        const i = n.totalTime,
          r = h(
            t.element,
            t.triggerName,
            t.fromState,
            t.toState,
            e || t.phaseName,
            null == i ? t.totalTime : i,
            !!n.disabled
          ),
          s = t._data;
        return null != s && (r._data = s), r;
      }
      function h(t, e, n, i, r = '', s = 0, o) {
        return { element: t, triggerName: e, fromState: n, toState: i, phaseName: r, totalTime: s, disabled: !!o };
      }
      function d(t, e, n) {
        let i;
        return t instanceof Map ? ((i = t.get(e)), i || t.set(e, (i = n))) : ((i = t[e]), i || (i = t[e] = n)), i;
      }
      function p(t) {
        const e = t.indexOf(':');
        return [t.substring(1, e), t.substr(e + 1)];
      }
      let f = (t, e) => !1,
        m = (t, e) => !1,
        g = (t, e, n) => [];
      const b = o();
      (b || 'undefined' != typeof Element) &&
        ((f = (t, e) => t.contains(e)),
        (m = (() => {
          if (b || Element.prototype.matches) return (t, e) => t.matches(e);
          {
            const t = Element.prototype,
              e =
                t.matchesSelector ||
                t.mozMatchesSelector ||
                t.msMatchesSelector ||
                t.oMatchesSelector ||
                t.webkitMatchesSelector;
            return e ? (t, n) => e.apply(t, [n]) : m;
          }
        })()),
        (g = (t, e, n) => {
          let i = [];
          if (n) i.push(...t.querySelectorAll(e));
          else {
            const n = t.querySelector(e);
            n && i.push(n);
          }
          return i;
        }));
      let _ = null,
        y = !1;
      function v(t) {
        _ ||
          ((_ = ('undefined' != typeof document ? document.body : null) || {}),
          (y = !!_.style && 'WebkitAppearance' in _.style));
        let e = !0;
        return (
          _.style &&
            !(function (t) {
              return 'ebkit' == t.substring(1, 6);
            })(t) &&
            ((e = t in _.style), !e && y) &&
            (e = 'Webkit' + t.charAt(0).toUpperCase() + t.substr(1) in _.style),
          e
        );
      }
      const w = m,
        x = f,
        C = g;
      function k(t) {
        const e = {};
        return (
          Object.keys(t).forEach((n) => {
            const i = n.replace(/([a-z])([A-Z])/g, '$1-$2');
            e[i] = t[n];
          }),
          e
        );
      }
      let O = (() => {
          class t {
            validateStyleProperty(t) {
              return v(t);
            }
            matchesElement(t, e) {
              return w(t, e);
            }
            containsElement(t, e) {
              return x(t, e);
            }
            query(t, e, n) {
              return C(t, e, n);
            }
            computeStyle(t, e, n) {
              return n || '';
            }
            animate(t, e, n, i, r, o = [], a) {
              return new s.d(n, i);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        S = (() => {
          class t {}
          return (t.NOOP = new O()), t;
        })();
      function E(t) {
        if ('number' == typeof t) return t;
        const e = t.match(/^(-?[\.\d]+)(m?s)/);
        return !e || e.length < 2 ? 0 : T(parseFloat(e[1]), e[2]);
      }
      function T(t, e) {
        switch (e) {
          case 's':
            return 1e3 * t;
          default:
            return t;
        }
      }
      function I(t, e, n) {
        return t.hasOwnProperty('duration')
          ? t
          : (function (t, e, n) {
              let i,
                r = 0,
                s = '';
              if ('string' == typeof t) {
                const n = t.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                if (null === n)
                  return e.push(`The provided timing value "${t}" is invalid.`), { duration: 0, delay: 0, easing: '' };
                i = T(parseFloat(n[1]), n[2]);
                const o = n[3];
                null != o && (r = T(parseFloat(o), n[4]));
                const a = n[5];
                a && (s = a);
              } else i = t;
              if (!n) {
                let n = !1,
                  s = e.length;
                i < 0 && (e.push('Duration values below 0 are not allowed for this animation step.'), (n = !0)),
                  r < 0 && (e.push('Delay values below 0 are not allowed for this animation step.'), (n = !0)),
                  n && e.splice(s, 0, `The provided timing value "${t}" is invalid.`);
              }
              return { duration: i, delay: r, easing: s };
            })(t, e, n);
      }
      function A(t, e = {}) {
        return (
          Object.keys(t).forEach((n) => {
            e[n] = t[n];
          }),
          e
        );
      }
      function D(t, e, n = {}) {
        if (e) for (let i in t) n[i] = t[i];
        else A(t, n);
        return n;
      }
      function j(t, e, n) {
        return n ? e + ':' + n + ';' : '';
      }
      function R(t) {
        let e = '';
        for (let n = 0; n < t.style.length; n++) {
          const i = t.style.item(n);
          e += j(0, i, t.style.getPropertyValue(i));
        }
        for (const n in t.style)
          t.style.hasOwnProperty(n) &&
            !n.startsWith('_') &&
            (e += j(0, n.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(), t.style[n]));
        t.setAttribute('style', e);
      }
      function P(t, e, n) {
        t.style &&
          (Object.keys(e).forEach((i) => {
            const r = B(i);
            n && !n.hasOwnProperty(i) && (n[i] = t.style[r]), (t.style[r] = e[i]);
          }),
          o() && R(t));
      }
      function M(t, e) {
        t.style &&
          (Object.keys(e).forEach((e) => {
            const n = B(e);
            t.style[n] = '';
          }),
          o() && R(t));
      }
      function F(t) {
        return Array.isArray(t) ? (1 == t.length ? t[0] : Object(s.i)(t)) : t;
      }
      const N = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function V(t) {
        let e = [];
        if ('string' == typeof t) {
          let n;
          for (; (n = N.exec(t)); ) e.push(n[1]);
          N.lastIndex = 0;
        }
        return e;
      }
      function L(t, e, n) {
        const i = t.toString(),
          r = i.replace(N, (t, i) => {
            let r = e[i];
            return (
              e.hasOwnProperty(i) || (n.push(`Please provide a value for the animation param ${i}`), (r = '')),
              r.toString()
            );
          });
        return r == i ? t : r;
      }
      function H(t) {
        const e = [];
        let n = t.next();
        for (; !n.done; ) e.push(n.value), (n = t.next());
        return e;
      }
      const z = /-+([a-z0-9])/g;
      function B(t) {
        return t.replace(z, (...t) => t[1].toUpperCase());
      }
      function U(t, e) {
        return 0 === t || 0 === e;
      }
      function W(t, e, n) {
        const i = Object.keys(n);
        if (i.length && e.length) {
          let s = e[0],
            o = [];
          if (
            (i.forEach((t) => {
              s.hasOwnProperty(t) || o.push(t), (s[t] = n[t]);
            }),
            o.length)
          )
            for (var r = 1; r < e.length; r++) {
              let n = e[r];
              o.forEach(function (e) {
                n[e] = q(t, e);
              });
            }
        }
        return e;
      }
      function $(t, e, n) {
        switch (e.type) {
          case 7:
            return t.visitTrigger(e, n);
          case 0:
            return t.visitState(e, n);
          case 1:
            return t.visitTransition(e, n);
          case 2:
            return t.visitSequence(e, n);
          case 3:
            return t.visitGroup(e, n);
          case 4:
            return t.visitAnimate(e, n);
          case 5:
            return t.visitKeyframes(e, n);
          case 6:
            return t.visitStyle(e, n);
          case 8:
            return t.visitReference(e, n);
          case 9:
            return t.visitAnimateChild(e, n);
          case 10:
            return t.visitAnimateRef(e, n);
          case 11:
            return t.visitQuery(e, n);
          case 12:
            return t.visitStagger(e, n);
          default:
            throw new Error(`Unable to resolve animation metadata node #${e.type}`);
        }
      }
      function q(t, e) {
        return window.getComputedStyle(t)[e];
      }
      function G(t, e) {
        const n = [];
        return (
          'string' == typeof t
            ? t.split(/\s*,\s*/).forEach((t) =>
                (function (t, e, n) {
                  if (':' == t[0]) {
                    const i = (function (t, e) {
                      switch (t) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (t, e) => parseFloat(e) > parseFloat(t);
                        case ':decrement':
                          return (t, e) => parseFloat(e) < parseFloat(t);
                        default:
                          return e.push(`The transition alias value "${t}" is not supported`), '* => *';
                      }
                    })(t, n);
                    if ('function' == typeof i) return void e.push(i);
                    t = i;
                  }
                  const i = t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return n.push(`The provided transition expression "${t}" is not supported`), e;
                  const r = i[1],
                    s = i[2],
                    o = i[3];
                  e.push(Y(r, o)), '<' != s[0] || ('*' == r && '*' == o) || e.push(Y(o, r));
                })(t, n, e)
              )
            : n.push(t),
          n
        );
      }
      const X = new Set(['true', '1']),
        K = new Set(['false', '0']);
      function Y(t, e) {
        const n = X.has(t) || K.has(t),
          i = X.has(e) || K.has(e);
        return (r, s) => {
          let o = '*' == t || t == r,
            a = '*' == e || e == s;
          return (
            !o && n && 'boolean' == typeof r && (o = r ? X.has(t) : K.has(t)),
            !a && i && 'boolean' == typeof s && (a = s ? X.has(e) : K.has(e)),
            o && a
          );
        };
      }
      const Z = new RegExp('s*:selfs*,?', 'g');
      function Q(t, e, n) {
        return new J(t).build(e, n);
      }
      class J {
        constructor(t) {
          this._driver = t;
        }
        build(t, e) {
          const n = new tt(e);
          return this._resetContextStyleTimingState(n), $(this, F(t), n);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ''), (t.collectedStyles = {}), (t.collectedStyles[''] = {}), (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let n = (e.queryCount = 0),
            i = (e.depCount = 0);
          const r = [],
            s = [];
          return (
            '@' == t.name.charAt(0) &&
              e.errors.push("animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"),
            t.definitions.forEach((t) => {
              if ((this._resetContextStyleTimingState(e), 0 == t.type)) {
                const n = t,
                  i = n.name;
                i
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((t) => {
                    (n.name = t), r.push(this.visitState(n, e));
                  }),
                  (n.name = i);
              } else if (1 == t.type) {
                const r = this.visitTransition(t, e);
                (n += r.queryCount), (i += r.depCount), s.push(r);
              } else e.errors.push('only state() and transition() definitions can sit inside of a trigger()');
            }),
            { type: 7, name: t.name, states: r, transitions: s, queryCount: n, depCount: i, options: null }
          );
        }
        visitState(t, e) {
          const n = this.visitStyle(t.styles, e),
            i = (t.options && t.options.params) || null;
          if (n.containsDynamicStyles) {
            const r = new Set(),
              s = i || {};
            if (
              (n.styles.forEach((t) => {
                if (et(t)) {
                  const e = t;
                  Object.keys(e).forEach((t) => {
                    V(e[t]).forEach((t) => {
                      s.hasOwnProperty(t) || r.add(t);
                    });
                  });
                }
              }),
              r.size)
            ) {
              const n = H(r.values());
              e.errors.push(
                `state("${t.name}", ...) must define default values for all the following style substitutions: ${n.join(
                  ', '
                )}`
              );
            }
          }
          return { type: 0, name: t.name, style: n, options: i ? { params: i } : null };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const n = $(this, F(t.animation), e);
          return {
            type: 1,
            matchers: G(t.expr, e.errors),
            animation: n,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: nt(t.options),
          };
        }
        visitSequence(t, e) {
          return { type: 2, steps: t.steps.map((t) => $(this, t, e)), options: nt(t.options) };
        }
        visitGroup(t, e) {
          const n = e.currentTime;
          let i = 0;
          const r = t.steps.map((t) => {
            e.currentTime = n;
            const r = $(this, t, e);
            return (i = Math.max(i, e.currentTime)), r;
          });
          return (e.currentTime = i), { type: 3, steps: r, options: nt(t.options) };
        }
        visitAnimate(t, e) {
          const n = (function (t, e) {
            let n = null;
            if (t.hasOwnProperty('duration')) n = t;
            else if ('number' == typeof t) return it(I(t, e).duration, 0, '');
            const i = t;
            if (i.split(/\s+/).some((t) => '{' == t.charAt(0) && '{' == t.charAt(1))) {
              const t = it(0, 0, '');
              return (t.dynamic = !0), (t.strValue = i), t;
            }
            return (n = n || I(i, e)), it(n.duration, n.delay, n.easing);
          })(t.timings, e.errors);
          let i;
          e.currentAnimateTimings = n;
          let r = t.styles ? t.styles : Object(s.k)({});
          if (5 == r.type) i = this.visitKeyframes(r, e);
          else {
            let r = t.styles,
              o = !1;
            if (!r) {
              o = !0;
              const t = {};
              n.easing && (t.easing = n.easing), (r = Object(s.k)(t));
            }
            e.currentTime += n.duration + n.delay;
            const a = this.visitStyle(r, e);
            (a.isEmptyStep = o), (i = a);
          }
          return (e.currentAnimateTimings = null), { type: 4, timings: n, style: i, options: null };
        }
        visitStyle(t, e) {
          const n = this._makeStyleAst(t, e);
          return this._validateStyleAst(n, e), n;
        }
        _makeStyleAst(t, e) {
          const n = [];
          Array.isArray(t.styles)
            ? t.styles.forEach((t) => {
                'string' == typeof t
                  ? t == s.a
                    ? n.push(t)
                    : e.errors.push(`The provided style string value ${t} is not allowed.`)
                  : n.push(t);
              })
            : n.push(t.styles);
          let i = !1,
            r = null;
          return (
            n.forEach((t) => {
              if (et(t)) {
                const e = t,
                  n = e.easing;
                if ((n && ((r = n), delete e.easing), !i))
                  for (let t in e)
                    if (e[t].toString().indexOf('{{') >= 0) {
                      i = !0;
                      break;
                    }
              }
            }),
            { type: 6, styles: n, easing: r, offset: t.offset, containsDynamicStyles: i, options: null }
          );
        }
        _validateStyleAst(t, e) {
          const n = e.currentAnimateTimings;
          let i = e.currentTime,
            r = e.currentTime;
          n && r > 0 && (r -= n.duration + n.delay),
            t.styles.forEach((t) => {
              'string' != typeof t &&
                Object.keys(t).forEach((n) => {
                  if (!this._driver.validateStyleProperty(n))
                    return void e.errors.push(
                      `The provided animation property "${n}" is not a supported CSS property for animations`
                    );
                  const s = e.collectedStyles[e.currentQuerySelector],
                    o = s[n];
                  let a = !0;
                  o &&
                    (r != i &&
                      r >= o.startTime &&
                      i <= o.endTime &&
                      (e.errors.push(
                        `The CSS property "${n}" that exists between the times of "${o.startTime}ms" and "${o.endTime}ms" is also being animated in a parallel animation between the times of "${r}ms" and "${i}ms"`
                      ),
                      (a = !1)),
                    (r = o.startTime)),
                    a && (s[n] = { startTime: r, endTime: i }),
                    e.options &&
                      (function (t, e, n) {
                        const i = e.params || {},
                          r = V(t);
                        r.length &&
                          r.forEach((t) => {
                            i.hasOwnProperty(t) ||
                              n.push(`Unable to resolve the local animation param ${t} in the given list of values`);
                          });
                      })(t[n], e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const n = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return e.errors.push('keyframes() must be placed inside of a call to animate()'), n;
          let i = 0;
          const r = [];
          let s = !1,
            o = !1,
            a = 0;
          const c = t.steps.map((t) => {
            const n = this._makeStyleAst(t, e);
            let c =
                null != n.offset
                  ? n.offset
                  : (function (t) {
                      if ('string' == typeof t) return null;
                      let e = null;
                      if (Array.isArray(t))
                        t.forEach((t) => {
                          if (et(t) && t.hasOwnProperty('offset')) {
                            const n = t;
                            (e = parseFloat(n.offset)), delete n.offset;
                          }
                        });
                      else if (et(t) && t.hasOwnProperty('offset')) {
                        const n = t;
                        (e = parseFloat(n.offset)), delete n.offset;
                      }
                      return e;
                    })(n.styles),
              l = 0;
            return (
              null != c && (i++, (l = n.offset = c)), (o = o || l < 0 || l > 1), (s = s || l < a), (a = l), r.push(l), n
            );
          });
          o && e.errors.push('Please ensure that all keyframe offsets are between 0 and 1'),
            s && e.errors.push('Please ensure that all keyframe offsets are in order');
          const l = t.steps.length;
          let u = 0;
          i > 0 && i < l
            ? e.errors.push('Not all style() steps within the declared keyframes() contain offsets')
            : 0 == i && (u = 1 / (l - 1));
          const h = l - 1,
            d = e.currentTime,
            p = e.currentAnimateTimings,
            f = p.duration;
          return (
            c.forEach((t, i) => {
              const s = u > 0 ? (i == h ? 1 : u * i) : r[i],
                o = s * f;
              (e.currentTime = d + p.delay + o),
                (p.duration = o),
                this._validateStyleAst(t, e),
                (t.offset = s),
                n.styles.push(t);
            }),
            n
          );
        }
        visitReference(t, e) {
          return { type: 8, animation: $(this, F(t.animation), e), options: nt(t.options) };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: nt(t.options) };
        }
        visitAnimateRef(t, e) {
          return { type: 10, animation: this.visitReference(t.animation, e), options: nt(t.options) };
        }
        visitQuery(t, e) {
          const n = e.currentQuerySelector,
            i = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [r, s] = (function (t) {
            const e = !!t.split(/\s*,\s*/).find((t) => ':self' == t);
            return (
              e && (t = t.replace(Z, '')),
              [
                (t = t
                  .replace(/@\*/g, '.ng-trigger')
                  .replace(/@\w+/g, (t) => '.ng-trigger-' + t.substr(1))
                  .replace(/:animating/g, '.ng-animating')),
                e,
              ]
            );
          })(t.selector);
          (e.currentQuerySelector = n.length ? n + ' ' + r : r), d(e.collectedStyles, e.currentQuerySelector, {});
          const o = $(this, F(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = n),
            {
              type: 11,
              selector: r,
              limit: i.limit || 0,
              optional: !!i.optional,
              includeSelf: s,
              animation: o,
              originalSelector: t.selector,
              options: nt(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery || e.errors.push('stagger() can only be used inside of query()');
          const n = 'full' === t.timings ? { duration: 0, delay: 0, easing: 'full' } : I(t.timings, e.errors, !0);
          return { type: 12, animation: $(this, F(t.animation), e), timings: n, options: null };
        }
      }
      class tt {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function et(t) {
        return !Array.isArray(t) && 'object' == typeof t;
      }
      function nt(t) {
        var e;
        return t ? (t = A(t)).params && (t.params = (e = t.params) ? A(e) : null) : (t = {}), t;
      }
      function it(t, e, n) {
        return { duration: t, delay: e, easing: n };
      }
      function rt(t, e, n, i, r, s, o = null, a = !1) {
        return {
          type: 1,
          element: t,
          keyframes: e,
          preStyleProps: n,
          postStyleProps: i,
          duration: r,
          delay: s,
          totalTime: r + s,
          easing: o,
          subTimeline: a,
        };
      }
      class st {
        constructor() {
          this._map = new Map();
        }
        consume(t) {
          let e = this._map.get(t);
          return e ? this._map.delete(t) : (e = []), e;
        }
        append(t, e) {
          let n = this._map.get(t);
          n || this._map.set(t, (n = [])), n.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const ot = new RegExp(':enter', 'g'),
        at = new RegExp(':leave', 'g');
      function ct(t, e, n, i, r, s = {}, o = {}, a, c, l = []) {
        return new lt().buildKeyframes(t, e, n, i, r, s, o, a, c, l);
      }
      class lt {
        buildKeyframes(t, e, n, i, r, s, o, a, c, l = []) {
          c = c || new st();
          const u = new ht(t, e, c, i, r, l, []);
          (u.options = a), u.currentTimeline.setStyles([s], null, u.errors, a), $(this, n, u);
          const h = u.timelines.filter((t) => t.containsAnimation());
          if (h.length && Object.keys(o).length) {
            const t = h[h.length - 1];
            t.allowOnlyTimelineStyles() || t.setStyles([o], null, u.errors, a);
          }
          return h.length ? h.map((t) => t.buildKeyframes()) : [rt(e, [], [], [], 0, 0, '', !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const n = e.subInstructions.consume(e.element);
          if (n) {
            const i = e.createSubContext(t.options),
              r = e.currentTimeline.currentTime,
              s = this._visitSubInstructions(n, i, i.options);
            r != s && e.transformIntoNewTimeline(s);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const n = e.createSubContext(t.options);
          n.transformIntoNewTimeline(),
            this.visitReference(t.animation, n),
            e.transformIntoNewTimeline(n.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _visitSubInstructions(t, e, n) {
          let i = e.currentTimeline.currentTime;
          const r = null != n.duration ? E(n.duration) : null,
            s = null != n.delay ? E(n.delay) : null;
          return (
            0 !== r &&
              t.forEach((t) => {
                const n = e.appendInstructionToTimeline(t, r, s);
                i = Math.max(i, n.duration + n.delay);
              }),
            i
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0), $(this, t.animation, e), (e.previousNode = t);
        }
        visitSequence(t, e) {
          const n = e.subContextCount;
          let i = e;
          const r = t.options;
          if (
            r &&
            (r.params || r.delay) &&
            ((i = e.createSubContext(r)), i.transformIntoNewTimeline(), null != r.delay)
          ) {
            6 == i.previousNode.type && (i.currentTimeline.snapshotCurrentStyles(), (i.previousNode = ut));
            const t = E(r.delay);
            i.delayNextStep(t);
          }
          t.steps.length &&
            (t.steps.forEach((t) => $(this, t, i)),
            i.currentTimeline.applyStylesToKeyframe(),
            i.subContextCount > n && i.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const n = [];
          let i = e.currentTimeline.currentTime;
          const r = t.options && t.options.delay ? E(t.options.delay) : 0;
          t.steps.forEach((s) => {
            const o = e.createSubContext(t.options);
            r && o.delayNextStep(r),
              $(this, s, o),
              (i = Math.max(i, o.currentTimeline.currentTime)),
              n.push(o.currentTimeline);
          }),
            n.forEach((t) => e.currentTimeline.mergeTimelineCollectedStyles(t)),
            e.transformIntoNewTimeline(i),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const n = t.strValue;
            return I(e.params ? L(n, e.params, e.errors) : n, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const n = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            i = e.currentTimeline;
          n.delay && (e.incrementTime(n.delay), i.snapshotCurrentStyles());
          const r = t.style;
          5 == r.type
            ? this.visitKeyframes(r, e)
            : (e.incrementTime(n.duration), this.visitStyle(r, e), i.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const n = e.currentTimeline,
            i = e.currentAnimateTimings;
          !i && n.getCurrentStyleProperties().length && n.forwardFrame();
          const r = (i && i.easing) || t.easing;
          t.isEmptyStep ? n.applyEmptyStep(r) : n.setStyles(t.styles, r, e.errors, e.options), (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const n = e.currentAnimateTimings,
            i = e.currentTimeline.duration,
            r = n.duration,
            s = e.createSubContext().currentTimeline;
          (s.easing = n.easing),
            t.styles.forEach((t) => {
              s.forwardTime((t.offset || 0) * r),
                s.setStyles(t.styles, t.easing, e.errors, e.options),
                s.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(s),
            e.transformIntoNewTimeline(i + r),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const n = e.currentTimeline.currentTime,
            i = t.options || {},
            r = i.delay ? E(i.delay) : 0;
          r &&
            (6 === e.previousNode.type || (0 == n && e.currentTimeline.getCurrentStyleProperties().length)) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = ut));
          let s = n;
          const o = e.invokeQuery(t.selector, t.originalSelector, t.limit, t.includeSelf, !!i.optional, e.errors);
          e.currentQueryTotal = o.length;
          let a = null;
          o.forEach((n, i) => {
            e.currentQueryIndex = i;
            const o = e.createSubContext(t.options, n);
            r && o.delayNextStep(r),
              n === e.element && (a = o.currentTimeline),
              $(this, t.animation, o),
              o.currentTimeline.applyStylesToKeyframe(),
              (s = Math.max(s, o.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(s),
            a && (e.currentTimeline.mergeTimelineCollectedStyles(a), e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const n = e.parentContext,
            i = e.currentTimeline,
            r = t.timings,
            s = Math.abs(r.duration),
            o = s * (e.currentQueryTotal - 1);
          let a = s * e.currentQueryIndex;
          switch (r.duration < 0 ? 'reverse' : r.easing) {
            case 'reverse':
              a = o - a;
              break;
            case 'full':
              a = n.currentStaggerTime;
          }
          const c = e.currentTimeline;
          a && c.delayNextStep(a);
          const l = c.currentTime;
          $(this, t.animation, e),
            (e.previousNode = t),
            (n.currentStaggerTime = i.currentTime - l + (i.startTime - n.currentTimeline.startTime));
        }
      }
      const ut = {};
      class ht {
        constructor(t, e, n, i, r, s, o, a) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = n),
            (this._enterClassName = i),
            (this._leaveClassName = r),
            (this.errors = s),
            (this.timelines = o),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = ut),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = a || new dt(this._driver, e, 0)),
            o.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const n = t;
          let i = this.options;
          null != n.duration && (i.duration = E(n.duration)), null != n.delay && (i.delay = E(n.delay));
          const r = n.params;
          if (r) {
            let t = i.params;
            t || (t = this.options.params = {}),
              Object.keys(r).forEach((n) => {
                (e && t.hasOwnProperty(n)) || (t[n] = L(r[n], t, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const n = (t.params = {});
              Object.keys(e).forEach((t) => {
                n[t] = e[t];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, n) {
          const i = e || this.element,
            r = new ht(
              this._driver,
              i,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(i, n || 0)
            );
          return (
            (r.previousNode = this.previousNode),
            (r.currentAnimateTimings = this.currentAnimateTimings),
            (r.options = this._copyOptions()),
            r.updateOptions(t),
            (r.currentQueryIndex = this.currentQueryIndex),
            (r.currentQueryTotal = this.currentQueryTotal),
            (r.parentContext = this),
            this.subContextCount++,
            r
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = ut),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, n) {
          const i = {
              duration: null != e ? e : t.duration,
              delay: this.currentTimeline.currentTime + (null != n ? n : 0) + t.delay,
              easing: '',
            },
            r = new pt(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              i,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(r), i;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, n, i, r, s) {
          let o = [];
          if ((i && o.push(this.element), t.length > 0)) {
            t = (t = t.replace(ot, '.' + this._enterClassName)).replace(at, '.' + this._leaveClassName);
            let e = this._driver.query(this.element, t, 1 != n);
            0 !== n && (e = n < 0 ? e.slice(e.length + n, e.length) : e.slice(0, n)), o.push(...e);
          }
          return (
            r ||
              0 != o.length ||
              s.push(
                `\`query("${e}")\` returned zero elements. (Use \`query("${e}", { optional: true })\` if you wish to allow this.)`
              ),
            o
          );
        }
      }
      class dt {
        constructor(t, e, n, i) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = n),
            (this._elementTimelineStylesLookup = i),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles = this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(e, this._localTimelineStyles)),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e = 1 == this._keyframes.size && Object.keys(this._pendingStyles).length;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t), e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new dt(this._driver, t, e || this.currentTime, this._elementTimelineStylesLookup)
          );
        }
        _loadKeyframe() {
          this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(), (this.duration = t), this._loadKeyframe();
        }
        _updateStyle(t, e) {
          (this._localTimelineStyles[t] = e),
            (this._globalTimelineStyles[t] = e),
            (this._styleSummary[t] = { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && (this._previousKeyframe.easing = t),
            Object.keys(this._globalTimelineStyles).forEach((t) => {
              (this._backFill[t] = this._globalTimelineStyles[t] || s.a), (this._currentKeyframe[t] = s.a);
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(t, e, n, i) {
          e && (this._previousKeyframe.easing = e);
          const r = (i && i.params) || {},
            o = (function (t, e) {
              const n = {};
              let i;
              return (
                t.forEach((t) => {
                  '*' === t
                    ? ((i = i || Object.keys(e)),
                      i.forEach((t) => {
                        n[t] = s.a;
                      }))
                    : D(t, !1, n);
                }),
                n
              );
            })(t, this._globalTimelineStyles);
          Object.keys(o).forEach((t) => {
            const e = L(o[t], r, n);
            (this._pendingStyles[t] = e),
              this._localTimelineStyles.hasOwnProperty(t) ||
                (this._backFill[t] = this._globalTimelineStyles.hasOwnProperty(t)
                  ? this._globalTimelineStyles[t]
                  : s.a),
              this._updateStyle(t, e);
          });
        }
        applyStylesToKeyframe() {
          const t = this._pendingStyles,
            e = Object.keys(t);
          0 != e.length &&
            ((this._pendingStyles = {}),
            e.forEach((e) => {
              this._currentKeyframe[e] = t[e];
            }),
            Object.keys(this._localTimelineStyles).forEach((t) => {
              this._currentKeyframe.hasOwnProperty(t) || (this._currentKeyframe[t] = this._localTimelineStyles[t]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((t) => {
            const e = this._localTimelineStyles[t];
            (this._pendingStyles[t] = e), this._updateStyle(t, e);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          Object.keys(t._styleSummary).forEach((e) => {
            const n = this._styleSummary[e],
              i = t._styleSummary[e];
            (!n || i.time > n.time) && this._updateStyle(e, i.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            n = 1 === this._keyframes.size && 0 === this.duration;
          let i = [];
          this._keyframes.forEach((r, o) => {
            const a = D(r, !0);
            Object.keys(a).forEach((n) => {
              const i = a[n];
              i == s.o ? t.add(n) : i == s.a && e.add(n);
            }),
              n || (a.offset = o / this.duration),
              i.push(a);
          });
          const r = t.size ? H(t.values()) : [],
            o = e.size ? H(e.values()) : [];
          if (n) {
            const t = i[0],
              e = A(t);
            (t.offset = 0), (e.offset = 1), (i = [t, e]);
          }
          return rt(this.element, i, r, o, this.duration, this.startTime, this.easing, !1);
        }
      }
      class pt extends dt {
        constructor(t, e, n, i, r, s, o = !1) {
          super(t, e, s.delay),
            (this.element = e),
            (this.keyframes = n),
            (this.preStyleProps = i),
            (this.postStyleProps = r),
            (this._stretchStartingKeyframe = o),
            (this.timings = { duration: s.duration, delay: s.delay, easing: s.easing });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: n, easing: i } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const r = [],
              s = n + e,
              o = e / s,
              a = D(t[0], !1);
            (a.offset = 0), r.push(a);
            const c = D(t[0], !1);
            (c.offset = ft(o)), r.push(c);
            const l = t.length - 1;
            for (let i = 1; i <= l; i++) {
              let o = D(t[i], !1);
              (o.offset = ft((e + o.offset * n) / s)), r.push(o);
            }
            (n = s), (e = 0), (i = ''), (t = r);
          }
          return rt(this.element, t, this.preStyleProps, this.postStyleProps, n, e, i, !0);
        }
      }
      function ft(t, e = 3) {
        const n = Math.pow(10, e - 1);
        return Math.round(t * n) / n;
      }
      class mt {}
      class gt extends mt {
        normalizePropertyName(t, e) {
          return B(t);
        }
        normalizeStyleValue(t, e, n, i) {
          let r = '';
          const s = n.toString().trim();
          if (bt[e] && 0 !== n && '0' !== n)
            if ('number' == typeof n) r = 'px';
            else {
              const e = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
              e && 0 == e[1].length && i.push(`Please provide a CSS unit value for ${t}:${n}`);
            }
          return s + r;
        }
      }
      const bt = (() =>
        (function (t) {
          const e = {};
          return t.forEach((t) => (e[t] = !0)), e;
        })(
          'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(
            ','
          )
        ))();
      function _t(t, e, n, i, r, s, o, a, c, l, u, h, d) {
        return {
          type: 0,
          element: t,
          triggerName: e,
          isRemovalTransition: r,
          fromState: n,
          fromStyles: s,
          toState: i,
          toStyles: o,
          timelines: a,
          queriedElements: c,
          preStyleProps: l,
          postStyleProps: u,
          totalTime: h,
          errors: d,
        };
      }
      const yt = {};
      class vt {
        constructor(t, e, n) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = n);
        }
        match(t, e, n, i) {
          return (function (t, e, n, i, r) {
            return t.some((t) => t(e, n, i, r));
          })(this.ast.matchers, t, e, n, i);
        }
        buildStyles(t, e, n) {
          const i = this._stateStyles['*'],
            r = this._stateStyles[t],
            s = i ? i.buildStyles(e, n) : {};
          return r ? r.buildStyles(e, n) : s;
        }
        build(t, e, n, i, r, s, o, a, c, l) {
          const u = [],
            h = (this.ast.options && this.ast.options.params) || yt,
            p = this.buildStyles(n, (o && o.params) || yt, u),
            f = (a && a.params) || yt,
            m = this.buildStyles(i, f, u),
            g = new Set(),
            b = new Map(),
            _ = new Map(),
            y = 'void' === i,
            v = { params: Object.assign(Object.assign({}, h), f) },
            w = l ? [] : ct(t, e, this.ast.animation, r, s, p, m, v, c, u);
          let x = 0;
          if (
            (w.forEach((t) => {
              x = Math.max(t.duration + t.delay, x);
            }),
            u.length)
          )
            return _t(e, this._triggerName, n, i, y, p, m, [], [], b, _, x, u);
          w.forEach((t) => {
            const n = t.element,
              i = d(b, n, {});
            t.preStyleProps.forEach((t) => (i[t] = !0));
            const r = d(_, n, {});
            t.postStyleProps.forEach((t) => (r[t] = !0)), n !== e && g.add(n);
          });
          const C = H(g.values());
          return _t(e, this._triggerName, n, i, y, p, m, w, C, b, _, x);
        }
      }
      class wt {
        constructor(t, e) {
          (this.styles = t), (this.defaultParams = e);
        }
        buildStyles(t, e) {
          const n = {},
            i = A(this.defaultParams);
          return (
            Object.keys(t).forEach((e) => {
              const n = t[e];
              null != n && (i[e] = n);
            }),
            this.styles.styles.forEach((t) => {
              if ('string' != typeof t) {
                const r = t;
                Object.keys(r).forEach((t) => {
                  let s = r[t];
                  s.length > 1 && (s = L(s, i, e)), (n[t] = s);
                });
              }
            }),
            n
          );
        }
      }
      class xt {
        constructor(t, e) {
          (this.name = t),
            (this.ast = e),
            (this.transitionFactories = []),
            (this.states = {}),
            e.states.forEach((t) => {
              this.states[t.name] = new wt(t.style, (t.options && t.options.params) || {});
            }),
            Ct(this.states, 'true', '1'),
            Ct(this.states, 'false', '0'),
            e.transitions.forEach((e) => {
              this.transitionFactories.push(new vt(t, e, this.states));
            }),
            (this.fallbackTransition = new vt(
              t,
              {
                type: 1,
                animation: { type: 2, steps: [], options: null },
                matchers: [(t, e) => !0],
                options: null,
                queryCount: 0,
                depCount: 0,
              },
              this.states
            ));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, n, i) {
          return this.transitionFactories.find((r) => r.match(t, e, n, i)) || null;
        }
        matchStyles(t, e, n) {
          return this.fallbackTransition.buildStyles(t, e, n);
        }
      }
      function Ct(t, e, n) {
        t.hasOwnProperty(e) ? t.hasOwnProperty(n) || (t[n] = t[e]) : t.hasOwnProperty(n) && (t[e] = t[n]);
      }
      const kt = new st();
      class Ot {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = n),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(t, e) {
          const n = [],
            i = Q(this._driver, e, n);
          if (n.length) throw new Error(`Unable to build the animation due to the following errors: ${n.join('\n')}`);
          this._animations[t] = i;
        }
        _buildPlayer(t, e, n) {
          const i = t.element,
            r = c(0, this._normalizer, 0, t.keyframes, e, n);
          return this._driver.animate(i, r, t.duration, t.delay, t.easing, [], !0);
        }
        create(t, e, n = {}) {
          const i = [],
            r = this._animations[t];
          let o;
          const c = new Map();
          if (
            (r
              ? ((o = ct(this._driver, e, r, 'ng-enter', 'ng-leave', {}, {}, n, kt, i)),
                o.forEach((t) => {
                  const e = d(c, t.element, {});
                  t.postStyleProps.forEach((t) => (e[t] = null));
                }))
              : (i.push("The requested animation doesn't exist or has already been destroyed"), (o = [])),
            i.length)
          )
            throw new Error(`Unable to create the animation due to the following errors: ${i.join('\n')}`);
          c.forEach((t, e) => {
            Object.keys(t).forEach((n) => {
              t[n] = this._driver.computeStyle(e, n, s.a);
            });
          });
          const l = a(
            o.map((t) => {
              const e = c.get(t.element);
              return this._buildPlayer(t, {}, e);
            })
          );
          return (this._playersById[t] = l), l.onDestroy(() => this.destroy(t)), this.players.push(l), l;
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), delete this._playersById[t];
          const n = this.players.indexOf(e);
          n >= 0 && this.players.splice(n, 1);
        }
        _getPlayer(t) {
          const e = this._playersById[t];
          if (!e) throw new Error(`Unable to find the timeline player referenced by ${t}`);
          return e;
        }
        listen(t, e, n, i) {
          const r = h(e, '', '', '');
          return l(this._getPlayer(t), n, r, i), () => {};
        }
        command(t, e, n, i) {
          if ('register' == n) return void this.register(t, i[0]);
          if ('create' == n) return void this.create(t, e, i[0] || {});
          const r = this._getPlayer(t);
          switch (n) {
            case 'play':
              r.play();
              break;
            case 'pause':
              r.pause();
              break;
            case 'reset':
              r.reset();
              break;
            case 'restart':
              r.restart();
              break;
            case 'finish':
              r.finish();
              break;
            case 'init':
              r.init();
              break;
            case 'setPosition':
              r.setPosition(parseFloat(i[0]));
              break;
            case 'destroy':
              this.destroy(t);
          }
        }
      }
      const St = [],
        Et = { namespaceId: '', setForRemoval: !1, setForMove: !1, hasAnimation: !1, removedBeforeQueried: !1 },
        Tt = { namespaceId: '', setForMove: !1, setForRemoval: !1, hasAnimation: !1, removedBeforeQueried: !0 };
      class It {
        constructor(t, e = '') {
          this.namespaceId = e;
          const n = t && t.hasOwnProperty('value');
          if (((this.value = null != (i = n ? t.value : t) ? i : null), n)) {
            const e = A(t);
            delete e.value, (this.options = e);
          } else this.options = {};
          var i;
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const t = this.options.params;
            Object.keys(e).forEach((n) => {
              null == t[n] && (t[n] = e[n]);
            });
          }
        }
      }
      const At = new It('void');
      class Dt {
        constructor(t, e, n) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = n),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + t),
            Vt(e, this._hostClassName);
        }
        listen(t, e, n, i) {
          if (!this._triggers.hasOwnProperty(e))
            throw new Error(
              `Unable to listen on the animation trigger event "${n}" because the animation trigger "${e}" doesn't exist!`
            );
          if (null == n || 0 == n.length)
            throw new Error(
              `Unable to listen on the animation trigger "${e}" because the provided event is undefined!`
            );
          if ('start' != (r = n) && 'done' != r)
            throw new Error(
              `The provided animation trigger event "${n}" for the animation trigger "${e}" is not supported!`
            );
          var r;
          const s = d(this._elementListeners, t, []),
            o = { name: e, phase: n, callback: i };
          s.push(o);
          const a = d(this._engine.statesByElement, t, {});
          return (
            a.hasOwnProperty(e) || (Vt(t, 'ng-trigger'), Vt(t, 'ng-trigger-' + e), (a[e] = At)),
            () => {
              this._engine.afterFlush(() => {
                const t = s.indexOf(o);
                t >= 0 && s.splice(t, 1), this._triggers[e] || delete a[e];
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers[t] && ((this._triggers[t] = e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers[t];
          if (!e) throw new Error(`The provided animation trigger "${t}" has not been registered!`);
          return e;
        }
        trigger(t, e, n, i = !0) {
          const r = this._getTrigger(e),
            s = new Rt(this.id, e, t);
          let o = this._engine.statesByElement.get(t);
          o || (Vt(t, 'ng-trigger'), Vt(t, 'ng-trigger-' + e), this._engine.statesByElement.set(t, (o = {})));
          let a = o[e];
          const c = new It(n, this.id);
          if (
            (!(n && n.hasOwnProperty('value')) && a && c.absorbOptions(a.options),
            (o[e] = c),
            a || (a = At),
            'void' !== c.value && a.value === c.value)
          ) {
            if (
              !(function (t, e) {
                const n = Object.keys(t),
                  i = Object.keys(e);
                if (n.length != i.length) return !1;
                for (let r = 0; r < n.length; r++) {
                  const i = n[r];
                  if (!e.hasOwnProperty(i) || t[i] !== e[i]) return !1;
                }
                return !0;
              })(a.params, c.params)
            ) {
              const e = [],
                n = r.matchStyles(a.value, a.params, e),
                i = r.matchStyles(c.value, c.params, e);
              e.length
                ? this._engine.reportError(e)
                : this._engine.afterFlush(() => {
                    M(t, n), P(t, i);
                  });
            }
            return;
          }
          const l = d(this._engine.playersByElement, t, []);
          l.forEach((t) => {
            t.namespaceId == this.id && t.triggerName == e && t.queued && t.destroy();
          });
          let u = r.matchTransition(a.value, c.value, t, c.params),
            h = !1;
          if (!u) {
            if (!i) return;
            (u = r.fallbackTransition), (h = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: u,
              fromState: a,
              toState: c,
              player: s,
              isFallbackTransition: h,
            }),
            h ||
              (Vt(t, 'ng-animate-queued'),
              s.onStart(() => {
                Lt(t, 'ng-animate-queued');
              })),
            s.onDone(() => {
              let e = this.players.indexOf(s);
              e >= 0 && this.players.splice(e, 1);
              const n = this._engine.playersByElement.get(t);
              if (n) {
                let t = n.indexOf(s);
                t >= 0 && n.splice(t, 1);
              }
            }),
            this.players.push(s),
            l.push(s),
            s
          );
        }
        deregister(t) {
          delete this._triggers[t],
            this._engine.statesByElement.forEach((e, n) => {
              delete e[t];
            }),
            this._elementListeners.forEach((e, n) => {
              this._elementListeners.set(
                n,
                e.filter((e) => e.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t), this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e && (e.forEach((t) => t.destroy()), this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const n = this._engine.driver.query(t, '.ng-trigger', !0);
          n.forEach((t) => {
            if (t.__ng_removed) return;
            const n = this._engine.fetchNamespacesByElement(t);
            n.size ? n.forEach((n) => n.triggerLeaveAnimation(t, e, !1, !0)) : this.clearElementCache(t);
          }),
            this._engine.afterFlushAnimationsDone(() => n.forEach((t) => this.clearElementCache(t)));
        }
        triggerLeaveAnimation(t, e, n, i) {
          const r = this._engine.statesByElement.get(t);
          if (r) {
            const s = [];
            if (
              (Object.keys(r).forEach((e) => {
                if (this._triggers[e]) {
                  const n = this.trigger(t, e, 'void', i);
                  n && s.push(n);
                }
              }),
              s.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e),
                n && a(s).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t);
          if (e) {
            const n = new Set();
            e.forEach((e) => {
              const i = e.name;
              if (n.has(i)) return;
              n.add(i);
              const r = this._triggers[i].fallbackTransition,
                s = this._engine.statesByElement.get(t)[i] || At,
                o = new It('void'),
                a = new Rt(this.id, i, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: i,
                  transition: r,
                  fromState: s,
                  toState: o,
                  player: a,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const n = this._engine;
          if ((t.childElementCount && this._signalRemovalForInnerTriggers(t, e), this.triggerLeaveAnimation(t, e, !0)))
            return;
          let i = !1;
          if (n.totalAnimations) {
            const e = n.players.length ? n.playersByQueriedElement.get(t) : [];
            if (e && e.length) i = !0;
            else {
              let e = t;
              for (; (e = e.parentNode); )
                if (n.statesByElement.get(e)) {
                  i = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), i)) n.markElementAsRemoved(this.id, t, !1, e);
          else {
            const i = t.__ng_removed;
            (i && i !== Et) ||
              (n.afterFlush(() => this.clearElementCache(t)), n.destroyInnerAnimations(t), n._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          Vt(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((n) => {
              const i = n.player;
              if (i.destroyed) return;
              const r = n.element,
                s = this._elementListeners.get(r);
              s &&
                s.forEach((e) => {
                  if (e.name == n.triggerName) {
                    const i = h(r, n.triggerName, n.fromState.value, n.toState.value);
                    (i._data = t), l(n.player, e.phase, i, e.callback);
                  }
                }),
                i.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      i.destroy();
                    })
                  : e.push(n);
            }),
            (this._queue = []),
            e.sort((t, e) => {
              const n = t.transition.ast.depCount,
                i = e.transition.ast.depCount;
              return 0 == n || 0 == i ? n - i : this._engine.driver.containsElement(t.element, e.element) ? 1 : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((t) => t.destroy()), this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return this._elementListeners.has(t) && (e = !0), (e = !!this._queue.find((e) => e.element === t) || e), e;
        }
      }
      class jt {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = n),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (t, e) => {});
        }
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((e) => {
                e.queued && t.push(e);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const n = new Dt(t, e, this);
          return (
            e.parentNode
              ? this._balanceNamespaceList(n, e)
              : (this.newHostElements.set(e, n), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = n)
          );
        }
        _balanceNamespaceList(t, e) {
          const n = this._namespaceList.length - 1;
          if (n >= 0) {
            let i = !1;
            for (let r = n; r >= 0; r--)
              if (this.driver.containsElement(this._namespaceList[r].hostElement, e)) {
                this._namespaceList.splice(r + 1, 0, t), (i = !0);
                break;
              }
            i || this._namespaceList.splice(0, 0, t);
          } else this._namespaceList.push(t);
          return this.namespacesByHostElement.set(e, t), t;
        }
        register(t, e) {
          let n = this._namespaceLookup[t];
          return n || (n = this.createNamespace(t, e)), n;
        }
        registerTrigger(t, e, n) {
          let i = this._namespaceLookup[t];
          i && i.register(e, n) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const n = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(n.hostElement), delete this._namespaceLookup[t];
            const e = this._namespaceList.indexOf(n);
            e >= 0 && this._namespaceList.splice(e, 1);
          }),
            this.afterFlushAnimationsDone(() => n.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            n = this.statesByElement.get(t);
          if (n) {
            const t = Object.keys(n);
            for (let i = 0; i < t.length; i++) {
              const r = n[t[i]].namespaceId;
              if (r) {
                const t = this._fetchNamespace(r);
                t && e.add(t);
              }
            }
          }
          return e;
        }
        trigger(t, e, n, i) {
          if (Pt(e)) {
            const r = this._fetchNamespace(t);
            if (r) return r.trigger(e, n, i), !0;
          }
          return !1;
        }
        insertNode(t, e, n, i) {
          if (!Pt(e)) return;
          const r = e.__ng_removed;
          if (r && r.setForRemoval) {
            (r.setForRemoval = !1), (r.setForMove = !0);
            const t = this.collectedLeaveElements.indexOf(e);
            t >= 0 && this.collectedLeaveElements.splice(t, 1);
          }
          if (t) {
            const i = this._fetchNamespace(t);
            i && i.insertNode(e, n);
          }
          i && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) || (this.disabledNodes.add(t), Vt(t, 'ng-animate-disabled'))
            : this.disabledNodes.has(t) && (this.disabledNodes.delete(t), Lt(t, 'ng-animate-disabled'));
        }
        removeNode(t, e, n, i) {
          if (Pt(e)) {
            const r = t ? this._fetchNamespace(t) : null;
            if ((r ? r.removeNode(e, i) : this.markElementAsRemoved(t, e, !1, i), n)) {
              const n = this.namespacesByHostElement.get(e);
              n && n.id !== t && n.removeNode(e, i);
            }
          } else this._onRemovalComplete(e, i);
        }
        markElementAsRemoved(t, e, n, i) {
          this.collectedLeaveElements.push(e),
            (e.__ng_removed = { namespaceId: t, setForRemoval: i, hasAnimation: n, removedBeforeQueried: !1 });
        }
        listen(t, e, n, i, r) {
          return Pt(e) ? this._fetchNamespace(t).listen(e, n, i, r) : () => {};
        }
        _buildInstruction(t, e, n, i, r) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            n,
            i,
            t.fromState.options,
            t.toState.options,
            e,
            r
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, '.ng-trigger', !0);
          e.forEach((t) => this.destroyActiveAnimationsForElement(t)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, '.ng-animating', !0)),
              e.forEach((t) => this.finishActiveQueriedAnimationOnElement(t)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((t) => {
              t.queued ? (t.markedForDestroy = !0) : t.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((t) => t.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return a(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t.__ng_removed;
          if (e && e.setForRemoval) {
            if (((t.__ng_removed = Et), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const n = this._fetchNamespace(e.namespaceId);
              n && n.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          this.driver.matchesElement(t, '.ng-animate-disabled') && this.markElementAsDisabled(t, !1),
            this.driver.query(t, '.ng-animate-disabled', !0).forEach((t) => {
              this.markElementAsDisabled(t, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((t, e) => this._balanceNamespaceList(t, e)), this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let n = 0; n < this.collectedEnterElements.length; n++)
              Vt(this.collectedEnterElements[n], 'ng-star-inserted');
          if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
            const n = [];
            try {
              e = this._flushAnimations(n, t);
            } finally {
              for (let t = 0; t < n.length; t++) n[t]();
            }
          } else
            for (let n = 0; n < this.collectedLeaveElements.length; n++)
              this.processLeaveNode(this.collectedLeaveElements[n]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((t) => t()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const t = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? a(e).onDone(() => {
                    t.forEach((t) => t());
                  })
                : t.forEach((t) => t());
          }
        }
        reportError(t) {
          throw new Error(
            `Unable to process animations due to the following failed trigger transitions\n ${t.join('\n')}`
          );
        }
        _flushAnimations(t, e) {
          const n = new st(),
            i = [],
            r = new Map(),
            o = [],
            c = new Map(),
            l = new Map(),
            u = new Map(),
            h = new Set();
          this.disabledNodes.forEach((t) => {
            h.add(t);
            const e = this.driver.query(t, '.ng-animate-queued', !0);
            for (let n = 0; n < e.length; n++) h.add(e[n]);
          });
          const p = this.bodyNode,
            f = Array.from(this.statesByElement.keys()),
            m = Nt(f, this.collectedEnterElements),
            g = new Map();
          let b = 0;
          m.forEach((t, e) => {
            const n = 'ng-enter' + b++;
            g.set(e, n), t.forEach((t) => Vt(t, n));
          });
          const _ = [],
            y = new Set(),
            v = new Set();
          for (let s = 0; s < this.collectedLeaveElements.length; s++) {
            const t = this.collectedLeaveElements[s],
              e = t.__ng_removed;
            e &&
              e.setForRemoval &&
              (_.push(t),
              y.add(t),
              e.hasAnimation ? this.driver.query(t, '.ng-star-inserted', !0).forEach((t) => y.add(t)) : v.add(t));
          }
          const w = new Map(),
            x = Nt(f, Array.from(y));
          x.forEach((t, e) => {
            const n = 'ng-leave' + b++;
            w.set(e, n), t.forEach((t) => Vt(t, n));
          }),
            t.push(() => {
              m.forEach((t, e) => {
                const n = g.get(e);
                t.forEach((t) => Lt(t, n));
              }),
                x.forEach((t, e) => {
                  const n = w.get(e);
                  t.forEach((t) => Lt(t, n));
                }),
                _.forEach((t) => {
                  this.processLeaveNode(t);
                });
            });
          const C = [],
            k = [];
          for (let s = this._namespaceList.length - 1; s >= 0; s--)
            this._namespaceList[s].drainQueuedTransitions(e).forEach((t) => {
              const e = t.player,
                r = t.element;
              if ((C.push(e), this.collectedEnterElements.length)) {
                const t = r.__ng_removed;
                if (t && t.setForMove) return void e.destroy();
              }
              const s = !p || !this.driver.containsElement(p, r),
                a = w.get(r),
                h = g.get(r),
                f = this._buildInstruction(t, n, h, a, s);
              if (!f.errors || !f.errors.length)
                return s || t.isFallbackTransition
                  ? (e.onStart(() => M(r, f.fromStyles)), e.onDestroy(() => P(r, f.toStyles)), void i.push(e))
                  : (f.timelines.forEach((t) => (t.stretchStartingKeyframe = !0)),
                    n.append(r, f.timelines),
                    o.push({ instruction: f, player: e, element: r }),
                    f.queriedElements.forEach((t) => d(c, t, []).push(e)),
                    f.preStyleProps.forEach((t, e) => {
                      const n = Object.keys(t);
                      if (n.length) {
                        let t = l.get(e);
                        t || l.set(e, (t = new Set())), n.forEach((e) => t.add(e));
                      }
                    }),
                    void f.postStyleProps.forEach((t, e) => {
                      const n = Object.keys(t);
                      let i = u.get(e);
                      i || u.set(e, (i = new Set())), n.forEach((t) => i.add(t));
                    }));
              k.push(f);
            });
          if (k.length) {
            const t = [];
            k.forEach((e) => {
              t.push(`@${e.triggerName} has failed due to:\n`), e.errors.forEach((e) => t.push(`- ${e}\n`));
            }),
              C.forEach((t) => t.destroy()),
              this.reportError(t);
          }
          const O = new Map(),
            S = new Map();
          o.forEach((t) => {
            const e = t.element;
            n.has(e) && (S.set(e, e), this._beforeAnimationBuild(t.player.namespaceId, t.instruction, O));
          }),
            i.forEach((t) => {
              const e = t.element;
              this._getPreviousPlayers(e, !1, t.namespaceId, t.triggerName, null).forEach((t) => {
                d(O, e, []).push(t), t.destroy();
              });
            });
          const E = _.filter((t) => zt(t, l, u)),
            T = new Map();
          Ft(T, this.driver, v, u, s.a).forEach((t) => {
            zt(t, l, u) && E.push(t);
          });
          const I = new Map();
          m.forEach((t, e) => {
            Ft(I, this.driver, new Set(t), l, s.o);
          }),
            E.forEach((t) => {
              const e = T.get(t),
                n = I.get(t);
              T.set(t, Object.assign(Object.assign({}, e), n));
            });
          const A = [],
            D = [],
            j = {};
          o.forEach((t) => {
            const { element: e, player: s, instruction: o } = t;
            if (n.has(e)) {
              if (h.has(e))
                return (
                  s.onDestroy(() => P(e, o.toStyles)),
                  (s.disabled = !0),
                  s.overrideTotalTime(o.totalTime),
                  void i.push(s)
                );
              let t = j;
              if (S.size > 1) {
                let n = e;
                const i = [];
                for (; (n = n.parentNode); ) {
                  const e = S.get(n);
                  if (e) {
                    t = e;
                    break;
                  }
                  i.push(n);
                }
                i.forEach((e) => S.set(e, t));
              }
              const n = this._buildAnimation(s.namespaceId, o, O, r, I, T);
              if ((s.setRealPlayer(n), t === j)) A.push(s);
              else {
                const e = this.playersByElement.get(t);
                e && e.length && (s.parentPlayer = a(e)), i.push(s);
              }
            } else M(e, o.fromStyles), s.onDestroy(() => P(e, o.toStyles)), D.push(s), h.has(e) && i.push(s);
          }),
            D.forEach((t) => {
              const e = r.get(t.element);
              if (e && e.length) {
                const n = a(e);
                t.setRealPlayer(n);
              }
            }),
            i.forEach((t) => {
              t.parentPlayer ? t.syncPlayerEvents(t.parentPlayer) : t.destroy();
            });
          for (let s = 0; s < _.length; s++) {
            const t = _[s],
              e = t.__ng_removed;
            if ((Lt(t, 'ng-leave'), e && e.hasAnimation)) continue;
            let n = [];
            if (c.size) {
              let e = c.get(t);
              e && e.length && n.push(...e);
              let i = this.driver.query(t, '.ng-animating', !0);
              for (let t = 0; t < i.length; t++) {
                let e = c.get(i[t]);
                e && e.length && n.push(...e);
              }
            }
            const i = n.filter((t) => !t.destroyed);
            i.length ? Ht(this, t, i) : this.processLeaveNode(t);
          }
          return (
            (_.length = 0),
            A.forEach((t) => {
              this.players.push(t),
                t.onDone(() => {
                  t.destroy();
                  const e = this.players.indexOf(t);
                  this.players.splice(e, 1);
                }),
                t.play();
            }),
            A
          );
        }
        elementContainsData(t, e) {
          let n = !1;
          const i = e.__ng_removed;
          return (
            i && i.setForRemoval && (n = !0),
            this.playersByElement.has(e) && (n = !0),
            this.playersByQueriedElement.has(e) && (n = !0),
            this.statesByElement.has(e) && (n = !0),
            this._fetchNamespace(t).elementContainsData(e) || n
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, n, i, r) {
          let s = [];
          if (e) {
            const e = this.playersByQueriedElement.get(t);
            e && (s = e);
          } else {
            const e = this.playersByElement.get(t);
            if (e) {
              const t = !r || 'void' == r;
              e.forEach((e) => {
                e.queued || ((t || e.triggerName == i) && s.push(e));
              });
            }
          }
          return (n || i) && (s = s.filter((t) => !((n && n != t.namespaceId) || (i && i != t.triggerName)))), s;
        }
        _beforeAnimationBuild(t, e, n) {
          const i = e.element,
            r = e.isRemovalTransition ? void 0 : t,
            s = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const o of e.timelines) {
            const t = o.element,
              a = t !== i,
              c = d(n, t, []);
            this._getPreviousPlayers(t, a, r, s, e.toState).forEach((t) => {
              const e = t.getRealPlayer();
              e.beforeDestroy && e.beforeDestroy(), t.destroy(), c.push(t);
            });
          }
          M(i, e.fromStyles);
        }
        _buildAnimation(t, e, n, i, r, o) {
          const l = e.triggerName,
            u = e.element,
            h = [],
            p = new Set(),
            f = new Set(),
            m = e.timelines.map((e) => {
              const a = e.element;
              p.add(a);
              const d = a.__ng_removed;
              if (d && d.removedBeforeQueried) return new s.d(e.duration, e.delay);
              const m = a !== u,
                g = (function (t) {
                  const e = [];
                  return (
                    (function t(e, n) {
                      for (let i = 0; i < e.length; i++) {
                        const r = e[i];
                        r instanceof s.n ? t(r.players, n) : n.push(r);
                      }
                    })(t, e),
                    e
                  );
                })((n.get(a) || St).map((t) => t.getRealPlayer())).filter((t) => !!t.element && t.element === a),
                b = r.get(a),
                _ = o.get(a),
                y = c(0, this._normalizer, 0, e.keyframes, b, _),
                v = this._buildPlayer(e, y, g);
              if ((e.subTimeline && i && f.add(a), m)) {
                const e = new Rt(t, l, a);
                e.setRealPlayer(v), h.push(e);
              }
              return v;
            });
          h.forEach((t) => {
            d(this.playersByQueriedElement, t.element, []).push(t),
              t.onDone(() =>
                (function (t, e, n) {
                  let i;
                  if (t instanceof Map) {
                    if (((i = t.get(e)), i)) {
                      if (i.length) {
                        const t = i.indexOf(n);
                        i.splice(t, 1);
                      }
                      0 == i.length && t.delete(e);
                    }
                  } else if (((i = t[e]), i)) {
                    if (i.length) {
                      const t = i.indexOf(n);
                      i.splice(t, 1);
                    }
                    0 == i.length && delete t[e];
                  }
                  return i;
                })(this.playersByQueriedElement, t.element, t)
              );
          }),
            p.forEach((t) => Vt(t, 'ng-animating'));
          const g = a(m);
          return (
            g.onDestroy(() => {
              p.forEach((t) => Lt(t, 'ng-animating')), P(u, e.toStyles);
            }),
            f.forEach((t) => {
              d(i, t, []).push(g);
            }),
            g
          );
        }
        _buildPlayer(t, e, n) {
          return e.length > 0
            ? this.driver.animate(t.element, e, t.duration, t.delay, t.easing, n)
            : new s.d(t.duration, t.delay);
        }
      }
      class Rt {
        constructor(t, e, n) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = n),
            (this._player = new s.d()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            Object.keys(this._queuedCallbacks).forEach((e) => {
              this._queuedCallbacks[e].forEach((n) => l(t, e, void 0, n));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback('start')),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          d(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent('done', t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent('start', t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent('destroy', t), this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function Pt(t) {
        return t && 1 === t.nodeType;
      }
      function Mt(t, e) {
        const n = t.style.display;
        return (t.style.display = null != e ? e : 'none'), n;
      }
      function Ft(t, e, n, i, r) {
        const s = [];
        n.forEach((t) => s.push(Mt(t)));
        const o = [];
        i.forEach((n, i) => {
          const s = {};
          n.forEach((t) => {
            const n = (s[t] = e.computeStyle(i, t, r));
            (n && 0 != n.length) || ((i.__ng_removed = Tt), o.push(i));
          }),
            t.set(i, s);
        });
        let a = 0;
        return n.forEach((t) => Mt(t, s[a++])), o;
      }
      function Nt(t, e) {
        const n = new Map();
        if ((t.forEach((t) => n.set(t, [])), 0 == e.length)) return n;
        const i = new Set(e),
          r = new Map();
        return (
          e.forEach((t) => {
            const e = (function t(e) {
              if (!e) return 1;
              let s = r.get(e);
              if (s) return s;
              const o = e.parentNode;
              return (s = n.has(o) ? o : i.has(o) ? 1 : t(o)), r.set(e, s), s;
            })(t);
            1 !== e && n.get(e).push(t);
          }),
          n
        );
      }
      function Vt(t, e) {
        if (t.classList) t.classList.add(e);
        else {
          let n = t.$$classes;
          n || (n = t.$$classes = {}), (n[e] = !0);
        }
      }
      function Lt(t, e) {
        if (t.classList) t.classList.remove(e);
        else {
          let n = t.$$classes;
          n && delete n[e];
        }
      }
      function Ht(t, e, n) {
        a(n).onDone(() => t.processLeaveNode(e));
      }
      function zt(t, e, n) {
        const i = n.get(t);
        if (!i) return !1;
        let r = e.get(t);
        return r ? i.forEach((t) => r.add(t)) : e.set(t, i), n.delete(t), !0;
      }
      class Bt {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (t, e) => {}),
            (this._transitionEngine = new jt(t, e, n)),
            (this._timelineEngine = new Ot(t, e, n)),
            (this._transitionEngine.onRemovalComplete = (t, e) => this.onRemovalComplete(t, e));
        }
        registerTrigger(t, e, n, i, r) {
          const s = t + '-' + i;
          let o = this._triggerCache[s];
          if (!o) {
            const t = [],
              e = Q(this._driver, r, t);
            if (t.length)
              throw new Error(
                `The animation trigger "${i}" has failed to build due to the following errors:\n - ${t.join('\n - ')}`
              );
            (o = (function (t, e) {
              return new xt(t, e);
            })(i, e)),
              (this._triggerCache[s] = o);
          }
          this._transitionEngine.registerTrigger(e, i, o);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, n, i) {
          this._transitionEngine.insertNode(t, e, n, i);
        }
        onRemove(t, e, n, i) {
          this._transitionEngine.removeNode(t, e, i || !1, n);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, n, i) {
          if ('@' == n.charAt(0)) {
            const [t, r] = p(n);
            this._timelineEngine.command(t, e, r, i);
          } else this._transitionEngine.trigger(t, e, n, i);
        }
        listen(t, e, n, i, r) {
          if ('@' == n.charAt(0)) {
            const [t, i] = p(n);
            return this._timelineEngine.listen(t, e, i, r);
          }
          return this._transitionEngine.listen(t, e, n, i, r);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(this._timelineEngine.players);
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function Ut(t, e) {
        let n = null,
          i = null;
        return (
          Array.isArray(e) && e.length ? ((n = $t(e[0])), e.length > 1 && (i = $t(e[e.length - 1]))) : e && (n = $t(e)),
          n || i ? new Wt(t, n, i) : null
        );
      }
      let Wt = (() => {
        class t {
          constructor(e, n, i) {
            (this._element = e), (this._startStyles = n), (this._endStyles = i), (this._state = 0);
            let r = t.initialStylesByElement.get(e);
            r || t.initialStylesByElement.set(e, (r = {})), (this._initialStyles = r);
          }
          start() {
            this._state < 1 &&
              (this._startStyles && P(this._element, this._startStyles, this._initialStyles), (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (P(this._element, this._initialStyles),
                this._endStyles && (P(this._element, this._endStyles), (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (t.initialStylesByElement.delete(this._element),
                this._startStyles && (M(this._element, this._startStyles), (this._endStyles = null)),
                this._endStyles && (M(this._element, this._endStyles), (this._endStyles = null)),
                P(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (t.initialStylesByElement = new WeakMap()), t;
      })();
      function $t(t) {
        let e = null;
        const n = Object.keys(t);
        for (let i = 0; i < n.length; i++) {
          const r = n[i];
          qt(r) && ((e = e || {}), (e[r] = t[r]));
        }
        return e;
      }
      function qt(t) {
        return 'display' === t || 'position' === t;
      }
      class Gt {
        constructor(t, e, n, i, r, s, o) {
          (this._element = t),
            (this._name = e),
            (this._duration = n),
            (this._delay = i),
            (this._easing = r),
            (this._fillMode = s),
            (this._onDoneFn = o),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (t) => this._handleCallback(t));
        }
        apply() {
          !(function (t, e) {
            const n = Jt(t, '').trim();
            n.length &&
              ((function (t, e) {
                let n = 0;
                for (let i = 0; i < t.length; i++) ',' === t.charAt(i) && n++;
              })(n),
              (e = `${n}, ${e}`)),
              Qt(t, '', e);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            Zt(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          Xt(this._element, this._name, 'paused');
        }
        resume() {
          Xt(this._element, this._name, 'running');
        }
        setPosition(t) {
          const e = Kt(this._element, this._name);
          (this._position = t * this._duration), Qt(this._element, 'Delay', `-${this._position}ms`, e);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(t) {
          const e = t._ngTestManualTimestamp || Date.now(),
            n = 1e3 * parseFloat(t.elapsedTime.toFixed(3));
          t.animationName == this._name &&
            Math.max(e - this._startTime, 0) >= this._delay &&
            n >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished || ((this._finished = !0), this._onDoneFn(), Zt(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function (t, e) {
              const n = Jt(t, '').split(','),
                i = Yt(n, e);
              i >= 0 && (n.splice(i, 1), Qt(t, '', n.join(',')));
            })(this._element, this._name));
        }
      }
      function Xt(t, e, n) {
        Qt(t, 'PlayState', n, Kt(t, e));
      }
      function Kt(t, e) {
        const n = Jt(t, '');
        return n.indexOf(',') > 0 ? Yt(n.split(','), e) : Yt([n], e);
      }
      function Yt(t, e) {
        for (let n = 0; n < t.length; n++) if (t[n].indexOf(e) >= 0) return n;
        return -1;
      }
      function Zt(t, e, n) {
        n ? t.removeEventListener('animationend', e) : t.addEventListener('animationend', e);
      }
      function Qt(t, e, n, i) {
        const r = 'animation' + e;
        if (null != i) {
          const e = t.style[r];
          if (e.length) {
            const t = e.split(',');
            (t[i] = n), (n = t.join(','));
          }
        }
        t.style[r] = n;
      }
      function Jt(t, e) {
        return t.style['animation' + e];
      }
      class te {
        constructor(t, e, n, i, r, s, o, a) {
          (this.element = t),
            (this.keyframes = e),
            (this.animationName = n),
            (this._duration = i),
            (this._delay = r),
            (this._finalStyles = o),
            (this._specialStyles = a),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = s || 'linear'),
            (this.totalTime = i + r),
            this._buildStyler();
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        destroy() {
          this.init(),
            this._state >= 4 ||
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((t) => t()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            this._state >= 3 ||
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(t) {
          this._styler.setPosition(t);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 || ((this._state = 1), this._styler.apply(), this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(), (this._state = 2), this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          this._styler.destroy(), this._buildStyler(), this._styler.apply();
        }
        _buildStyler() {
          this._styler = new Gt(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            'forwards',
            () => this.finish()
          );
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
        beforeDestroy() {
          this.init();
          const t = {};
          if (this.hasStarted()) {
            const e = this._state >= 3;
            Object.keys(this._finalStyles).forEach((n) => {
              'offset' != n && (t[n] = e ? this._finalStyles[n] : q(this.element, n));
            });
          }
          this.currentSnapshot = t;
        }
      }
      class ee extends s.d {
        constructor(t, e) {
          super(), (this.element = t), (this._startingStyles = {}), (this.__initialized = !1), (this._styles = k(e));
        }
        init() {
          !this.__initialized &&
            this._startingStyles &&
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((t) => {
              this._startingStyles[t] = this.element.style[t];
            }),
            super.init());
        }
        play() {
          this._startingStyles &&
            (this.init(),
            Object.keys(this._styles).forEach((t) => this.element.style.setProperty(t, this._styles[t])),
            super.play());
        }
        destroy() {
          this._startingStyles &&
            (Object.keys(this._startingStyles).forEach((t) => {
              const e = this._startingStyles[t];
              e ? this.element.style.setProperty(t, e) : this.element.style.removeProperty(t);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class ne {
        constructor() {
          (this._count = 0), (this._head = document.querySelector('head')), (this._warningIssued = !1);
        }
        validateStyleProperty(t) {
          return v(t);
        }
        matchesElement(t, e) {
          return w(t, e);
        }
        containsElement(t, e) {
          return x(t, e);
        }
        query(t, e, n) {
          return C(t, e, n);
        }
        computeStyle(t, e, n) {
          return window.getComputedStyle(t)[e];
        }
        buildKeyframeElement(t, e, n) {
          n = n.map((t) => k(t));
          let i = `@keyframes ${e} {\n`,
            r = '';
          n.forEach((t) => {
            r = ' ';
            const e = parseFloat(t.offset);
            (i += `${r}${100 * e}% {\n`),
              (r += ' '),
              Object.keys(t).forEach((e) => {
                const n = t[e];
                switch (e) {
                  case 'offset':
                    return;
                  case 'easing':
                    return void (n && (i += `${r}animation-timing-function: ${n};\n`));
                  default:
                    return void (i += `${r}${e}: ${n};\n`);
                }
              }),
              (i += `${r}}\n`);
          }),
            (i += '}\n');
          const s = document.createElement('style');
          return (s.innerHTML = i), s;
        }
        animate(t, e, n, i, r, s = [], o) {
          o && this._notifyFaultyScrubber();
          const a = s.filter((t) => t instanceof te),
            c = {};
          U(n, i) &&
            a.forEach((t) => {
              let e = t.currentSnapshot;
              Object.keys(e).forEach((t) => (c[t] = e[t]));
            });
          const l = (function (t) {
            let e = {};
            return (
              t &&
                (Array.isArray(t) ? t : [t]).forEach((t) => {
                  Object.keys(t).forEach((n) => {
                    'offset' != n && 'easing' != n && (e[n] = t[n]);
                  });
                }),
              e
            );
          })((e = W(t, e, c)));
          if (0 == n) return new ee(t, l);
          const u = `gen_css_kf_${this._count++}`,
            h = this.buildKeyframeElement(t, u, e);
          document.querySelector('head').appendChild(h);
          const d = Ut(t, e),
            p = new te(t, e, u, n, i, r, l, d);
          return (
            p.onDestroy(() => {
              var t;
              (t = h).parentNode.removeChild(t);
            }),
            p
          );
        }
        _notifyFaultyScrubber() {
          this._warningIssued ||
            (console.warn(
              '@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\n',
              '  visit http://bit.ly/IWukam to learn more about using the web-animation-js polyfill.'
            ),
            (this._warningIssued = !0));
        }
      }
      class ie {
        constructor(t, e, n, i) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = n),
            (this._specialStyles = i),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = n.duration),
            (this._delay = n.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(this.element, t, this.options)),
            (this._finalKeyframe = t.length ? t[t.length - 1] : {}),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(t, e, n) {
          return t.animate(e, n);
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(), this._specialStyles && this._specialStyles.finish(), this._onFinish(), this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(), (this._destroyed = !1), (this._finished = !1), (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          this.domPlayer.currentTime = t * this.time;
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = {};
          this.hasStarted() &&
            Object.keys(this._finalKeyframe).forEach((e) => {
              'offset' != e && (t[e] = this._finished ? this._finalKeyframe[e] : q(this.element, e));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      class re {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(se().toString())),
            (this._cssKeyframesDriver = new ne());
        }
        validateStyleProperty(t) {
          return v(t);
        }
        matchesElement(t, e) {
          return w(t, e);
        }
        containsElement(t, e) {
          return x(t, e);
        }
        query(t, e, n) {
          return C(t, e, n);
        }
        computeStyle(t, e, n) {
          return window.getComputedStyle(t)[e];
        }
        overrideWebAnimationsSupport(t) {
          this._isNativeImpl = t;
        }
        animate(t, e, n, i, r, s = [], o) {
          if (!o && !this._isNativeImpl) return this._cssKeyframesDriver.animate(t, e, n, i, r, s);
          const a = { duration: n, delay: i, fill: 0 == i ? 'both' : 'forwards' };
          r && (a.easing = r);
          const c = {},
            l = s.filter((t) => t instanceof ie);
          U(n, i) &&
            l.forEach((t) => {
              let e = t.currentSnapshot;
              Object.keys(e).forEach((t) => (c[t] = e[t]));
            });
          const u = Ut(t, (e = W(t, (e = e.map((t) => D(t, !1))), c)));
          return new ie(t, e, a, u);
        }
      }
      function se() {
        return ('undefined' != typeof window && void 0 !== window.document && Element.prototype.animate) || {};
      }
      var oe = n('ofXK');
      let ae = (() => {
        class t extends s.b {
          constructor(t, e) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = t.createRenderer(e.body, {
                id: '0',
                encapsulation: i.T.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(t) {
            const e = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const n = Array.isArray(t) ? Object(s.i)(t) : t;
            return ue(this._renderer, null, e, 'register', [n]), new ce(e, this._renderer);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(i.H), i.fc(oe.d));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class ce extends s.c {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new le(this._id, t, e || {}, this._renderer);
        }
      }
      class le {
        constructor(t, e, n, i) {
          (this.id = t),
            (this.element = e),
            (this._renderer = i),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', n);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return ue(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen('done', t);
        }
        onStart(t) {
          this._listen('start', t);
        }
        onDestroy(t) {
          this._listen('destroy', t);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset');
        }
        setPosition(t) {
          this._command('setPosition', t);
        }
        getPosition() {
          return 0;
        }
      }
      function ue(t, e, n, i, r) {
        return t.setProperty(e, `@@${n}:${i}`, r);
      }
      let he = (() => {
        class t {
          constructor(t, e, n) {
            (this.delegate = t),
              (this.engine = e),
              (this._zone = n),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (e.onRemovalComplete = (t, e) => {
                e && e.parentNode(t) && e.removeChild(t.parentNode, t);
              });
          }
          createRenderer(t, e) {
            const n = this.delegate.createRenderer(t, e);
            if (!(t && e && e.data && e.data.animation)) {
              let t = this._rendererCache.get(n);
              return t || ((t = new de('', n, this.engine)), this._rendererCache.set(n, t)), t;
            }
            const i = e.id,
              r = e.id + '-' + this._currentId;
            this._currentId++, this.engine.register(r, t);
            const s = (e) => {
              Array.isArray(e) ? e.forEach(s) : this.engine.registerTrigger(i, r, t, e.name, e);
            };
            return e.data.animation.forEach(s), new pe(this, r, n, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(t, e, n) {
            t >= 0 && t < this._microtaskId
              ? this._zone.run(() => e(n))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((t) => {
                        const [e, n] = t;
                        e(n);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([e, n]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(), this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(i.H), i.fc(Bt), i.fc(i.B));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class de {
        constructor(t, e, n) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = n),
            (this.destroyNode = this.delegate.destroyNode ? (t) => e.destroyNode(t) : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate), this.delegate.destroy();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e), this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, n) {
          this.delegate.insertBefore(t, e, n), this.engine.onInsert(this.namespaceId, e, t, !0);
        }
        removeChild(t, e, n) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, n);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, n, i) {
          this.delegate.setAttribute(t, e, n, i);
        }
        removeAttribute(t, e, n) {
          this.delegate.removeAttribute(t, e, n);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, n, i) {
          this.delegate.setStyle(t, e, n, i);
        }
        removeStyle(t, e, n) {
          this.delegate.removeStyle(t, e, n);
        }
        setProperty(t, e, n) {
          '@' == e.charAt(0) && '@.disabled' == e ? this.disableAnimations(t, !!n) : this.delegate.setProperty(t, e, n);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, n) {
          return this.delegate.listen(t, e, n);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class pe extends de {
        constructor(t, e, n, i) {
          super(e, n, i), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, n) {
          '@' == e.charAt(0)
            ? '.' == e.charAt(1) && '@.disabled' == e
              ? this.disableAnimations(t, (n = void 0 === n || !!n))
              : this.engine.process(this.namespaceId, t, e.substr(1), n)
            : this.delegate.setProperty(t, e, n);
        }
        listen(t, e, n) {
          if ('@' == e.charAt(0)) {
            const i = (function (t) {
              switch (t) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return t;
              }
            })(t);
            let r = e.substr(1),
              s = '';
            return (
              '@' != r.charAt(0) &&
                ([r, s] = (function (t) {
                  const e = t.indexOf('.');
                  return [t.substring(0, e), t.substr(e + 1)];
                })(r)),
              this.engine.listen(this.namespaceId, i, r, s, (t) => {
                this.factory.scheduleListenerCallback(t._data || -1, n, t);
              })
            );
          }
          return this.delegate.listen(t, e, n);
        }
      }
      let fe = (() => {
        class t extends Bt {
          constructor(t, e, n) {
            super(t.body, e, n);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(oe.d), i.fc(S), i.fc(mt));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const me = new i.s('AnimationModuleType'),
        ge = [
          {
            provide: S,
            useFactory: function () {
              return 'function' == typeof se() ? new re() : new ne();
            },
          },
          { provide: me, useValue: 'BrowserAnimations' },
          { provide: s.b, useClass: ae },
          {
            provide: mt,
            useFactory: function () {
              return new gt();
            },
          },
          { provide: Bt, useClass: fe },
          {
            provide: i.H,
            useFactory: function (t, e, n) {
              return new he(t, e, n);
            },
            deps: [r.e, Bt, i.B],
          },
        ];
      let be = (() => {
        class t {}
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            providers: ge,
            imports: [r.a],
          })),
          t
        );
      })();
    },
    SeVD: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return u;
      });
      var i = n('ngJS'),
        r = n('NJ4a'),
        s = n('Lhse'),
        o = n('kJWO'),
        a = n('I55L'),
        c = n('c2HN'),
        l = n('XoHu');
      const u = (t) => {
        if (t && 'function' == typeof t[o.a])
          return (
            (u = t),
            (t) => {
              const e = u[o.a]();
              if ('function' != typeof e.subscribe)
                throw new TypeError('Provided object does not correctly implement Symbol.observable');
              return e.subscribe(t);
            }
          );
        if (Object(a.a)(t)) return Object(i.a)(t);
        if (Object(c.a)(t))
          return (
            (n = t),
            (t) => (
              n
                .then(
                  (e) => {
                    t.closed || (t.next(e), t.complete());
                  },
                  (e) => t.error(e)
                )
                .then(null, r.a),
              t
            )
          );
        if (t && 'function' == typeof t[s.a])
          return (
            (e = t),
            (t) => {
              const n = e[s.a]();
              for (;;) {
                const e = n.next();
                if (e.done) {
                  t.complete();
                  break;
                }
                if ((t.next(e.value), t.closed)) break;
              }
              return (
                'function' == typeof n.return &&
                  t.add(() => {
                    n.return && n.return();
                  }),
                t
              );
            }
          );
        {
          const e = Object(l.a)(t) ? 'an invalid object' : `'${t}'`;
          throw new TypeError(
            `You provided ${e} where a stream was expected.` +
              ' You can provide an Observable, Promise, Array, or Iterable.'
          );
        }
        var e, n, u;
      };
    },
    SpAZ: function (t, e, n) {
      'use strict';
      function i(t) {
        return t;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    UXun: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('jtHE');
      function r(t, e, n) {
        let r;
        return (
          (r = t && 'object' == typeof t ? t : { bufferSize: t, windowTime: e, refCount: !1, scheduler: n }),
          (t) =>
            t.lift(
              (function ({
                bufferSize: t = Number.POSITIVE_INFINITY,
                windowTime: e = Number.POSITIVE_INFINITY,
                refCount: n,
                scheduler: r,
              }) {
                let s,
                  o,
                  a = 0,
                  c = !1,
                  l = !1;
                return function (u) {
                  a++,
                    (s && !c) ||
                      ((c = !1),
                      (s = new i.a(t, e, r)),
                      (o = u.subscribe({
                        next(t) {
                          s.next(t);
                        },
                        error(t) {
                          (c = !0), s.error(t);
                        },
                        complete() {
                          (l = !0), (o = void 0), s.complete();
                        },
                      })));
                  const h = s.subscribe(this);
                  this.add(() => {
                    a--, h.unsubscribe(), o && !l && n && 0 === a && (o.unsubscribe(), (o = void 0), (s = void 0));
                  });
                };
              })(r)
            )
        );
      }
    },
    VRyK: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('HDdC'),
        r = n('z+Ro'),
        s = n('bHdf'),
        o = n('yCtX');
      function a(...t) {
        let e = Number.POSITIVE_INFINITY,
          n = null,
          a = t[t.length - 1];
        return (
          Object(r.a)(a)
            ? ((n = t.pop()), t.length > 1 && 'number' == typeof t[t.length - 1] && (e = t.pop()))
            : 'number' == typeof a && (e = t.pop()),
          null === n && 1 === t.length && t[0] instanceof i.a ? t[0] : Object(s.a)(e)(Object(o.a)(t, n))
        );
      }
    },
    VVgb: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('fXoL'),
        r = n('/t3+');
      const s = ['*'];
      let o = (() => {
        class t {
          constructor() {}
          ngOnInit() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-toolbar']],
            ngContentSelectors: s,
            decls: 2,
            vars: 0,
            consts: [['color', 'primary']],
            template: function (t, e) {
              1 & t && (i.uc(), i.bc(0, 'mat-toolbar', 0), i.tc(1), i.ac());
            },
            directives: [r.a],
            styles: ['mat-toolbar[_ngcontent-%COMP%]{height:100px;border-radius:13px}'],
          })),
          t
        );
      })();
    },
    WMd4: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('EY2u'),
        r = n('LRne'),
        s = n('z6cu');
      let o = (() => {
        class t {
          constructor(t, e, n) {
            (this.kind = t), (this.value = e), (this.error = n), (this.hasValue = 'N' === t);
          }
          observe(t) {
            switch (this.kind) {
              case 'N':
                return t.next && t.next(this.value);
              case 'E':
                return t.error && t.error(this.error);
              case 'C':
                return t.complete && t.complete();
            }
          }
          do(t, e, n) {
            switch (this.kind) {
              case 'N':
                return t && t(this.value);
              case 'E':
                return e && e(this.error);
              case 'C':
                return n && n();
            }
          }
          accept(t, e, n) {
            return t && 'function' == typeof t.next ? this.observe(t) : this.do(t, e, n);
          }
          toObservable() {
            switch (this.kind) {
              case 'N':
                return Object(r.a)(this.value);
              case 'E':
                return Object(s.a)(this.error);
              case 'C':
                return Object(i.b)();
            }
            throw new Error('unexpected notification kind value');
          }
          static createNext(e) {
            return void 0 !== e ? new t('N', e) : t.undefinedValueNotification;
          }
          static createError(e) {
            return new t('E', void 0, e);
          }
          static createComplete() {
            return t.completeNotification;
          }
        }
        return (t.completeNotification = new t('C')), (t.undefinedValueNotification = new t('N', void 0)), t;
      })();
    },
    Wp6s: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      }),
        n.d(e, 'b', function () {
          return l;
        });
      var i = n('R1ws'),
        r = n('FKr1'),
        s = n('fXoL');
      const o = ['*', [['mat-card-footer']]],
        a = ['*', 'mat-card-footer'];
      let c = (() => {
          class t {
            constructor(t) {
              this._animationMode = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Vb(i.a, 8));
            }),
            (t.ɵcmp = s.Pb({
              type: t,
              selectors: [['mat-card']],
              hostAttrs: [1, 'mat-card', 'mat-focus-indicator'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && s.Mb('_mat-animation-noopable', 'NoopAnimations' === e._animationMode);
              },
              exportAs: ['matCard'],
              ngContentSelectors: a,
              decls: 2,
              vars: 0,
              template: function (t, e) {
                1 & t && (s.uc(o), s.tc(0), s.tc(1, 1));
              },
              styles: [
                '.mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        l = (() => {
          class t {}
          return (
            (t.ɵmod = s.Tb({ type: t })),
            (t.ɵinj = s.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.g], r.g],
            })),
            t
          );
        })();
    },
    XNiG: function (t, e, n) {
      'use strict';
      n.d(e, 'b', function () {
        return l;
      }),
        n.d(e, 'a', function () {
          return u;
        });
      var i = n('HDdC'),
        r = n('7o/Q'),
        s = n('quSY'),
        o = n('9ppp'),
        a = n('Ylt2'),
        c = n('2QA8');
      class l extends r.a {
        constructor(t) {
          super(t), (this.destination = t);
        }
      }
      let u = (() => {
        class t extends i.a {
          constructor() {
            super(),
              (this.observers = []),
              (this.closed = !1),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          [c.a]() {
            return new l(this);
          }
          lift(t) {
            const e = new h(this, this);
            return (e.operator = t), e;
          }
          next(t) {
            if (this.closed) throw new o.a();
            if (!this.isStopped) {
              const { observers: e } = this,
                n = e.length,
                i = e.slice();
              for (let r = 0; r < n; r++) i[r].next(t);
            }
          }
          error(t) {
            if (this.closed) throw new o.a();
            (this.hasError = !0), (this.thrownError = t), (this.isStopped = !0);
            const { observers: e } = this,
              n = e.length,
              i = e.slice();
            for (let r = 0; r < n; r++) i[r].error(t);
            this.observers.length = 0;
          }
          complete() {
            if (this.closed) throw new o.a();
            this.isStopped = !0;
            const { observers: t } = this,
              e = t.length,
              n = t.slice();
            for (let i = 0; i < e; i++) n[i].complete();
            this.observers.length = 0;
          }
          unsubscribe() {
            (this.isStopped = !0), (this.closed = !0), (this.observers = null);
          }
          _trySubscribe(t) {
            if (this.closed) throw new o.a();
            return super._trySubscribe(t);
          }
          _subscribe(t) {
            if (this.closed) throw new o.a();
            return this.hasError
              ? (t.error(this.thrownError), s.a.EMPTY)
              : this.isStopped
              ? (t.complete(), s.a.EMPTY)
              : (this.observers.push(t), new a.a(this, t));
          }
          asObservable() {
            const t = new i.a();
            return (t.source = this), t;
          }
        }
        return (t.create = (t, e) => new h(t, e)), t;
      })();
      class h extends u {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          const { destination: e } = this;
          e && e.next && e.next(t);
        }
        error(t) {
          const { destination: e } = this;
          e && e.error && this.destination.error(t);
        }
        complete() {
          const { destination: t } = this;
          t && t.complete && this.destination.complete();
        }
        _subscribe(t) {
          const { source: e } = this;
          return e ? this.source.subscribe(t) : s.a.EMPTY;
        }
      }
    },
    Xa2L: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return _;
      }),
        n.d(e, 'b', function () {
          return b;
        });
      var i = n('fXoL'),
        r = n('ofXK'),
        s = n('FKr1'),
        o = n('8LU1'),
        a = n('nLfN'),
        c = n('R1ws');
      function l(t, e) {
        if ((1 & t && (i.mc(), i.Wb(0, 'circle', 3)), 2 & t)) {
          const t = i.nc();
          i.Jc('animation-name', 'mat-progress-spinner-stroke-rotate-' + t.diameter)(
            'stroke-dashoffset',
            t._strokeDashOffset,
            'px'
          )('stroke-dasharray', t._strokeCircumference, 'px')('stroke-width', t._circleStrokeWidth, '%'),
            i.Jb('r', t._circleRadius);
        }
      }
      function u(t, e) {
        if ((1 & t && (i.mc(), i.Wb(0, 'circle', 3)), 2 & t)) {
          const t = i.nc();
          i.Jc('stroke-dashoffset', t._strokeDashOffset, 'px')('stroke-dasharray', t._strokeCircumference, 'px')(
            'stroke-width',
            t._circleStrokeWidth,
            '%'
          ),
            i.Jb('r', t._circleRadius);
        }
      }
      function h(t, e) {
        if ((1 & t && (i.mc(), i.Wb(0, 'circle', 3)), 2 & t)) {
          const t = i.nc();
          i.Jc('animation-name', 'mat-progress-spinner-stroke-rotate-' + t.diameter)(
            'stroke-dashoffset',
            t._strokeDashOffset,
            'px'
          )('stroke-dasharray', t._strokeCircumference, 'px')('stroke-width', t._circleStrokeWidth, '%'),
            i.Jb('r', t._circleRadius);
        }
      }
      function d(t, e) {
        if ((1 & t && (i.mc(), i.Wb(0, 'circle', 3)), 2 & t)) {
          const t = i.nc();
          i.Jc('stroke-dashoffset', t._strokeDashOffset, 'px')('stroke-dasharray', t._strokeCircumference, 'px')(
            'stroke-width',
            t._circleStrokeWidth,
            '%'
          ),
            i.Jb('r', t._circleRadius);
        }
      }
      class p {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const f = Object(s.v)(p, 'primary'),
        m = new i.s('mat-progress-spinner-default-options', {
          providedIn: 'root',
          factory: function () {
            return { diameter: 100 };
          },
        });
      let g = (() => {
          class t extends f {
            constructor(e, n, i, r, s) {
              super(e),
                (this._elementRef = e),
                (this._document = i),
                (this._diameter = 100),
                (this._value = 0),
                (this._fallbackAnimation = !1),
                (this.mode = 'determinate');
              const o = t._diameters;
              o.has(i.head) || o.set(i.head, new Set([100])),
                (this._fallbackAnimation = n.EDGE || n.TRIDENT),
                (this._noopAnimations = 'NoopAnimations' === r && !!s && !s._forceAnimations),
                s && (s.diameter && (this.diameter = s.diameter), s.strokeWidth && (this.strokeWidth = s.strokeWidth));
            }
            get diameter() {
              return this._diameter;
            }
            set diameter(t) {
              (this._diameter = Object(o.f)(t)), !this._fallbackAnimation && this._styleRoot && this._attachStyleNode();
            }
            get strokeWidth() {
              return this._strokeWidth || this.diameter / 10;
            }
            set strokeWidth(t) {
              this._strokeWidth = Object(o.f)(t);
            }
            get value() {
              return 'determinate' === this.mode ? this._value : 0;
            }
            set value(t) {
              this._value = Math.max(0, Math.min(100, Object(o.f)(t)));
            }
            ngOnInit() {
              const t = this._elementRef.nativeElement;
              (this._styleRoot = Object(a.c)(t) || this._document.head),
                this._attachStyleNode(),
                t.classList.add(
                  `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`
                );
            }
            get _circleRadius() {
              return (this.diameter - 10) / 2;
            }
            get _viewBox() {
              const t = 2 * this._circleRadius + this.strokeWidth;
              return `0 0 ${t} ${t}`;
            }
            get _strokeCircumference() {
              return 2 * Math.PI * this._circleRadius;
            }
            get _strokeDashOffset() {
              return 'determinate' === this.mode
                ? (this._strokeCircumference * (100 - this._value)) / 100
                : this._fallbackAnimation && 'indeterminate' === this.mode
                ? 0.2 * this._strokeCircumference
                : null;
            }
            get _circleStrokeWidth() {
              return (this.strokeWidth / this.diameter) * 100;
            }
            _attachStyleNode() {
              const e = this._styleRoot,
                n = this._diameter,
                i = t._diameters;
              let r = i.get(e);
              if (!r || !r.has(n)) {
                const t = this._document.createElement('style');
                t.setAttribute('mat-spinner-animation', n + ''),
                  (t.textContent = this._getAnimationText()),
                  e.appendChild(t),
                  r || ((r = new Set()), i.set(e, r)),
                  r.add(n);
              }
            }
            _getAnimationText() {
              return '\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n'
                .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)
                .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)
                .replace(/DIAMETER/g, `${this.diameter}`);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(a.a), i.Vb(r.d, 8), i.Vb(c.a, 8), i.Vb(m));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['mat-progress-spinner']],
              hostAttrs: ['role', 'progressbar', 1, 'mat-progress-spinner'],
              hostVars: 10,
              hostBindings: function (t, e) {
                2 & t &&
                  (i.Jb('aria-valuemin', 'determinate' === e.mode ? 0 : null)(
                    'aria-valuemax',
                    'determinate' === e.mode ? 100 : null
                  )('aria-valuenow', 'determinate' === e.mode ? e.value : null)('mode', e.mode),
                  i.Jc('width', e.diameter, 'px')('height', e.diameter, 'px'),
                  i.Mb('_mat-animation-noopable', e._noopAnimations));
              },
              inputs: {
                color: 'color',
                mode: 'mode',
                diameter: 'diameter',
                strokeWidth: 'strokeWidth',
                value: 'value',
              },
              exportAs: ['matProgressSpinner'],
              features: [i.Fb],
              decls: 3,
              vars: 8,
              consts: [
                ['preserveAspectRatio', 'xMidYMid meet', 'focusable', 'false', 3, 'ngSwitch'],
                [
                  'cx',
                  '50%',
                  'cy',
                  '50%',
                  3,
                  'animation-name',
                  'stroke-dashoffset',
                  'stroke-dasharray',
                  'stroke-width',
                  4,
                  'ngSwitchCase',
                ],
                [
                  'cx',
                  '50%',
                  'cy',
                  '50%',
                  3,
                  'stroke-dashoffset',
                  'stroke-dasharray',
                  'stroke-width',
                  4,
                  'ngSwitchCase',
                ],
                ['cx', '50%', 'cy', '50%'],
              ],
              template: function (t, e) {
                1 & t &&
                  (i.mc(), i.bc(0, 'svg', 0), i.Kc(1, l, 1, 9, 'circle', 1), i.Kc(2, u, 1, 7, 'circle', 2), i.ac()),
                  2 & t &&
                    (i.Jc('width', e.diameter, 'px')('height', e.diameter, 'px'),
                    i.vc('ngSwitch', 'indeterminate' === e.mode),
                    i.Jb('viewBox', e._viewBox),
                    i.Ib(1),
                    i.vc('ngSwitchCase', !0),
                    i.Ib(1),
                    i.vc('ngSwitchCase', !1));
              },
              directives: [r.n, r.o],
              styles: [
                '.mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            (t._diameters = new WeakMap()),
            t
          );
        })(),
        b = (() => {
          class t extends g {
            constructor(t, e, n, i, r) {
              super(t, e, n, i, r), (this.mode = 'indeterminate');
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(a.a), i.Vb(r.d, 8), i.Vb(c.a, 8), i.Vb(m));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['mat-spinner']],
              hostAttrs: ['role', 'progressbar', 'mode', 'indeterminate', 1, 'mat-spinner', 'mat-progress-spinner'],
              hostVars: 6,
              hostBindings: function (t, e) {
                2 & t &&
                  (i.Jc('width', e.diameter, 'px')('height', e.diameter, 'px'),
                  i.Mb('_mat-animation-noopable', e._noopAnimations));
              },
              inputs: { color: 'color' },
              features: [i.Fb],
              decls: 3,
              vars: 8,
              consts: [
                ['preserveAspectRatio', 'xMidYMid meet', 'focusable', 'false', 3, 'ngSwitch'],
                [
                  'cx',
                  '50%',
                  'cy',
                  '50%',
                  3,
                  'animation-name',
                  'stroke-dashoffset',
                  'stroke-dasharray',
                  'stroke-width',
                  4,
                  'ngSwitchCase',
                ],
                [
                  'cx',
                  '50%',
                  'cy',
                  '50%',
                  3,
                  'stroke-dashoffset',
                  'stroke-dasharray',
                  'stroke-width',
                  4,
                  'ngSwitchCase',
                ],
                ['cx', '50%', 'cy', '50%'],
              ],
              template: function (t, e) {
                1 & t &&
                  (i.mc(), i.bc(0, 'svg', 0), i.Kc(1, h, 1, 9, 'circle', 1), i.Kc(2, d, 1, 7, 'circle', 2), i.ac()),
                  2 & t &&
                    (i.Jc('width', e.diameter, 'px')('height', e.diameter, 'px'),
                    i.vc('ngSwitch', 'indeterminate' === e.mode),
                    i.Jb('viewBox', e._viewBox),
                    i.Ib(1),
                    i.vc('ngSwitchCase', !0),
                    i.Ib(1),
                    i.vc('ngSwitchCase', !1));
              },
              directives: [r.n, r.o],
              styles: [
                '.mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        _ = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[s.g, r.c], s.g],
            })),
            t
          );
        })();
    },
    XoHu: function (t, e, n) {
      'use strict';
      function i(t) {
        return null !== t && 'object' == typeof t;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    Y7HM: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('DH7j');
      function r(t) {
        return !Object(i.a)(t) && t - parseFloat(t) + 1 >= 0;
      }
    },
    YcCt: function (t, e, n) {
      'use strict';
      function i(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e);
      }
      t.exports = function (t, e, n, r) {
        n = n || '=';
        var s = {};
        if ('string' != typeof t || 0 === t.length) return s;
        var o = /\+/g;
        t = t.split((e = e || '&'));
        var a = 1e3;
        r && 'number' == typeof r.maxKeys && (a = r.maxKeys);
        var c = t.length;
        a > 0 && c > a && (c = a);
        for (var l = 0; l < c; ++l) {
          var u,
            h,
            d,
            p,
            f = t[l].replace(o, '%20'),
            m = f.indexOf(n);
          m >= 0 ? ((u = f.substr(0, m)), (h = f.substr(m + 1))) : ((u = f), (h = '')),
            (d = decodeURIComponent(u)),
            (p = decodeURIComponent(h)),
            i(s, d) ? (Array.isArray(s[d]) ? s[d].push(p) : (s[d] = [s[d], p])) : (s[d] = p);
        }
        return s;
      };
    },
    Ylt2: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('quSY');
      class r extends i.a {
        constructor(t, e) {
          super(), (this.subject = t), (this.subscriber = e), (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const t = this.subject,
            e = t.observers;
          if (((this.subject = null), !e || 0 === e.length || t.isStopped || t.closed)) return;
          const n = e.indexOf(this.subscriber);
          -1 !== n && e.splice(n, 1);
        }
      }
    },
    YuTi: function (t, e) {
      t.exports = function (t) {
        return (
          t.webpackPolyfill ||
            ((t.deprecate = function () {}),
            (t.paths = []),
            t.children || (t.children = []),
            Object.defineProperty(t, 'loaded', {
              enumerable: !0,
              get: function () {
                return t.l;
              },
            }),
            Object.defineProperty(t, 'id', {
              enumerable: !0,
              get: function () {
                return t.i;
              },
            }),
            (t.webpackPolyfill = 1)),
          t
        );
      };
    },
    ZUHj: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('51Dv'),
        r = n('SeVD'),
        s = n('HDdC');
      function o(t, e, n, o, a = new i.a(t, n, o)) {
        if (!a.closed) return e instanceof s.a ? e.subscribe(a) : Object(r.a)(e)(a);
      }
    },
    a1du: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('fXoL'),
        r = n('/t3+'),
        s = n('iQeY'),
        o = n('f0Cb');
      const a = [[['', 'card-body', '']], [['', 'card-footer', '']]],
        c = ['[card-body]', '[card-footer]'];
      let l = (() => {
        class t {
          constructor() {
            (this.className = ''), (this.title = '');
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-card']],
            inputs: { className: 'className', title: 'title' },
            ngContentSelectors: c,
            decls: 9,
            vars: 2,
            consts: [
              [1, 'card-wrapper', 'mat-elevation-z8'],
              ['color', 'primary'],
              [3, 'data', 'margin'],
              [1, 'body-wrapper'],
              [1, 'footer-wrapper'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.uc(a),
                i.bc(0, 'div', 0),
                i.bc(1, 'mat-toolbar', 1),
                i.bc(2, 'mat-toolbar-row'),
                i.Wb(3, 'app-typography', 2),
                i.ac(),
                i.ac(),
                i.bc(4, 'div', 3),
                i.tc(5),
                i.ac(),
                i.Wb(6, 'mat-divider'),
                i.bc(7, 'div', 4),
                i.tc(8, 1),
                i.ac(),
                i.ac()),
                2 & t && (i.Ib(3), i.vc('data', e.title)('margin', !1));
            },
            directives: [r.a, r.c, s.a, o.a],
            styles: [
              '.card-wrapper[_ngcontent-%COMP%]   .header-wrapper[_ngcontent-%COMP%]{background-color:#0277bd;color:#fff;padding:15px 20px}.card-wrapper[_ngcontent-%COMP%]   .body-wrapper[_ngcontent-%COMP%], .card-wrapper[_ngcontent-%COMP%]   .footer-wrapper[_ngcontent-%COMP%]{padding:15px 20px}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    aVjK: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return u;
      });
      var i = n('mrSG'),
        r = n('AcyG'),
        s = n('mxbh'),
        o = n('71bx'),
        a = n('Blkl'),
        c = n('fXoL');
      const l = Object(o.a)();
      let u = (() => {
        let t = class extends a.a {};
        return (
          (t.ɵfac = function (e) {
            return h(e || t);
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          (t = Object(i.b)(
            [
              Object(s.d)(),
              Object(r.d)({ name: 'players', defaults: Object.assign(Object.assign({}, l), { total: 0 }) }),
            ],
            t
          )),
          t
        );
      })();
      const h = c.dc(u);
    },
    alHb: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('0FS3'),
        r = n('fXoL');
      let s = (() => {
        class t extends i.c {}
        return (
          (t.ɵfac = function (e) {
            return o(e || t);
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['app-formly-hide']],
            features: [r.Fb],
            decls: 0,
            vars: 0,
            template: function (t, e) {},
            styles: [''],
          })),
          t
        );
      })();
      const o = r.dc(s);
    },
    auXs: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      }),
        n.d(e, 'd', function () {
          return h;
        }),
        n.d(e, 'e', function () {
          return d;
        }),
        n.d(e, 'b', function () {
          return p;
        }),
        n.d(e, 'c', function () {
          return f;
        });
      var i = n('mrSG'),
        r = n('bRMp'),
        s = n('fXoL'),
        o = n('ptKI'),
        a = n('tyNb');
      let c = (() => {
        class t {
          constructor(t, e) {
            (this._authService = t), (this._router = e);
          }
          canActivate(t) {
            return Object(i.a)(this, void 0, void 0, function* () {
              if (!this._authService.user) {
                const e = yield this._authService.me();
                if (!e || !e.roles.includes(t.data.expectedRole)) return this._router.navigateByUrl(r.a.AUTH.path);
              }
              return !0;
            });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.fc(o.g), s.fc(a.c));
          }),
          (t.ɵprov = s.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      var l = n('o80G'),
        u = n('+fa1');
      let h = (() => {
          class t {
            constructor(t, e) {
              (this._gamesService = t), (this.router = e);
            }
            canActivate(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                const e = t.paramMap.get('id'),
                  n = yield this._gamesService.hasAccess({ id: e });
                return (
                  (null == n ? void 0 : n.access) || this.router.navigate([l.a.GAME_AUTH.fullPath.replace(':id', e)]),
                  null == n ? void 0 : n.access
                );
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.fc(u.b), s.fc(a.c));
            }),
            (t.ɵprov = s.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        d = (() => {
          class t {
            constructor(t, e) {
              (this._gamesService = t), (this._router = e);
            }
            canActivate(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                const e = t.paramMap.get('id');
                return (
                  !!(yield this._gamesService.getOne({ id: e })) || (this._router.navigateByUrl(l.a.GAMES.fullPath), !1)
                );
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.fc(u.b), s.fc(a.c));
            }),
            (t.ɵprov = s.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const p = [c],
        f = [h, d];
    },
    bHdf: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('5+tZ'),
        r = n('SpAZ');
      function s(t = Number.POSITIVE_INFINITY) {
        return Object(i.a)(r.a, t);
      }
    },
    bOdf: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('5+tZ');
      function r(t, e) {
        return Object(i.a)(t, e, 1);
      }
    },
    bRMp: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('jETI');
      const r = Object(i.a)({
        AUTH: { path: 'auth', fullPath: '/auth' },
        ADMIN: { path: 'admin', fullPath: '/admin' },
        CLIENT: { path: '', fullPath: '/' },
      });
    },
    bSwM: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return v;
      }),
        n.d(e, 'b', function () {
          return O;
        }),
        n.d(e, 'c', function () {
          return x;
        });
      var i = n('8LU1'),
        r = n('fXoL'),
        s = n('3Pt+'),
        o = n('FKr1'),
        a = n('R1ws'),
        c = n('GU7r'),
        l = n('u47x');
      const u = ['input'],
        h = function () {
          return { enterDuration: 150 };
        },
        d = ['*'],
        p = new r.s('mat-checkbox-default-options', {
          providedIn: 'root',
          factory: function () {
            return { color: 'accent', clickAction: 'check-indeterminate' };
          },
        }),
        f = new r.s('mat-checkbox-click-action');
      let m = 0;
      const g = { provide: s.l, useExisting: Object(r.Y)(() => v), multi: !0 };
      class b {}
      class _ {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const y = Object(o.z)(Object(o.v)(Object(o.w)(Object(o.x)(_))));
      let v = (() => {
        class t extends y {
          constructor(t, e, n, i, s, o, a, c) {
            super(t),
              (this._changeDetectorRef = e),
              (this._focusMonitor = n),
              (this._ngZone = i),
              (this._clickAction = o),
              (this._animationMode = a),
              (this._options = c),
              (this.ariaLabel = ''),
              (this.ariaLabelledby = null),
              (this._uniqueId = `mat-checkbox-${++m}`),
              (this.id = this._uniqueId),
              (this.labelPosition = 'after'),
              (this.name = null),
              (this.change = new r.p()),
              (this.indeterminateChange = new r.p()),
              (this._onTouched = () => {}),
              (this._currentAnimationClass = ''),
              (this._currentCheckState = 0),
              (this._controlValueAccessorChangeFn = () => {}),
              (this._checked = !1),
              (this._disabled = !1),
              (this._indeterminate = !1),
              (this._options = this._options || {}),
              this._options.color && (this.color = this._options.color),
              (this.tabIndex = parseInt(s) || 0),
              this._focusMonitor.monitor(t, !0).subscribe((t) => {
                t ||
                  Promise.resolve().then(() => {
                    this._onTouched(), e.markForCheck();
                  });
              }),
              (this._clickAction = this._clickAction || this._options.clickAction);
          }
          get inputId() {
            return `${this.id || this._uniqueId}-input`;
          }
          get required() {
            return this._required;
          }
          set required(t) {
            this._required = Object(i.c)(t);
          }
          ngAfterViewInit() {
            this._syncIndeterminate(this._indeterminate);
          }
          ngAfterViewChecked() {}
          ngOnDestroy() {
            this._focusMonitor.stopMonitoring(this._elementRef);
          }
          get checked() {
            return this._checked;
          }
          set checked(t) {
            t != this.checked && ((this._checked = t), this._changeDetectorRef.markForCheck());
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            const e = Object(i.c)(t);
            e !== this.disabled && ((this._disabled = e), this._changeDetectorRef.markForCheck());
          }
          get indeterminate() {
            return this._indeterminate;
          }
          set indeterminate(t) {
            const e = t != this._indeterminate;
            (this._indeterminate = Object(i.c)(t)),
              e &&
                (this._transitionCheckState(this._indeterminate ? 3 : this.checked ? 1 : 2),
                this.indeterminateChange.emit(this._indeterminate)),
              this._syncIndeterminate(this._indeterminate);
          }
          _isRippleDisabled() {
            return this.disableRipple || this.disabled;
          }
          _onLabelTextChange() {
            this._changeDetectorRef.detectChanges();
          }
          writeValue(t) {
            this.checked = !!t;
          }
          registerOnChange(t) {
            this._controlValueAccessorChangeFn = t;
          }
          registerOnTouched(t) {
            this._onTouched = t;
          }
          setDisabledState(t) {
            this.disabled = t;
          }
          _getAriaChecked() {
            return this.checked ? 'true' : this.indeterminate ? 'mixed' : 'false';
          }
          _transitionCheckState(t) {
            let e = this._currentCheckState,
              n = this._elementRef.nativeElement;
            if (
              e !== t &&
              (this._currentAnimationClass.length > 0 && n.classList.remove(this._currentAnimationClass),
              (this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(e, t)),
              (this._currentCheckState = t),
              this._currentAnimationClass.length > 0)
            ) {
              n.classList.add(this._currentAnimationClass);
              const t = this._currentAnimationClass;
              this._ngZone.runOutsideAngular(() => {
                setTimeout(() => {
                  n.classList.remove(t);
                }, 1e3);
              });
            }
          }
          _emitChangeEvent() {
            const t = new b();
            (t.source = this),
              (t.checked = this.checked),
              this._controlValueAccessorChangeFn(this.checked),
              this.change.emit(t);
          }
          toggle() {
            this.checked = !this.checked;
          }
          _onInputClick(t) {
            t.stopPropagation(),
              this.disabled || 'noop' === this._clickAction
                ? this.disabled ||
                  'noop' !== this._clickAction ||
                  ((this._inputElement.nativeElement.checked = this.checked),
                  (this._inputElement.nativeElement.indeterminate = this.indeterminate))
                : (this.indeterminate &&
                    'check' !== this._clickAction &&
                    Promise.resolve().then(() => {
                      (this._indeterminate = !1), this.indeterminateChange.emit(this._indeterminate);
                    }),
                  this.toggle(),
                  this._transitionCheckState(this._checked ? 1 : 2),
                  this._emitChangeEvent());
          }
          focus(t = 'keyboard', e) {
            this._focusMonitor.focusVia(this._inputElement, t, e);
          }
          _onInteractionEvent(t) {
            t.stopPropagation();
          }
          _getAnimationClassForCheckStateTransition(t, e) {
            if ('NoopAnimations' === this._animationMode) return '';
            let n = '';
            switch (t) {
              case 0:
                if (1 === e) n = 'unchecked-checked';
                else {
                  if (3 != e) return '';
                  n = 'unchecked-indeterminate';
                }
                break;
              case 2:
                n = 1 === e ? 'unchecked-checked' : 'unchecked-indeterminate';
                break;
              case 1:
                n = 2 === e ? 'checked-unchecked' : 'checked-indeterminate';
                break;
              case 3:
                n = 1 === e ? 'indeterminate-checked' : 'indeterminate-unchecked';
            }
            return `mat-checkbox-anim-${n}`;
          }
          _syncIndeterminate(t) {
            const e = this._inputElement;
            e && (e.nativeElement.indeterminate = t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(
              r.Vb(r.m),
              r.Vb(r.i),
              r.Vb(l.g),
              r.Vb(r.B),
              r.gc('tabindex'),
              r.Vb(f, 8),
              r.Vb(a.a, 8),
              r.Vb(p, 8)
            );
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['mat-checkbox']],
            viewQuery: function (t, e) {
              var n;
              1 & t && (r.Rc(u, !0), r.Rc(o.q, !0)),
                2 & t &&
                  (r.Ac((n = r.kc())) && (e._inputElement = n.first), r.Ac((n = r.kc())) && (e.ripple = n.first));
            },
            hostAttrs: [1, 'mat-checkbox'],
            hostVars: 12,
            hostBindings: function (t, e) {
              2 & t &&
                (r.ec('id', e.id),
                r.Jb('tabindex', null),
                r.Mb('mat-checkbox-indeterminate', e.indeterminate)('mat-checkbox-checked', e.checked)(
                  'mat-checkbox-disabled',
                  e.disabled
                )('mat-checkbox-label-before', 'before' == e.labelPosition)(
                  '_mat-animation-noopable',
                  'NoopAnimations' === e._animationMode
                ));
            },
            inputs: {
              disableRipple: 'disableRipple',
              color: 'color',
              tabIndex: 'tabIndex',
              ariaLabel: ['aria-label', 'ariaLabel'],
              ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
              id: 'id',
              labelPosition: 'labelPosition',
              name: 'name',
              required: 'required',
              checked: 'checked',
              disabled: 'disabled',
              indeterminate: 'indeterminate',
              value: 'value',
            },
            outputs: { change: 'change', indeterminateChange: 'indeterminateChange' },
            exportAs: ['matCheckbox'],
            features: [r.Hb([g]), r.Fb],
            ngContentSelectors: d,
            decls: 17,
            vars: 19,
            consts: [
              [1, 'mat-checkbox-layout'],
              ['label', ''],
              [1, 'mat-checkbox-inner-container'],
              [
                'type',
                'checkbox',
                1,
                'mat-checkbox-input',
                'cdk-visually-hidden',
                3,
                'id',
                'required',
                'checked',
                'disabled',
                'tabIndex',
                'change',
                'click',
              ],
              ['input', ''],
              [
                'matRipple',
                '',
                1,
                'mat-checkbox-ripple',
                'mat-focus-indicator',
                3,
                'matRippleTrigger',
                'matRippleDisabled',
                'matRippleRadius',
                'matRippleCentered',
                'matRippleAnimation',
              ],
              [1, 'mat-ripple-element', 'mat-checkbox-persistent-ripple'],
              [1, 'mat-checkbox-frame'],
              [1, 'mat-checkbox-background'],
              [
                'version',
                '1.1',
                'focusable',
                'false',
                'viewBox',
                '0 0 24 24',
                0,
                'xml',
                'space',
                'preserve',
                1,
                'mat-checkbox-checkmark',
              ],
              ['fill', 'none', 'stroke', 'white', 'd', 'M4.1,12.7 9,17.6 20.3,6.3', 1, 'mat-checkbox-checkmark-path'],
              [1, 'mat-checkbox-mixedmark'],
              [1, 'mat-checkbox-label', 3, 'cdkObserveContent'],
              ['checkboxLabel', ''],
              [2, 'display', 'none'],
            ],
            template: function (t, e) {
              if (
                (1 & t &&
                  (r.uc(),
                  r.bc(0, 'label', 0, 1),
                  r.bc(2, 'div', 2),
                  r.bc(3, 'input', 3, 4),
                  r.jc('change', function (t) {
                    return e._onInteractionEvent(t);
                  })('click', function (t) {
                    return e._onInputClick(t);
                  }),
                  r.ac(),
                  r.bc(5, 'div', 5),
                  r.Wb(6, 'div', 6),
                  r.ac(),
                  r.Wb(7, 'div', 7),
                  r.bc(8, 'div', 8),
                  r.mc(),
                  r.bc(9, 'svg', 9),
                  r.Wb(10, 'path', 10),
                  r.ac(),
                  r.lc(),
                  r.Wb(11, 'div', 11),
                  r.ac(),
                  r.ac(),
                  r.bc(12, 'span', 12, 13),
                  r.jc('cdkObserveContent', function () {
                    return e._onLabelTextChange();
                  }),
                  r.bc(14, 'span', 14),
                  r.Mc(15, '\xa0'),
                  r.ac(),
                  r.tc(16),
                  r.ac(),
                  r.ac()),
                2 & t)
              ) {
                const t = r.Bc(1),
                  n = r.Bc(13);
                r.Jb('for', e.inputId),
                  r.Ib(2),
                  r.Mb('mat-checkbox-inner-container-no-side-margin', !n.textContent || !n.textContent.trim()),
                  r.Ib(1),
                  r.vc('id', e.inputId)('required', e.required)('checked', e.checked)('disabled', e.disabled)(
                    'tabIndex',
                    e.tabIndex
                  ),
                  r.Jb('value', e.value)('name', e.name)('aria-label', e.ariaLabel || null)(
                    'aria-labelledby',
                    e.ariaLabelledby
                  )('aria-checked', e._getAriaChecked()),
                  r.Ib(2),
                  r.vc('matRippleTrigger', t)('matRippleDisabled', e._isRippleDisabled())('matRippleRadius', 20)(
                    'matRippleCentered',
                    !0
                  )('matRippleAnimation', r.wc(18, h));
              }
            },
            directives: [o.q, c.a],
            styles: [
              '@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const w = { provide: s.k, useExisting: Object(r.Y)(() => x), multi: !0 };
      let x = (() => {
        class t extends s.b {}
        return (
          (t.ɵfac = function (e) {
            return C(e || t);
          }),
          (t.ɵdir = r.Qb({
            type: t,
            selectors: [
              ['mat-checkbox', 'required', '', 'formControlName', ''],
              ['mat-checkbox', 'required', '', 'formControl', ''],
              ['mat-checkbox', 'required', '', 'ngModel', ''],
            ],
            features: [r.Hb([w]), r.Fb],
          })),
          t
        );
      })();
      const C = r.dc(x);
      let k = (() => {
          class t {}
          return (
            (t.ɵmod = r.Tb({ type: t })),
            (t.ɵinj = r.Sb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        O = (() => {
          class t {}
          return (
            (t.ɵmod = r.Tb({ type: t })),
            (t.ɵinj = r.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[o.r, o.g, c.c, k], o.g, k],
            })),
            t
          );
        })();
    },
    bTqV: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return d;
      }),
        n.d(e, 'b', function () {
          return p;
        });
      var i = n('FKr1'),
        r = n('R1ws'),
        s = n('fXoL'),
        o = n('u47x');
      const a = ['mat-button', ''],
        c = ['*'],
        l = [
          'mat-button',
          'mat-flat-button',
          'mat-icon-button',
          'mat-raised-button',
          'mat-stroked-button',
          'mat-mini-fab',
          'mat-fab',
        ];
      class u {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const h = Object(i.v)(Object(i.x)(Object(i.w)(u)));
      let d = (() => {
          class t extends h {
            constructor(t, e, n) {
              super(t),
                (this._focusMonitor = e),
                (this._animationMode = n),
                (this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab')),
                (this.isIconButton = this._hasHostAttributes('mat-icon-button'));
              for (const i of l) this._hasHostAttributes(i) && this._getHostElement().classList.add(i);
              t.nativeElement.classList.add('mat-button-base'),
                this._focusMonitor.monitor(this._elementRef, !0),
                this.isRoundButton && (this.color = 'accent');
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(t = 'program', e) {
              this._focusMonitor.focusVia(this._getHostElement(), t, e);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...t) {
              return t.some((t) => this._getHostElement().hasAttribute(t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Vb(s.m), s.Vb(o.g), s.Vb(r.a, 8));
            }),
            (t.ɵcmp = s.Pb({
              type: t,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-icon-button', ''],
                ['button', 'mat-fab', ''],
                ['button', 'mat-mini-fab', ''],
                ['button', 'mat-stroked-button', ''],
                ['button', 'mat-flat-button', ''],
              ],
              viewQuery: function (t, e) {
                var n;
                1 & t && s.Rc(i.q, !0), 2 & t && s.Ac((n = s.kc())) && (e.ripple = n.first);
              },
              hostAttrs: [1, 'mat-focus-indicator'],
              hostVars: 3,
              hostBindings: function (t, e) {
                2 & t &&
                  (s.Jb('disabled', e.disabled || null),
                  s.Mb('_mat-animation-noopable', 'NoopAnimations' === e._animationMode));
              },
              inputs: { disabled: 'disabled', disableRipple: 'disableRipple', color: 'color' },
              exportAs: ['matButton'],
              features: [s.Fb],
              attrs: a,
              ngContentSelectors: c,
              decls: 4,
              vars: 5,
              consts: [
                [1, 'mat-button-wrapper'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-button-focus-overlay'],
              ],
              template: function (t, e) {
                1 & t && (s.uc(), s.bc(0, 'span', 0), s.tc(1), s.ac(), s.Wb(2, 'div', 1), s.Wb(3, 'div', 2)),
                  2 & t &&
                    (s.Ib(2),
                    s.Mb('mat-button-ripple-round', e.isRoundButton || e.isIconButton),
                    s.vc('matRippleDisabled', e._isRippleDisabled())('matRippleCentered', e.isIconButton)(
                      'matRippleTrigger',
                      e._getHostElement()
                    ));
              },
              directives: [i.q],
              styles: [
                '.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        p = (() => {
          class t {}
          return (
            (t.ɵmod = s.Tb({ type: t })),
            (t.ɵinj = s.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[i.r, i.g], i.g],
            })),
            t
          );
        })();
    },
    baZu: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('fXoL'),
        r = n('ofXK'),
        s = n('PnYb');
      function o(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'app-button', 2),
            i.jc('clicked', function (n) {
              return i.Dc(t), e.$implicit.onClick(n);
            }),
            i.ac();
        }
        if (2 & t) {
          const t = e.$implicit;
          i.vc('color', t.color)('text', t.name);
        }
      }
      let a = (() => {
        class t {
          constructor() {}
          trackByFn(t, e) {
            return t;
          }
          ngOnInit() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-actions']],
            inputs: { actions: 'actions' },
            decls: 2,
            vars: 2,
            consts: [
              [1, 'actions-wrapper'],
              [3, 'color', 'text', 'clicked', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
              [3, 'color', 'text', 'clicked'],
            ],
            template: function (t, e) {
              1 & t && (i.bc(0, 'div', 0), i.Kc(1, o, 1, 2, 'app-button', 1), i.ac()),
                2 & t && (i.Ib(1), i.vc('ngForOf', e.actions)('ngForTrackBy', e.trackByFn));
            },
            directives: [r.k, s.a],
            styles: [
              '.actions-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;padding:15px 0}.actions-wrapper[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%]{display:block;margin-right:15px}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    c2HN: function (t, e, n) {
      'use strict';
      function i(t) {
        return !!t && 'function' != typeof t.subscribe && 'function' == typeof t.then;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    c2SN: function (t, e, n) {
      'use strict';
      n.d(e, 'b', function () {
        return x;
      }),
        n.d(e, 'a', function () {
          return y;
        });
      var i = n('ofXK'),
        r = n('3Pt+'),
        s = n('kmnG'),
        o = n('fXoL'),
        a = n('0FS3'),
        c = n('XNiG'),
        l = n('u47x');
      const u = ['matPrefix'],
        h = ['matSuffix'],
        d = ['fieldComponent'];
      function p(t, e) {
        1 & t && (o.bc(0, 'span', 10), o.Mc(1, '*'), o.ac());
      }
      function f(t, e) {
        if ((1 & t && (o.bc(0, 'mat-label'), o.Mc(1), o.Kc(2, p, 2, 0, 'span', 9), o.ac()), 2 & t)) {
          const t = o.nc();
          o.Ib(1), o.Oc(' ', t.to.label, ' '), o.Ib(1), o.vc('ngIf', t.to.required && !0 !== t.to.hideRequiredMarker);
        }
      }
      function m(t, e) {
        1 & t && o.Xb(0);
      }
      function g(t, e) {
        1 & t && o.Xb(0);
      }
      function b(t, e) {
        if ((1 & t && (o.bc(0, 'mat-hint', 6), o.Mc(1), o.ac()), 2 & t)) {
          const t = o.nc();
          o.vc('id', null), o.Ib(1), o.Nc(t.to.description);
        }
      }
      class _ {
        constructor(t) {
          this.field = t;
        }
        isErrorState(t, e) {
          return this.field && this.field.showError;
        }
      }
      let y = (() => {
        class t extends a.c {
          constructor() {
            super(...arguments),
              (this.errorStateMatcher = new _(this)),
              (this.stateChanges = new c.a()),
              (this._errorState = !1);
          }
          get formFieldControl() {
            return this._control || this;
          }
          set formFieldControl(t) {
            (this._control = t), this.formField && t !== this.formField._control && (this.formField._control = t);
          }
          ngOnInit() {
            this.formField && (this.formField._control = this.formFieldControl);
          }
          ngAfterViewInit() {
            (this.matPrefix || this.matSuffix) &&
              setTimeout(() => {
                Object(a.k)(this.field, '_matprefix', this.matPrefix),
                  Object(a.k)(this.field, '_matsuffix', this.matSuffix),
                  this.options._markForCheck(this.field);
              });
          }
          ngOnDestroy() {
            this.formField && delete this.formField._control, this.stateChanges.complete();
          }
          setDescribedByIds(t) {}
          onContainerClick(t) {
            (this.field.focus = !0), this.stateChanges.next();
          }
          get errorState() {
            const t = this.options.showError(this);
            return t !== this._errorState && ((this._errorState = t), this.stateChanges.next()), t;
          }
          get controlType() {
            return this.to.type
              ? this.to.type
              : this.field.type instanceof o.Q
              ? this.field.type.constructor.name
              : this.field.type;
          }
          get focused() {
            return !!this.field.focus && !this.disabled;
          }
          get disabled() {
            return !!this.to.disabled;
          }
          get required() {
            return !!this.to.required;
          }
          get placeholder() {
            return this.to.placeholder || '';
          }
          get shouldPlaceholderFloat() {
            return this.shouldLabelFloat;
          }
          get value() {
            return this.formControl.value;
          }
          set value(t) {
            this.formControl.patchValue(t);
          }
          get ngControl() {
            return this.formControl;
          }
          get empty() {
            return null == this.value || '' === this.value;
          }
          get shouldLabelFloat() {
            return this.focused || !this.empty;
          }
          get formField() {
            return this.field ? this.field.__formField__ : null;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return v(e || t);
          }),
          (t.ɵdir = o.Qb({
            type: t,
            viewQuery: function (t, e) {
              var n;
              1 & t && (o.Rc(u, !0), o.Rc(h, !0)),
                2 & t && (o.Ac((n = o.kc())) && (e.matPrefix = n.first), o.Ac((n = o.kc())) && (e.matSuffix = n.first));
            },
            features: [o.Fb],
          })),
          t
        );
      })();
      const v = o.dc(y);
      let w = (() => {
          class t extends a.d {
            constructor(t, e, n, i) {
              super(),
                (this.config = t),
                (this.renderer = e),
                (this.elementRef = n),
                (this.focusMonitor = i),
                (this.stateChanges = new c.a()),
                (this._errorState = !1),
                (this.initialGapCalculated = !1);
            }
            ngOnInit() {
              (this.formField._control = this), Object(a.k)(this.field, '__formField__', this.formField);
              const t = this.config.resolveFieldTypeRef(this.formlyField);
              !t ||
                t.instance instanceof y ||
                console.warn(
                  `Component '${t.componentType.name}' must extend 'FieldType' from '@ngx-formly/material/form-field'.`
                ),
                this.formlyField.hide &&
                  'outline' === this.formlyField.templateOptions.appearance &&
                  (this.initialGapCalculated = !0),
                this.focusMonitor.monitor(this.elementRef, !0).subscribe((t) => {
                  !t && this.field.focus && (this.field.focus = !1), this.stateChanges.next();
                });
            }
            ngAfterContentChecked() {
              this.initialGapCalculated &&
                !this.formlyField.hide &&
                (this.formField.updateOutlineGap(), (this.initialGapCalculated = !0));
            }
            ngAfterViewInit() {
              if ('outline' !== this.formField.appearance && !0 === this.to.hideFieldUnderline) {
                const t = this.formField._elementRef.nativeElement.querySelector('.mat-form-field-underline');
                t && this.renderer.removeChild(t.parentNode, t);
              }
            }
            ngOnDestroy() {
              delete this.formlyField.__formField__,
                this.stateChanges.complete(),
                this.focusMonitor.stopMonitoring(this.elementRef);
            }
            setDescribedByIds(t) {}
            onContainerClick(t) {
              (this.formlyField.focus = !0), this.stateChanges.next();
            }
            get errorState() {
              const t = this.options.showError(this);
              return t !== this._errorState && ((this._errorState = t), this.stateChanges.next()), t;
            }
            get controlType() {
              return this.to.type;
            }
            get focused() {
              return !!this.formlyField.focus && !this.disabled;
            }
            get disabled() {
              return !!this.to.disabled;
            }
            get required() {
              return !!this.to.required;
            }
            get placeholder() {
              return this.to.placeholder || '';
            }
            get shouldPlaceholderFloat() {
              return this.shouldLabelFloat;
            }
            get value() {
              return this.formControl.value;
            }
            get ngControl() {
              return this.formControl;
            }
            get empty() {
              return !this.formControl.value;
            }
            get shouldLabelFloat() {
              return this.focused || !this.empty;
            }
            get formlyField() {
              return this.field;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(o.Vb(a.f), o.Vb(o.G), o.Vb(o.m), o.Vb(l.g));
            }),
            (t.ɵcmp = o.Pb({
              type: t,
              selectors: [['formly-wrapper-mat-form-field']],
              viewQuery: function (t, e) {
                var n;
                1 & t && (o.Ic(d, !0, o.S), o.Ic(s.d, !0)),
                  2 & t &&
                    (o.Ac((n = o.kc())) && (e.fieldComponent = n.first), o.Ac((n = o.kc())) && (e.formField = n.first));
              },
              features: [o.Hb([{ provide: s.e, useExisting: t }]), o.Fb],
              decls: 11,
              vars: 12,
              consts: [
                [3, 'hideRequiredMarker', 'floatLabel', 'appearance', 'color'],
                ['fieldComponent', ''],
                [4, 'ngIf'],
                ['matPrefix', ''],
                [4, 'ngTemplateOutlet'],
                ['matSuffix', ''],
                [3, 'id'],
                [3, 'field'],
                [3, 'id', 4, 'ngIf'],
                ['class', 'mat-form-field-required-marker', 4, 'ngIf'],
                [1, 'mat-form-field-required-marker'],
              ],
              template: function (t, e) {
                1 & t &&
                  (o.bc(0, 'mat-form-field', 0),
                  o.Xb(1, null, 1),
                  o.Kc(3, f, 3, 2, 'mat-label', 2),
                  o.Zb(4, 3),
                  o.Kc(5, m, 1, 0, 'ng-container', 4),
                  o.Yb(),
                  o.Zb(6, 5),
                  o.Kc(7, g, 1, 0, 'ng-container', 4),
                  o.Yb(),
                  o.bc(8, 'mat-error', 6),
                  o.Wb(9, 'formly-validation-message', 7),
                  o.ac(),
                  o.Kc(10, b, 2, 2, 'mat-hint', 8),
                  o.ac()),
                  2 & t &&
                    (o.Jc('width', '100%'),
                    o.vc('hideRequiredMarker', !0)('floatLabel', e.to.floatLabel)('appearance', e.to.appearance)(
                      'color',
                      e.to.color
                    ),
                    o.Ib(3),
                    o.vc('ngIf', e.to.label && !0 !== e.to.hideLabel),
                    o.Ib(2),
                    o.vc('ngTemplateOutlet', e.to.prefix ? e.to.prefix : e.formlyField._matprefix),
                    o.Ib(2),
                    o.vc('ngTemplateOutlet', e.to.suffix ? e.to.suffix : e.formlyField._matsuffix),
                    o.Ib(1),
                    o.vc('id', null),
                    o.Ib(1),
                    o.vc('field', e.field),
                    o.Ib(1),
                    o.vc('ngIf', e.to.description));
              },
              directives: [s.d, i.l, s.i, i.q, s.j, s.c, a.j, s.h, s.g],
              encapsulation: 2,
            })),
            t
          );
        })(),
        x = (() => {
          class t {}
          return (
            (t.ɵmod = o.Tb({ type: t })),
            (t.ɵinj = o.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[i.c, r.s, s.f, a.i.forChild({ wrappers: [{ name: 'form-field', component: w }] })]],
            })),
            t
          );
        })();
    },
    cH1L: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      }),
        n.d(e, 'b', function () {
          return o;
        });
      var i = n('fXoL'),
        r = n('ofXK');
      const s = new i.s('cdk-dir-doc', {
        providedIn: 'root',
        factory: function () {
          return Object(i.ab)(r.d);
        },
      });
      let o = (() => {
          class t {
            constructor(t) {
              if (((this.value = 'ltr'), (this.change = new i.p()), t)) {
                const e = t.documentElement ? t.documentElement.dir : null,
                  n = (t.body ? t.body.dir : null) || e;
                this.value = 'ltr' === n || 'rtl' === n ? n : 'ltr';
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(s, 8));
            }),
            (t.ɵprov = Object(i.Rb)({
              factory: function () {
                return new t(Object(i.fc)(s, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        a = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })();
    },
    cp0P: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      });
      var i = n('HDdC'),
        r = n('DH7j'),
        s = n('lJxs'),
        o = n('XoHu'),
        a = n('Cfvw');
      function c(...t) {
        if (1 === t.length) {
          const e = t[0];
          if (Object(r.a)(e)) return l(e, null);
          if (Object(o.a)(e) && Object.getPrototypeOf(e) === Object.prototype) {
            const t = Object.keys(e);
            return l(
              t.map((t) => e[t]),
              t
            );
          }
        }
        if ('function' == typeof t[t.length - 1]) {
          const e = t.pop();
          return l((t = 1 === t.length && Object(r.a)(t[0]) ? t[0] : t), null).pipe(Object(s.a)((t) => e(...t)));
        }
        return l(t, null);
      }
      function l(t, e) {
        return new i.a((n) => {
          const i = t.length;
          if (0 === i) return void n.complete();
          const r = new Array(i);
          let s = 0,
            o = 0;
          for (let c = 0; c < i; c++) {
            const l = Object(a.a)(t[c]);
            let u = !1;
            n.add(
              l.subscribe({
                next: (t) => {
                  u || ((u = !0), o++), (r[c] = t);
                },
                error: (t) => n.error(t),
                complete: () => {
                  s++,
                    (s !== i && u) ||
                      (o === i && n.next(e ? e.reduce((t, e, n) => ((t[e] = r[n]), t), {}) : r), n.complete());
                },
              })
            );
          }
        });
      }
    },
    eEy1: function (t, e, n) {
      'use strict';
      n.d(e, 'b', function () {
        return d;
      });
      var i = n('tT4Q'),
        r = n('qkMB'),
        s = n('BLNc'),
        o = n('+97Q'),
        a = n('a1du'),
        c = n('Q/TZ'),
        l = n('zZcV'),
        u = n('VVgb'),
        h = n('baZu');
      n.d(e, 'c', function () {
        return r.a;
      }),
        n.d(e, 'd', function () {
          return o.a;
        }),
        n.d(e, 'a', function () {
          return h.a;
        });
      const d = [i.a, r.a, s.a, o.a, a.a, c.a, l.a, u.a, h.a];
    },
    eIep: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      });
      var i = n('l7GE'),
        r = n('51Dv'),
        s = n('ZUHj'),
        o = n('lJxs'),
        a = n('Cfvw');
      function c(t, e) {
        return 'function' == typeof e
          ? (n) => n.pipe(c((n, i) => Object(a.a)(t(n, i)).pipe(Object(o.a)((t, r) => e(n, t, i, r)))))
          : (e) => e.lift(new l(t));
      }
      class l {
        constructor(t) {
          this.project = t;
        }
        call(t, e) {
          return e.subscribe(new u(t, this.project));
        }
      }
      class u extends i.a {
        constructor(t, e) {
          super(t), (this.project = e), (this.index = 0);
        }
        _next(t) {
          let e;
          const n = this.index++;
          try {
            e = this.project(t, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          this._innerSub(e, t, n);
        }
        _innerSub(t, e, n) {
          const i = this.innerSubscription;
          i && i.unsubscribe();
          const o = new r.a(this, e, n),
            a = this.destination;
          a.add(o),
            (this.innerSubscription = Object(s.a)(this, t, void 0, void 0, o)),
            this.innerSubscription !== o && a.add(this.innerSubscription);
        }
        _complete() {
          const { innerSubscription: t } = this;
          (t && !t.closed) || super._complete(), this.unsubscribe();
        }
        _unsubscribe() {
          this.innerSubscription = null;
        }
        notifyComplete(t) {
          this.destination.remove(t), (this.innerSubscription = null), this.isStopped && super._complete();
        }
        notifyNext(t, e, n, i, r) {
          this.destination.next(e);
        }
      }
    },
    eNwd: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('3N8a');
      class r extends i.a {
        constructor(t, e) {
          super(t, e), (this.scheduler = t), (this.work = e);
        }
        requestAsyncId(t, e, n = 0) {
          return null !== n && n > 0
            ? super.requestAsyncId(t, e, n)
            : (t.actions.push(this), t.scheduled || (t.scheduled = requestAnimationFrame(() => t.flush(null))));
        }
        recycleAsyncId(t, e, n = 0) {
          if ((null !== n && n > 0) || (null === n && this.delay > 0)) return super.recycleAsyncId(t, e, n);
          0 === t.actions.length && (cancelAnimationFrame(e), (t.scheduled = void 0));
        }
      }
      var s = n('IjjT');
      class o extends s.a {
        flush(t) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: e } = this;
          let n,
            i = -1,
            r = e.length;
          t = t || e.shift();
          do {
            if ((n = t.execute(t.state, t.delay))) break;
          } while (++i < r && (t = e.shift()));
          if (((this.active = !1), n)) {
            for (; ++i < r && (t = e.shift()); ) t.unsubscribe();
            throw n;
          }
        }
      }
      const a = new o(r);
    },
    evrj: function (t, e, n) {
      var i = n('m4GZ');
      t.exports = function (t) {
        var e = t.replace(/-/g, '+').replace(/_/g, '/');
        switch (e.length % 4) {
          case 0:
            break;
          case 2:
            e += '==';
            break;
          case 3:
            e += '=';
            break;
          default:
            throw 'Illegal base64url string!';
        }
        try {
          return (function (t) {
            return decodeURIComponent(
              i(t).replace(/(.)/g, function (t, e) {
                var n = e.charCodeAt(0).toString(16).toUpperCase();
                return n.length < 2 && (n = '0' + n), '%' + n;
              })
            );
          })(e);
        } catch (n) {
          return i(e);
        }
      };
    },
    f0Cb: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      }),
        n.d(e, 'b', function () {
          return a;
        });
      var i = n('8LU1'),
        r = n('FKr1'),
        s = n('fXoL');
      let o = (() => {
          class t {
            constructor() {
              (this._vertical = !1), (this._inset = !1);
            }
            get vertical() {
              return this._vertical;
            }
            set vertical(t) {
              this._vertical = Object(i.c)(t);
            }
            get inset() {
              return this._inset;
            }
            set inset(t) {
              this._inset = Object(i.c)(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = s.Pb({
              type: t,
              selectors: [['mat-divider']],
              hostAttrs: ['role', 'separator', 1, 'mat-divider'],
              hostVars: 7,
              hostBindings: function (t, e) {
                2 & t &&
                  (s.Jb('aria-orientation', e.vertical ? 'vertical' : 'horizontal'),
                  s.Mb('mat-divider-vertical', e.vertical)('mat-divider-horizontal', !e.vertical)(
                    'mat-divider-inset',
                    e.inset
                  ));
              },
              inputs: { vertical: 'vertical', inset: 'inset' },
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              styles: [
                '.mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        a = (() => {
          class t {}
          return (
            (t.ɵmod = s.Tb({ type: t })),
            (t.ɵinj = s.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.g], r.g],
            })),
            t
          );
        })();
    },
    fXoL: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return Ts;
      }),
        n.d(e, 'b', function () {
          return Qc;
        }),
        n.d(e, 'c', function () {
          return Gc;
        }),
        n.d(e, 'd', function () {
          return $c;
        }),
        n.d(e, 'e', function () {
          return qc;
        }),
        n.d(e, 'f', function () {
          return ql;
        }),
        n.d(e, 'g', function () {
          return Pl;
        }),
        n.d(e, 'h', function () {
          return ul;
        }),
        n.d(e, 'i', function () {
          return us;
        }),
        n.d(e, 'j', function () {
          return ll;
        }),
        n.d(e, 'k', function () {
          return da;
        }),
        n.d(e, 'l', function () {
          return el;
        }),
        n.d(e, 'm', function () {
          return pa;
        }),
        n.d(e, 'n', function () {
          return Bl;
        }),
        n.d(e, 'o', function () {
          return Cn;
        }),
        n.d(e, 'p', function () {
          return wc;
        }),
        n.d(e, 'q', function () {
          return G;
        }),
        n.d(e, 'r', function () {
          return u;
        }),
        n.d(e, 's', function () {
          return q;
        }),
        n.d(e, 't', function () {
          return Es;
        }),
        n.d(e, 'u', function () {
          return ja;
        }),
        n.d(e, 'v', function () {
          return Ra;
        }),
        n.d(e, 'w', function () {
          return tl;
        }),
        n.d(e, 'x', function () {
          return ct;
        }),
        n.d(e, 'y', function () {
          return Fl;
        }),
        n.d(e, 'z', function () {
          return at;
        }),
        n.d(e, 'A', function () {
          return Il;
        }),
        n.d(e, 'B', function () {
          return pl;
        }),
        n.d(e, 'C', function () {
          return h;
        }),
        n.d(e, 'D', function () {
          return Zc;
        }),
        n.d(e, 'E', function () {
          return Yc;
        }),
        n.d(e, 'F', function () {
          return Cc;
        }),
        n.d(e, 'G', function () {
          return ba;
        }),
        n.d(e, 'H', function () {
          return ma;
        }),
        n.d(e, 'I', function () {
          return ga;
        }),
        n.d(e, 'J', function () {
          return ya;
        }),
        n.d(e, 'K', function () {
          return ui;
        }),
        n.d(e, 'L', function () {
          return Qo;
        }),
        n.d(e, 'M', function () {
          return p;
        }),
        n.d(e, 'N', function () {
          return Ll;
        }),
        n.d(e, 'O', function () {
          return Na;
        }),
        n.d(e, 'P', function () {
          return wl;
        }),
        n.d(e, 'Q', function () {
          return ds;
        }),
        n.d(e, 'R', function () {
          return va;
        }),
        n.d(e, 'S', function () {
          return La;
        }),
        n.d(e, 'T', function () {
          return bt;
        }),
        n.d(e, 'U', function () {
          return Fs;
        }),
        n.d(e, 'V', function () {
          return Al;
        }),
        n.d(e, 'W', function () {
          return _;
        }),
        n.d(e, 'X', function () {
          return zn;
        }),
        n.d(e, 'Y', function () {
          return D;
        }),
        n.d(e, 'Z', function () {
          return Dl;
        }),
        n.d(e, 'ab', function () {
          return it;
        }),
        n.d(e, 'bb', function () {
          return Hn;
        }),
        n.d(e, 'cb', function () {
          return Wl;
        }),
        n.d(e, 'db', function () {
          return kl;
        }),
        n.d(e, 'eb', function () {
          return Jc;
        }),
        n.d(e, 'fb', function () {
          return ps;
        }),
        n.d(e, 'gb', function () {
          return ec;
        }),
        n.d(e, 'hb', function () {
          return z;
        }),
        n.d(e, 'ib', function () {
          return ci;
        }),
        n.d(e, 'jb', function () {
          return pi;
        }),
        n.d(e, 'kb', function () {
          return $n;
        }),
        n.d(e, 'lb', function () {
          return Dn;
        }),
        n.d(e, 'mb', function () {
          return Rn;
        }),
        n.d(e, 'nb', function () {
          return Nn;
        }),
        n.d(e, 'ob', function () {
          return Mn;
        }),
        n.d(e, 'pb', function () {
          return Pn;
        }),
        n.d(e, 'qb', function () {
          return Fn;
        }),
        n.d(e, 'rb', function () {
          return Za;
        }),
        n.d(e, 'sb', function () {
          return Ul;
        }),
        n.d(e, 'tb', function () {
          return Qa;
        }),
        n.d(e, 'ub', function () {
          return Ja;
        }),
        n.d(e, 'vb', function () {
          return jn;
        }),
        n.d(e, 'wb', function () {
          return V;
        }),
        n.d(e, 'xb', function () {
          return Ns;
        }),
        n.d(e, 'yb', function () {
          return ao;
        }),
        n.d(e, 'zb', function () {
          return oo;
        }),
        n.d(e, 'Ab', function () {
          return Ms;
        }),
        n.d(e, 'Bb', function () {
          return Ya;
        }),
        n.d(e, 'Cb', function () {
          return zt;
        }),
        n.d(e, 'Db', function () {
          return T;
        }),
        n.d(e, 'Eb', function () {
          return An;
        }),
        n.d(e, 'Fb', function () {
          return Go;
        }),
        n.d(e, 'Gb', function () {
          return Jo;
        }),
        n.d(e, 'Hb', function () {
          return la;
        }),
        n.d(e, 'Ib', function () {
          return Fi;
        }),
        n.d(e, 'Jb', function () {
          return Ws;
        }),
        n.d(e, 'Kb', function () {
          return Eo;
        }),
        n.d(e, 'Lb', function () {
          return Uo;
        }),
        n.d(e, 'Mb', function () {
          return So;
        }),
        n.d(e, 'Nb', function () {
          return lo;
        }),
        n.d(e, 'Ob', function () {
          return Fc;
        }),
        n.d(e, 'Pb', function () {
          return wt;
        }),
        n.d(e, 'Qb', function () {
          return Tt;
        }),
        n.d(e, 'Rb', function () {
          return b;
        }),
        n.d(e, 'Sb', function () {
          return y;
        }),
        n.d(e, 'Tb', function () {
          return Ot;
        }),
        n.d(e, 'Ub', function () {
          return It;
        }),
        n.d(e, 'Vb', function () {
          return Xs;
        }),
        n.d(e, 'Wb', function () {
          return eo;
        }),
        n.d(e, 'Xb', function () {
          return ro;
        }),
        n.d(e, 'Yb', function () {
          return io;
        }),
        n.d(e, 'Zb', function () {
          return no;
        }),
        n.d(e, 'ac', function () {
          return to;
        }),
        n.d(e, 'bc', function () {
          return Js;
        }),
        n.d(e, 'cc', function () {
          return so;
        }),
        n.d(e, 'dc', function () {
          return yn;
        }),
        n.d(e, 'ec', function () {
          return Wo;
        }),
        n.d(e, 'fc', function () {
          return nt;
        }),
        n.d(e, 'gc', function () {
          return Ks;
        }),
        n.d(e, 'hc', function () {
          return Wc;
        }),
        n.d(e, 'ic', function () {
          return Ys;
        }),
        n.d(e, 'jc', function () {
          return co;
        }),
        n.d(e, 'kc', function () {
          return Lc;
        }),
        n.d(e, 'lc', function () {
          return Pe;
        }),
        n.d(e, 'mc', function () {
          return Re;
        }),
        n.d(e, 'nc', function () {
          return fo;
        }),
        n.d(e, 'oc', function () {
          return fc;
        }),
        n.d(e, 'pc', function () {
          return mc;
        }),
        n.d(e, 'qc', function () {
          return gc;
        }),
        n.d(e, 'rc', function () {
          return bc;
        }),
        n.d(e, 'sc', function () {
          return _c;
        }),
        n.d(e, 'tc', function () {
          return bo;
        }),
        n.d(e, 'uc', function () {
          return go;
        }),
        n.d(e, 'vc', function () {
          return Zs;
        }),
        n.d(e, 'wc', function () {
          return ac;
        }),
        n.d(e, 'xc', function () {
          return cc;
        }),
        n.d(e, 'yc', function () {
          return lc;
        }),
        n.d(e, 'zc', function () {
          return uc;
        }),
        n.d(e, 'Ac', function () {
          return jc;
        }),
        n.d(e, 'Bc', function () {
          return Gs;
        }),
        n.d(e, 'Cc', function () {
          return tn;
        }),
        n.d(e, 'Dc', function () {
          return ae;
        }),
        n.d(e, 'Ec', function () {
          return fi;
        }),
        n.d(e, 'Fc', function () {
          return mi;
        }),
        n.d(e, 'Gc', function () {
          return St;
        }),
        n.d(e, 'Hc', function () {
          return Nc;
        }),
        n.d(e, 'Ic', function () {
          return Rc;
        }),
        n.d(e, 'Jc', function () {
          return Oo;
        }),
        n.d(e, 'Kc', function () {
          return qs;
        }),
        n.d(e, 'Lc', function () {
          return Uc;
        }),
        n.d(e, 'Mc', function () {
          return Lo;
        }),
        n.d(e, 'Nc', function () {
          return Ho;
        }),
        n.d(e, 'Oc', function () {
          return zo;
        }),
        n.d(e, 'Pc', function () {
          return Bo;
        }),
        n.d(e, 'Qc', function () {
          return $o;
        }),
        n.d(e, 'Rc', function () {
          return Pc;
        });
      var i = n('XNiG'),
        r = n('quSY'),
        s = n('HDdC'),
        o = n('VRyK'),
        a = n('w1tV');
      function c(t) {
        return { toString: t }.toString();
      }
      function l(t, e, n) {
        return c(() => {
          const i = (function (t) {
            return function (...e) {
              if (t) {
                const n = t(...e);
                for (const t in n) this[t] = n[t];
              }
            };
          })(e);
          function r(...t) {
            if (this instanceof r) return i.apply(this, t), this;
            const e = new r(...t);
            return (n.annotation = e), n;
            function n(t, n, i) {
              const r = t.hasOwnProperty('__parameters__')
                ? t.__parameters__
                : Object.defineProperty(t, '__parameters__', { value: [] }).__parameters__;
              for (; r.length <= i; ) r.push(null);
              return (r[i] = r[i] || []).push(e), t;
            }
          }
          return (
            n && (r.prototype = Object.create(n.prototype)), (r.prototype.ngMetadataName = t), (r.annotationCls = r), r
          );
        });
      }
      const u = l('Inject', (t) => ({ token: t })),
        h = l('Optional'),
        d = l('Self'),
        p = l('SkipSelf');
      var f = (function (t) {
        return (
          (t[(t.Default = 0)] = 'Default'),
          (t[(t.Host = 1)] = 'Host'),
          (t[(t.Self = 2)] = 'Self'),
          (t[(t.SkipSelf = 4)] = 'SkipSelf'),
          (t[(t.Optional = 8)] = 'Optional'),
          t
        );
      })({});
      function m(t) {
        for (let e in t) if (t[e] === m) return e;
        throw Error('Could not find renamed property on target object.');
      }
      function g(t, e) {
        for (const n in e) e.hasOwnProperty(n) && !t.hasOwnProperty(n) && (t[n] = e[n]);
      }
      function b(t) {
        return { token: t.token, providedIn: t.providedIn || null, factory: t.factory, value: void 0 };
      }
      const _ = b;
      function y(t) {
        return { factory: t.factory, providers: t.providers || [], imports: t.imports || [] };
      }
      function v(t) {
        return w(t, t[C]) || w(t, t[S]);
      }
      function w(t, e) {
        return e && e.token === t ? e : null;
      }
      function x(t) {
        return t && (t.hasOwnProperty(k) || t.hasOwnProperty(E)) ? t[k] : null;
      }
      const C = m({ ɵprov: m }),
        k = m({ ɵinj: m }),
        O = m({ ɵprovFallback: m }),
        S = m({ ngInjectableDef: m }),
        E = m({ ngInjectorDef: m });
      function T(t) {
        if ('string' == typeof t) return t;
        if (Array.isArray(t)) return '[' + t.map(T).join(', ') + ']';
        if (null == t) return '' + t;
        if (t.overriddenName) return `${t.overriddenName}`;
        if (t.name) return `${t.name}`;
        const e = t.toString();
        if (null == e) return '' + e;
        const n = e.indexOf('\n');
        return -1 === n ? e : e.substring(0, n);
      }
      function I(t, e) {
        return null == t || '' === t ? (null === e ? '' : e) : null == e || '' === e ? t : t + ' ' + e;
      }
      const A = m({ __forward_ref__: m });
      function D(t) {
        return (
          (t.__forward_ref__ = D),
          (t.toString = function () {
            return T(this());
          }),
          t
        );
      }
      function j(t) {
        return R(t) ? t() : t;
      }
      function R(t) {
        return 'function' == typeof t && t.hasOwnProperty(A) && t.__forward_ref__ === D;
      }
      const P = 'undefined' != typeof globalThis && globalThis,
        M = 'undefined' != typeof window && window,
        F =
          'undefined' != typeof self &&
          'undefined' != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        N = 'undefined' != typeof global && global,
        V = P || N || M || F,
        L = m({ ɵcmp: m }),
        H = m({ ɵdir: m }),
        z = m({ ɵpipe: m }),
        B = m({ ɵmod: m }),
        U = m({ ɵloc: m }),
        W = m({ ɵfac: m }),
        $ = m({ __NG_ELEMENT_ID__: m });
      class q {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = b({ token: this, providedIn: e.providedIn || 'root', factory: e.factory }));
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const G = new q('INJECTOR', -1),
        X = {},
        K = /\n/gm,
        Y = m({ provide: String, useValue: m });
      let Z,
        Q = void 0;
      function J(t) {
        const e = Q;
        return (Q = t), e;
      }
      function tt(t) {
        const e = Z;
        return (Z = t), e;
      }
      function et(t, e = f.Default) {
        if (void 0 === Q) throw new Error('inject() must be called from an injection context');
        return null === Q ? rt(t, void 0, e) : Q.get(t, e & f.Optional ? null : void 0, e);
      }
      function nt(t, e = f.Default) {
        return (Z || et)(j(t), e);
      }
      const it = nt;
      function rt(t, e, n) {
        const i = v(t);
        if (i && 'root' == i.providedIn) return void 0 === i.value ? (i.value = i.factory()) : i.value;
        if (n & f.Optional) return null;
        if (void 0 !== e) return e;
        throw new Error(`Injector: NOT_FOUND [${T(t)}]`);
      }
      function st(t) {
        const e = [];
        for (let n = 0; n < t.length; n++) {
          const i = j(t[n]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new Error('Arguments array must have arguments.');
            let t = void 0,
              n = f.Default;
            for (let e = 0; e < i.length; e++) {
              const r = i[e];
              r instanceof h || 'Optional' === r.ngMetadataName || r === h
                ? (n |= f.Optional)
                : r instanceof p || 'SkipSelf' === r.ngMetadataName || r === p
                ? (n |= f.SkipSelf)
                : r instanceof d || 'Self' === r.ngMetadataName || r === d
                ? (n |= f.Self)
                : (t = r instanceof u || r === u ? r.token : r);
            }
            e.push(nt(t, n));
          } else e.push(nt(i));
        }
        return e;
      }
      class ot {
        get(t, e = X) {
          if (e === X) {
            const e = new Error(`NullInjectorError: No provider for ${T(t)}!`);
            throw ((e.name = 'NullInjectorError'), e);
          }
          return e;
        }
      }
      class at {}
      class ct {}
      function lt(t, e) {
        t.forEach((t) => (Array.isArray(t) ? lt(t, e) : e(t)));
      }
      function ut(t, e, n) {
        e >= t.length ? t.push(n) : t.splice(e, 0, n);
      }
      function ht(t, e) {
        return e >= t.length - 1 ? t.pop() : t.splice(e, 1)[0];
      }
      function dt(t, e) {
        const n = [];
        for (let i = 0; i < t; i++) n.push(e);
        return n;
      }
      function pt(t, e, n) {
        let i = mt(t, e);
        return (
          i >= 0
            ? (t[1 | i] = n)
            : ((i = ~i),
              (function (t, e, n, i) {
                let r = t.length;
                if (r == e) t.push(n, i);
                else if (1 === r) t.push(i, t[0]), (t[0] = n);
                else {
                  for (r--, t.push(t[r - 1], t[r]); r > e; ) (t[r] = t[r - 2]), r--;
                  (t[e] = n), (t[e + 1] = i);
                }
              })(t, i, e, n)),
          i
        );
      }
      function ft(t, e) {
        const n = mt(t, e);
        if (n >= 0) return t[1 | n];
      }
      function mt(t, e) {
        return (function (t, e, n) {
          let i = 0,
            r = t.length >> 1;
          for (; r !== i; ) {
            const n = i + ((r - i) >> 1),
              s = t[n << 1];
            if (e === s) return n << 1;
            s > e ? (r = n) : (i = n + 1);
          }
          return ~(r << 1);
        })(t, e);
      }
      const gt = (function () {
          var t = { OnPush: 0, Default: 1 };
          return (t[t.OnPush] = 'OnPush'), (t[t.Default] = 'Default'), t;
        })(),
        bt = (function () {
          var t = { Emulated: 0, Native: 1, None: 2, ShadowDom: 3 };
          return (
            (t[t.Emulated] = 'Emulated'),
            (t[t.Native] = 'Native'),
            (t[t.None] = 'None'),
            (t[t.ShadowDom] = 'ShadowDom'),
            t
          );
        })(),
        _t = {},
        yt = [];
      let vt = 0;
      function wt(t) {
        return c(() => {
          const e = t.type,
            n = e.prototype,
            i = {},
            r = {
              type: e,
              providersResolver: null,
              decls: t.decls,
              vars: t.vars,
              factory: null,
              template: t.template || null,
              consts: t.consts || null,
              ngContentSelectors: t.ngContentSelectors,
              hostBindings: t.hostBindings || null,
              hostVars: t.hostVars || 0,
              hostAttrs: t.hostAttrs || null,
              contentQueries: t.contentQueries || null,
              declaredInputs: i,
              inputs: null,
              outputs: null,
              exportAs: t.exportAs || null,
              onChanges: null,
              onInit: n.ngOnInit || null,
              doCheck: n.ngDoCheck || null,
              afterContentInit: n.ngAfterContentInit || null,
              afterContentChecked: n.ngAfterContentChecked || null,
              afterViewInit: n.ngAfterViewInit || null,
              afterViewChecked: n.ngAfterViewChecked || null,
              onDestroy: n.ngOnDestroy || null,
              onPush: t.changeDetection === gt.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: t.selectors || yt,
              viewQuery: t.viewQuery || null,
              features: t.features || null,
              data: t.data || {},
              encapsulation: t.encapsulation || bt.Emulated,
              id: 'c',
              styles: t.styles || yt,
              _: null,
              setInput: null,
              schemas: t.schemas || null,
              tView: null,
            },
            s = t.directives,
            o = t.features,
            a = t.pipes;
          return (
            (r.id += vt++),
            (r.inputs = Et(t.inputs, i)),
            (r.outputs = Et(t.outputs)),
            o && o.forEach((t) => t(r)),
            (r.directiveDefs = s ? () => ('function' == typeof s ? s() : s).map(xt) : null),
            (r.pipeDefs = a ? () => ('function' == typeof a ? a() : a).map(Ct) : null),
            r
          );
        });
      }
      function xt(t) {
        return (
          At(t) ||
          (function (t) {
            return t[H] || null;
          })(t)
        );
      }
      function Ct(t) {
        return (function (t) {
          return t[z] || null;
        })(t);
      }
      const kt = {};
      function Ot(t) {
        const e = {
          type: t.type,
          bootstrap: t.bootstrap || yt,
          declarations: t.declarations || yt,
          imports: t.imports || yt,
          exports: t.exports || yt,
          transitiveCompileScopes: null,
          schemas: t.schemas || null,
          id: t.id || null,
        };
        return (
          null != t.id &&
            c(() => {
              kt[t.id] = t.type;
            }),
          e
        );
      }
      function St(t, e) {
        return c(() => {
          const n = jt(t, !0);
          (n.declarations = e.declarations || yt), (n.imports = e.imports || yt), (n.exports = e.exports || yt);
        });
      }
      function Et(t, e) {
        if (null == t) return _t;
        const n = {};
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            let r = t[i],
              s = r;
            Array.isArray(r) && ((s = r[1]), (r = r[0])), (n[r] = i), e && (e[r] = s);
          }
        return n;
      }
      const Tt = wt;
      function It(t) {
        return {
          type: t.type,
          name: t.name,
          factory: null,
          pure: !1 !== t.pure,
          onDestroy: t.type.prototype.ngOnDestroy || null,
        };
      }
      function At(t) {
        return t[L] || null;
      }
      function Dt(t, e) {
        return t.hasOwnProperty(W) ? t[W] : null;
      }
      function jt(t, e) {
        const n = t[B] || null;
        if (!n && !0 === e) throw new Error(`Type ${T(t)} does not have '\u0275mod' property.`);
        return n;
      }
      function Rt(t) {
        return Array.isArray(t) && 'object' == typeof t[1];
      }
      function Pt(t) {
        return Array.isArray(t) && !0 === t[1];
      }
      function Mt(t) {
        return 0 != (8 & t.flags);
      }
      function Ft(t) {
        return 2 == (2 & t.flags);
      }
      function Nt(t) {
        return 1 == (1 & t.flags);
      }
      function Vt(t) {
        return null !== t.template;
      }
      function Lt(t) {
        return 0 != (512 & t[2]);
      }
      let Ht = void 0;
      function zt(t) {
        Ht = t;
      }
      function Bt() {
        return void 0 !== Ht ? Ht : 'undefined' != typeof document ? document : void 0;
      }
      function Ut(t) {
        return !!t.listen;
      }
      const Wt = { createRenderer: (t, e) => Bt() };
      function $t(t) {
        for (; Array.isArray(t); ) t = t[0];
        return t;
      }
      function qt(t, e) {
        return $t(e[t + 20]);
      }
      function Gt(t, e) {
        return $t(e[t.index]);
      }
      function Xt(t, e) {
        return t.data[e + 20];
      }
      function Kt(t, e) {
        return t[e + 20];
      }
      function Yt(t, e) {
        const n = e[t];
        return Rt(n) ? n : n[0];
      }
      function Zt(t) {
        const e = (function (t) {
          return t.__ngContext__ || null;
        })(t);
        return e ? (Array.isArray(e) ? e : e.lView) : null;
      }
      function Qt(t) {
        return 4 == (4 & t[2]);
      }
      function Jt(t) {
        return 128 == (128 & t[2]);
      }
      function te(t, e) {
        return null === t || null == e ? null : t[e];
      }
      function ee(t) {
        t[18] = 0;
      }
      function ne(t, e) {
        t[5] += e;
        let n = t,
          i = t[3];
        for (; null !== i && ((1 === e && 1 === n[5]) || (-1 === e && 0 === n[5])); ) (i[5] += e), (n = i), (i = i[3]);
      }
      const ie = { lFrame: Se(null), bindingsEnabled: !0, checkNoChangesMode: !1 };
      function re() {
        return ie.bindingsEnabled;
      }
      function se() {
        return ie.lFrame.lView;
      }
      function oe() {
        return ie.lFrame.tView;
      }
      function ae(t) {
        ie.lFrame.contextLView = t;
      }
      function ce() {
        return ie.lFrame.previousOrParentTNode;
      }
      function le(t, e) {
        (ie.lFrame.previousOrParentTNode = t), (ie.lFrame.isParent = e);
      }
      function ue() {
        return ie.lFrame.isParent;
      }
      function he() {
        ie.lFrame.isParent = !1;
      }
      function de() {
        return ie.checkNoChangesMode;
      }
      function pe(t) {
        ie.checkNoChangesMode = t;
      }
      function fe() {
        const t = ie.lFrame;
        let e = t.bindingRootIndex;
        return -1 === e && (e = t.bindingRootIndex = t.tView.bindingStartIndex), e;
      }
      function me() {
        return ie.lFrame.bindingIndex;
      }
      function ge() {
        return ie.lFrame.bindingIndex++;
      }
      function be(t) {
        const e = ie.lFrame,
          n = e.bindingIndex;
        return (e.bindingIndex = e.bindingIndex + t), n;
      }
      function _e(t, e) {
        const n = ie.lFrame;
        (n.bindingIndex = n.bindingRootIndex = t), ye(e);
      }
      function ye(t) {
        ie.lFrame.currentDirectiveIndex = t;
      }
      function ve(t) {
        const e = ie.lFrame.currentDirectiveIndex;
        return -1 === e ? null : t[e];
      }
      function we() {
        return ie.lFrame.currentQueryIndex;
      }
      function xe(t) {
        ie.lFrame.currentQueryIndex = t;
      }
      function Ce(t, e) {
        const n = Oe();
        (ie.lFrame = n), (n.previousOrParentTNode = e), (n.lView = t);
      }
      function ke(t, e) {
        const n = Oe(),
          i = t[1];
        (ie.lFrame = n),
          (n.previousOrParentTNode = e),
          (n.lView = t),
          (n.tView = i),
          (n.contextLView = t),
          (n.bindingIndex = i.bindingStartIndex);
      }
      function Oe() {
        const t = ie.lFrame,
          e = null === t ? null : t.child;
        return null === e ? Se(t) : e;
      }
      function Se(t) {
        const e = {
          previousOrParentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: 0,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentSanitizer: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: t,
          child: null,
        };
        return null !== t && (t.child = e), e;
      }
      function Ee() {
        const t = ie.lFrame;
        return (ie.lFrame = t.parent), (t.previousOrParentTNode = null), (t.lView = null), t;
      }
      const Te = Ee;
      function Ie() {
        const t = Ee();
        (t.isParent = !0),
          (t.tView = null),
          (t.selectedIndex = 0),
          (t.contextLView = null),
          (t.elementDepthCount = 0),
          (t.currentDirectiveIndex = -1),
          (t.currentNamespace = null),
          (t.currentSanitizer = null),
          (t.bindingRootIndex = -1),
          (t.bindingIndex = -1),
          (t.currentQueryIndex = 0);
      }
      function Ae() {
        return ie.lFrame.selectedIndex;
      }
      function De(t) {
        ie.lFrame.selectedIndex = t;
      }
      function je() {
        const t = ie.lFrame;
        return Xt(t.tView, t.selectedIndex);
      }
      function Re() {
        ie.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';
      }
      function Pe() {
        ie.lFrame.currentNamespace = null;
      }
      function Me(t, e) {
        for (let n = e.directiveStart, i = e.directiveEnd; n < i; n++) {
          const e = t.data[n];
          e.afterContentInit && (t.contentHooks || (t.contentHooks = [])).push(-n, e.afterContentInit),
            e.afterContentChecked &&
              ((t.contentHooks || (t.contentHooks = [])).push(n, e.afterContentChecked),
              (t.contentCheckHooks || (t.contentCheckHooks = [])).push(n, e.afterContentChecked)),
            e.afterViewInit && (t.viewHooks || (t.viewHooks = [])).push(-n, e.afterViewInit),
            e.afterViewChecked &&
              ((t.viewHooks || (t.viewHooks = [])).push(n, e.afterViewChecked),
              (t.viewCheckHooks || (t.viewCheckHooks = [])).push(n, e.afterViewChecked)),
            null != e.onDestroy && (t.destroyHooks || (t.destroyHooks = [])).push(n, e.onDestroy);
        }
      }
      function Fe(t, e, n) {
        Le(t, e, 3, n);
      }
      function Ne(t, e, n, i) {
        (3 & t[2]) === n && Le(t, e, n, i);
      }
      function Ve(t, e) {
        let n = t[2];
        (3 & n) === e && ((n &= 2047), (n += 1), (t[2] = n));
      }
      function Le(t, e, n, i) {
        const r = null != i ? i : -1;
        let s = 0;
        for (let o = void 0 !== i ? 65535 & t[18] : 0; o < e.length; o++)
          if ('number' == typeof e[o + 1]) {
            if (((s = e[o]), null != i && s >= i)) break;
          } else
            e[o] < 0 && (t[18] += 65536),
              (s < r || -1 == r) && (He(t, n, e, o), (t[18] = (4294901760 & t[18]) + o + 2)),
              o++;
      }
      function He(t, e, n, i) {
        const r = n[i] < 0,
          s = n[i + 1],
          o = t[r ? -n[i] : n[i]];
        r ? t[2] >> 11 < t[18] >> 16 && (3 & t[2]) === e && ((t[2] += 2048), s.call(o)) : s.call(o);
      }
      class ze {
        constructor(t, e, n) {
          (this.factory = t), (this.resolving = !1), (this.canSeeViewProviders = e), (this.injectImpl = n);
        }
      }
      function Be(t, e, n) {
        const i = Ut(t);
        let r = 0;
        for (; r < n.length; ) {
          const s = n[r];
          if ('number' == typeof s) {
            if (0 !== s) break;
            r++;
            const o = n[r++],
              a = n[r++],
              c = n[r++];
            i ? t.setAttribute(e, a, c, o) : e.setAttributeNS(o, a, c);
          } else {
            const o = s,
              a = n[++r];
            We(o) ? i && t.setProperty(e, o, a) : i ? t.setAttribute(e, o, a) : e.setAttribute(o, a), r++;
          }
        }
        return r;
      }
      function Ue(t) {
        return 3 === t || 4 === t || 6 === t;
      }
      function We(t) {
        return 64 === t.charCodeAt(0);
      }
      function $e(t, e) {
        if (null === e || 0 === e.length);
        else if (null === t || 0 === t.length) t = e.slice();
        else {
          let n = -1;
          for (let i = 0; i < e.length; i++) {
            const r = e[i];
            'number' == typeof r ? (n = r) : 0 === n || qe(t, n, r, null, -1 === n || 2 === n ? e[++i] : null);
          }
        }
        return t;
      }
      function qe(t, e, n, i, r) {
        let s = 0,
          o = t.length;
        if (-1 === e) o = -1;
        else
          for (; s < t.length; ) {
            const n = t[s++];
            if ('number' == typeof n) {
              if (n === e) {
                o = -1;
                break;
              }
              if (n > e) {
                o = s - 1;
                break;
              }
            }
          }
        for (; s < t.length; ) {
          const e = t[s];
          if ('number' == typeof e) break;
          if (e === n) {
            if (null === i) return void (null !== r && (t[s + 1] = r));
            if (i === t[s + 1]) return void (t[s + 2] = r);
          }
          s++, null !== i && s++, null !== r && s++;
        }
        -1 !== o && (t.splice(o, 0, e), (s = o + 1)),
          t.splice(s++, 0, n),
          null !== i && t.splice(s++, 0, i),
          null !== r && t.splice(s++, 0, r);
      }
      function Ge(t) {
        return -1 !== t;
      }
      function Xe(t) {
        return 32767 & t;
      }
      function Ke(t) {
        return t >> 16;
      }
      function Ye(t, e) {
        let n = Ke(t),
          i = e;
        for (; n > 0; ) (i = i[15]), n--;
        return i;
      }
      function Ze(t) {
        return 'string' == typeof t ? t : null == t ? '' : '' + t;
      }
      function Qe(t) {
        return 'function' == typeof t
          ? t.name || t.toString()
          : 'object' == typeof t && null != t && 'function' == typeof t.type
          ? t.type.name || t.type.toString()
          : Ze(t);
      }
      const Je = (() =>
        (('undefined' != typeof requestAnimationFrame && requestAnimationFrame) || setTimeout).bind(V))();
      function tn(t) {
        return { name: 'window', target: t.ownerDocument.defaultView };
      }
      function en(t) {
        return t instanceof Function ? t() : t;
      }
      let nn = !0;
      function rn(t) {
        const e = nn;
        return (nn = t), e;
      }
      let sn = 0;
      function on(t, e) {
        const n = cn(t, e);
        if (-1 !== n) return n;
        const i = e[1];
        i.firstCreatePass && ((t.injectorIndex = e.length), an(i.data, t), an(e, null), an(i.blueprint, null));
        const r = ln(t, e),
          s = t.injectorIndex;
        if (Ge(r)) {
          const t = Xe(r),
            n = Ye(r, e),
            i = n[1].data;
          for (let r = 0; r < 8; r++) e[s + r] = n[t + r] | i[t + r];
        }
        return (e[s + 8] = r), s;
      }
      function an(t, e) {
        t.push(0, 0, 0, 0, 0, 0, 0, 0, e);
      }
      function cn(t, e) {
        return -1 === t.injectorIndex ||
          (t.parent && t.parent.injectorIndex === t.injectorIndex) ||
          null == e[t.injectorIndex + 8]
          ? -1
          : t.injectorIndex;
      }
      function ln(t, e) {
        if (t.parent && -1 !== t.parent.injectorIndex) return t.parent.injectorIndex;
        let n = e[6],
          i = 1;
        for (; n && -1 === n.injectorIndex; ) (n = (e = e[15]) ? e[6] : null), i++;
        return n ? n.injectorIndex | (i << 16) : -1;
      }
      function un(t, e, n) {
        !(function (t, e, n) {
          let i = 'string' != typeof n ? n[$] : n.charCodeAt(0) || 0;
          null == i && (i = n[$] = sn++);
          const r = 255 & i,
            s = 1 << r,
            o = 64 & r,
            a = 32 & r,
            c = e.data;
          128 & r
            ? o
              ? a
                ? (c[t + 7] |= s)
                : (c[t + 6] |= s)
              : a
              ? (c[t + 5] |= s)
              : (c[t + 4] |= s)
            : o
            ? a
              ? (c[t + 3] |= s)
              : (c[t + 2] |= s)
            : a
            ? (c[t + 1] |= s)
            : (c[t] |= s);
        })(t, e, n);
      }
      function hn(t, e, n, i = f.Default, r) {
        if (null !== t) {
          const r = (function (t) {
            if ('string' == typeof t) return t.charCodeAt(0) || 0;
            const e = t[$];
            return 'number' == typeof e && e > 0 ? 255 & e : e;
          })(n);
          if ('function' == typeof r) {
            Ce(e, t);
            try {
              const t = r();
              if (null != t || i & f.Optional) return t;
              throw new Error(`No provider for ${Qe(n)}!`);
            } finally {
              Te();
            }
          } else if ('number' == typeof r) {
            if (-1 === r) return new _n(t, e);
            let s = null,
              o = cn(t, e),
              a = -1,
              c = i & f.Host ? e[16][6] : null;
            for (
              (-1 === o || i & f.SkipSelf) &&
              ((a = -1 === o ? ln(t, e) : e[o + 8]), bn(i, !1) ? ((s = e[1]), (o = Xe(a)), (e = Ye(a, e))) : (o = -1));
              -1 !== o;

            ) {
              a = e[o + 8];
              const t = e[1];
              if (gn(r, o, t.data)) {
                const t = pn(o, e, n, s, i, c);
                if (t !== dn) return t;
              }
              bn(i, e[1].data[o + 8] === c) && gn(r, o, e) ? ((s = t), (o = Xe(a)), (e = Ye(a, e))) : (o = -1);
            }
          }
        }
        if ((i & f.Optional && void 0 === r && (r = null), 0 == (i & (f.Self | f.Host)))) {
          const t = e[9],
            s = tt(void 0);
          try {
            return t ? t.get(n, r, i & f.Optional) : rt(n, r, i & f.Optional);
          } finally {
            tt(s);
          }
        }
        if (i & f.Optional) return r;
        throw new Error(`NodeInjector: NOT_FOUND [${Qe(n)}]`);
      }
      const dn = {};
      function pn(t, e, n, i, r, s) {
        const o = e[1],
          a = o.data[t + 8],
          c = fn(a, o, n, null == i ? Ft(a) && nn : i != o && 3 === a.type, r & f.Host && s === a);
        return null !== c ? mn(e, o, c, a) : dn;
      }
      function fn(t, e, n, i, r) {
        const s = t.providerIndexes,
          o = e.data,
          a = 65535 & s,
          c = t.directiveStart,
          l = s >> 16,
          u = r ? a + l : t.directiveEnd;
        for (let h = i ? a : a + l; h < u; h++) {
          const t = o[h];
          if ((h < c && n === t) || (h >= c && t.type === n)) return h;
        }
        if (r) {
          const t = o[c];
          if (t && Vt(t) && t.type === n) return c;
        }
        return null;
      }
      function mn(t, e, n, i) {
        let r = t[n];
        const s = e.data;
        if (r instanceof ze) {
          const o = r;
          if (o.resolving) throw new Error(`Circular dep for ${Qe(s[n])}`);
          const a = rn(o.canSeeViewProviders);
          let c;
          (o.resolving = !0), o.injectImpl && (c = tt(o.injectImpl)), Ce(t, i);
          try {
            (r = t[n] = o.factory(void 0, s, t, i)),
              e.firstCreatePass &&
                n >= i.directiveStart &&
                (function (t, e, n) {
                  const { onChanges: i, onInit: r, doCheck: s } = e;
                  i &&
                    ((n.preOrderHooks || (n.preOrderHooks = [])).push(t, i),
                    (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(t, i)),
                    r && (n.preOrderHooks || (n.preOrderHooks = [])).push(-t, r),
                    s &&
                      ((n.preOrderHooks || (n.preOrderHooks = [])).push(t, s),
                      (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(t, s));
                })(n, s[n], e);
          } finally {
            o.injectImpl && tt(c), rn(a), (o.resolving = !1), Te();
          }
        }
        return r;
      }
      function gn(t, e, n) {
        const i = 64 & t,
          r = 32 & t;
        let s;
        return (
          (s =
            128 & t
              ? i
                ? r
                  ? n[e + 7]
                  : n[e + 6]
                : r
                ? n[e + 5]
                : n[e + 4]
              : i
              ? r
                ? n[e + 3]
                : n[e + 2]
              : r
              ? n[e + 1]
              : n[e]),
          !!(s & (1 << t))
        );
      }
      function bn(t, e) {
        return !(t & f.Self || (t & f.Host && e));
      }
      class _n {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e) {
          return hn(this._tNode, this._lView, t, void 0, e);
        }
      }
      function yn(t) {
        return c(() => {
          const e = Object.getPrototypeOf(t.prototype).constructor,
            n =
              e[W] ||
              (function t(e) {
                const n = e;
                if (R(e))
                  return () => {
                    const e = t(j(n));
                    return e ? e() : null;
                  };
                let i = Dt(n);
                if (null === i) {
                  const t = x(n);
                  i = t && t.factory;
                }
                return i || null;
              })(e);
          return null !== n ? n : (t) => new t();
        });
      }
      function vn(t) {
        return t.ngDebugContext;
      }
      function wn(t) {
        return t.ngOriginalError;
      }
      function xn(t, ...e) {
        t.error(...e);
      }
      class Cn {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t),
            n = this._findContext(t),
            i = (function (t) {
              return t.ngErrorLogger || xn;
            })(t);
          i(this._console, 'ERROR', t),
            e && i(this._console, 'ORIGINAL ERROR', e),
            n && i(this._console, 'ERROR CONTEXT', n);
        }
        _findContext(t) {
          return t ? (vn(t) ? vn(t) : this._findContext(wn(t))) : null;
        }
        _findOriginalError(t) {
          let e = wn(t);
          for (; e && wn(e); ) e = wn(e);
          return e;
        }
      }
      class kn {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return (
            `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +
            ' (see http://g.co/ng/security#xss)'
          );
        }
      }
      class On extends kn {
        getTypeName() {
          return 'HTML';
        }
      }
      class Sn extends kn {
        getTypeName() {
          return 'Style';
        }
      }
      class En extends kn {
        getTypeName() {
          return 'Script';
        }
      }
      class Tn extends kn {
        getTypeName() {
          return 'URL';
        }
      }
      class In extends kn {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function An(t) {
        return t instanceof kn ? t.changingThisBreaksApplicationSecurity : t;
      }
      function Dn(t, e) {
        const n = jn(t);
        if (null != n && n !== e) {
          if ('ResourceURL' === n && 'URL' === e) return !0;
          throw new Error(`Required a safe ${e}, got a ${n} (see http://g.co/ng/security#xss)`);
        }
        return n === e;
      }
      function jn(t) {
        return (t instanceof kn && t.getTypeName()) || null;
      }
      function Rn(t) {
        return new On(t);
      }
      function Pn(t) {
        return new Sn(t);
      }
      function Mn(t) {
        return new En(t);
      }
      function Fn(t) {
        return new Tn(t);
      }
      function Nn(t) {
        return new In(t);
      }
      let Vn = !0,
        Ln = !1;
      function Hn() {
        return (Ln = !0), Vn;
      }
      function zn() {
        if (Ln) throw new Error('Cannot enable prod mode after platform setup.');
        Vn = !1;
      }
      class Bn {
        constructor(t) {
          (this.defaultDoc = t),
            (this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert'));
          let e = this.inertDocument.body;
          if (null == e) {
            const t = this.inertDocument.createElement('html');
            this.inertDocument.appendChild(t), (e = this.inertDocument.createElement('body')), t.appendChild(e);
          }
          (e.innerHTML = '<svg><g onload="this.parentNode.remove()"></g></svg>'),
            !e.querySelector || e.querySelector('svg')
              ? ((e.innerHTML = '<svg><p><style><img src="</style><img src=x onerror=alert(1)//">'),
                (this.getInertBodyElement =
                  e.querySelector &&
                  e.querySelector('svg img') &&
                  (function () {
                    try {
                      return !!window.DOMParser;
                    } catch (t) {
                      return !1;
                    }
                  })()
                    ? this.getInertBodyElement_DOMParser
                    : this.getInertBodyElement_InertDocument))
              : (this.getInertBodyElement = this.getInertBodyElement_XHR);
        }
        getInertBodyElement_XHR(t) {
          t = '<body><remove></remove>' + t + '</body>';
          try {
            t = encodeURI(t);
          } catch (i) {
            return null;
          }
          const e = new XMLHttpRequest();
          (e.responseType = 'document'), e.open('GET', 'data:text/html;charset=utf-8,' + t, !1), e.send(void 0);
          const n = e.response.body;
          return n.removeChild(n.firstChild), n;
        }
        getInertBodyElement_DOMParser(t) {
          t = '<body><remove></remove>' + t + '</body>';
          try {
            const e = new window.DOMParser().parseFromString(t, 'text/html').body;
            return e.removeChild(e.firstChild), e;
          } catch (e) {
            return null;
          }
        }
        getInertBodyElement_InertDocument(t) {
          const e = this.inertDocument.createElement('template');
          if ('content' in e) return (e.innerHTML = t), e;
          const n = this.inertDocument.createElement('body');
          return (n.innerHTML = t), this.defaultDoc.documentMode && this.stripCustomNsAttrs(n), n;
        }
        stripCustomNsAttrs(t) {
          const e = t.attributes;
          for (let i = e.length - 1; 0 < i; i--) {
            const n = e.item(i).name;
            ('xmlns:ns1' !== n && 0 !== n.indexOf('ns1:')) || t.removeAttribute(n);
          }
          let n = t.firstChild;
          for (; n; ) n.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(n), (n = n.nextSibling);
        }
      }
      const Un = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
        Wn = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function $n(t) {
        return (t = String(t)).match(Un) || t.match(Wn)
          ? t
          : (Hn() && console.warn(`WARNING: sanitizing unsafe URL value ${t} (see http://g.co/ng/security#xss)`),
            'unsafe:' + t);
      }
      function qn(t) {
        const e = {};
        for (const n of t.split(',')) e[n] = !0;
        return e;
      }
      function Gn(...t) {
        const e = {};
        for (const n of t) for (const t in n) n.hasOwnProperty(t) && (e[t] = !0);
        return e;
      }
      const Xn = qn('area,br,col,hr,img,wbr'),
        Kn = qn('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        Yn = qn('rp,rt'),
        Zn = Gn(Yn, Kn),
        Qn = Gn(
          Xn,
          Gn(
            Kn,
            qn(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'
            )
          ),
          Gn(
            Yn,
            qn(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'
            )
          ),
          Zn
        ),
        Jn = qn('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        ti = qn('srcset'),
        ei = Gn(
          Jn,
          ti,
          qn(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width'
          ),
          qn(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext'
          )
        ),
        ni = qn('script,style,template');
      class ii {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let e = t.firstChild,
            n = !0;
          for (; e; )
            if (
              (e.nodeType === Node.ELEMENT_NODE
                ? (n = this.startElement(e))
                : e.nodeType === Node.TEXT_NODE
                ? this.chars(e.nodeValue)
                : (this.sanitizedSomething = !0),
              n && e.firstChild)
            )
              e = e.firstChild;
            else
              for (; e; ) {
                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                let t = this.checkClobberedElement(e, e.nextSibling);
                if (t) {
                  e = t;
                  break;
                }
                e = this.checkClobberedElement(e, e.parentNode);
              }
          return this.buf.join('');
        }
        startElement(t) {
          const e = t.nodeName.toLowerCase();
          if (!Qn.hasOwnProperty(e)) return (this.sanitizedSomething = !0), !ni.hasOwnProperty(e);
          this.buf.push('<'), this.buf.push(e);
          const n = t.attributes;
          for (let r = 0; r < n.length; r++) {
            const t = n.item(r),
              e = t.name,
              s = e.toLowerCase();
            if (!ei.hasOwnProperty(s)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let o = t.value;
            Jn[s] && (o = $n(o)),
              ti[s] &&
                ((i = o),
                (o = (i = String(i))
                  .split(',')
                  .map((t) => $n(t.trim()))
                  .join(', '))),
              this.buf.push(' ', e, '="', oi(o), '"');
          }
          var i;
          return this.buf.push('>'), !0;
        }
        endElement(t) {
          const e = t.nodeName.toLowerCase();
          Qn.hasOwnProperty(e) && !Xn.hasOwnProperty(e) && (this.buf.push('</'), this.buf.push(e), this.buf.push('>'));
        }
        chars(t) {
          this.buf.push(oi(t));
        }
        checkClobberedElement(t, e) {
          if (
            e &&
            (t.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);
          return e;
        }
      }
      const ri = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        si = /([^\#-~ |!])/g;
      function oi(t) {
        return t
          .replace(/&/g, '&amp;')
          .replace(ri, function (t) {
            return '&#' + (1024 * (t.charCodeAt(0) - 55296) + (t.charCodeAt(1) - 56320) + 65536) + ';';
          })
          .replace(si, function (t) {
            return '&#' + t.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let ai;
      function ci(t, e) {
        let n = null;
        try {
          ai = ai || new Bn(t);
          let i = e ? String(e) : '';
          n = ai.getInertBodyElement(i);
          let r = 5,
            s = i;
          do {
            if (0 === r) throw new Error('Failed to sanitize html because the input is unstable');
            r--, (i = s), (s = n.innerHTML), (n = ai.getInertBodyElement(i));
          } while (i !== s);
          const o = new ii(),
            a = o.sanitizeChildren(li(n) || n);
          return (
            Hn() &&
              o.sanitizedSomething &&
              console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss'),
            a
          );
        } finally {
          if (n) {
            const t = li(n) || n;
            for (; t.firstChild; ) t.removeChild(t.firstChild);
          }
        }
      }
      function li(t) {
        return 'content' in t &&
          (function (t) {
            return t.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === t.nodeName;
          })(t)
          ? t.content
          : null;
      }
      const ui = (function () {
          var t = { NONE: 0, HTML: 1, STYLE: 2, SCRIPT: 3, URL: 4, RESOURCE_URL: 5 };
          return (
            (t[t.NONE] = 'NONE'),
            (t[t.HTML] = 'HTML'),
            (t[t.STYLE] = 'STYLE'),
            (t[t.SCRIPT] = 'SCRIPT'),
            (t[t.URL] = 'URL'),
            (t[t.RESOURCE_URL] = 'RESOURCE_URL'),
            t
          );
        })(),
        hi = new RegExp(
          '^([-,."\'%_!# a-zA-Z0-9]+|(?:(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?|(?:rgb|hsl)a?|(?:repeating-)?(?:linear|radial)-gradient|(?:attr|calc|var))\\([-0-9.%, #a-zA-Z]+\\))$',
          'g'
        ),
        di = /^url\(([^)]+)\)$/;
      function pi(t) {
        if (!(t = String(t).trim())) return '';
        const e = t.match(di);
        return (e && $n(e[1]) === e[1]) ||
          (t.match(hi) &&
            (function (t) {
              let e = !0,
                n = !0;
              for (let i = 0; i < t.length; i++) {
                const r = t.charAt(i);
                "'" === r && n ? (e = !e) : '"' === r && e && (n = !n);
              }
              return e && n;
            })(t))
          ? t
          : (Hn() && console.warn(`WARNING: sanitizing unsafe style value ${t} (see http://g.co/ng/security#xss).`),
            'unsafe');
      }
      function fi(t) {
        const e = gi();
        return e ? e.sanitize(ui.HTML, t) || '' : Dn(t, 'HTML') ? An(t) : ci(Bt(), Ze(t));
      }
      function mi(t) {
        const e = gi();
        return e ? e.sanitize(ui.URL, t) || '' : Dn(t, 'URL') ? An(t) : $n(Ze(t));
      }
      function gi() {
        const t = se();
        return t && t[12];
      }
      function bi(t, e) {
        t.__ngContext__ = e;
      }
      function _i(t) {
        throw new Error(`Multiple components match node with tagname ${t.tagName}`);
      }
      function yi() {
        throw new Error('Cannot mix multi providers and regular providers');
      }
      function vi(t, e, n) {
        let i = t.length;
        for (;;) {
          const r = t.indexOf(e, n);
          if (-1 === r) return r;
          if (0 === r || t.charCodeAt(r - 1) <= 32) {
            const n = e.length;
            if (r + n === i || t.charCodeAt(r + n) <= 32) return r;
          }
          n = r + 1;
        }
      }
      function wi(t, e, n) {
        let i = 0;
        for (; i < t.length; ) {
          let r = t[i++];
          if (n && 'class' === r) {
            if (((r = t[i]), -1 !== vi(r.toLowerCase(), e, 0))) return !0;
          } else if (1 === r) {
            for (; i < t.length && 'string' == typeof (r = t[i++]); ) if (r.toLowerCase() === e) return !0;
            return !1;
          }
        }
        return !1;
      }
      function xi(t) {
        return 0 === t.type && 'ng-template' !== t.tagName;
      }
      function Ci(t, e, n) {
        return e === (0 !== t.type || n ? t.tagName : 'ng-template');
      }
      function ki(t, e, n) {
        let i = 4;
        const r = t.attrs || [],
          s = (function (t) {
            for (let e = 0; e < t.length; e++) if (Ue(t[e])) return e;
            return t.length;
          })(r);
        let o = !1;
        for (let a = 0; a < e.length; a++) {
          const c = e[a];
          if ('number' != typeof c) {
            if (!o)
              if (4 & i) {
                if (((i = 2 | (1 & i)), ('' !== c && !Ci(t, c, n)) || ('' === c && 1 === e.length))) {
                  if (Oi(i)) return !1;
                  o = !0;
                }
              } else {
                const l = 8 & i ? c : e[++a];
                if (8 & i && null !== t.attrs) {
                  if (!wi(t.attrs, l, n)) {
                    if (Oi(i)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const u = Si(8 & i ? 'class' : c, r, xi(t), n);
                if (-1 === u) {
                  if (Oi(i)) return !1;
                  o = !0;
                  continue;
                }
                if ('' !== l) {
                  let t;
                  t = u > s ? '' : r[u + 1].toLowerCase();
                  const e = 8 & i ? t : null;
                  if ((e && -1 !== vi(e, l, 0)) || (2 & i && l !== t)) {
                    if (Oi(i)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !Oi(i) && !Oi(c)) return !1;
            if (o && Oi(c)) continue;
            (o = !1), (i = c | (1 & i));
          }
        }
        return Oi(i) || o;
      }
      function Oi(t) {
        return 0 == (1 & t);
      }
      function Si(t, e, n, i) {
        if (null === e) return -1;
        let r = 0;
        if (i || !n) {
          let n = !1;
          for (; r < e.length; ) {
            const i = e[r];
            if (i === t) return r;
            if (3 === i || 6 === i) n = !0;
            else {
              if (1 === i || 2 === i) {
                let t = e[++r];
                for (; 'string' == typeof t; ) t = e[++r];
                continue;
              }
              if (4 === i) break;
              if (0 === i) {
                r += 4;
                continue;
              }
            }
            r += n ? 1 : 2;
          }
          return -1;
        }
        return (function (t, e) {
          let n = t.indexOf(4);
          if (n > -1)
            for (n++; n < t.length; ) {
              const i = t[n];
              if ('number' == typeof i) return -1;
              if (i === e) return n;
              n++;
            }
          return -1;
        })(e, t);
      }
      function Ei(t, e, n = !1) {
        for (let i = 0; i < e.length; i++) if (ki(t, e[i], n)) return !0;
        return !1;
      }
      function Ti(t, e) {
        t: for (let n = 0; n < e.length; n++) {
          const i = e[n];
          if (t.length === i.length) {
            for (let e = 0; e < t.length; e++) if (t[e] !== i[e]) continue t;
            return !0;
          }
        }
        return !1;
      }
      function Ii(t, e) {
        return t ? ':not(' + e.trim() + ')' : e;
      }
      function Ai(t) {
        let e = t[0],
          n = 1,
          i = 2,
          r = '',
          s = !1;
        for (; n < t.length; ) {
          let o = t[n];
          if ('string' == typeof o)
            if (2 & i) {
              const e = t[++n];
              r += '[' + o + (e.length > 0 ? '="' + e + '"' : '') + ']';
            } else 8 & i ? (r += '.' + o) : 4 & i && (r += ' ' + o);
          else '' === r || Oi(o) || ((e += Ii(s, r)), (r = '')), (i = o), (s = s || !Oi(i));
          n++;
        }
        return '' !== r && (e += Ii(s, r)), e;
      }
      const Di = {};
      function ji(t) {
        const e = t[3];
        return Pt(e) ? e[3] : e;
      }
      function Ri(t) {
        return Mi(t[13]);
      }
      function Pi(t) {
        return Mi(t[4]);
      }
      function Mi(t) {
        for (; null !== t && !Pt(t); ) t = t[4];
        return t;
      }
      function Fi(t) {
        Ni(oe(), se(), Ae() + t, de());
      }
      function Ni(t, e, n, i) {
        if (!i)
          if (3 == (3 & e[2])) {
            const i = t.preOrderCheckHooks;
            null !== i && Fe(e, i, n);
          } else {
            const i = t.preOrderHooks;
            null !== i && Ne(e, i, 0, n);
          }
        De(n);
      }
      function Vi(t, e) {
        return (t << 17) | (e << 2);
      }
      function Li(t) {
        return (t >> 17) & 32767;
      }
      function Hi(t) {
        return 2 | t;
      }
      function zi(t) {
        return (131068 & t) >> 2;
      }
      function Bi(t, e) {
        return (-131069 & t) | (e << 2);
      }
      function Ui(t) {
        return 1 | t;
      }
      function Wi(t, e) {
        const n = t.contentQueries;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) {
            const r = n[i],
              s = n[i + 1];
            if (-1 !== s) {
              const n = t.data[s];
              xe(r), n.contentQueries(2, e[s], s);
            }
          }
      }
      function $i(t, e, n) {
        return Ut(e) ? e.createElement(t, n) : null === n ? e.createElement(t) : e.createElementNS(n, t);
      }
      function qi(t, e, n, i, r, s, o, a, c, l) {
        const u = e.blueprint.slice();
        return (
          (u[0] = r),
          (u[2] = 140 | i),
          ee(u),
          (u[3] = u[15] = t),
          (u[8] = n),
          (u[10] = o || (t && t[10])),
          (u[11] = a || (t && t[11])),
          (u[12] = c || (t && t[12]) || null),
          (u[9] = l || (t && t[9]) || null),
          (u[6] = s),
          (u[16] = 2 == e.type ? t[16] : u),
          u
        );
      }
      function Gi(t, e, n, i, r, s) {
        const o = n + 20,
          a =
            t.data[o] ||
            (function (t, e, n, i, r, s) {
              const o = ce(),
                a = ue(),
                c = a ? o : o && o.parent,
                l = (t.data[n] = ir(0, c && c !== e ? c : null, i, n, r, s));
              return (
                null === t.firstChild && (t.firstChild = l),
                o && (!a || null != o.child || (null === l.parent && 2 !== o.type) ? a || (o.next = l) : (o.child = l)),
                l
              );
            })(t, e, o, i, r, s);
        return le(a, !0), a;
      }
      function Xi(t, e, n) {
        ke(e, e[6]);
        try {
          const i = t.viewQuery;
          null !== i && Or(1, i, n);
          const r = t.template;
          null !== r && Zi(t, e, r, 1, n),
            t.firstCreatePass && (t.firstCreatePass = !1),
            t.staticContentQueries && Wi(t, e),
            t.staticViewQueries && Or(2, t.viewQuery, n);
          const s = t.components;
          null !== s &&
            (function (t, e) {
              for (let n = 0; n < e.length; n++) vr(t, e[n]);
            })(e, s);
        } catch (i) {
          throw (t.firstCreatePass && (t.incompleteFirstPass = !0), i);
        } finally {
          (e[2] &= -5), Ie();
        }
      }
      function Ki(t, e, n, i) {
        const r = e[2];
        if (256 == (256 & r)) return;
        ke(e, e[6]);
        const s = de();
        try {
          ee(e), (ie.lFrame.bindingIndex = t.bindingStartIndex), null !== n && Zi(t, e, n, 2, i);
          const o = 3 == (3 & r);
          if (!s)
            if (o) {
              const n = t.preOrderCheckHooks;
              null !== n && Fe(e, n, null);
            } else {
              const n = t.preOrderHooks;
              null !== n && Ne(e, n, 0, null), Ve(e, 0);
            }
          if (
            ((function (t) {
              for (let e = Ri(t); null !== e; e = Pi(e)) {
                if (!e[2]) continue;
                const t = e[9];
                for (let e = 0; e < t.length; e++) {
                  const n = t[e],
                    i = n[3];
                  0 == (1024 & n[2]) && ne(i, 1), (n[2] |= 1024);
                }
              }
            })(e),
            (function (t) {
              for (let e = Ri(t); null !== e; e = Pi(e))
                for (let t = 10; t < e.length; t++) {
                  const n = e[t],
                    i = n[1];
                  Jt(n) && Ki(i, n, i.template, n[8]);
                }
            })(e),
            null !== t.contentQueries && Wi(t, e),
            !s)
          )
            if (o) {
              const n = t.contentCheckHooks;
              null !== n && Fe(e, n);
            } else {
              const n = t.contentHooks;
              null !== n && Ne(e, n, 1), Ve(e, 1);
            }
          !(function (t, e) {
            try {
              const n = t.expandoInstructions;
              if (null !== n) {
                let i = t.expandoStartIndex,
                  r = -1,
                  s = -1;
                for (let t = 0; t < n.length; t++) {
                  const o = n[t];
                  'number' == typeof o
                    ? o <= 0
                      ? ((s = 0 - o), De(s), (i += 9 + n[++t]), (r = i))
                      : (i += o)
                    : (null !== o && (_e(i, r), o(2, e[r])), r++);
                }
              }
            } finally {
              De(-1);
            }
          })(t, e);
          const a = t.components;
          null !== a &&
            (function (t, e) {
              for (let n = 0; n < e.length; n++) yr(t, e[n]);
            })(e, a);
          const c = t.viewQuery;
          if ((null !== c && Or(2, c, i), !s))
            if (o) {
              const n = t.viewCheckHooks;
              null !== n && Fe(e, n);
            } else {
              const n = t.viewHooks;
              null !== n && Ne(e, n, 2), Ve(e, 2);
            }
          !0 === t.firstUpdatePass && (t.firstUpdatePass = !1),
            s || (e[2] &= -73),
            1024 & e[2] && ((e[2] &= -1025), ne(e[3], -1));
        } finally {
          Ie();
        }
      }
      function Yi(t, e, n, i) {
        const r = e[10],
          s = !de(),
          o = Qt(e);
        try {
          s && !o && r.begin && r.begin(), o && Xi(t, e, i), Ki(t, e, n, i);
        } finally {
          s && !o && r.end && r.end();
        }
      }
      function Zi(t, e, n, i, r) {
        const s = Ae();
        try {
          De(-1), 2 & i && e.length > 20 && Ni(t, e, 0, de()), n(i, r);
        } finally {
          De(s);
        }
      }
      function Qi(t, e, n) {
        if (Mt(e)) {
          const i = e.directiveEnd;
          for (let r = e.directiveStart; r < i; r++) {
            const e = t.data[r];
            e.contentQueries && e.contentQueries(1, n[r], r);
          }
        }
      }
      function Ji(t, e, n) {
        re() &&
          ((function (t, e, n, i) {
            const r = n.directiveStart,
              s = n.directiveEnd;
            t.firstCreatePass || on(n, e), bi(i, e);
            const o = n.initialInputs;
            for (let a = r; a < s; a++) {
              const i = t.data[a],
                s = Vt(i);
              s && mr(e, n, i);
              const c = mn(e, t, a, n);
              bi(c, e), null !== o && gr(0, a - r, c, i, 0, o), s && (Yt(n.index, e)[8] = c);
            }
          })(t, e, n, Gt(n, e)),
          128 == (128 & n.flags) &&
            (function (t, e, n) {
              const i = n.directiveStart,
                r = n.directiveEnd,
                s = t.expandoInstructions,
                o = t.firstCreatePass,
                a = n.index - 20,
                c = ie.lFrame.currentDirectiveIndex;
              try {
                De(a);
                for (let n = i; n < r; n++) {
                  const i = t.data[n],
                    r = e[n];
                  ye(n),
                    null !== i.hostBindings || 0 !== i.hostVars || null !== i.hostAttrs ? lr(i, r) : o && s.push(null);
                }
              } finally {
                De(-1), ye(c);
              }
            })(t, e, n));
      }
      function tr(t, e, n = Gt) {
        const i = e.localNames;
        if (null !== i) {
          let r = e.index + 1;
          for (let s = 0; s < i.length; s += 2) {
            const o = i[s + 1],
              a = -1 === o ? n(e, t) : t[o];
            t[r++] = a;
          }
        }
      }
      function er(t) {
        const e = t.tView;
        return null === e || e.incompleteFirstPass
          ? (t.tView = nr(
              1,
              -1,
              t.template,
              t.decls,
              t.vars,
              t.directiveDefs,
              t.pipeDefs,
              t.viewQuery,
              t.schemas,
              t.consts
            ))
          : e;
      }
      function nr(t, e, n, i, r, s, o, a, c, l) {
        const u = 20 + i,
          h = u + r,
          d = (function (t, e) {
            const n = [];
            for (let i = 0; i < e; i++) n.push(i < t ? null : Di);
            return n;
          })(u, h);
        return (d[1] = {
          type: t,
          id: e,
          blueprint: d,
          template: n,
          queries: null,
          viewQuery: a,
          node: null,
          data: d.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: h,
          expandoInstructions: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof s ? s() : s,
          pipeRegistry: 'function' == typeof o ? o() : o,
          firstChild: null,
          schemas: c,
          consts: l,
          incompleteFirstPass: !1,
        });
      }
      function ir(t, e, n, i, r, s) {
        return {
          type: n,
          index: i,
          injectorIndex: e ? e.injectorIndex : -1,
          directiveStart: -1,
          directiveEnd: -1,
          directiveStylingLast: -1,
          propertyBindings: null,
          flags: 0,
          providerIndexes: 0,
          tagName: r,
          attrs: s,
          mergedAttrs: null,
          localNames: null,
          initialInputs: void 0,
          inputs: null,
          outputs: null,
          tViews: null,
          next: null,
          projectionNext: null,
          child: null,
          parent: e,
          projection: null,
          styles: null,
          stylesWithoutHost: null,
          residualStyles: void 0,
          classes: null,
          classesWithoutHost: null,
          residualClasses: void 0,
          classBindings: 0,
          styleBindings: 0,
        };
      }
      function rr(t, e, n) {
        for (let i in t)
          if (t.hasOwnProperty(i)) {
            const r = t[i];
            (n = null === n ? {} : n).hasOwnProperty(i) ? n[i].push(e, r) : (n[i] = [e, r]);
          }
        return n;
      }
      function sr(t, e, n, i, r, s, o, a) {
        const c = Gt(e, n);
        let l,
          u = e.inputs;
        var h;
        !a && null != u && (l = u[i])
          ? (Dr(t, n, l, i, r),
            Ft(e) &&
              (function (t, e) {
                const n = Yt(e, t);
                16 & n[2] || (n[2] |= 64);
              })(n, e.index))
          : 3 === e.type &&
            ((i =
              'class' === (h = i)
                ? 'className'
                : 'for' === h
                ? 'htmlFor'
                : 'formaction' === h
                ? 'formAction'
                : 'innerHtml' === h
                ? 'innerHTML'
                : 'readonly' === h
                ? 'readOnly'
                : 'tabindex' === h
                ? 'tabIndex'
                : h),
            (r = null != o ? o(r, e.tagName || '', i) : r),
            Ut(s) ? s.setProperty(c, i, r) : We(i) || (c.setProperty ? c.setProperty(i, r) : (c[i] = r)));
      }
      function or(t, e, n, i) {
        let r = !1;
        if (re()) {
          const s = (function (t, e, n) {
              const i = t.directiveRegistry;
              let r = null;
              if (i)
                for (let s = 0; s < i.length; s++) {
                  const o = i[s];
                  Ei(n, o.selectors, !1) &&
                    (r || (r = []),
                    un(on(n, e), t, o.type),
                    Vt(o) ? (2 & n.flags && _i(n), hr(t, n), r.unshift(o)) : r.push(o));
                }
              return r;
            })(t, e, n),
            o = null === i ? null : { '': -1 };
          if (null !== s) {
            let i = 0;
            (r = !0), pr(n, t.data.length, s.length);
            for (let t = 0; t < s.length; t++) {
              const e = s[t];
              e.providersResolver && e.providersResolver(e);
            }
            ur(t, n, s.length);
            let a = !1,
              c = !1;
            for (let r = 0; r < s.length; r++) {
              const l = s[r];
              (n.mergedAttrs = $e(n.mergedAttrs, l.hostAttrs)),
                fr(t, e, l),
                dr(t.data.length - 1, l, o),
                null !== l.contentQueries && (n.flags |= 8),
                (null === l.hostBindings && null === l.hostAttrs && 0 === l.hostVars) || (n.flags |= 128),
                !a &&
                  (l.onChanges || l.onInit || l.doCheck) &&
                  ((t.preOrderHooks || (t.preOrderHooks = [])).push(n.index - 20), (a = !0)),
                c ||
                  (!l.onChanges && !l.doCheck) ||
                  ((t.preOrderCheckHooks || (t.preOrderCheckHooks = [])).push(n.index - 20), (c = !0)),
                ar(t, l),
                (i += l.hostVars);
            }
            !(function (t, e) {
              const n = e.directiveEnd,
                i = t.data,
                r = e.attrs,
                s = [];
              let o = null,
                a = null;
              for (let c = e.directiveStart; c < n; c++) {
                const t = i[c],
                  n = t.inputs,
                  l = null === r || xi(e) ? null : br(n, r);
                s.push(l), (o = rr(n, c, o)), (a = rr(t.outputs, c, a));
              }
              null !== o &&
                (o.hasOwnProperty('class') && (e.flags |= 16), o.hasOwnProperty('style') && (e.flags |= 32)),
                (e.initialInputs = s),
                (e.inputs = o),
                (e.outputs = a);
            })(t, n),
              cr(t, e, i);
          }
          o &&
            (function (t, e, n) {
              if (e) {
                const i = (t.localNames = []);
                for (let t = 0; t < e.length; t += 2) {
                  const r = n[e[t + 1]];
                  if (null == r) throw new Error(`Export of name '${e[t + 1]}' not found!`);
                  i.push(e[t], r);
                }
              }
            })(n, i, o);
        }
        return (n.mergedAttrs = $e(n.mergedAttrs, n.attrs)), r;
      }
      function ar(t, e) {
        const n = t.expandoInstructions;
        n.push(e.hostBindings), 0 !== e.hostVars && n.push(e.hostVars);
      }
      function cr(t, e, n) {
        for (let i = 0; i < n; i++) e.push(Di), t.blueprint.push(Di), t.data.push(null);
      }
      function lr(t, e) {
        null !== t.hostBindings && t.hostBindings(1, e);
      }
      function ur(t, e, n) {
        const i = 20 - e.index,
          r = t.data.length - (65535 & e.providerIndexes);
        (t.expandoInstructions || (t.expandoInstructions = [])).push(i, r, n);
      }
      function hr(t, e) {
        (e.flags |= 2), (t.components || (t.components = [])).push(e.index);
      }
      function dr(t, e, n) {
        if (n) {
          if (e.exportAs) for (let i = 0; i < e.exportAs.length; i++) n[e.exportAs[i]] = t;
          Vt(e) && (n[''] = t);
        }
      }
      function pr(t, e, n) {
        (t.flags |= 1), (t.directiveStart = e), (t.directiveEnd = e + n), (t.providerIndexes = e);
      }
      function fr(t, e, n) {
        t.data.push(n);
        const i = n.factory || (n.factory = Dt(n.type)),
          r = new ze(i, Vt(n), null);
        t.blueprint.push(r), e.push(r);
      }
      function mr(t, e, n) {
        const i = Gt(e, t),
          r = er(n),
          s = t[10],
          o = wr(t, qi(t, r, null, n.onPush ? 64 : 16, i, e, s, s.createRenderer(i, n)));
        t[e.index] = o;
      }
      function gr(t, e, n, i, r, s) {
        const o = s[e];
        if (null !== o) {
          const t = i.setInput;
          for (let e = 0; e < o.length; ) {
            const r = o[e++],
              s = o[e++],
              a = o[e++];
            null !== t ? i.setInput(n, a, r, s) : (n[s] = a);
          }
        }
      }
      function br(t, e) {
        let n = null,
          i = 0;
        for (; i < e.length; ) {
          const r = e[i];
          if (0 !== r)
            if (5 !== r) {
              if ('number' == typeof r) break;
              t.hasOwnProperty(r) && (null === n && (n = []), n.push(r, t[r], e[i + 1])), (i += 2);
            } else i += 2;
          else i += 4;
        }
        return n;
      }
      function _r(t, e, n, i) {
        return new Array(t, !0, !1, e, null, 0, i, n, null, null);
      }
      function yr(t, e) {
        const n = Yt(e, t);
        if (Jt(n)) {
          const t = n[1];
          80 & n[2]
            ? Ki(t, n, t.template, n[8])
            : n[5] > 0 &&
              (function t(e) {
                for (let i = Ri(e); null !== i; i = Pi(i))
                  for (let e = 10; e < i.length; e++) {
                    const n = i[e];
                    if (1024 & n[2]) {
                      const t = n[1];
                      Ki(t, n, t.template, n[8]);
                    } else n[5] > 0 && t(n);
                  }
                const n = e[1].components;
                if (null !== n)
                  for (let i = 0; i < n.length; i++) {
                    const r = Yt(n[i], e);
                    Jt(r) && r[5] > 0 && t(r);
                  }
              })(n);
        }
      }
      function vr(t, e) {
        const n = Yt(e, t),
          i = n[1];
        !(function (t, e) {
          for (let n = e.length; n < t.blueprint.length; n++) e.push(t.blueprint[n]);
        })(i, n),
          Xi(i, n, n[8]);
      }
      function wr(t, e) {
        return t[13] ? (t[14][4] = e) : (t[13] = e), (t[14] = e), e;
      }
      function xr(t) {
        for (; t; ) {
          t[2] |= 64;
          const e = ji(t);
          if (Lt(t) && !e) return t;
          t = e;
        }
        return null;
      }
      function Cr(t, e, n) {
        const i = e[10];
        i.begin && i.begin();
        try {
          Ki(t, e, t.template, n);
        } catch (r) {
          throw (Ar(e, r), r);
        } finally {
          i.end && i.end();
        }
      }
      function kr(t) {
        !(function (t) {
          for (let e = 0; e < t.components.length; e++) {
            const n = t.components[e],
              i = Zt(n),
              r = i[1];
            Yi(r, i, r.template, n);
          }
        })(t[8]);
      }
      function Or(t, e, n) {
        xe(0), e(t, n);
      }
      const Sr = (() => Promise.resolve(null))();
      function Er(t) {
        return t[7] || (t[7] = []);
      }
      function Tr(t) {
        return t.cleanup || (t.cleanup = []);
      }
      function Ir(t, e, n) {
        return (
          (null === t || Vt(t)) &&
            (n = (function (t) {
              for (; Array.isArray(t); ) {
                if ('object' == typeof t[1]) return t;
                t = t[0];
              }
              return null;
            })(n[e.index])),
          n[11]
        );
      }
      function Ar(t, e) {
        const n = t[9],
          i = n ? n.get(Cn, null) : null;
        i && i.handleError(e);
      }
      function Dr(t, e, n, i, r) {
        for (let s = 0; s < n.length; ) {
          const o = n[s++],
            a = n[s++],
            c = e[o],
            l = t.data[o];
          null !== l.setInput ? l.setInput(c, r, i, a) : (c[a] = r);
        }
      }
      function jr(t, e, n) {
        const i = qt(e, t),
          r = t[11];
        Ut(r) ? r.setValue(i, n) : (i.textContent = n);
      }
      function Rr(t, e) {
        const n = e[3];
        return -1 === t.index ? (Pt(n) ? n : null) : n;
      }
      function Pr(t, e) {
        const n = Rr(t, e);
        return n ? qr(e[11], n[7]) : null;
      }
      function Mr(t, e, n, i, r) {
        if (null != i) {
          let s,
            o = !1;
          Pt(i) ? (s = i) : Rt(i) && ((o = !0), (i = i[0]));
          const a = $t(i);
          0 === t && null !== n
            ? null == r
              ? Wr(e, n, a)
              : Ur(e, n, a, r || null)
            : 1 === t && null !== n
            ? Ur(e, n, a, r || null)
            : 2 === t
            ? (function (t, e, n) {
                const i = qr(t, e);
                i &&
                  (function (t, e, n, i) {
                    Ut(t) ? t.removeChild(e, n, i) : e.removeChild(n);
                  })(t, i, e, n);
              })(e, a, o)
            : 3 === t && e.destroyNode(a),
            null != s &&
              (function (t, e, n, i, r) {
                const s = n[7];
                s !== $t(n) && Mr(e, t, i, s, r);
                for (let o = 10; o < n.length; o++) {
                  const r = n[o];
                  Zr(r[1], r, t, e, i, s);
                }
              })(e, t, s, n, r);
        }
      }
      function Fr(t, e, n, i) {
        const r = Pr(t.node, e);
        r && Zr(t, e, e[11], n ? 1 : 2, r, i);
      }
      function Nr(t, e) {
        const n = t[9],
          i = n.indexOf(e);
        1024 & e[2] && ne(e[3], -1), n.splice(i, 1);
      }
      function Vr(t, e) {
        if (t.length <= 10) return;
        const n = 10 + e,
          i = t[n];
        if (i) {
          const r = i[17];
          null !== r && r !== t && Nr(r, i), e > 0 && (t[n - 1][4] = i[4]);
          const s = ht(t, 10 + e);
          Fr(i[1], i, !1, null);
          const o = s[19];
          null !== o && o.detachView(s[1]), (i[3] = null), (i[4] = null), (i[2] &= -129);
        }
        return i;
      }
      function Lr(t, e) {
        if (!(256 & e[2])) {
          const n = e[11];
          Ut(n) && n.destroyNode && Zr(t, e, n, 3, null, null),
            (function (t) {
              let e = t[13];
              if (!e) return zr(t[1], t);
              for (; e; ) {
                let n = null;
                if (Rt(e)) n = e[13];
                else {
                  const t = e[10];
                  t && (n = t);
                }
                if (!n) {
                  for (; e && !e[4] && e !== t; ) Rt(e) && zr(e[1], e), (e = Hr(e, t));
                  null === e && (e = t), Rt(e) && zr(e[1], e), (n = e && e[4]);
                }
                e = n;
              }
            })(e);
        }
      }
      function Hr(t, e) {
        let n;
        return Rt(t) && (n = t[6]) && 2 === n.type ? Rr(n, t) : t[3] === e ? null : t[3];
      }
      function zr(t, e) {
        if (!(256 & e[2])) {
          (e[2] &= -129),
            (e[2] |= 256),
            (function (t, e) {
              let n;
              if (null != t && null != (n = t.destroyHooks))
                for (let i = 0; i < n.length; i += 2) {
                  const t = e[n[i]];
                  if (!(t instanceof ze)) {
                    const e = n[i + 1];
                    if (Array.isArray(e)) for (let n = 0; n < e.length; n += 2) e[n + 1].call(t[e[n]]);
                    else e.call(t);
                  }
                }
            })(t, e),
            (function (t, e) {
              const n = t.cleanup;
              if (null !== n) {
                const t = e[7];
                for (let i = 0; i < n.length - 1; i += 2)
                  if ('string' == typeof n[i]) {
                    const r = n[i + 1],
                      s = 'function' == typeof r ? r(e) : $t(e[r]),
                      o = t[n[i + 2]],
                      a = n[i + 3];
                    'boolean' == typeof a ? s.removeEventListener(n[i], o, a) : a >= 0 ? t[a]() : t[-a].unsubscribe(),
                      (i += 2);
                  } else n[i].call(t[n[i + 1]]);
                e[7] = null;
              }
            })(t, e);
          const n = e[6];
          n && 3 === n.type && Ut(e[11]) && e[11].destroy();
          const i = e[17];
          if (null !== i && Pt(e[3])) {
            i !== e[3] && Nr(i, e);
            const n = e[19];
            null !== n && n.detachView(t);
          }
        }
      }
      function Br(t, e, n) {
        let i = e.parent;
        for (; null != i && (4 === i.type || 5 === i.type); ) i = (e = i).parent;
        if (null == i) {
          const t = n[6];
          return 2 === t.type ? Pr(t, n) : n[0];
        }
        if (e && 5 === e.type && 4 & e.flags) return Gt(e, n).parentNode;
        if (2 & i.flags) {
          const e = t.data,
            n = e[e[i.index].directiveStart].encapsulation;
          if (n !== bt.ShadowDom && n !== bt.Native) return null;
        }
        return Gt(i, n);
      }
      function Ur(t, e, n, i) {
        Ut(t) ? t.insertBefore(e, n, i) : e.insertBefore(n, i, !0);
      }
      function Wr(t, e, n) {
        Ut(t) ? t.appendChild(e, n) : e.appendChild(n);
      }
      function $r(t, e, n, i) {
        null !== i ? Ur(t, e, n, i) : Wr(t, e, n);
      }
      function qr(t, e) {
        return Ut(t) ? t.parentNode(e) : e.parentNode;
      }
      function Gr(t, e) {
        if (2 === t.type) {
          const n = Rr(t, e);
          return null === n ? null : Kr(n.indexOf(e, 10) - 10, n);
        }
        return 4 === t.type || 5 === t.type ? Gt(t, e) : null;
      }
      function Xr(t, e, n, i) {
        const r = Br(t, i, e);
        if (null != r) {
          const t = e[11],
            s = Gr(i.parent || e[6], e);
          if (Array.isArray(n)) for (let e = 0; e < n.length; e++) $r(t, r, n[e], s);
          else $r(t, r, n, s);
        }
      }
      function Kr(t, e) {
        const n = 10 + t + 1;
        if (n < e.length) {
          const t = e[n],
            i = t[1].firstChild;
          if (null !== i)
            return (function t(e, n) {
              if (null !== n) {
                const i = n.type;
                if (3 === i) return Gt(n, e);
                if (0 === i) return Kr(-1, e[n.index]);
                if (4 === i || 5 === i) {
                  const i = n.child;
                  if (null !== i) return t(e, i);
                  {
                    const t = e[n.index];
                    return Pt(t) ? Kr(-1, t) : $t(t);
                  }
                }
                {
                  const i = e[16],
                    r = i[6],
                    s = ji(i),
                    o = r.projection[n.projection];
                  return null != o ? t(s, o) : t(e, n.next);
                }
              }
              return null;
            })(t, i);
        }
        return e[7];
      }
      function Yr(t, e, n, i, r, s, o) {
        for (; null != n; ) {
          const a = i[n.index],
            c = n.type;
          o && 0 === e && (a && bi($t(a), i), (n.flags |= 4)),
            64 != (64 & n.flags) &&
              (4 === c || 5 === c
                ? (Yr(t, e, n.child, i, r, s, !1), Mr(e, t, r, a, s))
                : 1 === c
                ? Qr(t, e, i, n, r, s)
                : Mr(e, t, r, a, s)),
            (n = o ? n.projectionNext : n.next);
        }
      }
      function Zr(t, e, n, i, r, s) {
        Yr(n, i, t.node.child, e, r, s, !1);
      }
      function Qr(t, e, n, i, r, s) {
        const o = n[16],
          a = o[6].projection[i.projection];
        if (Array.isArray(a)) for (let c = 0; c < a.length; c++) Mr(e, t, r, a[c], s);
        else Yr(t, e, a, o[3], r, s, !0);
      }
      function Jr(t, e, n) {
        Ut(t) ? t.setAttribute(e, 'style', n) : (e.style.cssText = n);
      }
      function ts(t, e, n) {
        Ut(t) ? ('' === n ? t.removeAttribute(e, 'class') : t.setAttribute(e, 'class', n)) : (e.className = n);
      }
      class es {
        constructor(t, e) {
          (this._lView = t), (this._cdRefInjectingView = e), (this._appRef = null), (this._viewContainerRef = null);
        }
        get rootNodes() {
          const t = this._lView;
          return null == t[0]
            ? (function t(e, n, i, r, s = !1) {
                for (; null !== i; ) {
                  const o = n[i.index];
                  if ((null !== o && r.push($t(o)), Pt(o)))
                    for (let e = 10; e < o.length; e++) {
                      const n = o[e],
                        i = n[1].firstChild;
                      null !== i && t(n[1], n, i, r);
                    }
                  const a = i.type;
                  if (4 === a || 5 === a) t(e, n, i.child, r);
                  else if (1 === a) {
                    const e = n[16],
                      s = e[6].projection[i.projection];
                    if (Array.isArray(s)) r.push(...s);
                    else {
                      const n = ji(e);
                      t(n[1], n, s, r, !0);
                    }
                  }
                  i = s ? i.projectionNext : i.next;
                }
                return r;
              })(t[1], t, t[6].child, [])
            : [];
        }
        get context() {
          return this._lView[8];
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._viewContainerRef) {
            const t = this._viewContainerRef.indexOf(this);
            t > -1 && this._viewContainerRef.detach(t), (this._viewContainerRef = null);
          }
          Lr(this._lView[1], this._lView);
        }
        onDestroy(t) {
          var e, n, i;
          (e = this._lView[1]),
            (i = t),
            Er((n = this._lView)).push(i),
            e.firstCreatePass && Tr(e).push(n[7].length - 1, null);
        }
        markForCheck() {
          xr(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          Cr(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (t, e, n) {
            pe(!0);
            try {
              Cr(t, e, n);
            } finally {
              pe(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef(t) {
          if (this._appRef) throw new Error('This view is already attached directly to the ApplicationRef!');
          this._viewContainerRef = t;
        }
        detachFromAppRef() {
          var t;
          (this._appRef = null), Zr(this._lView[1], (t = this._lView), t[11], 2, null, null);
        }
        attachToAppRef(t) {
          if (this._viewContainerRef) throw new Error('This view is already attached to a ViewContainer!');
          this._appRef = t;
        }
      }
      class ns extends es {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          kr(this._view);
        }
        checkNoChanges() {
          !(function (t) {
            pe(!0);
            try {
              kr(t);
            } finally {
              pe(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      let is, rs, ss;
      function os(t, e, n) {
        return is || (is = class extends t {}), new is(Gt(e, n));
      }
      function as(t, e, n, i) {
        return (
          rs ||
            (rs = class extends t {
              constructor(t, e, n) {
                super(), (this._declarationView = t), (this._declarationTContainer = e), (this.elementRef = n);
              }
              createEmbeddedView(t) {
                const e = this._declarationTContainer.tViews,
                  n = qi(this._declarationView, e, t, 16, null, e.node);
                n[17] = this._declarationView[this._declarationTContainer.index];
                const i = this._declarationView[19];
                return null !== i && (n[19] = i.createEmbeddedView(e)), Xi(e, n, t), new es(n);
              }
            }),
          0 === n.type ? new rs(i, n, os(e, n, i)) : null
        );
      }
      function cs(t, e, n, i) {
        let r;
        ss ||
          (ss = class extends t {
            constructor(t, e, n) {
              super(), (this._lContainer = t), (this._hostTNode = e), (this._hostView = n);
            }
            get element() {
              return os(e, this._hostTNode, this._hostView);
            }
            get injector() {
              return new _n(this._hostTNode, this._hostView);
            }
            get parentInjector() {
              const t = ln(this._hostTNode, this._hostView),
                e = Ye(t, this._hostView),
                n = (function (t, e, n) {
                  if (n.parent && -1 !== n.parent.injectorIndex) {
                    const t = n.parent.injectorIndex;
                    let e = n.parent;
                    for (; null != e.parent && t == e.parent.injectorIndex; ) e = e.parent;
                    return e;
                  }
                  let i = Ke(t),
                    r = e,
                    s = e[6];
                  for (; i > 1; ) (r = r[15]), (s = r[6]), i--;
                  return s;
                })(t, this._hostView, this._hostTNode);
              return Ge(t) && null != n ? new _n(n, e) : new _n(null, this._hostView);
            }
            clear() {
              for (; this.length > 0; ) this.remove(this.length - 1);
            }
            get(t) {
              return (null !== this._lContainer[8] && this._lContainer[8][t]) || null;
            }
            get length() {
              return this._lContainer.length - 10;
            }
            createEmbeddedView(t, e, n) {
              const i = t.createEmbeddedView(e || {});
              return this.insert(i, n), i;
            }
            createComponent(t, e, n, i, r) {
              const s = n || this.parentInjector;
              if (!r && null == t.ngModule && s) {
                const t = s.get(at, null);
                t && (r = t);
              }
              const o = t.create(s, i, void 0, r);
              return this.insert(o.hostView, e), o;
            }
            insert(t, e) {
              const n = t._lView,
                i = n[1];
              if (t.destroyed) throw new Error('Cannot insert a destroyed View in a ViewContainer!');
              if ((this.allocateContainerIfNeeded(), Pt(n[3]))) {
                const e = this.indexOf(t);
                if (-1 !== e) this.detach(e);
                else {
                  const e = n[3],
                    i = new ss(e, e[6], e[3]);
                  i.detach(i.indexOf(t));
                }
              }
              const r = this._adjustIndex(e);
              return (
                (function (t, e, n, i) {
                  const r = 10 + i,
                    s = n.length;
                  i > 0 && (n[r - 1][4] = e),
                    i < s - 10 ? ((e[4] = n[r]), ut(n, 10 + i, e)) : (n.push(e), (e[4] = null)),
                    (e[3] = n);
                  const o = e[17];
                  null !== o &&
                    n !== o &&
                    (function (t, e) {
                      const n = t[9];
                      e[16] !== e[3][3][16] && (t[2] = !0), null === n ? (t[9] = [e]) : n.push(e);
                    })(o, e);
                  const a = e[19];
                  null !== a && a.insertView(t), (e[2] |= 128);
                })(i, n, this._lContainer, r),
                Fr(i, n, !0, Kr(r, this._lContainer)),
                t.attachToViewContainerRef(this),
                ut(this._lContainer[8], r, t),
                t
              );
            }
            move(t, e) {
              if (t.destroyed) throw new Error('Cannot move a destroyed View in a ViewContainer!');
              return this.insert(t, e);
            }
            indexOf(t) {
              const e = this._lContainer[8];
              return null !== e ? e.indexOf(t) : -1;
            }
            remove(t) {
              this.allocateContainerIfNeeded();
              const e = this._adjustIndex(t, -1);
              !(function (t, e) {
                const n = Vr(t, e);
                n && Lr(n[1], n);
              })(this._lContainer, e),
                ht(this._lContainer[8], e);
            }
            detach(t) {
              this.allocateContainerIfNeeded();
              const e = this._adjustIndex(t, -1),
                n = Vr(this._lContainer, e);
              return n && null != ht(this._lContainer[8], e) ? new es(n) : null;
            }
            _adjustIndex(t, e = 0) {
              return null == t ? this.length + e : t;
            }
            allocateContainerIfNeeded() {
              null === this._lContainer[8] && (this._lContainer[8] = []);
            }
          });
        const s = i[n.index];
        if (Pt(s)) r = s;
        else {
          let t;
          if (4 === n.type) t = $t(s);
          else if (((t = i[11].createComment('')), Lt(i))) {
            const e = i[11],
              r = Gt(n, i);
            Ur(
              e,
              qr(e, r),
              t,
              (function (t, e) {
                return Ut(t) ? t.nextSibling(e) : e.nextSibling;
              })(e, r)
            );
          } else Xr(i[1], i, t, n);
          (i[n.index] = r = _r(s, i, t, n)), wr(i, r);
        }
        return new ss(r, n, i);
      }
      function ls(t = !1) {
        return (function (t, e, n) {
          if (!n && Ft(t)) {
            const n = Yt(t.index, e);
            return new es(n, n);
          }
          return 3 === t.type || 0 === t.type || 4 === t.type || 5 === t.type ? new es(e[16], e) : null;
        })(ce(), se(), t);
      }
      let us = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => hs()), t;
      })();
      const hs = ls,
        ds = Function,
        ps = new q('Set Injector scope.'),
        fs = {},
        ms = {},
        gs = [];
      let bs = void 0;
      function _s() {
        return void 0 === bs && (bs = new ot()), bs;
      }
      function ys(t, e = null, n = null, i) {
        return new vs(t, n, e || _s(), i);
      }
      class vs {
        constructor(t, e, n, i = null) {
          (this.parent = n),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const r = [];
          e && lt(e, (n) => this.processProvider(n, t, e)),
            lt([t], (t) => this.processInjectorType(t, [], r)),
            this.records.set(G, Cs(void 0, this));
          const s = this.records.get(ps);
          (this.scope = null != s ? s.value : null), (this.source = i || ('object' == typeof t ? null : T(t)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((t) => t.ngOnDestroy());
          } finally {
            this.records.clear(), this.onDestroy.clear(), this.injectorDefTypes.clear();
          }
        }
        get(t, e = X, n = f.Default) {
          this.assertNotDestroyed();
          const i = J(this);
          try {
            if (!(n & f.SkipSelf)) {
              let e = this.records.get(t);
              if (void 0 === e) {
                const n = ('function' == typeof (r = t) || ('object' == typeof r && r instanceof q)) && v(t);
                (e = n && this.injectableDefInScope(n) ? Cs(ws(t), fs) : null), this.records.set(t, e);
              }
              if (null != e) return this.hydrate(t, e);
            }
            return (n & f.Self ? _s() : this.parent).get(t, (e = n & f.Optional && e === X ? null : e));
          } catch (s) {
            if ('NullInjectorError' === s.name) {
              if (((s.ngTempTokenPath = s.ngTempTokenPath || []).unshift(T(t)), i)) throw s;
              return (function (t, e, n, i) {
                const r = t.ngTempTokenPath;
                throw (
                  (e.__source && r.unshift(e.__source),
                  (t.message = (function (t, e, n, i = null) {
                    t = t && '\n' === t.charAt(0) && '\u0275' == t.charAt(1) ? t.substr(2) : t;
                    let r = T(e);
                    if (Array.isArray(e)) r = e.map(T).join(' -> ');
                    else if ('object' == typeof e) {
                      let t = [];
                      for (let n in e)
                        if (e.hasOwnProperty(n)) {
                          let i = e[n];
                          t.push(n + ':' + ('string' == typeof i ? JSON.stringify(i) : T(i)));
                        }
                      r = `{${t.join(', ')}}`;
                    }
                    return `${n}${i ? '(' + i + ')' : ''}[${r}]: ${t.replace(K, '\n  ')}`;
                  })('\n' + t.message, r, n, i)),
                  (t.ngTokenPath = r),
                  (t.ngTempTokenPath = null),
                  t)
                );
              })(s, t, 'R3InjectorError', this.source);
            }
            throw s;
          } finally {
            J(i);
          }
          var r;
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((t) => this.get(t));
        }
        toString() {
          const t = [];
          return this.records.forEach((e, n) => t.push(T(n))), `R3Injector[${t.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Error('Injector has already been destroyed.');
        }
        processInjectorType(t, e, n) {
          if (!(t = j(t))) return !1;
          let i = x(t);
          const r = (null == i && t.ngModule) || void 0,
            s = void 0 === r ? t : r,
            o = -1 !== n.indexOf(s);
          if ((void 0 !== r && (i = x(r)), null == i)) return !1;
          if (null != i.imports && !o) {
            let t;
            n.push(s);
            try {
              lt(i.imports, (i) => {
                this.processInjectorType(i, e, n) && (void 0 === t && (t = []), t.push(i));
              });
            } finally {
            }
            if (void 0 !== t)
              for (let e = 0; e < t.length; e++) {
                const { ngModule: n, providers: i } = t[e];
                lt(i, (t) => this.processProvider(t, n, i || gs));
              }
          }
          this.injectorDefTypes.add(s), this.records.set(s, Cs(i.factory, fs));
          const a = i.providers;
          if (null != a && !o) {
            const e = t;
            lt(a, (t) => this.processProvider(t, e, a));
          }
          return void 0 !== r && void 0 !== t.providers;
        }
        processProvider(t, e, n) {
          let i = Os((t = j(t))) ? t : j(t && t.provide);
          const r = (function (t, e, n) {
            return ks(t) ? Cs(void 0, t.useValue) : Cs(xs(t, e, n), fs);
          })(t, e, n);
          if (Os(t) || !0 !== t.multi) {
            const t = this.records.get(i);
            t && void 0 !== t.multi && yi();
          } else {
            let e = this.records.get(i);
            e
              ? void 0 === e.multi && yi()
              : ((e = Cs(void 0, fs, !0)), (e.factory = () => st(e.multi)), this.records.set(i, e)),
              (i = t),
              e.multi.push(t);
          }
          this.records.set(i, r);
        }
        hydrate(t, e) {
          var n;
          return (
            e.value === ms
              ? (function (t) {
                  throw new Error(`Cannot instantiate cyclic dependency! ${t}`);
                })(T(t))
              : e.value === fs && ((e.value = ms), (e.value = e.factory())),
            'object' == typeof e.value &&
              e.value &&
              null !== (n = e.value) &&
              'object' == typeof n &&
              'function' == typeof n.ngOnDestroy &&
              this.onDestroy.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          return (
            !!t.providedIn &&
            ('string' == typeof t.providedIn
              ? 'any' === t.providedIn || t.providedIn === this.scope
              : this.injectorDefTypes.has(t.providedIn))
          );
        }
      }
      function ws(t) {
        const e = v(t),
          n = null !== e ? e.factory : Dt(t);
        if (null !== n) return n;
        const i = x(t);
        if (null !== i) return i.factory;
        if (t instanceof q) throw new Error(`Token ${T(t)} is missing a \u0275prov definition.`);
        if (t instanceof Function)
          return (function (t) {
            const e = t.length;
            if (e > 0) {
              const n = dt(e, '?');
              throw new Error(`Can't resolve all parameters for ${T(t)}: (${n.join(', ')}).`);
            }
            const n = (function (t) {
              const e = t && (t[C] || t[S] || (t[O] && t[O]()));
              if (e) {
                const n = (function (t) {
                  if (t.hasOwnProperty('name')) return t.name;
                  const e = ('' + t).match(/^function\s*([^\s(]+)/);
                  return null === e ? '' : e[1];
                })(t);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\n` +
                      `This will become an error in v10. Please add @Injectable() to the "${n}" class.`
                  ),
                  e
                );
              }
              return null;
            })(t);
            return null !== n ? () => n.factory(t) : () => new t();
          })(t);
        throw new Error('unreachable');
      }
      function xs(t, e, n) {
        let i = void 0;
        if (Os(t)) {
          const e = j(t);
          return Dt(e) || ws(e);
        }
        if (ks(t)) i = () => j(t.useValue);
        else if ((r = t) && r.useFactory) i = () => t.useFactory(...st(t.deps || []));
        else if (
          (function (t) {
            return !(!t || !t.useExisting);
          })(t)
        )
          i = () => nt(j(t.useExisting));
        else {
          const r = j(t && (t.useClass || t.provide));
          if (
            (r ||
              (function (t, e, n) {
                let i = '';
                throw (
                  (t &&
                    e &&
                    (i = ` - only instances of Provider and Type are allowed, got: [${e
                      .map((t) => (t == n ? '?' + n + '?' : '...'))
                      .join(', ')}]`),
                  new Error(`Invalid provider for the NgModule '${T(t)}'` + i))
                );
              })(e, n, t),
            !(function (t) {
              return !!t.deps;
            })(t))
          )
            return Dt(r) || ws(r);
          i = () => new r(...st(t.deps));
        }
        var r;
        return i;
      }
      function Cs(t, e, n = !1) {
        return { factory: t, value: e, multi: n ? [] : void 0 };
      }
      function ks(t) {
        return null !== t && 'object' == typeof t && Y in t;
      }
      function Os(t) {
        return 'function' == typeof t;
      }
      const Ss = function (t, e, n) {
        return (function (t, e = null, n = null, i) {
          const r = ys(t, e, n, i);
          return r._resolveInjectorDefTypes(), r;
        })({ name: n }, e, t, n);
      };
      let Es = (() => {
        class t {
          static create(t, e) {
            return Array.isArray(t) ? Ss(t, e, '') : Ss(t.providers, t.parent, t.name || '');
          }
        }
        return (
          (t.THROW_IF_NOT_FOUND = X),
          (t.NULL = new ot()),
          (t.ɵprov = b({ token: t, providedIn: 'any', factory: () => nt(G) })),
          (t.__NG_ELEMENT_ID__ = -1),
          t
        );
      })();
      const Ts = new q('AnalyzeForEntryComponents');
      let Is = new Map();
      const As = new Set();
      function Ds(t) {
        return 'string' == typeof t ? t : t.text();
      }
      function js(t, e, n) {
        let i = n ? t.styles : null,
          r = n ? t.classes : null,
          s = 0;
        if (null !== e)
          for (let o = 0; o < e.length; o++) {
            const t = e[o];
            'number' == typeof t ? (s = t) : 1 == s ? (r = I(r, t)) : 2 == s && (i = I(i, t + ': ' + e[++o] + ';'));
          }
        n ? (t.styles = i) : (t.stylesWithoutHost = i), n ? (t.classes = r) : (t.classesWithoutHost = r);
      }
      let Rs = null;
      function Ps() {
        if (!Rs) {
          const t = V.Symbol;
          if (t && t.iterator) Rs = t.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const n = t[e];
              'entries' !== n && 'size' !== n && Map.prototype[n] === Map.prototype.entries && (Rs = n);
            }
          }
        }
        return Rs;
      }
      function Ms(t, e) {
        return t === e || ('number' == typeof t && 'number' == typeof e && isNaN(t) && isNaN(e));
      }
      class Fs {
        constructor(t) {
          this.wrapped = t;
        }
        static wrap(t) {
          return new Fs(t);
        }
        static unwrap(t) {
          return Fs.isWrapped(t) ? t.wrapped : t;
        }
        static isWrapped(t) {
          return t instanceof Fs;
        }
      }
      function Ns(t) {
        return !!Vs(t) && (Array.isArray(t) || (!(t instanceof Map) && Ps() in t));
      }
      function Vs(t) {
        return null !== t && ('function' == typeof t || 'object' == typeof t);
      }
      function Ls(t, e, n) {
        return (t[e] = n);
      }
      function Hs(t, e) {
        return t[e];
      }
      function zs(t, e, n) {
        return !Object.is(t[e], n) && ((t[e] = n), !0);
      }
      function Bs(t, e, n, i) {
        const r = zs(t, e, n);
        return zs(t, e + 1, i) || r;
      }
      function Us(t, e, n, i, r, s) {
        const o = Bs(t, e, n, i);
        return Bs(t, e + 2, r, s) || o;
      }
      function Ws(t, e, n, i) {
        const r = se();
        return (
          zs(r, ge(), e) &&
            (oe(),
            (function (t, e, n, i, r, s) {
              const o = Gt(t, e),
                a = e[11];
              if (null == i) Ut(a) ? a.removeAttribute(o, n, s) : o.removeAttribute(n);
              else {
                const e = null == r ? Ze(i) : r(i, t.tagName || '', n);
                Ut(a) ? a.setAttribute(o, n, e, s) : s ? o.setAttributeNS(s, n, e) : o.setAttribute(n, e);
              }
            })(je(), r, t, e, n, i)),
          Ws
        );
      }
      function $s(t, e, n, i) {
        return zs(t, ge(), n) ? e + Ze(n) + i : Di;
      }
      function qs(t, e, n, i, r, s, o, a) {
        const c = se(),
          l = oe(),
          u = t + 20,
          h = l.firstCreatePass
            ? (function (t, e, n, i, r, s, o, a, c) {
                const l = e.consts,
                  u = Gi(e, n[6], t, 0, o || null, te(l, a));
                or(e, n, u, te(l, c)), Me(e, u);
                const h = (u.tViews = nr(2, -1, i, r, s, e.directiveRegistry, e.pipeRegistry, null, e.schemas, l)),
                  d = ir(0, null, 2, -1, null, null);
                return (
                  (d.injectorIndex = u.injectorIndex),
                  (h.node = d),
                  null !== e.queries && (e.queries.template(e, u), (h.queries = e.queries.embeddedTView(u))),
                  u
                );
              })(t, l, c, e, n, i, r, s, o)
            : l.data[u];
        le(h, !1);
        const d = c[11].createComment('');
        Xr(l, c, d, h), bi(d, c), wr(c, (c[u] = _r(d, c, d, h))), Nt(h) && Ji(l, c, h), null != o && tr(c, h, a);
      }
      function Gs(t) {
        return Kt(ie.lFrame.contextLView, t);
      }
      function Xs(t, e = f.Default) {
        const n = se();
        return null == n ? nt(t, e) : hn(ce(), n, j(t), e);
      }
      function Ks(t) {
        return (function (t, e) {
          if ('class' === e) return t.classes;
          if ('style' === e) return t.styles;
          const n = t.attrs;
          if (n) {
            const t = n.length;
            let i = 0;
            for (; i < t; ) {
              const r = n[i];
              if (Ue(r)) break;
              if (0 === r) i += 2;
              else if ('number' == typeof r) for (i++; i < t && 'string' == typeof n[i]; ) i++;
              else {
                if (r === e) return n[i + 1];
                i += 2;
              }
            }
          }
          return null;
        })(ce(), t);
      }
      function Ys() {
        throw new Error('invalid');
      }
      function Zs(t, e, n) {
        const i = se();
        return zs(i, ge(), e) && sr(oe(), je(), i, t, e, i[11], n, !1), Zs;
      }
      function Qs(t, e, n, i, r) {
        const s = r ? 'class' : 'style';
        Dr(t, n, e.inputs[s], s, i);
      }
      function Js(t, e, n, i) {
        const r = se(),
          s = oe(),
          o = 20 + t,
          a = r[11],
          c = (r[o] = $i(e, a, ie.lFrame.currentNamespace)),
          l = s.firstCreatePass
            ? (function (t, e, n, i, r, s, o) {
                const a = e.consts,
                  c = te(a, s),
                  l = Gi(e, n[6], t, 3, r, c);
                return (
                  or(e, n, l, te(a, o)),
                  null !== l.attrs && js(l, l.attrs, !1),
                  null !== l.mergedAttrs && js(l, l.mergedAttrs, !0),
                  null !== e.queries && e.queries.elementStart(e, l),
                  l
                );
              })(t, s, r, 0, e, n, i)
            : s.data[o];
        le(l, !0);
        const u = l.mergedAttrs;
        null !== u && Be(a, c, u);
        const h = l.classes;
        null !== h && ts(a, c, h);
        const d = l.styles;
        null !== d && Jr(a, c, d),
          Xr(s, r, c, l),
          0 === ie.lFrame.elementDepthCount && bi(c, r),
          ie.lFrame.elementDepthCount++,
          Nt(l) && (Ji(s, r, l), Qi(s, l, r)),
          null !== i && tr(r, l);
      }
      function to() {
        let t = ce();
        ue() ? he() : ((t = t.parent), le(t, !1));
        const e = t;
        ie.lFrame.elementDepthCount--;
        const n = oe();
        n.firstCreatePass && (Me(n, t), Mt(t) && n.queries.elementEnd(t)),
          null != e.classesWithoutHost &&
            (function (t) {
              return 0 != (16 & t.flags);
            })(e) &&
            Qs(n, e, se(), e.classesWithoutHost, !0),
          null != e.stylesWithoutHost &&
            (function (t) {
              return 0 != (32 & t.flags);
            })(e) &&
            Qs(n, e, se(), e.stylesWithoutHost, !1);
      }
      function eo(t, e, n, i) {
        Js(t, e, n, i), to();
      }
      function no(t, e, n) {
        const i = se(),
          r = oe(),
          s = t + 20,
          o = r.firstCreatePass
            ? (function (t, e, n, i, r) {
                const s = e.consts,
                  o = te(s, i),
                  a = Gi(e, n[6], t, 4, 'ng-container', o);
                return (
                  null !== o && js(a, o, !0),
                  or(e, n, a, te(s, r)),
                  null !== e.queries && e.queries.elementStart(e, a),
                  a
                );
              })(t, r, i, e, n)
            : r.data[s];
        le(o, !0);
        const a = (i[s] = i[11].createComment(''));
        Xr(r, i, a, o), bi(a, i), Nt(o) && (Ji(r, i, o), Qi(r, o, i)), null != n && tr(i, o);
      }
      function io() {
        let t = ce();
        const e = oe();
        ue() ? he() : ((t = t.parent), le(t, !1)), e.firstCreatePass && (Me(e, t), Mt(t) && e.queries.elementEnd(t));
      }
      function ro(t, e, n) {
        no(t, e, n), io();
      }
      function so() {
        return se();
      }
      function oo(t) {
        return !!t && 'function' == typeof t.then;
      }
      function ao(t) {
        return !!t && 'function' == typeof t.subscribe;
      }
      function co(t, e, n = !1, i) {
        const r = se(),
          s = oe(),
          o = ce();
        return uo(s, r, r[11], o, t, e, n, i), co;
      }
      function lo(t, e, n = !1, i) {
        const r = ce(),
          s = se(),
          o = oe();
        return uo(o, s, Ir(ve(o.data), r, s), r, t, e, n, i), lo;
      }
      function uo(t, e, n, i, r, s, o = !1, a) {
        const c = Nt(i),
          l = t.firstCreatePass && (t.cleanup || (t.cleanup = [])),
          u = Er(e);
        let h = !0;
        if (3 === i.type) {
          const d = Gt(i, e),
            p = a ? a(d) : _t,
            f = p.target || d,
            m = u.length,
            g = a ? (t) => a($t(t[i.index])).target : i.index;
          if (Ut(n)) {
            let o = null;
            if (
              (!a &&
                c &&
                (o = (function (t, e, n, i) {
                  const r = t.cleanup;
                  if (null != r)
                    for (let s = 0; s < r.length - 1; s += 2) {
                      const t = r[s];
                      if (t === n && r[s + 1] === i) {
                        const t = e[7],
                          n = r[s + 2];
                        return t.length > n ? t[n] : null;
                      }
                      'string' == typeof t && (s += 2);
                    }
                  return null;
                })(t, e, r, i.index)),
              null !== o)
            )
              ((o.__ngLastListenerFn__ || o).__ngNextListenerFn__ = s), (o.__ngLastListenerFn__ = s), (h = !1);
            else {
              s = po(i, e, s, !1);
              const t = n.listen(p.name || f, r, s);
              u.push(s, t), l && l.push(r, g, m, m + 1);
            }
          } else (s = po(i, e, s, !0)), f.addEventListener(r, s, o), u.push(s), l && l.push(r, g, m, o);
        }
        const d = i.outputs;
        let p;
        if (h && null !== d && (p = d[r])) {
          const t = p.length;
          if (t)
            for (let n = 0; n < t; n += 2) {
              const t = e[p[n]][p[n + 1]].subscribe(s),
                o = u.length;
              u.push(s, t), l && l.push(r, i.index, o, -(o + 1));
            }
        }
      }
      function ho(t, e, n) {
        try {
          return !1 !== e(n);
        } catch (i) {
          return Ar(t, i), !1;
        }
      }
      function po(t, e, n, i) {
        return function r(s) {
          if (s === Function) return n;
          const o = 2 & t.flags ? Yt(t.index, e) : e;
          0 == (32 & e[2]) && xr(o);
          let a = ho(e, n, s),
            c = r.__ngNextListenerFn__;
          for (; c; ) (a = ho(e, c, s) && a), (c = c.__ngNextListenerFn__);
          return i && !1 === a && (s.preventDefault(), (s.returnValue = !1)), a;
        };
      }
      function fo(t = 1) {
        return (function (t) {
          return (ie.lFrame.contextLView = (function (t, e) {
            for (; t > 0; ) (e = e[15]), t--;
            return e;
          })(t, ie.lFrame.contextLView))[8];
        })(t);
      }
      function mo(t, e) {
        let n = null;
        const i = (function (t) {
          const e = t.attrs;
          if (null != e) {
            const t = e.indexOf(5);
            if (0 == (1 & t)) return e[t + 1];
          }
          return null;
        })(t);
        for (let r = 0; r < e.length; r++) {
          const s = e[r];
          if ('*' !== s) {
            if (null === i ? Ei(t, s, !0) : Ti(i, s)) return r;
          } else n = r;
        }
        return n;
      }
      function go(t) {
        const e = se()[16][6];
        if (!e.projection) {
          const n = (e.projection = dt(t ? t.length : 1, null)),
            i = n.slice();
          let r = e.child;
          for (; null !== r; ) {
            const e = t ? mo(r, t) : 0;
            null !== e && (i[e] ? (i[e].projectionNext = r) : (n[e] = r), (i[e] = r)), (r = r.next);
          }
        }
      }
      function bo(t, e = 0, n) {
        const i = se(),
          r = oe(),
          s = Gi(r, i[6], t, 1, null, n || null);
        null === s.projection && (s.projection = e),
          he(),
          (function (t, e, n) {
            Qr(e[11], 0, e, n, Br(t, n, e), Gr(n.parent || e[6], e));
          })(r, i, s);
      }
      const _o = [];
      function yo(t, e, n, i, r) {
        const s = t[n + 1],
          o = null === e;
        let a = i ? Li(s) : zi(s),
          c = !1;
        for (; 0 !== a && (!1 === c || o); ) {
          const n = t[a + 1];
          vo(t[a], e) && ((c = !0), (t[a + 1] = i ? Ui(n) : Hi(n))), (a = i ? Li(n) : zi(n));
        }
        c && (t[n + 1] = i ? Hi(s) : Ui(s));
      }
      function vo(t, e) {
        return (
          null === t ||
          null == e ||
          (Array.isArray(t) ? t[1] : t) === e ||
          (!(!Array.isArray(t) || 'string' != typeof e) && mt(t, e) >= 0)
        );
      }
      const wo = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function xo(t) {
        return t.substring(wo.key, wo.keyEnd);
      }
      function Co(t, e) {
        const n = wo.textEnd;
        return n === e
          ? -1
          : ((e = wo.keyEnd = (function (t, e, n) {
              for (; e < n && t.charCodeAt(e) > 32; ) e++;
              return e;
            })(t, (wo.key = e), n)),
            ko(t, e, n));
      }
      function ko(t, e, n) {
        for (; e < n && t.charCodeAt(e) <= 32; ) e++;
        return e;
      }
      function Oo(t, e, n) {
        return Io(t, e, n, !1), Oo;
      }
      function So(t, e) {
        return Io(t, e, null, !0), So;
      }
      function Eo(t) {
        Ao(pt, To, t, !0);
      }
      function To(t, e) {
        for (
          let n = (function (t) {
            return (
              (function (t) {
                (wo.key = 0), (wo.keyEnd = 0), (wo.value = 0), (wo.valueEnd = 0), (wo.textEnd = t.length);
              })(t),
              Co(t, ko(t, 0, wo.textEnd))
            );
          })(e);
          n >= 0;
          n = Co(e, n)
        )
          pt(t, xo(e), !0);
      }
      function Io(t, e, n, i) {
        const r = se(),
          s = oe(),
          o = be(2);
        if ((s.firstUpdatePass && jo(s, t, o, i), e !== Di && zs(r, o, e))) {
          let a;
          null == n &&
            (a = (function () {
              const t = ie.lFrame;
              return null === t ? null : t.currentSanitizer;
            })()) &&
            (n = a),
            Mo(
              s,
              s.data[Ae() + 20],
              r,
              r[11],
              t,
              (r[o + 1] = (function (t, e) {
                return (
                  null == t ||
                    ('function' == typeof e
                      ? (t = e(t))
                      : 'string' == typeof e
                      ? (t += e)
                      : 'object' == typeof t && (t = T(An(t)))),
                  t
                );
              })(e, n)),
              i,
              o
            );
        }
      }
      function Ao(t, e, n, i) {
        const r = oe(),
          s = be(2);
        r.firstUpdatePass && jo(r, null, s, i);
        const o = se();
        if (n !== Di && zs(o, s, n)) {
          const a = r.data[Ae() + 20];
          if (Vo(a, i) && !Do(r, s)) {
            let t = i ? a.classesWithoutHost : a.stylesWithoutHost;
            null !== t && (n = I(t, n || '')), Qs(r, a, o, n, i);
          } else
            !(function (t, e, n, i, r, s, o, a) {
              r === Di && (r = _o);
              let c = 0,
                l = 0,
                u = 0 < r.length ? r[0] : null,
                h = 0 < s.length ? s[0] : null;
              for (; null !== u || null !== h; ) {
                const d = c < r.length ? r[c + 1] : void 0,
                  p = l < s.length ? s[l + 1] : void 0;
                let f = null,
                  m = void 0;
                u === h
                  ? ((c += 2), (l += 2), d !== p && ((f = h), (m = p)))
                  : null === h || (null !== u && u < h)
                  ? ((c += 2), (f = u))
                  : ((l += 2), (f = h), (m = p)),
                  null !== f && Mo(t, e, n, i, f, m, o, a),
                  (u = c < r.length ? r[c] : null),
                  (h = l < s.length ? s[l] : null);
              }
            })(
              r,
              a,
              o,
              o[11],
              o[s + 1],
              (o[s + 1] = (function (t, e, n) {
                if (null == n || '' === n) return _o;
                const i = [],
                  r = An(n);
                if (Array.isArray(r)) for (let s = 0; s < r.length; s++) t(i, r[s], !0);
                else if ('object' == typeof r) for (const s in r) r.hasOwnProperty(s) && t(i, s, r[s]);
                else 'string' == typeof r && e(i, r);
                return i;
              })(t, e, n)),
              i,
              s
            );
        }
      }
      function Do(t, e) {
        return e >= t.expandoStartIndex;
      }
      function jo(t, e, n, i) {
        const r = t.data;
        if (null === r[n + 1]) {
          const s = r[Ae() + 20],
            o = Do(t, n);
          Vo(s, i) && null === e && !o && (e = !1),
            (e = (function (t, e, n, i) {
              const r = ve(t);
              let s = i ? e.residualClasses : e.residualStyles;
              if (null === r)
                0 === (i ? e.classBindings : e.styleBindings) &&
                  ((n = Po((n = Ro(null, t, e, n, i)), e.attrs, i)), (s = null));
              else {
                const o = e.directiveStylingLast;
                if (-1 === o || t[o] !== r)
                  if (((n = Ro(r, t, e, n, i)), null === s)) {
                    let n = (function (t, e, n) {
                      const i = n ? e.classBindings : e.styleBindings;
                      if (0 !== zi(i)) return t[Li(i)];
                    })(t, e, i);
                    void 0 !== n &&
                      Array.isArray(n) &&
                      ((n = Ro(null, t, e, n[1], i)),
                      (n = Po(n, e.attrs, i)),
                      (function (t, e, n, i) {
                        t[Li(n ? e.classBindings : e.styleBindings)] = i;
                      })(t, e, i, n));
                  } else
                    s = (function (t, e, n) {
                      let i = void 0;
                      const r = e.directiveEnd;
                      for (let s = 1 + e.directiveStylingLast; s < r; s++) i = Po(i, t[s].hostAttrs, n);
                      return Po(i, e.attrs, n);
                    })(t, e, i);
              }
              return void 0 !== s && (i ? (e.residualClasses = s) : (e.residualStyles = s)), n;
            })(r, s, e, i)),
            (function (t, e, n, i, r, s) {
              let o = s ? e.classBindings : e.styleBindings,
                a = Li(o),
                c = zi(o);
              t[i] = n;
              let l,
                u = !1;
              if (Array.isArray(n)) {
                const t = n;
                (l = t[1]), (null === l || mt(t, l) > 0) && (u = !0);
              } else l = n;
              if (r)
                if (0 !== c) {
                  const e = Li(t[a + 1]);
                  (t[i + 1] = Vi(e, a)),
                    0 !== e && (t[e + 1] = Bi(t[e + 1], i)),
                    (t[a + 1] = (131071 & t[a + 1]) | (i << 17));
                } else (t[i + 1] = Vi(a, 0)), 0 !== a && (t[a + 1] = Bi(t[a + 1], i)), (a = i);
              else (t[i + 1] = Vi(c, 0)), 0 === a ? (a = i) : (t[c + 1] = Bi(t[c + 1], i)), (c = i);
              u && (t[i + 1] = Hi(t[i + 1])),
                yo(t, l, i, !0),
                yo(t, l, i, !1),
                (function (t, e, n, i, r) {
                  const s = r ? t.residualClasses : t.residualStyles;
                  null != s && 'string' == typeof e && mt(s, e) >= 0 && (n[i + 1] = Ui(n[i + 1]));
                })(e, l, t, i, s),
                (o = Vi(a, c)),
                s ? (e.classBindings = o) : (e.styleBindings = o);
            })(r, s, e, n, o, i);
        }
      }
      function Ro(t, e, n, i, r) {
        let s = null;
        const o = n.directiveEnd;
        let a = n.directiveStylingLast;
        for (-1 === a ? (a = n.directiveStart) : a++; a < o && ((s = e[a]), (i = Po(i, s.hostAttrs, r)), s !== t); )
          a++;
        return null !== t && (n.directiveStylingLast = a), i;
      }
      function Po(t, e, n) {
        const i = n ? 1 : 2;
        let r = -1;
        if (null !== e)
          for (let s = 0; s < e.length; s++) {
            const o = e[s];
            'number' == typeof o
              ? (r = o)
              : r === i && (Array.isArray(t) || (t = void 0 === t ? [] : ['', t]), pt(t, o, !!n || e[++s]));
          }
        return void 0 === t ? null : t;
      }
      function Mo(t, e, n, i, r, s, o, a) {
        if (3 !== e.type) return;
        const c = t.data,
          l = c[a + 1];
        No(1 == (1 & l) ? Fo(c, e, n, r, zi(l), o) : void 0) ||
          (No(s) ||
            ((function (t) {
              return 2 == (2 & t);
            })(l) &&
              (s = Fo(c, null, n, r, a, o))),
          (function (t, e, n, i, r) {
            const s = Ut(t);
            if (e) r ? (s ? t.addClass(n, i) : n.classList.add(i)) : s ? t.removeClass(n, i) : n.classList.remove(i);
            else {
              const e = -1 == i.indexOf('-') ? void 0 : 2;
              null == r
                ? s
                  ? t.removeStyle(n, i, e)
                  : n.style.removeProperty(i)
                : s
                ? t.setStyle(n, i, r, e)
                : n.style.setProperty(i, r);
            }
          })(i, o, qt(Ae(), n), r, s));
      }
      function Fo(t, e, n, i, r, s) {
        const o = null === e;
        let a = void 0;
        for (; r > 0; ) {
          const e = t[r],
            s = Array.isArray(e),
            c = s ? e[1] : e,
            l = null === c;
          let u = n[r + 1];
          u === Di && (u = l ? _o : void 0);
          let h = l ? ft(u, i) : c === i ? u : void 0;
          if ((s && !No(h) && (h = ft(e, i)), No(h) && ((a = h), o))) return a;
          const d = t[r + 1];
          r = o ? Li(d) : zi(d);
        }
        if (null !== e) {
          let t = s ? e.residualClasses : e.residualStyles;
          null != t && (a = ft(t, i));
        }
        return a;
      }
      function No(t) {
        return void 0 !== t;
      }
      function Vo(t, e) {
        return 0 != (t.flags & (e ? 16 : 32));
      }
      function Lo(t, e = '') {
        const n = se(),
          i = oe(),
          r = t + 20,
          s = i.firstCreatePass ? Gi(i, n[6], t, 3, null, null) : i.data[r],
          o = (n[r] = (function (t, e) {
            return Ut(e) ? e.createText(t) : e.createTextNode(t);
          })(e, n[11]));
        Xr(i, n, o, s), le(s, !1);
      }
      function Ho(t) {
        return zo('', t, ''), Ho;
      }
      function zo(t, e, n) {
        const i = se(),
          r = $s(i, t, e, n);
        return r !== Di && jr(i, Ae(), r), zo;
      }
      function Bo(t, e, n, i, r) {
        const s = se(),
          o = (function (t, e, n, i, r, s) {
            const o = Bs(t, me(), n, r);
            return be(2), o ? e + Ze(n) + i + Ze(r) + s : Di;
          })(s, t, e, n, i, r);
        return o !== Di && jr(s, Ae(), o), Bo;
      }
      function Uo(t, e, n) {
        Ao(pt, To, $s(se(), t, e, n), !0);
      }
      function Wo(t, e, n) {
        const i = se();
        return zs(i, ge(), e) && sr(oe(), je(), i, t, e, i[11], n, !0), Wo;
      }
      function $o(t, e, n) {
        const i = se();
        if (zs(i, ge(), e)) {
          const r = oe(),
            s = je();
          sr(r, s, i, t, e, Ir(ve(r.data), s, i), n, !0);
        }
        return $o;
      }
      function qo(t, e) {
        const n = Zt(t)[1],
          i = n.data.length - 1;
        Me(n, { directiveStart: i, directiveEnd: i + 1 });
      }
      function Go(t) {
        let e = Object.getPrototypeOf(t.type.prototype).constructor,
          n = !0;
        const i = [t];
        for (; e; ) {
          let r = void 0;
          if (Vt(t)) r = e.ɵcmp || e.ɵdir;
          else {
            if (e.ɵcmp) throw new Error('Directives cannot inherit Components');
            r = e.ɵdir;
          }
          if (r) {
            if (n) {
              i.push(r);
              const e = t;
              (e.inputs = Xo(t.inputs)), (e.declaredInputs = Xo(t.declaredInputs)), (e.outputs = Xo(t.outputs));
              const n = r.hostBindings;
              n && Zo(t, n);
              const s = r.viewQuery,
                o = r.contentQueries;
              if (
                (s && Ko(t, s),
                o && Yo(t, o),
                g(t.inputs, r.inputs),
                g(t.declaredInputs, r.declaredInputs),
                g(t.outputs, r.outputs),
                Vt(r) && r.data.animation)
              ) {
                const e = t.data;
                e.animation = (e.animation || []).concat(r.data.animation);
              }
              (e.afterContentChecked = e.afterContentChecked || r.afterContentChecked),
                (e.afterContentInit = t.afterContentInit || r.afterContentInit),
                (e.afterViewChecked = t.afterViewChecked || r.afterViewChecked),
                (e.afterViewInit = t.afterViewInit || r.afterViewInit),
                (e.doCheck = t.doCheck || r.doCheck),
                (e.onDestroy = t.onDestroy || r.onDestroy),
                (e.onInit = t.onInit || r.onInit);
            }
            const e = r.features;
            if (e)
              for (let i = 0; i < e.length; i++) {
                const r = e[i];
                r && r.ngInherit && r(t), r === Go && (n = !1);
              }
          }
          e = Object.getPrototypeOf(e);
        }
        !(function (t) {
          let e = 0,
            n = null;
          for (let i = t.length - 1; i >= 0; i--) {
            const r = t[i];
            (r.hostVars = e += r.hostVars), (r.hostAttrs = $e(r.hostAttrs, (n = $e(n, r.hostAttrs))));
          }
        })(i);
      }
      function Xo(t) {
        return t === _t ? {} : t === yt ? [] : t;
      }
      function Ko(t, e) {
        const n = t.viewQuery;
        t.viewQuery = n
          ? (t, i) => {
              e(t, i), n(t, i);
            }
          : e;
      }
      function Yo(t, e) {
        const n = t.contentQueries;
        t.contentQueries = n
          ? (t, i, r) => {
              e(t, i, r), n(t, i, r);
            }
          : e;
      }
      function Zo(t, e) {
        const n = t.hostBindings;
        t.hostBindings = n
          ? (t, i) => {
              e(t, i), n(t, i);
            }
          : e;
      }
      class Qo {
        constructor(t, e, n) {
          (this.previousValue = t), (this.currentValue = e), (this.firstChange = n);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Jo(t) {
        t.type.prototype.ngOnChanges &&
          ((t.setInput = ta),
          (t.onChanges = function () {
            const t = ea(this),
              e = t && t.current;
            if (e) {
              const n = t.previous;
              if (n === _t) t.previous = e;
              else for (let t in e) n[t] = e[t];
              (t.current = null), this.ngOnChanges(e);
            }
          }));
      }
      function ta(t, e, n, i) {
        const r =
            ea(t) ||
            (function (t, e) {
              return (t.__ngSimpleChanges__ = e);
            })(t, { previous: _t, current: null }),
          s = r.current || (r.current = {}),
          o = r.previous,
          a = this.declaredInputs[n],
          c = o[a];
        (s[a] = new Qo(c && c.currentValue, e, o === _t)), (t[i] = e);
      }
      function ea(t) {
        return t.__ngSimpleChanges__ || null;
      }
      function na(t, e, n, i, r) {
        if (((t = j(t)), Array.isArray(t))) for (let s = 0; s < t.length; s++) na(t[s], e, n, i, r);
        else {
          const s = oe(),
            o = se();
          let a = Os(t) ? t : j(t.provide),
            c = xs(t);
          const l = ce(),
            u = 65535 & l.providerIndexes,
            h = l.directiveStart,
            d = l.providerIndexes >> 16;
          if (Os(t) || !t.multi) {
            const i = new ze(c, r, Xs),
              p = sa(a, e, r ? u : u + d, h);
            -1 === p
              ? (un(on(l, o), s, a),
                ia(s, t, e.length),
                e.push(a),
                l.directiveStart++,
                l.directiveEnd++,
                r && (l.providerIndexes += 65536),
                n.push(i),
                o.push(i))
              : ((n[p] = i), (o[p] = i));
          } else {
            const p = sa(a, e, u + d, h),
              f = sa(a, e, u, u + d),
              m = p >= 0 && n[p],
              g = f >= 0 && n[f];
            if ((r && !g) || (!r && !m)) {
              un(on(l, o), s, a);
              const u = (function (t, e, n, i, r) {
                const s = new ze(t, n, Xs);
                return (s.multi = []), (s.index = e), (s.componentProviders = 0), ra(s, r, i && !n), s;
              })(r ? aa : oa, n.length, r, i, c);
              !r && g && (n[f].providerFactory = u),
                ia(s, t, e.length, 0),
                e.push(a),
                l.directiveStart++,
                l.directiveEnd++,
                r && (l.providerIndexes += 65536),
                n.push(u),
                o.push(u);
            } else ia(s, t, p > -1 ? p : f, ra(n[r ? f : p], c, !r && i));
            !r && i && g && n[f].componentProviders++;
          }
        }
      }
      function ia(t, e, n, i) {
        const r = Os(e);
        if (r || e.useClass) {
          const s = (e.useClass || e).prototype.ngOnDestroy;
          if (s) {
            const o = t.destroyHooks || (t.destroyHooks = []);
            if (!r && e.multi) {
              const t = o.indexOf(n);
              -1 === t ? o.push(n, [i, s]) : o[t + 1].push(i, s);
            } else o.push(n, s);
          }
        }
      }
      function ra(t, e, n) {
        return n && t.componentProviders++, t.multi.push(e) - 1;
      }
      function sa(t, e, n, i) {
        for (let r = n; r < i; r++) if (e[r] === t) return r;
        return -1;
      }
      function oa(t, e, n, i) {
        return ca(this.multi, []);
      }
      function aa(t, e, n, i) {
        const r = this.multi;
        let s;
        if (this.providerFactory) {
          const t = this.providerFactory.componentProviders,
            e = mn(n, n[1], this.providerFactory.index, i);
          (s = e.slice(0, t)), ca(r, s);
          for (let n = t; n < e.length; n++) s.push(e[n]);
        } else (s = []), ca(r, s);
        return s;
      }
      function ca(t, e) {
        for (let n = 0; n < t.length; n++) e.push((0, t[n])());
        return e;
      }
      function la(t, e = []) {
        return (n) => {
          n.providersResolver = (n, i) =>
            (function (t, e, n) {
              const i = oe();
              if (i.firstCreatePass) {
                const r = Vt(t);
                na(n, i.data, i.blueprint, r, !0), na(e, i.data, i.blueprint, r, !1);
              }
            })(n, i ? i(t) : t, e);
        };
      }
      Jo.ngInherit = !0;
      class ua {}
      class ha {
        resolveComponentFactory(t) {
          throw (function (t) {
            const e = Error(`No component factory found for ${T(t)}. Did you add it to @NgModule.entryComponents?`);
            return (e.ngComponent = t), e;
          })(t);
        }
      }
      let da = (() => {
          class t {}
          return (t.NULL = new ha()), t;
        })(),
        pa = (() => {
          class t {
            constructor(t) {
              this.nativeElement = t;
            }
          }
          return (t.__NG_ELEMENT_ID__ = () => fa(t)), t;
        })();
      const fa = function (t) {
        return os(t, ce(), se());
      };
      class ma {}
      const ga = (function () {
        var t = { Important: 1, DashCase: 2 };
        return (t[t.Important] = 'Important'), (t[t.DashCase] = 'DashCase'), t;
      })();
      let ba = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => _a()), t;
      })();
      const _a = function () {
        const t = se(),
          e = Yt(ce().index, t);
        return (function (t) {
          const e = t[11];
          if (Ut(e)) return e;
          throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');
        })(Rt(e) ? e : t);
      };
      let ya = (() => {
        class t {}
        return (t.ɵprov = b({ token: t, providedIn: 'root', factory: () => null })), t;
      })();
      class va {
        constructor(t) {
          (this.full = t),
            (this.major = t.split('.')[0]),
            (this.minor = t.split('.')[1]),
            (this.patch = t.split('.').slice(2).join('.'));
        }
      }
      const wa = new va('9.1.11');
      class xa {
        constructor() {}
        supports(t) {
          return Ns(t);
        }
        create(t) {
          return new ka(t);
        }
      }
      const Ca = (t, e) => e;
      class ka {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || Ca);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            n = this._removalsHead,
            i = 0,
            r = null;
          for (; e || n; ) {
            const s = !n || (e && e.currentIndex < Ta(n, i, r)) ? e : n,
              o = Ta(s, i, r),
              a = s.currentIndex;
            if (s === n) i--, (n = n._nextRemoved);
            else if (((e = e._next), null == s.previousIndex)) i++;
            else {
              r || (r = []);
              const t = o - i,
                e = a - i;
              if (t != e) {
                for (let n = 0; n < t; n++) {
                  const i = n < r.length ? r[n] : (r[n] = 0),
                    s = i + n;
                  e <= s && s < t && (r[n] = i + 1);
                }
                r[s.previousIndex] = e - t;
              }
            }
            o !== a && t(s, o, a);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (e = this._identityChangesHead; null !== e; e = e._nextIdentityChange) t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !Ns(t)))
            throw new Error(`Error trying to diff '${T(t)}'. Only arrays and iterables are allowed`);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e,
            n,
            i,
            r = this._itHead,
            s = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let e = 0; e < this.length; e++)
              (n = t[e]),
                (i = this._trackByFn(e, n)),
                null !== r && Ms(r.trackById, i)
                  ? (s && (r = this._verifyReinsertion(r, n, i, e)), Ms(r.item, n) || this._addIdentityChange(r, n))
                  : ((r = this._mismatch(r, n, i, e)), (s = !0)),
                (r = r._next);
          } else
            (e = 0),
              (function (t, e) {
                if (Array.isArray(t)) for (let n = 0; n < t.length; n++) e(t[n]);
                else {
                  const n = t[Ps()]();
                  let i;
                  for (; !(i = n.next()).done; ) e(i.value);
                }
              })(t, (t) => {
                (i = this._trackByFn(e, t)),
                  null !== r && Ms(r.trackById, i)
                    ? (s && (r = this._verifyReinsertion(r, t, i, e)), Ms(r.item, t) || this._addIdentityChange(r, t))
                    : ((r = this._mismatch(r, t, i, e)), (s = !0)),
                  (r = r._next),
                  e++;
              }),
              (this.length = e);
          return this._truncate(r), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t, e;
            for (t = this._previousItHead = this._itHead; null !== t; t = t._next) t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded) t.previousIndex = t.currentIndex;
            for (this._additionsHead = this._additionsTail = null, t = this._movesHead; null !== t; t = e)
              (t.previousIndex = t.currentIndex), (e = t._nextMoved);
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, n, i) {
          let r;
          return (
            null === t ? (r = this._itTail) : ((r = t._prev), this._remove(t)),
            null !== (t = null === this._linkedRecords ? null : this._linkedRecords.get(n, i))
              ? (Ms(t.item, e) || this._addIdentityChange(t, e), this._moveAfter(t, r, i))
              : null !== (t = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n, null))
              ? (Ms(t.item, e) || this._addIdentityChange(t, e), this._reinsertAfter(t, r, i))
              : (t = this._addAfter(new Oa(e, n), r, i)),
            t
          );
        }
        _verifyReinsertion(t, e, n, i) {
          let r = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n, null);
          return (
            null !== r
              ? (t = this._reinsertAfter(r, t._prev, i))
              : t.currentIndex != i && ((t.currentIndex = i), this._addToMoves(t, i)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail && (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail && (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, n) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const i = t._prevRemoved,
            r = t._nextRemoved;
          return (
            null === i ? (this._removalsHead = r) : (i._nextRemoved = r),
            null === r ? (this._removalsTail = i) : (r._prevRemoved = i),
            this._insertAfter(t, e, n),
            this._addToMoves(t, n),
            t
          );
        }
        _moveAfter(t, e, n) {
          return this._unlink(t), this._insertAfter(t, e, n), this._addToMoves(t, n), t;
        }
        _addAfter(t, e, n) {
          return (
            this._insertAfter(t, e, n),
            (this._additionsTail =
              null === this._additionsTail ? (this._additionsHead = t) : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, n) {
          const i = null === e ? this._itHead : e._next;
          return (
            (t._next = i),
            (t._prev = e),
            null === i ? (this._itTail = t) : (i._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new Ea()),
            this._linkedRecords.put(t),
            (t.currentIndex = n),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            n = t._next;
          return null === e ? (this._itHead = n) : (e._next = n), null === n ? (this._itTail = e) : (n._prev = e), t;
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail = null === this._movesTail ? (this._movesHead = t) : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords && (this._unlinkedRecords = new Ea()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t), (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail), (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class Oa {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class Sa {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t), (t._nextDup = null), (t._prevDup = null))
            : ((this._tail._nextDup = t), (t._prevDup = this._tail), (t._nextDup = null), (this._tail = t));
        }
        get(t, e) {
          let n;
          for (n = this._head; null !== n; n = n._nextDup)
            if ((null === e || e <= n.currentIndex) && Ms(n.trackById, t)) return n;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            n = t._nextDup;
          return (
            null === e ? (this._head = n) : (e._nextDup = n),
            null === n ? (this._tail = e) : (n._prevDup = e),
            null === this._head
          );
        }
      }
      class Ea {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let n = this.map.get(e);
          n || ((n = new Sa()), this.map.set(e, n)), n.add(t);
        }
        get(t, e) {
          const n = this.map.get(t);
          return n ? n.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Ta(t, e, n) {
        const i = t.previousIndex;
        if (null === i) return i;
        let r = 0;
        return n && i < n.length && (r = n[i]), i + e + r;
      }
      class Ia {
        constructor() {}
        supports(t) {
          return t instanceof Map || Vs(t);
        }
        create() {
          return new Aa();
        }
      }
      class Aa {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead;
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || Vs(t)))
              throw new Error(`Error trying to diff '${T(t)}'. Only maps and objects are allowed`);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (t, n) => {
              if (e && e.key === n) this._maybeAddToChanges(e, t), (this._appendAfter = e), (e = e._next);
              else {
                const i = this._getOrCreateRecordForKey(n, t);
                e = this._insertBeforeOrAppend(e, i);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let t = e; null !== t; t = t._nextRemoved)
              t === this._mapHead && (this._mapHead = null),
                this._records.delete(t.key),
                (t._nextRemoved = t._next),
                (t.previousValue = t.currentValue),
                (t.currentValue = null),
                (t._prev = null),
                (t._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const n = t._prev;
            return (
              (e._next = t),
              (e._prev = n),
              (t._prev = e),
              n && (n._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter ? ((this._appendAfter._next = e), (e._prev = this._appendAfter)) : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const n = this._records.get(t);
            this._maybeAddToChanges(n, e);
            const i = n._prev,
              r = n._next;
            return i && (i._next = r), r && (r._prev = i), (n._next = null), (n._prev = null), n;
          }
          const n = new Da(t);
          return this._records.set(t, n), (n.currentValue = e), this._addToAdditions(n), n;
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (this._previousMapHead = this._mapHead, t = this._previousMapHead; null !== t; t = t._next)
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged) t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded) t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Ms(e, t.currentValue) || ((t.previousValue = t.currentValue), (t.currentValue = e), this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map ? t.forEach(e) : Object.keys(t).forEach((n) => e(t[n], n));
        }
      }
      class Da {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      let ja = (() => {
          class t {
            constructor(t) {
              this.factories = t;
            }
            static create(e, n) {
              if (null != n) {
                const t = n.factories.slice();
                e = e.concat(t);
              }
              return new t(e);
            }
            static extend(e) {
              return {
                provide: t,
                useFactory: (n) => {
                  if (!n) throw new Error('Cannot extend IterableDiffers without a parent injector');
                  return t.create(e, n);
                },
                deps: [[t, new p(), new h()]],
              };
            }
            find(t) {
              const e = this.factories.find((e) => e.supports(t));
              if (null != e) return e;
              throw new Error(
                `Cannot find a differ supporting object '${t}' of type '${((n = t), n.name || typeof n)}'`
              );
              var n;
            }
          }
          return (t.ɵprov = b({ token: t, providedIn: 'root', factory: () => new t([new xa()]) })), t;
        })(),
        Ra = (() => {
          class t {
            constructor(t) {
              this.factories = t;
            }
            static create(e, n) {
              if (n) {
                const t = n.factories.slice();
                e = e.concat(t);
              }
              return new t(e);
            }
            static extend(e) {
              return {
                provide: t,
                useFactory: (n) => {
                  if (!n) throw new Error('Cannot extend KeyValueDiffers without a parent injector');
                  return t.create(e, n);
                },
                deps: [[t, new p(), new h()]],
              };
            }
            find(t) {
              const e = this.factories.find((e) => e.supports(t));
              if (e) return e;
              throw new Error(`Cannot find a differ supporting object '${t}'`);
            }
          }
          return (t.ɵprov = b({ token: t, providedIn: 'root', factory: () => new t([new Ia()]) })), t;
        })();
      const Pa = [new Ia()],
        Ma = new ja([new xa()]),
        Fa = new Ra(Pa);
      let Na = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => Va(t, pa)), t;
      })();
      const Va = function (t, e) {
        return as(t, e, ce(), se());
      };
      let La = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => Ha(t, pa)), t;
      })();
      const Ha = function (t, e) {
          return cs(t, e, ce(), se());
        },
        za = {};
      class Ba extends da {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = At(t);
          return new $a(e, this.ngModule);
        }
      }
      function Ua(t) {
        const e = [];
        for (let n in t) t.hasOwnProperty(n) && e.push({ propName: t[n], templateName: n });
        return e;
      }
      const Wa = new q('SCHEDULER_TOKEN', { providedIn: 'root', factory: () => Je });
      class $a extends ua {
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = t.selectors.map(Ai).join(',')),
            (this.ngContentSelectors = t.ngContentSelectors ? t.ngContentSelectors : []),
            (this.isBoundToModule = !!e);
        }
        get inputs() {
          return Ua(this.componentDef.inputs);
        }
        get outputs() {
          return Ua(this.componentDef.outputs);
        }
        create(t, e, n, i) {
          const r = (i = i || this.ngModule)
              ? (function (t, e) {
                  return {
                    get: (n, i, r) => {
                      const s = t.get(n, za, r);
                      return s !== za || i === za ? s : e.get(n, i, r);
                    },
                  };
                })(t, i.injector)
              : t,
            s = r.get(ma, Wt),
            o = r.get(ya, null),
            a = s.createRenderer(null, this.componentDef),
            c = this.componentDef.selectors[0][0] || 'div',
            l = n
              ? (function (t, e, n) {
                  if (Ut(t)) return t.selectRootElement(e, n === bt.ShadowDom);
                  let i = 'string' == typeof e ? t.querySelector(e) : e;
                  return (i.textContent = ''), i;
                })(a, n, this.componentDef.encapsulation)
              : $i(
                  c,
                  s.createRenderer(null, this.componentDef),
                  (function (t) {
                    const e = t.toLowerCase();
                    return 'svg' === e
                      ? 'http://www.w3.org/2000/svg'
                      : 'math' === e
                      ? 'http://www.w3.org/1998/MathML/'
                      : null;
                  })(c)
                ),
            u = this.componentDef.onPush ? 576 : 528,
            h = 'string' == typeof n && /^#root-ng-internal-isolated-\d+/.test(n),
            d = { components: [], scheduler: Je, clean: Sr, playerHandler: null, flags: 0 },
            p = nr(0, -1, null, 1, 0, null, null, null, null, null),
            f = qi(null, p, d, u, null, null, s, a, o, r);
          let m, g;
          ke(f, null);
          try {
            const t = (function (t, e, n, i, r, s) {
              const o = n[1];
              n[20] = t;
              const a = Gi(o, null, 0, 3, null, null),
                c = (a.mergedAttrs = e.hostAttrs);
              null !== c &&
                (js(a, c, !0),
                null !== t &&
                  (Be(r, t, c), null !== a.classes && ts(r, t, a.classes), null !== a.styles && Jr(r, t, a.styles)));
              const l = i.createRenderer(t, e),
                u = qi(n, er(e), null, e.onPush ? 64 : 16, n[20], a, i, l, void 0);
              return (
                o.firstCreatePass && (un(on(a, n), o, e.type), hr(o, a), pr(a, n.length, 1)), wr(n, u), (n[20] = u)
              );
            })(l, this.componentDef, f, s, a);
            if (l)
              if (n) Be(a, l, ['ng-version', wa.full]);
              else {
                const { attrs: t, classes: e } = (function (t) {
                  const e = [],
                    n = [];
                  let i = 1,
                    r = 2;
                  for (; i < t.length; ) {
                    let s = t[i];
                    if ('string' == typeof s) 2 === r ? '' !== s && e.push(s, t[++i]) : 8 === r && n.push(s);
                    else {
                      if (!Oi(r)) break;
                      r = s;
                    }
                    i++;
                  }
                  return { attrs: e, classes: n };
                })(this.componentDef.selectors[0]);
                t && Be(a, l, t), e && e.length > 0 && ts(a, l, e.join(' '));
              }
            if (((g = Xt(p, 0)), void 0 !== e)) {
              const t = (g.projection = []);
              for (let n = 0; n < this.ngContentSelectors.length; n++) {
                const i = e[n];
                t.push(null != i ? Array.from(i) : null);
              }
            }
            (m = (function (t, e, n, i, r) {
              const s = n[1],
                o = (function (t, e, n) {
                  const i = ce();
                  t.firstCreatePass && (n.providersResolver && n.providersResolver(n), ur(t, i, 1), fr(t, e, n));
                  const r = mn(e, t, e.length - 1, i);
                  bi(r, e);
                  const s = Gt(i, e);
                  return s && bi(s, e), r;
                })(s, n, e);
              i.components.push(o),
                (t[8] = o),
                r && r.forEach((t) => t(o, e)),
                e.contentQueries && e.contentQueries(1, o, n.length - 1);
              const a = ce();
              if (s.firstCreatePass && (null !== e.hostBindings || null !== e.hostAttrs)) {
                De(a.index - 20);
                const t = n[1];
                ar(t, e), cr(t, n, e.hostVars), lr(e, o);
              }
              return o;
            })(t, this.componentDef, f, d, [qo])),
              Xi(p, f, null);
          } finally {
            Ie();
          }
          const b = new qa(this.componentType, m, os(pa, g, f), f, g);
          return (n && !h) || (p.node.child = g), b;
        }
      }
      class qa extends class {} {
        constructor(t, e, n, i, r) {
          super(),
            (this.location = n),
            (this._rootLView = i),
            (this._tNode = r),
            (this.destroyCbs = []),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new ns(i)),
            (function (t, e, n, i) {
              let r = t.node;
              null == r && (t.node = r = ir(0, null, 2, -1, null, null)), (i[6] = r);
            })(i[1], 0, 0, i),
            (this.componentType = t);
        }
        get injector() {
          return new _n(this._tNode, this._rootLView);
        }
        destroy() {
          this.destroyCbs &&
            (this.destroyCbs.forEach((t) => t()),
            (this.destroyCbs = null),
            !this.hostView.destroyed && this.hostView.destroy());
        }
        onDestroy(t) {
          this.destroyCbs && this.destroyCbs.push(t);
        }
      }
      const Ga = void 0;
      var Xa = [
        'en',
        [['a', 'p'], ['AM', 'PM'], Ga],
        [['AM', 'PM'], Ga, Ga],
        [
          ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
          ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
          ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        ],
        Ga,
        [
          ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
          ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
        ],
        Ga,
        [
          ['B', 'A'],
          ['BC', 'AD'],
          ['Before Christ', 'Anno Domini'],
        ],
        0,
        [6, 0],
        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
        ['{1}, {0}', Ga, "{1} 'at' {0}", Ga],
        ['.', ',', ';', '%', '+', '-', 'E', '\xd7', '\u2030', '\u221e', 'NaN', ':'],
        ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
        'USD',
        '$',
        'US Dollar',
        {},
        'ltr',
        function (t) {
          let e = Math.floor(Math.abs(t)),
            n = t.toString().replace(/^[^.]*\.?/, '').length;
          return 1 === e && 0 === n ? 1 : 5;
        },
      ];
      let Ka = {};
      function Ya(t, e, n) {
        'string' != typeof e && ((n = e), (e = t[ec.LocaleId])),
          (e = e.toLowerCase().replace(/_/g, '-')),
          (Ka[e] = t),
          n && (Ka[e][ec.ExtraData] = n);
      }
      function Za(t) {
        const e = (function (t) {
          return t.toLowerCase().replace(/_/g, '-');
        })(t);
        let n = tc(e);
        if (n) return n;
        const i = e.split('-')[0];
        if (((n = tc(i)), n)) return n;
        if ('en' === i) return Xa;
        throw new Error(`Missing locale data for the locale "${t}".`);
      }
      function Qa(t) {
        return Za(t)[ec.CurrencyCode] || null;
      }
      function Ja(t) {
        return Za(t)[ec.PluralCase];
      }
      function tc(t) {
        return t in Ka || (Ka[t] = V.ng && V.ng.common && V.ng.common.locales && V.ng.common.locales[t]), Ka[t];
      }
      const ec = (function () {
        var t = {
          LocaleId: 0,
          DayPeriodsFormat: 1,
          DayPeriodsStandalone: 2,
          DaysFormat: 3,
          DaysStandalone: 4,
          MonthsFormat: 5,
          MonthsStandalone: 6,
          Eras: 7,
          FirstDayOfWeek: 8,
          WeekendRange: 9,
          DateFormat: 10,
          TimeFormat: 11,
          DateTimeFormat: 12,
          NumberSymbols: 13,
          NumberFormats: 14,
          CurrencyCode: 15,
          CurrencySymbol: 16,
          CurrencyName: 17,
          Currencies: 18,
          Directionality: 19,
          PluralCase: 20,
          ExtraData: 21,
        };
        return (
          (t[t.LocaleId] = 'LocaleId'),
          (t[t.DayPeriodsFormat] = 'DayPeriodsFormat'),
          (t[t.DayPeriodsStandalone] = 'DayPeriodsStandalone'),
          (t[t.DaysFormat] = 'DaysFormat'),
          (t[t.DaysStandalone] = 'DaysStandalone'),
          (t[t.MonthsFormat] = 'MonthsFormat'),
          (t[t.MonthsStandalone] = 'MonthsStandalone'),
          (t[t.Eras] = 'Eras'),
          (t[t.FirstDayOfWeek] = 'FirstDayOfWeek'),
          (t[t.WeekendRange] = 'WeekendRange'),
          (t[t.DateFormat] = 'DateFormat'),
          (t[t.TimeFormat] = 'TimeFormat'),
          (t[t.DateTimeFormat] = 'DateTimeFormat'),
          (t[t.NumberSymbols] = 'NumberSymbols'),
          (t[t.NumberFormats] = 'NumberFormats'),
          (t[t.CurrencyCode] = 'CurrencyCode'),
          (t[t.CurrencySymbol] = 'CurrencySymbol'),
          (t[t.CurrencyName] = 'CurrencyName'),
          (t[t.Currencies] = 'Currencies'),
          (t[t.Directionality] = 'Directionality'),
          (t[t.PluralCase] = 'PluralCase'),
          (t[t.ExtraData] = 'ExtraData'),
          t
        );
      })();
      let nc = 'en-US';
      function ic(t) {
        var e, n;
        (n = 'Expected localeId to be defined'),
          null == (e = t) &&
            (function (t, e, n, i) {
              throw new Error(`ASSERTION ERROR: ${t}` + ` [Expected=> null != ${e} <=Actual]`);
            })(n, e),
          'string' == typeof t && (nc = t.toLowerCase().replace(/_/g, '-'));
      }
      const rc = new Map();
      class sc extends at {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Ba(this));
          const n = jt(t),
            i = t[U] || null;
          i && ic(i),
            (this._bootstrapComponents = en(n.bootstrap)),
            (this._r3Injector = ys(
              t,
              e,
              [
                { provide: at, useValue: this },
                { provide: da, useValue: this.componentFactoryResolver },
              ],
              T(t)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(t));
        }
        get(t, e = Es.THROW_IF_NOT_FOUND, n = f.Default) {
          return t === Es || t === at || t === G ? this : this._r3Injector.get(t, e, n);
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(), this.destroyCbs.forEach((t) => t()), (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class oc extends ct {
        constructor(t) {
          super(),
            (this.moduleType = t),
            null !== jt(t) &&
              (function t(e) {
                if (null !== e.ɵmod.id) {
                  const t = e.ɵmod.id;
                  (function (t, e, n) {
                    if (e && e !== n) throw new Error(`Duplicate module registered for ${t} - ${T(e)} vs ${T(e.name)}`);
                  })(t, rc.get(t), e),
                    rc.set(t, e);
                }
                let n = e.ɵmod.imports;
                n instanceof Function && (n = n()), n && n.forEach((e) => t(e));
              })(t);
        }
        create(t) {
          return new sc(this.moduleType, t);
        }
      }
      function ac(t, e, n) {
        const i = fe() + t,
          r = se();
        return r[i] === Di ? Ls(r, i, n ? e.call(n) : e()) : Hs(r, i);
      }
      function cc(t, e, n, i) {
        return dc(se(), fe(), t, e, n, i);
      }
      function lc(t, e, n, i, r) {
        return pc(se(), fe(), t, e, n, i, r);
      }
      function uc(t, e, n, i, r, s, o, a) {
        const c = fe() + t,
          l = se(),
          u = Us(l, c, n, i, r, s);
        return zs(l, c + 4, o) || u ? Ls(l, c + 5, a ? e.call(a, n, i, r, s, o) : e(n, i, r, s, o)) : Hs(l, c + 5);
      }
      function hc(t, e) {
        const n = t[e];
        return n === Di ? void 0 : n;
      }
      function dc(t, e, n, i, r, s) {
        const o = e + n;
        return zs(t, o, r) ? Ls(t, o + 1, s ? i.call(s, r) : i(r)) : hc(t, o + 1);
      }
      function pc(t, e, n, i, r, s, o) {
        const a = e + n;
        return Bs(t, a, r, s) ? Ls(t, a + 2, o ? i.call(o, r, s) : i(r, s)) : hc(t, a + 2);
      }
      function fc(t, e) {
        const n = oe();
        let i;
        const r = t + 20;
        n.firstCreatePass
          ? ((i = (function (t, e) {
              if (e)
                for (let n = e.length - 1; n >= 0; n--) {
                  const i = e[n];
                  if (t === i.name) return i;
                }
              throw new Error(`The pipe '${t}' could not be found!`);
            })(e, n.pipeRegistry)),
            (n.data[r] = i),
            i.onDestroy && (n.destroyHooks || (n.destroyHooks = [])).push(r, i.onDestroy))
          : (i = n.data[r]);
        const s = i.factory || (i.factory = Dt(i.type)),
          o = tt(Xs),
          a = rn(!1),
          c = s();
        return (
          rn(a),
          tt(o),
          (function (t, e, n, i) {
            const r = n + 20;
            r >= t.data.length && ((t.data[r] = null), (t.blueprint[r] = null)), (e[r] = i);
          })(n, se(), t, c),
          c
        );
      }
      function mc(t, e, n) {
        const i = se(),
          r = Kt(i, t);
        return vc(i, yc(i, t) ? dc(i, fe(), e, r.transform, n, r) : r.transform(n));
      }
      function gc(t, e, n, i) {
        const r = se(),
          s = Kt(r, t);
        return vc(r, yc(r, t) ? pc(r, fe(), e, s.transform, n, i, s) : s.transform(n, i));
      }
      function bc(t, e, n, i, r) {
        const s = se(),
          o = Kt(s, t);
        return vc(
          s,
          yc(s, t)
            ? (function (t, e, n, i, r, s, o, a) {
                const c = e + n;
                return (function (t, e, n, i, r) {
                  const s = Bs(t, e, n, i);
                  return zs(t, e + 2, r) || s;
                })(t, c, r, s, o)
                  ? Ls(t, c + 3, a ? i.call(a, r, s, o) : i(r, s, o))
                  : hc(t, c + 3);
              })(s, fe(), e, o.transform, n, i, r, o)
            : o.transform(n, i, r)
        );
      }
      function _c(t, e, n, i, r, s) {
        const o = se(),
          a = Kt(o, t);
        return vc(
          o,
          yc(o, t)
            ? (function (t, e, n, i, r, s, o, a, c) {
                const l = e + n;
                return Us(t, l, r, s, o, a) ? Ls(t, l + 4, c ? i.call(c, r, s, o, a) : i(r, s, o, a)) : hc(t, l + 4);
              })(o, fe(), e, a.transform, n, i, r, s, a)
            : a.transform(n, i, r, s)
        );
      }
      function yc(t, e) {
        return t[1].data[e + 20].pure;
      }
      function vc(t, e) {
        return Fs.isWrapped(e) && ((e = Fs.unwrap(e)), (t[me()] = Di)), e;
      }
      class wc extends i.a {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, n) {
          let i,
            s = (t) => null,
            o = () => null;
          t && 'object' == typeof t
            ? ((i = this.__isAsync
                ? (e) => {
                    setTimeout(() => t.next(e));
                  }
                : (e) => {
                    t.next(e);
                  }),
              t.error &&
                (s = this.__isAsync
                  ? (e) => {
                      setTimeout(() => t.error(e));
                    }
                  : (e) => {
                      t.error(e);
                    }),
              t.complete &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => t.complete());
                    }
                  : () => {
                      t.complete();
                    }))
            : ((i = this.__isAsync
                ? (e) => {
                    setTimeout(() => t(e));
                  }
                : (e) => {
                    t(e);
                  }),
              e &&
                (s = this.__isAsync
                  ? (t) => {
                      setTimeout(() => e(t));
                    }
                  : (t) => {
                      e(t);
                    }),
              n &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => n());
                    }
                  : () => {
                      n();
                    }));
          const a = super.subscribe(i, s, o);
          return t instanceof r.a && t.add(a), a;
        }
      }
      function xc() {
        return this._results[Ps()]();
      }
      class Cc {
        constructor() {
          (this.dirty = !0), (this._results = []), (this.changes = new wc()), (this.length = 0);
          const t = Ps(),
            e = Cc.prototype;
          e[t] || (e[t] = xc);
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t) {
          (this._results = (function t(e, n) {
            void 0 === n && (n = e);
            for (let i = 0; i < e.length; i++) {
              let r = e[i];
              Array.isArray(r) ? (n === e && (n = e.slice(0, i)), t(r, n)) : n !== e && n.push(r);
            }
            return n;
          })(t)),
            (this.dirty = !1),
            (this.length = this._results.length),
            (this.last = this._results[this.length - 1]),
            (this.first = this._results[0]);
        }
        notifyOnChanges() {
          this.changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      class kc {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new kc(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Oc {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const n = null !== t.contentQueries ? t.contentQueries[0] : e.length,
              i = [];
            for (let t = 0; t < n; t++) {
              const n = e.getByIndex(t);
              i.push(this.queries[n.indexInDeclarationView].clone());
            }
            return new Oc(i);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++) null !== Bc(t, e).matches && this.queries[e].setDirty();
        }
      }
      class Sc {
        constructor(t, e, n, i = null) {
          (this.predicate = t), (this.descendants = e), (this.isStatic = n), (this.read = i);
        }
      }
      class Ec {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let n = 0; n < this.queries.length; n++) this.queries[n].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++) this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let n = 0; n < this.length; n++) {
            const i = null !== e ? e.length : 0,
              r = this.getByIndex(n).embeddedTView(t, i);
            r && ((r.indexInDeclarationView = n), null !== e ? e.push(r) : (e = [r]));
          }
          return null !== e ? new Ec(e) : null;
        }
        template(t, e) {
          for (let n = 0; n < this.queries.length; n++) this.queries[n].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Tc {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index && (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0), this.addMatch(-t.index, e), new Tc(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && !1 === this.metadata.descendants) {
            const e = this._declarationNodeIndex;
            let n = t.parent;
            for (; null !== n && 4 === n.type && n.index !== e; ) n = n.parent;
            return e === (null !== n ? n.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          if (Array.isArray(this.metadata.predicate)) {
            const n = this.metadata.predicate;
            for (let i = 0; i < n.length; i++) this.matchTNodeWithReadOption(t, e, Ic(e, n[i]));
          } else {
            const n = this.metadata.predicate;
            n === Na
              ? 0 === e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, fn(e, t, n, !1, !1));
          }
        }
        matchTNodeWithReadOption(t, e, n) {
          if (null !== n) {
            const i = this.metadata.read;
            if (null !== i)
              if (i === pa || i === La || (i === Na && 0 === e.type)) this.addMatch(e.index, -2);
              else {
                const n = fn(e, t, i, !1, !1);
                null !== n && this.addMatch(e.index, n);
              }
            else this.addMatch(e.index, n);
          }
        }
        addMatch(t, e) {
          null === this.matches ? (this.matches = [t, e]) : this.matches.push(t, e);
        }
      }
      function Ic(t, e) {
        const n = t.localNames;
        if (null !== n) for (let i = 0; i < n.length; i += 2) if (n[i] === e) return n[i + 1];
        return null;
      }
      function Ac(t, e, n, i) {
        return -1 === n
          ? (function (t, e) {
              return 3 === t.type || 4 === t.type ? os(pa, t, e) : 0 === t.type ? as(Na, pa, t, e) : null;
            })(e, t)
          : -2 === n
          ? (function (t, e, n) {
              return n === pa ? os(pa, e, t) : n === Na ? as(Na, pa, e, t) : n === La ? cs(La, pa, e, t) : void 0;
            })(t, e, i)
          : mn(t, t[1], n, e);
      }
      function Dc(t, e, n, i) {
        const r = e[19].queries[i];
        if (null === r.matches) {
          const i = t.data,
            s = n.matches,
            o = [];
          for (let t = 0; t < s.length; t += 2) {
            const r = s[t];
            o.push(r < 0 ? null : Ac(e, i[r], s[t + 1], n.metadata.read));
          }
          r.matches = o;
        }
        return r.matches;
      }
      function jc(t) {
        const e = se(),
          n = oe(),
          i = we();
        xe(i + 1);
        const r = Bc(n, i);
        if (t.dirty && Qt(e) === r.metadata.isStatic) {
          if (null === r.matches) t.reset([]);
          else {
            const s = r.crossesNgTemplate
              ? (function t(e, n, i, r) {
                  const s = e.queries.getByIndex(i),
                    o = s.matches;
                  if (null !== o) {
                    const a = Dc(e, n, s, i);
                    for (let e = 0; e < o.length; e += 2) {
                      const i = o[e];
                      if (i > 0) r.push(a[e / 2]);
                      else {
                        const s = o[e + 1],
                          a = n[-i];
                        for (let e = 10; e < a.length; e++) {
                          const n = a[e];
                          n[17] === n[3] && t(n[1], n, s, r);
                        }
                        if (null !== a[9]) {
                          const e = a[9];
                          for (let n = 0; n < e.length; n++) {
                            const i = e[n];
                            t(i[1], i, s, r);
                          }
                        }
                      }
                    }
                  }
                  return r;
                })(n, e, i, [])
              : Dc(n, e, r, i);
            t.reset(s), t.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Rc(t, e, n) {
        Mc(oe(), se(), t, e, n, !0);
      }
      function Pc(t, e, n) {
        Mc(oe(), se(), t, e, n, !1);
      }
      function Mc(t, e, n, i, r, s) {
        t.firstCreatePass && (zc(t, new Sc(n, i, s, r), -1), s && (t.staticViewQueries = !0)), Hc(t, e);
      }
      function Fc(t, e, n, i) {
        Vc(oe(), se(), e, n, i, !1, ce(), t);
      }
      function Nc(t, e, n, i) {
        Vc(oe(), se(), e, n, i, !0, ce(), t);
      }
      function Vc(t, e, n, i, r, s, o, a) {
        t.firstCreatePass &&
          (zc(t, new Sc(n, i, s, r), o.index),
          (function (t, e) {
            const n = t.contentQueries || (t.contentQueries = []);
            e !== (t.contentQueries.length ? n[n.length - 1] : -1) && n.push(t.queries.length - 1, e);
          })(t, a),
          s && (t.staticContentQueries = !0)),
          Hc(t, e);
      }
      function Lc() {
        return (t = se()), (e = we()), t[19].queries[e].queryList;
        var t, e;
      }
      function Hc(t, e) {
        const n = new Cc();
        !(function (t, e, n, i) {
          const r = Er(e);
          r.push(n), t.firstCreatePass && Tr(t).push(i, r.length - 1);
        })(t, e, n, n.destroy),
          null === e[19] && (e[19] = new Oc()),
          e[19].queries.push(new kc(n));
      }
      function zc(t, e, n) {
        null === t.queries && (t.queries = new Ec()), t.queries.track(new Tc(e, n));
      }
      function Bc(t, e) {
        return t.queries.getByIndex(e);
      }
      function Uc(t, e) {
        return as(Na, pa, t, e);
      }
      function Wc(t = f.Default) {
        const e = ls(!0);
        if (null != e || t & f.Optional) return e;
        throw new Error('No provider for ChangeDetectorRef!');
      }
      const $c = new q('Application Initializer');
      let qc = (() => {
        class t {
          constructor(t) {
            (this.appInits = t),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((t, e) => {
                (this.resolve = t), (this.reject = e);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const t = [],
              e = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let n = 0; n < this.appInits.length; n++) {
                const e = this.appInits[n]();
                oo(e) && t.push(e);
              }
            Promise.all(t)
              .then(() => {
                e();
              })
              .catch((t) => {
                this.reject(t);
              }),
              0 === t.length && e(),
              (this.initialized = !0);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(nt($c, 8));
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Gc = new q('AppId'),
        Xc = {
          provide: Gc,
          useFactory: function () {
            return `${Kc()}${Kc()}${Kc()}`;
          },
          deps: [],
        };
      function Kc() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Yc = new q('Platform Initializer'),
        Zc = new q('Platform ID'),
        Qc = new q('appBootstrapListener');
      let Jc = (() => {
        class t {
          log(t) {
            console.log(t);
          }
          warn(t) {
            console.warn(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const tl = new q('LocaleId'),
        el = new q('DefaultCurrencyCode');
      class nl {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      const il = function (t) {
          return new oc(t);
        },
        rl = il,
        sl = function (t) {
          return Promise.resolve(il(t));
        },
        ol = function (t) {
          const e = il(t),
            n = en(jt(t).declarations).reduce((t, e) => {
              const n = At(e);
              return n && t.push(new $a(n)), t;
            }, []);
          return new nl(e, n);
        },
        al = ol,
        cl = function (t) {
          return Promise.resolve(ol(t));
        };
      let ll = (() => {
        class t {
          constructor() {
            (this.compileModuleSync = rl),
              (this.compileModuleAsync = sl),
              (this.compileModuleAndAllComponentsSync = al),
              (this.compileModuleAndAllComponentsAsync = cl);
          }
          clearCache() {}
          clearCacheFor(t) {}
          getModuleId(t) {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const ul = new q('compilerOptions'),
        hl = (() => Promise.resolve(0))();
      function dl(t) {
        'undefined' == typeof Zone
          ? hl.then(() => {
              t && t.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', t);
      }
      class pl {
        constructor({ enableLongStackTrace: t = !1, shouldCoalesceEventChangeDetection: e = !1 }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new wc(!1)),
            (this.onMicrotaskEmpty = new wc(!1)),
            (this.onStable = new wc(!1)),
            (this.onError = new wc(!1)),
            'undefined' == typeof Zone)
          )
            throw new Error('In this configuration Angular requires Zone.js');
          Zone.assertZonePatched(),
            (this._nesting = 0),
            (this._outer = this._inner = Zone.current),
            Zone.wtfZoneSpec && (this._inner = this._inner.fork(Zone.wtfZoneSpec)),
            Zone.TaskTrackingZoneSpec && (this._inner = this._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t && Zone.longStackTraceZoneSpec && (this._inner = this._inner.fork(Zone.longStackTraceZoneSpec)),
            (this.shouldCoalesceEventChangeDetection = e),
            (this.lastRequestAnimationFrameId = -1),
            (this.nativeRequestAnimationFrame = (function () {
              let t = V.requestAnimationFrame,
                e = V.cancelAnimationFrame;
              if ('undefined' != typeof Zone && t && e) {
                const n = t[Zone.__symbol__('OriginalDelegate')];
                n && (t = n);
                const i = e[Zone.__symbol__('OriginalDelegate')];
                i && (e = i);
              }
              return { nativeRequestAnimationFrame: t, nativeCancelAnimationFrame: e };
            })().nativeRequestAnimationFrame),
            (function (t) {
              const e =
                !!t.shouldCoalesceEventChangeDetection &&
                t.nativeRequestAnimationFrame &&
                (() => {
                  !(function (t) {
                    -1 === t.lastRequestAnimationFrameId &&
                      ((t.lastRequestAnimationFrameId = t.nativeRequestAnimationFrame.call(V, () => {
                        (t.lastRequestAnimationFrameId = -1), bl(t), gl(t);
                      })),
                      bl(t));
                  })(t);
                });
              t._inner = t._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0, maybeDelayChangeDetection: e },
                onInvokeTask: (n, i, r, s, o, a) => {
                  try {
                    return _l(t), n.invokeTask(r, s, o, a);
                  } finally {
                    e && 'eventTask' === s.type && e(), yl(t);
                  }
                },
                onInvoke: (e, n, i, r, s, o, a) => {
                  try {
                    return _l(t), e.invoke(i, r, s, o, a);
                  } finally {
                    yl(t);
                  }
                },
                onHasTask: (e, n, i, r) => {
                  e.hasTask(i, r),
                    n === i &&
                      ('microTask' == r.change
                        ? ((t._hasPendingMicrotasks = r.microTask), bl(t), gl(t))
                        : 'macroTask' == r.change && (t.hasPendingMacrotasks = r.macroTask));
                },
                onHandleError: (e, n, i, r) => (e.handleError(i, r), t.runOutsideAngular(() => t.onError.emit(r)), !1),
              });
            })(this);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!pl.isInAngularZone()) throw new Error('Expected to be in Angular Zone, but it is not!');
        }
        static assertNotInAngularZone() {
          if (pl.isInAngularZone()) throw new Error('Expected to not be in Angular Zone, but it is!');
        }
        run(t, e, n) {
          return this._inner.run(t, e, n);
        }
        runTask(t, e, n, i) {
          const r = this._inner,
            s = r.scheduleEventTask('NgZoneEvent: ' + i, t, ml, fl, fl);
          try {
            return r.runTask(s, e, n);
          } finally {
            r.cancelTask(s);
          }
        }
        runGuarded(t, e, n) {
          return this._inner.runGuarded(t, e, n);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      function fl() {}
      const ml = {};
      function gl(t) {
        if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable)
          try {
            t._nesting++, t.onMicrotaskEmpty.emit(null);
          } finally {
            if ((t._nesting--, !t.hasPendingMicrotasks))
              try {
                t.runOutsideAngular(() => t.onStable.emit(null));
              } finally {
                t.isStable = !0;
              }
          }
      }
      function bl(t) {
        t.hasPendingMicrotasks = !!(
          t._hasPendingMicrotasks ||
          (t.shouldCoalesceEventChangeDetection && -1 !== t.lastRequestAnimationFrameId)
        );
      }
      function _l(t) {
        t._nesting++, t.isStable && ((t.isStable = !1), t.onUnstable.emit(null));
      }
      function yl(t) {
        t._nesting--, gl(t);
      }
      class vl {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new wc()),
            (this.onMicrotaskEmpty = new wc()),
            (this.onStable = new wc()),
            (this.onError = new wc());
        }
        run(t, e, n) {
          return t.apply(e, n);
        }
        runGuarded(t, e, n) {
          return t.apply(e, n);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, n, i) {
          return t.apply(e, n);
        }
      }
      let wl = (() => {
          class t {
            constructor(t) {
              (this._ngZone = t),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                t.run(() => {
                  this.taskTrackingZone = 'undefined' == typeof Zone ? null : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      pl.assertNotInAngularZone(),
                        dl(() => {
                          (this._isZoneStable = !0), this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (this._pendingCount += 1), (this._didWork = !0), this._pendingCount;
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks;
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                dl(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let t = this._callbacks.pop();
                    clearTimeout(t.timeoutId), t.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let t = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (e) => !e.updateCb || !e.updateCb(t) || (clearTimeout(e.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((t) => ({
                    source: t.source,
                    creationLocation: t.creationLocation,
                    data: t.data,
                  }))
                : [];
            }
            addCallback(t, e, n) {
              let i = -1;
              e &&
                e > 0 &&
                (i = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter((t) => t.timeoutId !== i)),
                    t(this._didWork, this.getPendingTasks());
                }, e)),
                this._callbacks.push({ doneCb: t, timeoutId: i, updateCb: n });
            }
            whenStable(t, e, n) {
              if (n && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?'
                );
              this.addCallback(t, e, n), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(t, e, n) {
              return [];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(nt(pl));
            }),
            (t.ɵprov = b({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        xl = (() => {
          class t {
            constructor() {
              (this._applications = new Map()), Sl.addToWindow(this);
            }
            registerApplication(t, e) {
              this._applications.set(t, e);
            }
            unregisterApplication(t) {
              this._applications.delete(t);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(t) {
              return this._applications.get(t) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(t, e = !0) {
              return Sl.findTestabilityInTree(this, t, e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = b({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      class Cl {
        addToWindow(t) {}
        findTestabilityInTree(t, e, n) {
          return null;
        }
      }
      function kl(t) {
        Sl = t;
      }
      let Ol,
        Sl = new Cl(),
        El = function (t, e, n) {
          const i = t.get(ul, []).concat(e),
            r = new oc(n);
          if (0 === Is.size) return Promise.resolve(r);
          const s = (function (t) {
            const e = [];
            return t.forEach((t) => t && e.push(...t)), e;
          })(i.map((t) => t.providers));
          if (0 === s.length) return Promise.resolve(r);
          const o = (function () {
              const t = V.ng;
              if (!t || !t.ɵcompilerFacade)
                throw new Error(
                  "Angular JIT compilation failed: '@angular/compiler' not loaded!\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping."
                );
              return t.ɵcompilerFacade;
            })(),
            a = Es.create({ providers: s }).get(o.ResourceLoader);
          return (function (t) {
            const e = [],
              n = new Map();
            function i(t) {
              let e = n.get(t);
              if (!e) {
                const i = ((t) => Promise.resolve(a.get(t)))(t);
                n.set(t, (e = i.then(Ds)));
              }
              return e;
            }
            return (
              Is.forEach((t, n) => {
                const r = [];
                t.templateUrl &&
                  r.push(
                    i(t.templateUrl).then((e) => {
                      t.template = e;
                    })
                  );
                const s = t.styleUrls,
                  o = t.styles || (t.styles = []),
                  a = t.styles.length;
                s &&
                  s.forEach((e, n) => {
                    o.push(''),
                      r.push(
                        i(e).then((i) => {
                          (o[a + n] = i), s.splice(s.indexOf(e), 1), 0 == s.length && (t.styleUrls = void 0);
                        })
                      );
                  });
                const c = Promise.all(r).then(() =>
                  (function (t) {
                    As.delete(t);
                  })(n)
                );
                e.push(c);
              }),
              (Is = new Map()),
              Promise.all(e).then(() => {})
            );
          })().then(() => r);
        };
      const Tl = new q('AllowMultipleToken');
      class Il {
        constructor(t, e) {
          (this.name = t), (this.token = e);
        }
      }
      function Al(t, e, n = []) {
        const i = `Platform: ${e}`,
          r = new q(i);
        return (e = []) => {
          let s = Dl();
          if (!s || s.injector.get(Tl, !1))
            if (t) t(n.concat(e).concat({ provide: r, useValue: !0 }));
            else {
              const t = n.concat(e).concat({ provide: r, useValue: !0 }, { provide: ps, useValue: 'platform' });
              !(function (t) {
                if (Ol && !Ol.destroyed && !Ol.injector.get(Tl, !1))
                  throw new Error('There can be only one platform. Destroy the previous one to create a new one.');
                Ol = t.get(jl);
                const e = t.get(Yc, null);
                e && e.forEach((t) => t());
              })(Es.create({ providers: t, name: i }));
            }
          return (function (t) {
            const e = Dl();
            if (!e) throw new Error('No platform exists!');
            if (!e.injector.get(t, null))
              throw new Error('A platform with a different configuration has been created. Please destroy it first.');
            return e;
          })(r);
        };
      }
      function Dl() {
        return Ol && !Ol.destroyed ? Ol : null;
      }
      let jl = (() => {
        class t {
          constructor(t) {
            (this._injector = t), (this._modules = []), (this._destroyListeners = []), (this._destroyed = !1);
          }
          bootstrapModuleFactory(t, e) {
            const n = (function (t, e) {
                let n;
                return (
                  (n =
                    'noop' === t
                      ? new vl()
                      : ('zone.js' === t ? void 0 : t) ||
                        new pl({ enableLongStackTrace: Hn(), shouldCoalesceEventChangeDetection: e })),
                  n
                );
              })(e ? e.ngZone : void 0, (e && e.ngZoneEventCoalescing) || !1),
              i = [{ provide: pl, useValue: n }];
            return n.run(() => {
              const e = Es.create({ providers: i, parent: this.injector, name: t.moduleType.name }),
                r = t.create(e),
                s = r.injector.get(Cn, null);
              if (!s) throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');
              return (
                r.onDestroy(() => Ml(this._modules, r)),
                n.runOutsideAngular(() =>
                  n.onError.subscribe({
                    next: (t) => {
                      s.handleError(t);
                    },
                  })
                ),
                (function (t, e, n) {
                  try {
                    const i = n();
                    return oo(i)
                      ? i.catch((n) => {
                          throw (e.runOutsideAngular(() => t.handleError(n)), n);
                        })
                      : i;
                  } catch (i) {
                    throw (e.runOutsideAngular(() => t.handleError(i)), i);
                  }
                })(s, n, () => {
                  const t = r.injector.get(qc);
                  return (
                    t.runInitializers(),
                    t.donePromise.then(
                      () => (ic(r.injector.get(tl, 'en-US') || 'en-US'), this._moduleDoBootstrap(r), r)
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(t, e = []) {
            const n = Rl({}, e);
            return El(this.injector, n, t).then((t) => this.bootstrapModuleFactory(t, n));
          }
          _moduleDoBootstrap(t) {
            const e = t.injector.get(Pl);
            if (t._bootstrapComponents.length > 0) t._bootstrapComponents.forEach((t) => e.bootstrap(t));
            else {
              if (!t.instance.ngDoBootstrap)
                throw new Error(
                  `The module ${T(
                    t.instance.constructor
                  )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. ` +
                    'Please define one of these.'
                );
              t.instance.ngDoBootstrap(e);
            }
            this._modules.push(t);
          }
          onDestroy(t) {
            this._destroyListeners.push(t);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Error('The platform has already been destroyed!');
            this._modules.slice().forEach((t) => t.destroy()),
              this._destroyListeners.forEach((t) => t()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(nt(Es));
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function Rl(t, e) {
        return Array.isArray(e) ? e.reduce(Rl, t) : Object.assign(Object.assign({}, t), e);
      }
      let Pl = (() => {
        class t {
          constructor(t, e, n, i, r, c) {
            (this._zone = t),
              (this._console = e),
              (this._injector = n),
              (this._exceptionHandler = i),
              (this._componentFactoryResolver = r),
              (this._initStatus = c),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._enforceNoNewChanges = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._enforceNoNewChanges = Hn()),
              this._zone.onMicrotaskEmpty.subscribe({
                next: () => {
                  this._zone.run(() => {
                    this.tick();
                  });
                },
              });
            const l = new s.a((t) => {
                (this._stable =
                  this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    t.next(this._stable), t.complete();
                  });
              }),
              u = new s.a((t) => {
                let e;
                this._zone.runOutsideAngular(() => {
                  e = this._zone.onStable.subscribe(() => {
                    pl.assertNotInAngularZone(),
                      dl(() => {
                        this._stable ||
                          this._zone.hasPendingMacrotasks ||
                          this._zone.hasPendingMicrotasks ||
                          ((this._stable = !0), t.next(!0));
                      });
                  });
                });
                const n = this._zone.onUnstable.subscribe(() => {
                  pl.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        t.next(!1);
                      }));
                });
                return () => {
                  e.unsubscribe(), n.unsubscribe();
                };
              });
            this.isStable = Object(o.a)(l, u.pipe(Object(a.a)()));
          }
          bootstrap(t, e) {
            if (!this._initStatus.done)
              throw new Error(
                'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.'
              );
            let n;
            (n = t instanceof ua ? t : this._componentFactoryResolver.resolveComponentFactory(t)),
              this.componentTypes.push(n.componentType);
            const i = n.isBoundToModule ? void 0 : this._injector.get(at),
              r = n.create(Es.NULL, [], e || n.selector, i);
            r.onDestroy(() => {
              this._unloadComponent(r);
            });
            const s = r.injector.get(wl, null);
            return (
              s && r.injector.get(xl).registerApplication(r.location.nativeElement, s),
              this._loadComponent(r),
              Hn() &&
                this._console.log(
                  'Angular is running in the development mode. Call enableProdMode() to enable the production mode.'
                ),
              r
            );
          }
          tick() {
            if (this._runningTick) throw new Error('ApplicationRef.tick is called recursively');
            try {
              this._runningTick = !0;
              for (let t of this._views) t.detectChanges();
              if (this._enforceNoNewChanges) for (let t of this._views) t.checkNoChanges();
            } catch (t) {
              this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(t));
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(t) {
            const e = t;
            this._views.push(e), e.attachToAppRef(this);
          }
          detachView(t) {
            const e = t;
            Ml(this._views, e), e.detachFromAppRef();
          }
          _loadComponent(t) {
            this.attachView(t.hostView),
              this.tick(),
              this.components.push(t),
              this._injector
                .get(Qc, [])
                .concat(this._bootstrapListeners)
                .forEach((e) => e(t));
          }
          _unloadComponent(t) {
            this.detachView(t.hostView), Ml(this.components, t);
          }
          ngOnDestroy() {
            this._views.slice().forEach((t) => t.destroy());
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(nt(pl), nt(Jc), nt(Es), nt(Cn), nt(da), nt(qc));
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function Ml(t, e) {
        const n = t.indexOf(e);
        n > -1 && t.splice(n, 1);
      }
      class Fl {}
      class Nl {}
      const Vl = { factoryPathPrefix: '', factoryPathSuffix: '.ngfactory' };
      let Ll = (() => {
        class t {
          constructor(t, e) {
            (this._compiler = t), (this._config = e || Vl);
          }
          load(t) {
            return this.loadAndCompile(t);
          }
          loadAndCompile(t) {
            let [e, i] = t.split('#');
            return (
              void 0 === i && (i = 'default'),
              n('zn8P')(e)
                .then((t) => t[i])
                .then((t) => Hl(t, e, i))
                .then((t) => this._compiler.compileModuleAsync(t))
            );
          }
          loadFactory(t) {
            let [e, i] = t.split('#'),
              r = 'NgFactory';
            return (
              void 0 === i && ((i = 'default'), (r = '')),
              n('zn8P')(this._config.factoryPathPrefix + e + this._config.factoryPathSuffix)
                .then((t) => t[i + r])
                .then((t) => Hl(t, e, i))
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(nt(ll), nt(Nl, 8));
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function Hl(t, e, n) {
        if (!t) throw new Error(`Cannot find '${n}' in '${e}'`);
        return t;
      }
      class zl extends us {}
      class Bl extends zl {}
      const Ul = function (t) {
          return null;
        },
        Wl = Al(null, 'core', [
          { provide: Zc, useValue: 'unknown' },
          { provide: jl, deps: [Es] },
          { provide: xl, deps: [] },
          { provide: Jc, deps: [] },
        ]),
        $l = [
          { provide: Pl, useClass: Pl, deps: [pl, Jc, Es, Cn, da, qc] },
          {
            provide: Wa,
            deps: [pl],
            useFactory: function (t) {
              let e = [];
              return (
                t.onStable.subscribe(() => {
                  for (; e.length; ) e.pop()();
                }),
                function (t) {
                  e.push(t);
                }
              );
            },
          },
          { provide: qc, useClass: qc, deps: [[new h(), $c]] },
          { provide: ll, useClass: ll, deps: [] },
          Xc,
          {
            provide: ja,
            useFactory: function () {
              return Ma;
            },
            deps: [],
          },
          {
            provide: Ra,
            useFactory: function () {
              return Fa;
            },
            deps: [],
          },
          {
            provide: tl,
            useFactory: function (t) {
              return ic((t = t || ('undefined' != typeof $localize && $localize.locale) || 'en-US')), t;
            },
            deps: [[new u(tl), new h(), new p()]],
          },
          { provide: el, useValue: 'USD' },
        ];
      let ql = (() => {
        class t {
          constructor(t) {}
        }
        return (
          (t.ɵmod = Ot({ type: t })),
          (t.ɵinj = y({
            factory: function (e) {
              return new (e || t)(nt(Pl));
            },
            providers: $l,
          })),
          t
        );
      })();
    },
    g5Ei: function (t, e, n) {
      t.exports = (function (t) {
        var e = {};
        function n(i) {
          if (e[i]) return e[i].exports;
          var r = (e[i] = { i, l: !1, exports: {} });
          return t[i].call(r.exports, r, r.exports, n), (r.l = !0), r.exports;
        }
        return (
          (n.m = t),
          (n.c = e),
          (n.d = function (t, e, i) {
            n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: i });
          }),
          (n.r = function (t) {
            'undefined' != typeof Symbol &&
              Symbol.toStringTag &&
              Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }),
              Object.defineProperty(t, '__esModule', { value: !0 });
          }),
          (n.t = function (t, e) {
            if ((1 & e && (t = n(t)), 8 & e)) return t;
            if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
            var i = Object.create(null);
            if (
              (n.r(i), Object.defineProperty(i, 'default', { enumerable: !0, value: t }), 2 & e && 'string' != typeof t)
            )
              for (var r in t)
                n.d(
                  i,
                  r,
                  function (e) {
                    return t[e];
                  }.bind(null, r)
                );
            return i;
          }),
          (n.n = function (t) {
            var e =
              t && t.__esModule
                ? function () {
                    return t.default;
                  }
                : function () {
                    return t;
                  };
            return n.d(e, 'a', e), e;
          }),
          (n.o = function (t, e) {
            return Object.prototype.hasOwnProperty.call(t, e);
          }),
          (n.p = ''),
          n((n.s = 5))
        );
      })([
        function (t, e, n) {
          'use strict';
          var i = n(10),
            r = {},
            s = !1;
          function o(t, e) {
            return e === a(t);
          }
          function a(t) {
            var e = typeof t;
            return 'object' !== e
              ? e
              : t
              ? t instanceof Error
                ? 'error'
                : {}.toString
                    .call(t)
                    .match(/\s([a-zA-Z]+)/)[1]
                    .toLowerCase()
              : 'null';
          }
          function c(t) {
            return o(t, 'function');
          }
          function l(t) {
            var e = Function.prototype.toString
                .call(Object.prototype.hasOwnProperty)
                .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
                .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?'),
              n = RegExp('^' + e + '$');
            return u(t) && n.test(t);
          }
          function u(t) {
            var e = typeof t;
            return null != t && ('object' == e || 'function' == e);
          }
          function h(t, e, n) {
            var i,
              r,
              s,
              a = o(t, 'object'),
              c = o(t, 'array'),
              l = [];
            if (a && -1 !== n.indexOf(t)) return t;
            if ((n.push(t), a)) for (i in t) Object.prototype.hasOwnProperty.call(t, i) && l.push(i);
            else if (c) for (s = 0; s < t.length; ++s) l.push(s);
            var u = a ? {} : [],
              h = !0;
            for (s = 0; s < l.length; ++s) (r = t[(i = l[s])]), (u[i] = e(i, r, n)), (h = h && u[i] === t[i]);
            return 0 == l.length || h ? t : u;
          }
          function d() {
            var t = y();
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (e) {
              var n = (t + 16 * Math.random()) % 16 | 0;
              return (t = Math.floor(t / 16)), ('x' === e ? n : (7 & n) | 8).toString(16);
            });
          }
          s ||
            ((s = !0),
            o(JSON, 'undefined') ||
              (l(JSON.stringify) && (r.stringify = JSON.stringify), l(JSON.parse) && (r.parse = JSON.parse)),
            (c(r.stringify) && c(r.parse)) || n(11)(r));
          var p = {
            strictMode: !1,
            key: [
              'source',
              'protocol',
              'authority',
              'userInfo',
              'user',
              'password',
              'host',
              'port',
              'relative',
              'path',
              'directory',
              'file',
              'query',
              'anchor',
            ],
            q: { name: 'queryKey', parser: /(?:^|&)([^&=]*)=?([^&]*)/g },
            parser: {
              strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
              loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
            },
          };
          function f(t, e) {
            var n, i;
            try {
              n = r.stringify(t);
            } catch (r) {
              if (e && c(e))
                try {
                  n = e(t);
                } catch (t) {
                  i = t;
                }
              else i = r;
            }
            return { error: i, value: n };
          }
          function m(t, e) {
            return function (n, i) {
              try {
                e(n, i);
              } catch (e) {
                t.error(e);
              }
            };
          }
          var g = ['log', 'network', 'dom', 'navigation', 'error', 'manual'],
            b = ['critical', 'error', 'warning', 'info', 'debug'];
          function _(t, e) {
            for (var n = 0; n < t.length; ++n) if (t[n] === e) return !0;
            return !1;
          }
          function y() {
            return Date.now ? +Date.now() : +new Date();
          }
          t.exports = {
            addParamsAndAccessTokenToPath: function (t, e, n) {
              (n = n || {}).access_token = t;
              var i,
                r = [];
              for (i in n) Object.prototype.hasOwnProperty.call(n, i) && r.push([i, n[i]].join('='));
              var s = '?' + r.sort().join('&');
              (e = e || {}).path = e.path || '';
              var o,
                a = e.path.indexOf('?'),
                c = e.path.indexOf('#');
              e.path =
                -1 !== a && (-1 === c || c > a)
                  ? (o = e.path).substring(0, a) + s + '&' + o.substring(a + 1)
                  : -1 !== c
                  ? (o = e.path).substring(0, c) + s + o.substring(c)
                  : e.path + s;
            },
            createItem: function (t, e, n, r, s) {
              for (var o, c, l, u, h, p, f = [], g = [], b = 0, _ = t.length; b < _; ++b) {
                var v = a((p = t[b]));
                switch ((g.push(v), v)) {
                  case 'undefined':
                    break;
                  case 'string':
                    o ? f.push(p) : (o = p);
                    break;
                  case 'function':
                    u = m(e, p);
                    break;
                  case 'date':
                    f.push(p);
                    break;
                  case 'error':
                  case 'domexception':
                  case 'exception':
                    c ? f.push(p) : (c = p);
                    break;
                  case 'object':
                  case 'array':
                    if (p instanceof Error || ('undefined' != typeof DOMException && p instanceof DOMException)) {
                      c ? f.push(p) : (c = p);
                      break;
                    }
                    if (r && 'object' === v && !h) {
                      for (var w = 0, x = r.length; w < x; ++w)
                        if (void 0 !== p[r[w]]) {
                          h = p;
                          break;
                        }
                      if (h) break;
                    }
                    l ? f.push(p) : (l = p);
                    break;
                  default:
                    if (p instanceof Error || ('undefined' != typeof DOMException && p instanceof DOMException)) {
                      c ? f.push(p) : (c = p);
                      break;
                    }
                    f.push(p);
                }
              }
              f.length > 0 && ((l = i(l)).extraArgs = f);
              var C = {
                message: o,
                err: c,
                custom: l,
                timestamp: y(),
                callback: u,
                notifier: n,
                diagnostic: {},
                uuid: d(),
              };
              return (
                (function (t, e) {
                  e && void 0 !== e.level && ((t.level = e.level), delete e.level),
                    e && void 0 !== e.skipFrames && ((t.skipFrames = e.skipFrames), delete e.skipFrames);
                })(C, l),
                r && h && (C.request = h),
                s && (C.lambdaContext = s),
                (C._originalArgs = t),
                (C.diagnostic.original_arg_types = g),
                C
              );
            },
            createTelemetryEvent: function (t) {
              for (var e, n, i, r, s = 0, o = t.length; s < o; ++s)
                switch (a((r = t[s]))) {
                  case 'string':
                    !e && _(g, r) ? (e = r) : !i && _(b, r) && (i = r);
                    break;
                  case 'object':
                    n = r;
                }
              return { type: e || 'manual', metadata: n || {}, level: i };
            },
            filterIp: function (t, e) {
              if (t && t.user_ip && !0 !== e) {
                var n = t.user_ip;
                if (e)
                  try {
                    var i;
                    if (-1 !== n.indexOf('.')) (i = n.split('.')).pop(), i.push('0'), (n = i.join('.'));
                    else if (-1 !== n.indexOf(':')) {
                      if ((i = n.split(':')).length > 2) {
                        var r = i.slice(0, 3),
                          s = r[2].indexOf('/');
                        -1 !== s && (r[2] = r[2].substring(0, s)), (n = r.concat('0000:0000:0000:0000:0000').join(':'));
                      }
                    } else n = null;
                  } catch (t) {
                    n = null;
                  }
                else n = null;
                t.user_ip = n;
              }
            },
            formatArgsAsString: function (t) {
              var e,
                n,
                i,
                r = [];
              for (e = 0, n = t.length; e < n; ++e) {
                switch (a((i = t[e]))) {
                  case 'object':
                    (i = (i = f(i)).error || i.value).length > 500 && (i = i.substr(0, 497) + '...');
                    break;
                  case 'null':
                    i = 'null';
                    break;
                  case 'undefined':
                    i = 'undefined';
                    break;
                  case 'symbol':
                    i = i.toString();
                }
                r.push(i);
              }
              return r.join(' ');
            },
            formatUrl: function (t, e) {
              if (
                (!(e = e || t.protocol) && t.port && (80 === t.port ? (e = 'http:') : 443 === t.port && (e = 'https:')),
                !t.hostname)
              )
                return null;
              var n = (e = e || 'https:') + '//' + t.hostname;
              return t.port && (n = n + ':' + t.port), t.path && (n += t.path), n;
            },
            get: function (t, e) {
              if (t) {
                var n = e.split('.'),
                  i = t;
                try {
                  for (var r = 0, s = n.length; r < s; ++r) i = i[n[r]];
                } catch (t) {
                  i = void 0;
                }
                return i;
              }
            },
            handleOptions: function (t, e, n) {
              var r = i(t, e, n);
              return (
                !e ||
                  e.overwriteScrubFields ||
                  (e.scrubFields && (r.scrubFields = (t.scrubFields || []).concat(e.scrubFields))),
                r
              );
            },
            isError: function (t) {
              return o(t, 'error') || o(t, 'exception');
            },
            isFunction: c,
            isIterable: function (t) {
              var e = a(t);
              return 'object' === e || 'array' === e;
            },
            isNativeFunction: l,
            isType: o,
            isObject: u,
            isString: function (t) {
              return 'string' == typeof t || t instanceof String;
            },
            jsonParse: function (t) {
              var e, n;
              try {
                e = r.parse(t);
              } catch (t) {
                n = t;
              }
              return { error: n, value: e };
            },
            LEVELS: { debug: 0, info: 1, warning: 2, error: 3, critical: 4 },
            makeUnhandledStackInfo: function (t, e, n, i, r, s, o, a) {
              var c = { url: e || '', line: n, column: i };
              (c.func = a.guessFunctionName(c.url, c.line)), (c.context = a.gatherContext(c.url, c.line));
              var l = document && document.location && document.location.href,
                u = window && window.navigator && window.navigator.userAgent;
              return { mode: s, message: r ? String(r) : t || o, url: l, stack: [c], useragent: u };
            },
            merge: i,
            now: y,
            redact: function () {
              return '********';
            },
            sanitizeUrl: function (t) {
              var e = (function (t) {
                if (o(t, 'string')) {
                  for (
                    var e = p, n = e.parser[e.strictMode ? 'strict' : 'loose'].exec(t), i = {}, r = 0, s = e.key.length;
                    r < s;
                    ++r
                  )
                    i[e.key[r]] = n[r] || '';
                  return (
                    (i[e.q.name] = {}),
                    i[e.key[12]].replace(e.q.parser, function (t, n, r) {
                      n && (i[e.q.name][n] = r);
                    }),
                    i
                  );
                }
              })(t);
              return e
                ? ('' === e.anchor && (e.source = e.source.replace('#', '')), (t = e.source.replace('?' + e.query, '')))
                : '(unknown)';
            },
            scrub: function (t, e) {
              var n = (function (t) {
                  for (var e = [], n = 0; n < t.length; ++n)
                    e.push(new RegExp('^\\[?(%5[bB])?' + t[n] + '\\[?(%5[bB])?\\]?(%5[dD])?$', 'i'));
                  return e;
                })((e = e || [])),
                i = (function (t) {
                  for (var e = [], n = 0; n < t.length; ++n)
                    e.push(new RegExp('(\\[?(%5[bB])?' + t[n] + '\\[?(%5[bB])?\\]?(%5[dD])?=)([^&\\n]+)', 'igm'));
                  return e;
                })(e);
              function r(t, e) {
                return e + '********';
              }
              return h(
                t,
                function t(e, s, a) {
                  var c = (function (t, e) {
                    var i;
                    for (i = 0; i < n.length; ++i)
                      if (n[i].test(t)) {
                        e = '********';
                        break;
                      }
                    return e;
                  })(e, s);
                  return c === s
                    ? o(s, 'object') || o(s, 'array')
                      ? h(s, t, a)
                      : (function (t) {
                          var e;
                          if (o(t, 'string')) for (e = 0; e < i.length; ++e) t = t.replace(i[e], r);
                          return t;
                        })(c)
                    : c;
                },
                []
              );
            },
            set: function (t, e, n) {
              if (t) {
                var i = e.split('.'),
                  r = i.length;
                if (!(r < 1))
                  if (1 !== r)
                    try {
                      for (var s = t[i[0]] || {}, o = s, a = 1; a < r - 1; ++a)
                        (s[i[a]] = s[i[a]] || {}), (s = s[i[a]]);
                      (s[i[r - 1]] = n), (t[i[0]] = o);
                    } catch (t) {
                      return;
                    }
                  else t[i[0]] = n;
              }
            },
            stringify: f,
            maxByteSize: function (t) {
              for (var e = 0, n = t.length, i = 0; i < n; i++) {
                var r = t.charCodeAt(i);
                r < 128 ? (e += 1) : r < 2048 ? (e += 2) : r < 65536 && (e += 3);
              }
              return e;
            },
            traverse: h,
            typeName: a,
            uuid4: d,
          };
        },
        function (t, e, n) {
          'use strict';
          n(17);
          var i = n(18),
            r = n(0);
          t.exports = {
            error: function () {
              var t = Array.prototype.slice.call(arguments, 0);
              t.unshift('Rollbar:'),
                i.ieVersion() <= 8 ? console.error(r.formatArgsAsString(t)) : console.error.apply(console, t);
            },
            info: function () {
              var t = Array.prototype.slice.call(arguments, 0);
              t.unshift('Rollbar:'),
                i.ieVersion() <= 8 ? console.info(r.formatArgsAsString(t)) : console.info.apply(console, t);
            },
            log: function () {
              var t = Array.prototype.slice.call(arguments, 0);
              t.unshift('Rollbar:'),
                i.ieVersion() <= 8 ? console.log(r.formatArgsAsString(t)) : console.log.apply(console, t);
            },
          };
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          function r(t, e) {
            return [t, i.stringify(t, e)];
          }
          function s(t, e) {
            var n = t.length;
            return n > 2 * e ? t.slice(0, e).concat(t.slice(n - e)) : t;
          }
          function o(t, e, n) {
            n = void 0 === n ? 30 : n;
            var r,
              o = t.data.body;
            if (o.trace_chain)
              for (var a = o.trace_chain, c = 0; c < a.length; c++) (r = s((r = a[c].frames), n)), (a[c].frames = r);
            else o.trace && ((r = s((r = o.trace.frames), n)), (o.trace.frames = r));
            return [t, i.stringify(t, e)];
          }
          function a(t, e) {
            return e && e.length > t ? e.slice(0, t - 3).concat('...') : e;
          }
          function c(t, e, n) {
            return [
              (e = i.traverse(
                e,
                function e(n, r, s) {
                  switch (i.typeName(r)) {
                    case 'string':
                      return a(t, r);
                    case 'object':
                    case 'array':
                      return i.traverse(r, e, s);
                    default:
                      return r;
                  }
                },
                []
              )),
              i.stringify(e, n),
            ];
          }
          function l(t) {
            return (
              t.exception && (delete t.exception.description, (t.exception.message = a(255, t.exception.message))),
              (t.frames = s(t.frames, 1)),
              t
            );
          }
          function u(t, e) {
            var n = t.data.body;
            if (n.trace_chain) for (var r = n.trace_chain, s = 0; s < r.length; s++) r[s] = l(r[s]);
            else n.trace && (n.trace = l(n.trace));
            return [t, i.stringify(t, e)];
          }
          function h(t, e) {
            return i.maxByteSize(t) > e;
          }
          t.exports = {
            truncate: function (t, e, n) {
              n = void 0 === n ? 524288 : n;
              for (
                var i, s, a, l = [r, o, c.bind(null, 1024), c.bind(null, 512), c.bind(null, 256), u];
                (i = l.shift());

              )
                if (((t = (s = i(t, e))[0]), (a = s[1]).error || !h(a.value, n))) return a;
              return a;
            },
            raw: r,
            truncateFrames: o,
            truncateStrings: c,
            maybeTruncateValue: a,
          };
        },
        function (t, e, n) {
          'use strict';
          t.exports = {
            parse: function (t) {
              var e,
                n,
                i = {
                  protocol: null,
                  auth: null,
                  host: null,
                  path: null,
                  hash: null,
                  href: t,
                  hostname: null,
                  port: null,
                  pathname: null,
                  search: null,
                  query: null,
                };
              if (
                (-1 !== (e = t.indexOf('//')) ? ((i.protocol = t.substring(0, e)), (n = e + 2)) : (n = 0),
                -1 !== (e = t.indexOf('@', n)) && ((i.auth = t.substring(n, e)), (n = e + 1)),
                -1 === (e = t.indexOf('/', n)))
              ) {
                if (-1 === (e = t.indexOf('?', n)))
                  return (
                    -1 === (e = t.indexOf('#', n))
                      ? (i.host = t.substring(n))
                      : ((i.host = t.substring(n, e)), (i.hash = t.substring(e))),
                    (i.hostname = i.host.split(':')[0]),
                    (i.port = i.host.split(':')[1]),
                    i.port && (i.port = parseInt(i.port, 10)),
                    i
                  );
                (i.host = t.substring(n, e)),
                  (i.hostname = i.host.split(':')[0]),
                  (i.port = i.host.split(':')[1]),
                  i.port && (i.port = parseInt(i.port, 10)),
                  (n = e);
              } else
                (i.host = t.substring(n, e)),
                  (i.hostname = i.host.split(':')[0]),
                  (i.port = i.host.split(':')[1]),
                  i.port && (i.port = parseInt(i.port, 10)),
                  (n = e);
              if (
                (-1 === (e = t.indexOf('#', n))
                  ? (i.path = t.substring(n))
                  : ((i.path = t.substring(n, e)), (i.hash = t.substring(e))),
                i.path)
              ) {
                var r = i.path.split('?');
                (i.pathname = r[0]), (i.query = r[1]), (i.search = i.query ? '?' + i.query : null);
              }
              return i;
            },
          };
        },
        function (t, e, n) {
          'use strict';
          var i = n(22),
            r = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');
          function s(t) {
            var e = {};
            return (
              (e._stackFrame = t),
              (e.url = t.fileName),
              (e.line = t.lineNumber),
              (e.func = t.functionName),
              (e.column = t.columnNumber),
              (e.args = t.args),
              (e.context = null),
              e
            );
          }
          function o(t, e) {
            return {
              stack: (function () {
                var n = [];
                e = e || 0;
                try {
                  n = i.parse(t);
                } catch (t) {
                  n = [];
                }
                for (var r = [], o = e; o < n.length; o++) r.push(new s(n[o]));
                return r;
              })(),
              message: t.message,
              name: a(t),
              rawStack: t.stack,
              rawException: t,
            };
          }
          function a(t) {
            var e = t.name && t.name.length && t.name,
              n = t.constructor.name && t.constructor.name.length && t.constructor.name;
            return e && n ? ('Error' === e ? n : e) : e || n;
          }
          t.exports = {
            guessFunctionName: function () {
              return '?';
            },
            guessErrorClass: function (t) {
              if (!t || !t.match) return ['Unknown error. There was no error message to display.', ''];
              var e = t.match(r),
                n = '(unknown)';
              return (
                e &&
                  (t = (t = t.replace((e[e.length - 2] || '') + (n = e[e.length - 1]) + ':', '')).replace(
                    /(^[\s]+|[\s]+$)/g,
                    ''
                  )),
                [n, t]
              );
            },
            gatherContext: function () {
              return null;
            },
            parse: function (t, e) {
              var n = t;
              if (n.nested) {
                for (var i = []; n; ) i.push(new o(n, e)), (n = n.nested), (e = 0);
                return (i[0].traceChain = i), i[0];
              }
              return new o(n, e);
            },
            Stack: o,
            Frame: s,
          };
        },
        function (t, e, n) {
          t.exports = n(6);
        },
        function (t, e, n) {
          'use strict';
          var i = n(7),
            r = 'undefined' != typeof window && window._rollbarConfig,
            s = (r && r.globalAlias) || 'Rollbar',
            o =
              'undefined' != typeof window &&
              window[s] &&
              'function' == typeof window[s].shimId &&
              void 0 !== window[s].shimId();
          if (
            ('undefined' == typeof window ||
              window._rollbarStartTime ||
              (window._rollbarStartTime = new Date().getTime()),
            !o && r)
          ) {
            var a = new i(r);
            window[s] = a;
          } else
            'undefined' != typeof window
              ? ((window.rollbar = i), (window._rollbarDidLoad = !0))
              : 'undefined' != typeof self && ((self.rollbar = i), (self._rollbarDidLoad = !0));
          t.exports = i;
        },
        function (t, e, n) {
          'use strict';
          var i = n(8),
            r = n(0),
            s = n(15),
            o = n(1),
            a = n(19),
            c = n(20),
            l = n(3),
            u = n(21),
            h = n(24),
            d = n(25),
            p = n(26),
            f = n(4),
            m = n(27);
          function g(t, e) {
            (this.options = r.handleOptions(w, t)), (this.options._configuredOptions = t);
            var n = new s(this.options, c, l);
            this.client = e || new i(this.options, n, o, 'browser');
            var a = v(),
              f = 'undefined' != typeof document && document;
            (this.isChrome = a.chrome && a.chrome.runtime),
              (this.anonymousErrorsPending = 0),
              (function (t, e) {
                t.addTransform(u.handleDomException)
                  .addTransform(u.handleItemWithError)
                  .addTransform(u.ensureItemHasSomethingToSay)
                  .addTransform(u.addBaseInfo)
                  .addTransform(u.addRequestInfo(e))
                  .addTransform(u.addClientInfo(e))
                  .addTransform(u.addPluginInfo(e))
                  .addTransform(u.addBody)
                  .addTransform(h.addMessageWithError)
                  .addTransform(h.addTelemetryData)
                  .addTransform(h.addConfigToPayload)
                  .addTransform(u.scrubPayload)
                  .addTransform(h.userTransform(o))
                  .addTransform(h.addConfiguredOptions)
                  .addTransform(h.addDiagnosticKeys)
                  .addTransform(h.itemToPayload);
              })(this.client.notifier, a),
              this.client.queue
                .addPredicate(p.checkLevel)
                .addPredicate(d.checkIgnore)
                .addPredicate(p.userCheckIgnore(o))
                .addPredicate(p.urlIsNotBlacklisted(o))
                .addPredicate(p.urlIsWhitelisted(o))
                .addPredicate(p.messageIsIgnored(o)),
              this.setupUnhandledCapture(),
              (this.instrumenter = new m(this.options, this.client.telemeter, this, a, f)),
              this.instrumenter.instrument();
          }
          var b = null;
          function _(t) {
            var e = 'Rollbar is not initialized';
            o.error(e), t && t(new Error(e));
          }
          function y(t) {
            for (var e = 0, n = t.length; e < n; ++e) if (r.isFunction(t[e])) return t[e];
          }
          function v() {
            return ('undefined' != typeof window && window) || ('undefined' != typeof self && self);
          }
          (g.init = function (t, e) {
            return b ? b.global(t).configure(t) : (b = new g(t, e));
          }),
            (g.prototype.global = function (t) {
              return this.client.global(t), this;
            }),
            (g.global = function (t) {
              if (b) return b.global(t);
              _();
            }),
            (g.prototype.configure = function (t, e) {
              var n = this.options,
                i = {};
              return (
                e && (i = { payload: e }),
                (this.options = r.handleOptions(n, t, i)),
                (this.options._configuredOptions = r.handleOptions(n._configuredOptions, t, i)),
                this.client.configure(this.options, e),
                this.instrumenter.configure(this.options),
                this.setupUnhandledCapture(),
                this
              );
            }),
            (g.configure = function (t, e) {
              if (b) return b.configure(t, e);
              _();
            }),
            (g.prototype.lastError = function () {
              return this.client.lastError;
            }),
            (g.lastError = function () {
              if (b) return b.lastError();
              _();
            }),
            (g.prototype.log = function () {
              var t = this._createItem(arguments),
                e = t.uuid;
              return this.client.log(t), { uuid: e };
            }),
            (g.log = function () {
              if (b) return b.log.apply(b, arguments);
              var t = y(arguments);
              _(t);
            }),
            (g.prototype.debug = function () {
              var t = this._createItem(arguments),
                e = t.uuid;
              return this.client.debug(t), { uuid: e };
            }),
            (g.debug = function () {
              if (b) return b.debug.apply(b, arguments);
              var t = y(arguments);
              _(t);
            }),
            (g.prototype.info = function () {
              var t = this._createItem(arguments),
                e = t.uuid;
              return this.client.info(t), { uuid: e };
            }),
            (g.info = function () {
              if (b) return b.info.apply(b, arguments);
              var t = y(arguments);
              _(t);
            }),
            (g.prototype.warn = function () {
              var t = this._createItem(arguments),
                e = t.uuid;
              return this.client.warn(t), { uuid: e };
            }),
            (g.warn = function () {
              if (b) return b.warn.apply(b, arguments);
              var t = y(arguments);
              _(t);
            }),
            (g.prototype.warning = function () {
              var t = this._createItem(arguments),
                e = t.uuid;
              return this.client.warning(t), { uuid: e };
            }),
            (g.warning = function () {
              if (b) return b.warning.apply(b, arguments);
              var t = y(arguments);
              _(t);
            }),
            (g.prototype.error = function () {
              var t = this._createItem(arguments),
                e = t.uuid;
              return this.client.error(t), { uuid: e };
            }),
            (g.error = function () {
              if (b) return b.error.apply(b, arguments);
              var t = y(arguments);
              _(t);
            }),
            (g.prototype.critical = function () {
              var t = this._createItem(arguments),
                e = t.uuid;
              return this.client.critical(t), { uuid: e };
            }),
            (g.critical = function () {
              if (b) return b.critical.apply(b, arguments);
              var t = y(arguments);
              _(t);
            }),
            (g.prototype.buildJsonPayload = function (t) {
              return this.client.buildJsonPayload(t);
            }),
            (g.buildJsonPayload = function () {
              if (b) return b.buildJsonPayload.apply(b, arguments);
              _();
            }),
            (g.prototype.sendJsonPayload = function (t) {
              return this.client.sendJsonPayload(t);
            }),
            (g.sendJsonPayload = function () {
              if (b) return b.sendJsonPayload.apply(b, arguments);
              _();
            }),
            (g.prototype.setupUnhandledCapture = function () {
              var t = v();
              this.unhandledExceptionsInitialized ||
                ((this.options.captureUncaught || this.options.handleUncaughtExceptions) &&
                  (a.captureUncaughtExceptions(t, this),
                  this.options.wrapGlobalEventHandlers && a.wrapGlobals(t, this),
                  (this.unhandledExceptionsInitialized = !0))),
                this.unhandledRejectionsInitialized ||
                  ((this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) &&
                    (a.captureUnhandledRejections(t, this), (this.unhandledRejectionsInitialized = !0)));
            }),
            (g.prototype.handleUncaughtException = function (t, e, n, i, s, o) {
              if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {
                if (this.options.inspectAnonymousErrors && this.isChrome && null === s) return 'anonymous';
                var a,
                  c = r.makeUnhandledStackInfo(t, e, n, i, s, 'onerror', 'uncaught exception', f);
                r.isError(s)
                  ? ((a = this._createItem([t, s, o]))._unhandledStackInfo = c)
                  : r.isError(e)
                  ? ((a = this._createItem([t, e, o]))._unhandledStackInfo = c)
                  : ((a = this._createItem([t, o])).stackInfo = c),
                  (a.level = this.options.uncaughtErrorLevel),
                  (a._isUncaught = !0),
                  this.client.log(a);
              }
            }),
            (g.prototype.handleAnonymousErrors = function () {
              if (this.options.inspectAnonymousErrors && this.isChrome) {
                var t = this;
                try {
                  Error.prepareStackTrace = function (e, n) {
                    if (t.options.inspectAnonymousErrors && t.anonymousErrorsPending) {
                      if (((t.anonymousErrorsPending -= 1), !e)) return;
                      (e._isAnonymous = !0), t.handleUncaughtException(e.message, null, null, null, e);
                    }
                    return e.stack;
                  };
                } catch (t) {
                  (this.options.inspectAnonymousErrors = !1), this.error('anonymous error handler failed', t);
                }
              }
            }),
            (g.prototype.handleUnhandledRejection = function (t, e) {
              if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {
                var n = 'unhandled rejection was null or undefined!';
                if (t)
                  if (t.message) n = t.message;
                  else {
                    var i = r.stringify(t);
                    i.value && (n = i.value);
                  }
                var s,
                  o = (t && t._rollbarContext) || (e && e._rollbarContext);
                r.isError(t)
                  ? (s = this._createItem([n, t, o]))
                  : ((s = this._createItem([n, t, o])).stackInfo = r.makeUnhandledStackInfo(
                      n,
                      '',
                      0,
                      0,
                      null,
                      'unhandledrejection',
                      '',
                      f
                    )),
                  (s.level = this.options.uncaughtErrorLevel),
                  (s._isUncaught = !0),
                  (s._originalArgs = s._originalArgs || []),
                  s._originalArgs.push(e),
                  this.client.log(s);
              }
            }),
            (g.prototype.wrap = function (t, e, n) {
              try {
                var i;
                if (
                  ((i = r.isFunction(e)
                    ? e
                    : function () {
                        return e || {};
                      }),
                  !r.isFunction(t))
                )
                  return t;
                if (t._isWrap) return t;
                if (
                  !t._rollbar_wrapped &&
                  ((t._rollbar_wrapped = function () {
                    n && r.isFunction(n) && n.apply(this, arguments);
                    try {
                      return t.apply(this, arguments);
                    } catch (n) {
                      var e = n;
                      throw (
                        (e &&
                          window._rollbarWrappedError !== e &&
                          (r.isType(e, 'string') && (e = new String(e)),
                          (e._rollbarContext = i() || {}),
                          (e._rollbarContext._wrappedSource = t.toString()),
                          (window._rollbarWrappedError = e)),
                        e)
                      );
                    }
                  }),
                  (t._rollbar_wrapped._isWrap = !0),
                  t.hasOwnProperty)
                )
                  for (var s in t) t.hasOwnProperty(s) && '_rollbar_wrapped' !== s && (t._rollbar_wrapped[s] = t[s]);
                return t._rollbar_wrapped;
              } catch (e) {
                return t;
              }
            }),
            (g.wrap = function (t, e) {
              if (b) return b.wrap(t, e);
              _();
            }),
            (g.prototype.captureEvent = function () {
              var t = r.createTelemetryEvent(arguments);
              return this.client.captureEvent(t.type, t.metadata, t.level);
            }),
            (g.captureEvent = function () {
              if (b) return b.captureEvent.apply(b, arguments);
              _();
            }),
            (g.prototype.captureDomContentLoaded = function (t, e) {
              return e || (e = new Date()), this.client.captureDomContentLoaded(e);
            }),
            (g.prototype.captureLoad = function (t, e) {
              return e || (e = new Date()), this.client.captureLoad(e);
            }),
            (g.prototype._createItem = function (t) {
              return r.createItem(t, o, this);
            }),
            (g.prototype.loadFull = function () {
              o.info(
                'Unexpected Rollbar.loadFull() called on a Notifier instance. This can happen when Rollbar is loaded multiple times.'
              );
            });
          var w = {
            version: '2.17.0',
            scrubFields: [
              'pw',
              'pass',
              'passwd',
              'password',
              'secret',
              'confirm_password',
              'confirmPassword',
              'password_confirmation',
              'passwordConfirmation',
              'access_token',
              'accessToken',
              'X-Rollbar-Access-Token',
              'secret_key',
              'secretKey',
              'secretToken',
              'cc-number',
              'card number',
              'cardnumber',
              'cardnum',
              'ccnum',
              'ccnumber',
              'cc num',
              'creditcardnumber',
              'credit card number',
              'newcreditcardnumber',
              'new credit card',
              'creditcardno',
              'credit card no',
              'card#',
              'card #',
              'cc-csc',
              'cvc',
              'cvc2',
              'cvv2',
              'ccv2',
              'security code',
              'card verification',
              'name on credit card',
              'name on card',
              'nameoncard',
              'cardholder',
              'card holder',
              'name des karteninhabers',
              'ccname',
              'card type',
              'cardtype',
              'cc type',
              'cctype',
              'payment type',
              'expiration date',
              'expirationdate',
              'expdate',
              'cc-exp',
              'ccmonth',
              'ccyear',
            ],
            logLevel: 'debug',
            reportLevel: 'debug',
            uncaughtErrorLevel: 'error',
            endpoint: 'api.rollbar.com/api/1/item/',
            verbose: !1,
            enabled: !0,
            transmit: !0,
            sendConfig: !1,
            includeItemsInTelemetry: !0,
            captureIp: !0,
            inspectAnonymousErrors: !0,
            ignoreDuplicateErrors: !0,
            wrapGlobalEventHandlers: !1,
          };
          t.exports = g;
        },
        function (t, e, n) {
          'use strict';
          var i = n(9),
            r = n(12),
            s = n(13),
            o = n(14),
            a = n(0);
          function c(t, e, n, i) {
            (this.options = a.merge(t)),
              (this.logger = n),
              c.rateLimiter.configureGlobal(this.options),
              c.rateLimiter.setPlatformOptions(i, this.options),
              (this.api = e),
              (this.queue = new r(c.rateLimiter, e, n, this.options));
            var h = this.options.tracer || null;
            u(h)
              ? ((this.tracer = h),
                (this.options.tracer = 'opentracing-tracer-enabled'),
                (this.options._configuredOptions.tracer = 'opentracing-tracer-enabled'))
              : (this.tracer = null),
              (this.notifier = new s(this.queue, this.options)),
              (this.telemeter = new o(this.options)),
              l(t),
              (this.lastError = null),
              (this.lastErrorHash = 'none');
          }
          function l(t) {
            t.stackTraceLimit && (Error.stackTraceLimit = t.stackTraceLimit);
          }
          function u(t) {
            if (!t) return !1;
            if (!t.scope || 'function' != typeof t.scope) return !1;
            const e = t.scope();
            return !(!e || !e.active || 'function' != typeof e.active);
          }
          (c.rateLimiter = new i({ maxItems: 0, itemsPerMinute: 60 })),
            (c.prototype.global = function (t) {
              return c.rateLimiter.configureGlobal(t), this;
            }),
            (c.prototype.configure = function (t, e) {
              var n = {};
              e && (n = { payload: e }), (this.options = a.merge(this.options, t, n));
              var i = this.options.tracer || null;
              return (
                u(i)
                  ? ((this.tracer = i),
                    (this.options.tracer = 'opentracing-tracer-enabled'),
                    (this.options._configuredOptions.tracer = 'opentracing-tracer-enabled'))
                  : (this.tracer = null),
                this.notifier && this.notifier.configure(this.options),
                this.telemeter && this.telemeter.configure(this.options),
                l(t),
                this.global(this.options),
                u(t.tracer) && (this.tracer = t.tracer),
                this
              );
            }),
            (c.prototype.log = function (t) {
              var e = this._defaultLogLevel();
              return this._log(e, t);
            }),
            (c.prototype.debug = function (t) {
              this._log('debug', t);
            }),
            (c.prototype.info = function (t) {
              this._log('info', t);
            }),
            (c.prototype.warn = function (t) {
              this._log('warning', t);
            }),
            (c.prototype.warning = function (t) {
              this._log('warning', t);
            }),
            (c.prototype.error = function (t) {
              this._log('error', t);
            }),
            (c.prototype.critical = function (t) {
              this._log('critical', t);
            }),
            (c.prototype.wait = function (t) {
              this.queue.wait(t);
            }),
            (c.prototype.captureEvent = function (t, e, n) {
              return this.telemeter.captureEvent(t, e, n);
            }),
            (c.prototype.captureDomContentLoaded = function (t) {
              return this.telemeter.captureDomContentLoaded(t);
            }),
            (c.prototype.captureLoad = function (t) {
              return this.telemeter.captureLoad(t);
            }),
            (c.prototype.buildJsonPayload = function (t) {
              return this.api.buildJsonPayload(t);
            }),
            (c.prototype.sendJsonPayload = function (t) {
              this.api.postJsonPayload(t);
            }),
            (c.prototype._log = function (t, e) {
              var n;
              if (
                (e.callback && ((n = e.callback), delete e.callback),
                this.options.ignoreDuplicateErrors && this._sameAsLastError(e))
              ) {
                if (n) {
                  var i = new Error('ignored identical item');
                  (i.item = e), n(i);
                }
              } else
                try {
                  this._addTracingInfo(e),
                    (e.level = e.level || t),
                    this.telemeter._captureRollbarItem(e),
                    (e.telemetryEvents = this.telemeter.copyEvents()),
                    this.notifier.log(e, n);
                } catch (t) {
                  this.logger.error(t);
                }
            }),
            (c.prototype._defaultLogLevel = function () {
              return this.options.logLevel || 'debug';
            }),
            (c.prototype._sameAsLastError = function (t) {
              if (!t._isUncaught) return !1;
              var e = (function (t) {
                return (t.message || '') + '::' + ((t.err || {}).stack || String(t.err));
              })(t);
              return this.lastErrorHash === e || ((this.lastError = t.err), (this.lastErrorHash = e), !1);
            }),
            (c.prototype._addTracingInfo = function (t) {
              if (this.tracer) {
                var e = this.tracer.scope().active();
                if (
                  (function (t) {
                    if (!t || !t.context || 'function' != typeof t.context) return !1;
                    const e = t.context();
                    return !!(
                      e &&
                      e.toSpanId &&
                      e.toTraceId &&
                      'function' == typeof e.toSpanId &&
                      'function' == typeof e.toTraceId
                    );
                  })(e)
                ) {
                  e.setTag('rollbar.error_uuid', t.uuid), e.setTag('rollbar.has_error', !0);
                  var n = e.context().toSpanId(),
                    i = e.context().toTraceId();
                  t.custom
                    ? ((t.custom.opentracing_span_id = n), (t.custom.opentracing_trace_id = i))
                    : (t.custom = { opentracing_span_id: n, opentracing_trace_id: i });
                }
              }
            }),
            (t.exports = c);
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          function r(t) {
            (this.startTime = i.now()),
              (this.counter = 0),
              (this.perMinCounter = 0),
              (this.platform = null),
              (this.platformOptions = {}),
              this.configureGlobal(t);
          }
          function s(t, e, n) {
            return !t.ignoreRateLimit && e >= 1 && n > e;
          }
          function o(t, e, n, i, r, s, o) {
            var a = null;
            return (
              n && (n = new Error(n)),
              n ||
                i ||
                (a = (function (t, e, n, i, r) {
                  var s = {
                    body: {
                      message: {
                        body: r
                          ? 'item per minute limit reached, ignoring errors until timeout'
                          : 'maxItems has been hit, ignoring errors until reset.',
                        extra: { maxItems: n, itemsPerMinute: i },
                      },
                    },
                    language: 'javascript',
                    environment: e.environment || (e.payload && e.payload.environment),
                    notifier: { version: (e.notifier && e.notifier.version) || e.version },
                  };
                  return (
                    'browser' === t
                      ? ((s.platform = 'browser'),
                        (s.framework = 'browser-js'),
                        (s.notifier.name = 'rollbar-browser-js'))
                      : 'server' === t
                      ? ((s.framework = e.framework || 'node-js'), (s.notifier.name = e.notifier.name))
                      : 'react-native' === t &&
                        ((s.framework = e.framework || 'react-native'), (s.notifier.name = e.notifier.name)),
                    s
                  );
                })(t, e, r, s, o)),
              { error: n, shouldSend: i, payload: a }
            );
          }
          (r.globalSettings = { startTime: i.now(), maxItems: void 0, itemsPerMinute: void 0 }),
            (r.prototype.configureGlobal = function (t) {
              void 0 !== t.startTime && (r.globalSettings.startTime = t.startTime),
                void 0 !== t.maxItems && (r.globalSettings.maxItems = t.maxItems),
                void 0 !== t.itemsPerMinute && (r.globalSettings.itemsPerMinute = t.itemsPerMinute);
            }),
            (r.prototype.shouldSend = function (t, e) {
              var n = (e = e || i.now()) - this.startTime;
              (n < 0 || n >= 6e4) && ((this.startTime = e), (this.perMinCounter = 0));
              var a = r.globalSettings.maxItems,
                c = r.globalSettings.itemsPerMinute;
              if (s(t, a, this.counter)) return o(this.platform, this.platformOptions, a + ' max items reached', !1);
              if (s(t, c, this.perMinCounter))
                return o(this.platform, this.platformOptions, c + ' items per minute reached', !1);
              this.counter++, this.perMinCounter++;
              var l = !s(t, a, this.counter),
                u = l;
              return (l = l && !s(t, c, this.perMinCounter)), o(this.platform, this.platformOptions, null, l, a, c, u);
            }),
            (r.prototype.setPlatformOptions = function (t, e) {
              (this.platform = t), (this.platformOptions = e);
            }),
            (t.exports = r);
        },
        function (t, e, n) {
          'use strict';
          var i = Object.prototype.hasOwnProperty,
            r = Object.prototype.toString,
            s = function (t) {
              if (!t || '[object Object]' !== r.call(t)) return !1;
              var e,
                n = i.call(t, 'constructor'),
                s = t.constructor && t.constructor.prototype && i.call(t.constructor.prototype, 'isPrototypeOf');
              if (t.constructor && !n && !s) return !1;
              for (e in t);
              return void 0 === e || i.call(t, e);
            };
          t.exports = function t() {
            var e,
              n,
              i,
              r,
              o,
              a = {},
              c = null,
              l = arguments.length;
            for (e = 0; e < l; e++)
              if (null != (c = arguments[e]))
                for (o in c)
                  (n = a[o]),
                    a !== (i = c[o]) &&
                      (i && s(i) ? ((r = n && s(n) ? n : {}), (a[o] = t(r, i))) : void 0 !== i && (a[o] = i));
            return a;
          };
        },
        function (t, e) {
          t.exports = function (t) {
            var e,
              n,
              i,
              r,
              s,
              o,
              a,
              c,
              l,
              u,
              h,
              d,
              p,
              f = /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
            function m(t) {
              return t < 10 ? '0' + t : t;
            }
            function g() {
              return this.valueOf();
            }
            function b(t) {
              return (
                (f.lastIndex = 0),
                f.test(t)
                  ? '"' +
                    t.replace(f, function (t) {
                      var e = i[t];
                      return 'string' == typeof e ? e : '\\u' + ('0000' + t.charCodeAt(0).toString(16)).slice(-4);
                    }) +
                    '"'
                  : '"' + t + '"'
              );
            }
            'function' != typeof Date.prototype.toJSON &&
              ((Date.prototype.toJSON = function () {
                return isFinite(this.valueOf())
                  ? this.getUTCFullYear() +
                      '-' +
                      m(this.getUTCMonth() + 1) +
                      '-' +
                      m(this.getUTCDate()) +
                      'T' +
                      m(this.getUTCHours()) +
                      ':' +
                      m(this.getUTCMinutes()) +
                      ':' +
                      m(this.getUTCSeconds()) +
                      'Z'
                  : null;
              }),
              (Boolean.prototype.toJSON = g),
              (Number.prototype.toJSON = g),
              (String.prototype.toJSON = g)),
              'function' != typeof t.stringify &&
                ((i = { '\b': '\\b', '\t': '\\t', '\n': '\\n', '\f': '\\f', '\r': '\\r', '"': '\\"', '\\': '\\\\' }),
                (t.stringify = function (t, i, s) {
                  var o;
                  if (((e = ''), (n = ''), 'number' == typeof s)) for (o = 0; o < s; o += 1) n += ' ';
                  else 'string' == typeof s && (n = s);
                  if (((r = i), i && 'function' != typeof i && ('object' != typeof i || 'number' != typeof i.length)))
                    throw new Error('JSON.stringify');
                  return (function t(i, s) {
                    var o,
                      a,
                      c,
                      l,
                      u,
                      h = e,
                      d = s[i];
                    switch (
                      (d && 'object' == typeof d && 'function' == typeof d.toJSON && (d = d.toJSON(i)),
                      'function' == typeof r && (d = r.call(s, i, d)),
                      typeof d)
                    ) {
                      case 'string':
                        return b(d);
                      case 'number':
                        return isFinite(d) ? String(d) : 'null';
                      case 'boolean':
                      case 'null':
                        return String(d);
                      case 'object':
                        if (!d) return 'null';
                        if (((e += n), (u = []), '[object Array]' === Object.prototype.toString.apply(d))) {
                          for (l = d.length, o = 0; o < l; o += 1) u[o] = t(o, d) || 'null';
                          return (
                            (c =
                              0 === u.length
                                ? '[]'
                                : e
                                ? '[\n' + e + u.join(',\n' + e) + '\n' + h + ']'
                                : '[' + u.join(',') + ']'),
                            (e = h),
                            c
                          );
                        }
                        if (r && 'object' == typeof r)
                          for (l = r.length, o = 0; o < l; o += 1)
                            'string' == typeof r[o] && (c = t((a = r[o]), d)) && u.push(b(a) + (e ? ': ' : ':') + c);
                        else
                          for (a in d)
                            Object.prototype.hasOwnProperty.call(d, a) &&
                              (c = t(a, d)) &&
                              u.push(b(a) + (e ? ': ' : ':') + c);
                        return (
                          (c =
                            0 === u.length
                              ? '{}'
                              : e
                              ? '{\n' + e + u.join(',\n' + e) + '\n' + h + '}'
                              : '{' + u.join(',') + '}'),
                          (e = h),
                          c
                        );
                    }
                  })('', { '': t });
                })),
              'function' != typeof t.parse &&
                (t.parse =
                  ((u = { '\\': '\\', '"': '"', '/': '/', t: '\t', n: '\n', r: '\r', f: '\f', b: '\b' }),
                  (h = {
                    go: function () {
                      s = 'ok';
                    },
                    firstokey: function () {
                      (c = l), (s = 'colon');
                    },
                    okey: function () {
                      (c = l), (s = 'colon');
                    },
                    ovalue: function () {
                      s = 'ocomma';
                    },
                    firstavalue: function () {
                      s = 'acomma';
                    },
                    avalue: function () {
                      s = 'acomma';
                    },
                  }),
                  (d = {
                    go: function () {
                      s = 'ok';
                    },
                    ovalue: function () {
                      s = 'ocomma';
                    },
                    firstavalue: function () {
                      s = 'acomma';
                    },
                    avalue: function () {
                      s = 'acomma';
                    },
                  }),
                  (p = {
                    '{': {
                      go: function () {
                        o.push({ state: 'ok' }), (a = {}), (s = 'firstokey');
                      },
                      ovalue: function () {
                        o.push({ container: a, state: 'ocomma', key: c }), (a = {}), (s = 'firstokey');
                      },
                      firstavalue: function () {
                        o.push({ container: a, state: 'acomma' }), (a = {}), (s = 'firstokey');
                      },
                      avalue: function () {
                        o.push({ container: a, state: 'acomma' }), (a = {}), (s = 'firstokey');
                      },
                    },
                    '}': {
                      firstokey: function () {
                        var t = o.pop();
                        (l = a), (a = t.container), (c = t.key), (s = t.state);
                      },
                      ocomma: function () {
                        var t = o.pop();
                        (a[c] = l), (l = a), (a = t.container), (c = t.key), (s = t.state);
                      },
                    },
                    '[': {
                      go: function () {
                        o.push({ state: 'ok' }), (a = []), (s = 'firstavalue');
                      },
                      ovalue: function () {
                        o.push({ container: a, state: 'ocomma', key: c }), (a = []), (s = 'firstavalue');
                      },
                      firstavalue: function () {
                        o.push({ container: a, state: 'acomma' }), (a = []), (s = 'firstavalue');
                      },
                      avalue: function () {
                        o.push({ container: a, state: 'acomma' }), (a = []), (s = 'firstavalue');
                      },
                    },
                    ']': {
                      firstavalue: function () {
                        var t = o.pop();
                        (l = a), (a = t.container), (c = t.key), (s = t.state);
                      },
                      acomma: function () {
                        var t = o.pop();
                        a.push(l), (l = a), (a = t.container), (c = t.key), (s = t.state);
                      },
                    },
                    ':': {
                      colon: function () {
                        if (Object.hasOwnProperty.call(a, c)) throw new SyntaxError("Duplicate key '" + c + '"');
                        s = 'ovalue';
                      },
                    },
                    ',': {
                      ocomma: function () {
                        (a[c] = l), (s = 'okey');
                      },
                      acomma: function () {
                        a.push(l), (s = 'avalue');
                      },
                    },
                    true: {
                      go: function () {
                        (l = !0), (s = 'ok');
                      },
                      ovalue: function () {
                        (l = !0), (s = 'ocomma');
                      },
                      firstavalue: function () {
                        (l = !0), (s = 'acomma');
                      },
                      avalue: function () {
                        (l = !0), (s = 'acomma');
                      },
                    },
                    false: {
                      go: function () {
                        (l = !1), (s = 'ok');
                      },
                      ovalue: function () {
                        (l = !1), (s = 'ocomma');
                      },
                      firstavalue: function () {
                        (l = !1), (s = 'acomma');
                      },
                      avalue: function () {
                        (l = !1), (s = 'acomma');
                      },
                    },
                    null: {
                      go: function () {
                        (l = null), (s = 'ok');
                      },
                      ovalue: function () {
                        (l = null), (s = 'ocomma');
                      },
                      firstavalue: function () {
                        (l = null), (s = 'acomma');
                      },
                      avalue: function () {
                        (l = null), (s = 'acomma');
                      },
                    },
                  }),
                  function (t, e) {
                    var n,
                      i = /^[\u0020\t\n\r]*(?:([,:\[\]{}]|true|false|null)|(-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)|"((?:[^\r\n\t\\\"]|\\(?:["\\\/trnfb]|u[0-9a-fA-F]{4}))*)")/;
                    (s = 'go'), (o = []);
                    try {
                      for (; (n = i.exec(t)); )
                        n[1]
                          ? p[n[1]][s]()
                          : n[2]
                          ? ((l = +n[2]), d[s]())
                          : ((l = n[3].replace(/\\(?:u(.{4})|([^u]))/g, function (t, e, n) {
                              return e ? String.fromCharCode(parseInt(e, 16)) : u[n];
                            })),
                            h[s]()),
                          (t = t.slice(n[0].length));
                    } catch (t) {
                      s = t;
                    }
                    if ('ok' !== s || /[^\u0020\t\n\r]/.test(t))
                      throw s instanceof SyntaxError ? s : new SyntaxError('JSON');
                    return 'function' == typeof e
                      ? (function t(n, i) {
                          var r,
                            s,
                            o = n[i];
                          if (o && 'object' == typeof o)
                            for (r in l)
                              Object.prototype.hasOwnProperty.call(o, r) &&
                                (void 0 !== (s = t(o, r)) ? (o[r] = s) : delete o[r]);
                          return e.call(n, i, o);
                        })({ '': l }, '')
                      : l;
                  }));
          };
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          function r(t, e, n, i) {
            (this.rateLimiter = t),
              (this.api = e),
              (this.logger = n),
              (this.options = i),
              (this.predicates = []),
              (this.pendingItems = []),
              (this.pendingRequests = []),
              (this.retryQueue = []),
              (this.retryHandle = null),
              (this.waitCallback = null),
              (this.waitIntervalID = null);
          }
          (r.prototype.configure = function (t) {
            return this.api && this.api.configure(t), (this.options = i.merge(this.options, t)), this;
          }),
            (r.prototype.addPredicate = function (t) {
              return i.isFunction(t) && this.predicates.push(t), this;
            }),
            (r.prototype.addPendingItem = function (t) {
              this.pendingItems.push(t);
            }),
            (r.prototype.removePendingItem = function (t) {
              var e = this.pendingItems.indexOf(t);
              -1 !== e && this.pendingItems.splice(e, 1);
            }),
            (r.prototype.addItem = function (t, e, n, r) {
              (e && i.isFunction(e)) || (e = function () {});
              var s = this._applyPredicates(t);
              if (s.stop) return this.removePendingItem(r), void e(s.err);
              if ((this._maybeLog(t, n), this.removePendingItem(r), this.options.transmit)) {
                this.pendingRequests.push(t);
                try {
                  this._makeApiRequest(
                    t,
                    function (n, i) {
                      this._dequeuePendingRequest(t), e(n, i);
                    }.bind(this)
                  );
                } catch (n) {
                  this._dequeuePendingRequest(t), e(n);
                }
              } else e(new Error('Transmit disabled'));
            }),
            (r.prototype.wait = function (t) {
              i.isFunction(t) &&
                ((this.waitCallback = t),
                this._maybeCallWait() ||
                  (this.waitIntervalID && (this.waitIntervalID = clearInterval(this.waitIntervalID)),
                  (this.waitIntervalID = setInterval(
                    function () {
                      this._maybeCallWait();
                    }.bind(this),
                    500
                  ))));
            }),
            (r.prototype._applyPredicates = function (t) {
              for (var e = null, n = 0, i = this.predicates.length; n < i; n++)
                if (!(e = this.predicates[n](t, this.options)) || void 0 !== e.err) return { stop: !0, err: e.err };
              return { stop: !1, err: null };
            }),
            (r.prototype._makeApiRequest = function (t, e) {
              var n = this.rateLimiter.shouldSend(t);
              n.shouldSend
                ? this.api.postItem(
                    t,
                    function (n, i) {
                      n ? this._maybeRetry(n, t, e) : e(n, i);
                    }.bind(this)
                  )
                : n.error
                ? e(n.error)
                : this.api.postItem(n.payload, e);
            });
          var s = [
            'ECONNRESET',
            'ENOTFOUND',
            'ESOCKETTIMEDOUT',
            'ETIMEDOUT',
            'ECONNREFUSED',
            'EHOSTUNREACH',
            'EPIPE',
            'EAI_AGAIN',
          ];
          (r.prototype._maybeRetry = function (t, e, n) {
            var i = !1;
            if (this.options.retryInterval)
              for (var r = 0, o = s.length; r < o; r++)
                if (t.code === s[r]) {
                  i = !0;
                  break;
                }
            i ? this._retryApiRequest(e, n) : n(t);
          }),
            (r.prototype._retryApiRequest = function (t, e) {
              this.retryQueue.push({ item: t, callback: e }),
                this.retryHandle ||
                  (this.retryHandle = setInterval(
                    function () {
                      for (; this.retryQueue.length; ) {
                        var t = this.retryQueue.shift();
                        this._makeApiRequest(t.item, t.callback);
                      }
                    }.bind(this),
                    this.options.retryInterval
                  ));
            }),
            (r.prototype._dequeuePendingRequest = function (t) {
              var e = this.pendingRequests.indexOf(t);
              -1 !== e && (this.pendingRequests.splice(e, 1), this._maybeCallWait());
            }),
            (r.prototype._maybeLog = function (t, e) {
              if (this.logger && this.options.verbose) {
                var n = e;
                if (
                  (n =
                    (n = n || i.get(t, 'body.trace.exception.message')) ||
                    i.get(t, 'body.trace_chain.0.exception.message'))
                )
                  return void this.logger.error(n);
                (n = i.get(t, 'body.message.body')) && this.logger.log(n);
              }
            }),
            (r.prototype._maybeCallWait = function () {
              return !(
                !i.isFunction(this.waitCallback) ||
                0 !== this.pendingItems.length ||
                0 !== this.pendingRequests.length ||
                (this.waitIntervalID && (this.waitIntervalID = clearInterval(this.waitIntervalID)),
                this.waitCallback(),
                0)
              );
            }),
            (t.exports = r);
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          function r(t, e) {
            (this.queue = t), (this.options = e), (this.transforms = []), (this.diagnostic = {});
          }
          (r.prototype.configure = function (t) {
            return this.queue && this.queue.configure(t), (this.options = i.merge(this.options, t)), this;
          }),
            (r.prototype.addTransform = function (t) {
              return i.isFunction(t) && this.transforms.push(t), this;
            }),
            (r.prototype.log = function (t, e) {
              if (((e && i.isFunction(e)) || (e = function () {}), !this.options.enabled))
                return e(new Error('Rollbar is not enabled'));
              this.queue.addPendingItem(t);
              var n = t.err;
              this._applyTransforms(
                t,
                function (i, r) {
                  if (i) return this.queue.removePendingItem(t), e(i, null);
                  this.queue.addItem(r, e, n, t);
                }.bind(this)
              );
            }),
            (r.prototype._applyTransforms = function (t, e) {
              var n = -1,
                i = this.transforms.length,
                r = this.transforms,
                s = this.options,
                o = function (t, a) {
                  t ? e(t, null) : ++n !== i ? r[n](a, s, o) : e(null, a);
                };
              o(null, t);
            }),
            (t.exports = r);
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          function r(t) {
            (this.queue = []),
              (this.options = i.merge(t)),
              (this.maxQueueSize = Math.max(0, Math.min(this.options.maxTelemetryEvents || 100, 100)));
          }
          function s(t, e) {
            return e || { error: 'error', manual: 'info' }[t] || 'info';
          }
          (r.prototype.configure = function (t) {
            this.options = i.merge(this.options, t);
            var e = Math.max(0, Math.min(this.options.maxTelemetryEvents || 100, 100)),
              n = 0;
            this.maxQueueSize > e && (n = this.maxQueueSize - e), (this.maxQueueSize = e), this.queue.splice(0, n);
          }),
            (r.prototype.copyEvents = function () {
              var t = Array.prototype.slice.call(this.queue, 0);
              if (i.isFunction(this.options.filterTelemetry))
                try {
                  for (var e = t.length; e--; ) this.options.filterTelemetry(t[e]) && t.splice(e, 1);
                } catch (t) {
                  this.options.filterTelemetry = null;
                }
              return t;
            }),
            (r.prototype.capture = function (t, e, n, r, o) {
              var a = { level: s(t, n), type: t, timestamp_ms: o || i.now(), body: e, source: 'client' };
              r && (a.uuid = r);
              try {
                if (i.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(a)) return !1;
              } catch (t) {
                this.options.filterTelemetry = null;
              }
              return this.push(a), a;
            }),
            (r.prototype.captureEvent = function (t, e, n, i) {
              return this.capture(t, e, n, i);
            }),
            (r.prototype.captureError = function (t, e, n, i) {
              var r = { message: t.message || String(t) };
              return t.stack && (r.stack = t.stack), this.capture('error', r, e, n, i);
            }),
            (r.prototype.captureLog = function (t, e, n, i) {
              return this.capture('log', { message: t }, e, n, i);
            }),
            (r.prototype.captureNetwork = function (t, e, n, i) {
              (e = e || 'xhr'), (t.subtype = t.subtype || e), i && (t.request = i);
              var r = this.levelFromStatus(t.status_code);
              return this.capture('network', t, r, n);
            }),
            (r.prototype.levelFromStatus = function (t) {
              return t >= 200 && t < 400 ? 'info' : 0 === t || t >= 400 ? 'error' : 'info';
            }),
            (r.prototype.captureDom = function (t, e, n, i, r) {
              var s = { subtype: t, element: e };
              return void 0 !== n && (s.value = n), void 0 !== i && (s.checked = i), this.capture('dom', s, 'info', r);
            }),
            (r.prototype.captureNavigation = function (t, e, n) {
              return this.capture('navigation', { from: t, to: e }, 'info', n);
            }),
            (r.prototype.captureDomContentLoaded = function (t) {
              return this.capture('navigation', { subtype: 'DOMContentLoaded' }, 'info', void 0, t && t.getTime());
            }),
            (r.prototype.captureLoad = function (t) {
              return this.capture('navigation', { subtype: 'load' }, 'info', void 0, t && t.getTime());
            }),
            (r.prototype.captureConnectivityChange = function (t, e) {
              return this.captureNetwork({ change: t }, 'connectivity', e);
            }),
            (r.prototype._captureRollbarItem = function (t) {
              if (this.options.includeItemsInTelemetry)
                return t.err
                  ? this.captureError(t.err, t.level, t.uuid, t.timestamp)
                  : t.message
                  ? this.captureLog(t.message, t.level, t.uuid, t.timestamp)
                  : t.custom
                  ? this.capture('log', t.custom, t.level, t.uuid, t.timestamp)
                  : void 0;
            }),
            (r.prototype.push = function (t) {
              this.queue.push(t), this.queue.length > this.maxQueueSize && this.queue.shift();
            }),
            (t.exports = r);
        },
        function (t, e, n) {
          'use strict';
          var i = n(0),
            r = n(16),
            s = n(2),
            o = {
              hostname: 'api.rollbar.com',
              path: '/api/1/item/',
              search: null,
              version: '1',
              protocol: 'https:',
              port: 443,
            };
          function a(t, e, n, i) {
            (this.options = t),
              (this.transport = e),
              (this.url = n),
              (this.jsonBackup = i),
              (this.accessToken = t.accessToken),
              (this.transportOptions = c(t, n));
          }
          function c(t, e) {
            return r.getTransportFromOptions(t, o, e);
          }
          (a.prototype.postItem = function (t, e) {
            var n = r.transportOptions(this.transportOptions, 'POST'),
              i = r.buildPayload(this.accessToken, t, this.jsonBackup);
            this.transport.post(this.accessToken, n, i, e);
          }),
            (a.prototype.buildJsonPayload = function (t, e) {
              var n = r.buildPayload(this.accessToken, t, this.jsonBackup),
                i = s.truncate(n);
              return i.error ? (e && e(i.error), null) : i.value;
            }),
            (a.prototype.postJsonPayload = function (t, e) {
              var n = r.transportOptions(this.transportOptions, 'POST');
              this.transport.postJsonPayload(this.accessToken, n, t, e);
            }),
            (a.prototype.configure = function (t) {
              return (
                (this.options = i.merge(this.oldOptions, t)),
                (this.transportOptions = c(this.options, this.url)),
                void 0 !== this.options.accessToken && (this.accessToken = this.options.accessToken),
                this
              );
            }),
            (t.exports = a);
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          t.exports = {
            buildPayload: function (t, e, n) {
              if (!i.isType(e.context, 'string')) {
                var r = i.stringify(e.context, n);
                (e.context = r.error ? "Error: could not serialize 'context'" : r.value || ''),
                  e.context.length > 255 && (e.context = e.context.substr(0, 255));
              }
              return { access_token: t, data: e };
            },
            getTransportFromOptions: function (t, e, n) {
              var i = e.hostname,
                r = e.protocol,
                s = e.port,
                o = e.path,
                a = e.search,
                c = t.proxy;
              if (t.endpoint) {
                var l = n.parse(t.endpoint);
                (i = l.hostname), (r = l.protocol), (s = l.port), (o = l.pathname), (a = l.search);
              }
              return { hostname: i, protocol: r, port: s, path: o, search: a, proxy: c };
            },
            transportOptions: function (t, e) {
              var n = t.protocol || 'https:',
                i = t.port || ('http:' === n ? 80 : 'https:' === n ? 443 : void 0),
                r = t.hostname,
                s = t.path;
              return (
                t.search && (s += t.search),
                t.proxy &&
                  ((s = n + '//' + r + s),
                  (r = t.proxy.host || t.proxy.hostname),
                  (i = t.proxy.port),
                  (n = t.proxy.protocol || n)),
                { protocol: n, hostname: r, path: s, port: i, method: e }
              );
            },
            appendPathToPath: function (t, e) {
              var n = /\/$/.test(t),
                i = /^\//.test(e);
              return n && i ? (e = e.substring(1)) : n || i || (e = '/' + e), t + e;
            },
          };
        },
        function (t, e) {
          !(function (t) {
            'use strict';
            t.console || (t.console = {});
            for (
              var e,
                n,
                i = t.console,
                r = function () {},
                s = ['memory'],
                o = 'assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn'.split(
                  ','
                );
              (e = s.pop());

            )
              i[e] || (i[e] = {});
            for (; (n = o.pop()); ) i[n] || (i[n] = r);
          })('undefined' == typeof window ? this : window);
        },
        function (t, e, n) {
          'use strict';
          var i = {
            ieVersion: function () {
              if ('undefined' != typeof document) {
                for (
                  var t = 3, e = document.createElement('div'), n = e.getElementsByTagName('i');
                  (e.innerHTML = '\x3c!--[if gt IE ' + ++t + ']><i></i><![endif]--\x3e'), n[0];

                );
                return t > 4 ? t : void 0;
              }
            },
          };
          t.exports = i;
        },
        function (t, e, n) {
          'use strict';
          function i(t, e, n, i) {
            t._rollbarWrappedError &&
              (i[4] || (i[4] = t._rollbarWrappedError),
              i[5] || (i[5] = t._rollbarWrappedError._rollbarContext),
              (t._rollbarWrappedError = null));
            var r = e.handleUncaughtException.apply(e, i);
            n && n.apply(t, i), 'anonymous' === r && (e.anonymousErrorsPending += 1);
          }
          function r(t, e, n) {
            if (e.hasOwnProperty && e.hasOwnProperty('addEventListener')) {
              for (var i = e.addEventListener; i._rollbarOldAdd && i.belongsToShim; ) i = i._rollbarOldAdd;
              var r = function (e, n, r) {
                i.call(this, e, t.wrap(n), r);
              };
              (r._rollbarOldAdd = i), (r.belongsToShim = n), (e.addEventListener = r);
              for (var s = e.removeEventListener; s._rollbarOldRemove && s.belongsToShim; ) s = s._rollbarOldRemove;
              var o = function (t, e, n) {
                s.call(this, t, (e && e._rollbar_wrapped) || e, n);
              };
              (o._rollbarOldRemove = s), (o.belongsToShim = n), (e.removeEventListener = o);
            }
          }
          t.exports = {
            captureUncaughtExceptions: function (t, e, n) {
              if (t) {
                var r;
                if ('function' == typeof e._rollbarOldOnError) r = e._rollbarOldOnError;
                else if (t.onerror) {
                  for (r = t.onerror; r._rollbarOldOnError; ) r = r._rollbarOldOnError;
                  e._rollbarOldOnError = r;
                }
                e.handleAnonymousErrors();
                var s = function () {
                  var n = Array.prototype.slice.call(arguments, 0);
                  i(t, e, r, n);
                };
                n && (s._rollbarOldOnError = r), (t.onerror = s);
              }
            },
            captureUnhandledRejections: function (t, e, n) {
              if (t) {
                'function' == typeof t._rollbarURH &&
                  t._rollbarURH.belongsToShim &&
                  t.removeEventListener('unhandledrejection', t._rollbarURH);
                var i = function (t) {
                  var n, i, r;
                  try {
                    n = t.reason;
                  } catch (t) {
                    n = void 0;
                  }
                  try {
                    i = t.promise;
                  } catch (t) {
                    i = '[unhandledrejection] error getting `promise` from event';
                  }
                  try {
                    (r = t.detail), !n && r && ((n = r.reason), (i = r.promise));
                  } catch (t) {}
                  n || (n = '[unhandledrejection] error getting `reason` from event'),
                    e && e.handleUnhandledRejection && e.handleUnhandledRejection(n, i);
                };
                (i.belongsToShim = n), (t._rollbarURH = i), t.addEventListener('unhandledrejection', i);
              }
            },
            wrapGlobals: function (t, e, n) {
              if (t) {
                var i,
                  s,
                  o = 'EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload'.split(
                    ','
                  );
                for (i = 0; i < o.length; ++i) t[(s = o[i])] && t[s].prototype && r(e, t[s].prototype, n);
              }
            },
          };
        },
        function (t, e, n) {
          'use strict';
          var i = n(0),
            r = n(2),
            s = n(1);
          function o(t, e, n, i, r, s) {
            var o = ('undefined' != typeof window && window) || ('undefined' != typeof self && self),
              c = o && o.Zone && o.Zone.current;
            c && 'angular' === c._name
              ? c._parent.run(function () {
                  a(t, e, n, i, r, s);
                })
              : a(t, e, n, i, r, s);
          }
          function a(t, e, n, r, o, a) {
            if ('undefined' != typeof RollbarProxy)
              return (function (t, e) {
                new RollbarProxy().sendJsonPayload(
                  t,
                  function (t) {},
                  function (t) {
                    e(new Error(t));
                  }
                );
              })(r, o);
            var l;
            if (
              !(l = a
                ? a()
                : (function () {
                    var t,
                      e,
                      n = [
                        function () {
                          return new XMLHttpRequest();
                        },
                        function () {
                          return new ActiveXObject('Msxml2.XMLHTTP');
                        },
                        function () {
                          return new ActiveXObject('Msxml3.XMLHTTP');
                        },
                        function () {
                          return new ActiveXObject('Microsoft.XMLHTTP');
                        },
                      ],
                      i = n.length;
                    for (e = 0; e < i; e++)
                      try {
                        t = n[e]();
                        break;
                      } catch (t) {}
                    return t;
                  })())
            )
              return o(new Error('No way to send a request'));
            try {
              try {
                var u = function () {
                  try {
                    if (u && 4 === l.readyState) {
                      u = void 0;
                      var t = i.jsonParse(l.responseText);
                      if ((n = l) && n.status && 200 === n.status) return void o(t.error, t.value);
                      !(function (t) {
                        return t && i.isType(t.status, 'number') && t.status >= 400 && t.status < 600;
                      })(l)
                        ? o(c('XHR response had no status code (likely connection failure)'))
                        : (403 === l.status && s.error(t.value && t.value.message), o(new Error(String(l.status))));
                    }
                  } catch (t) {
                    var e;
                    (e = t && t.stack ? t : new Error(t)), o(e);
                  }
                  var n;
                };
                l.open(n, e, !0),
                  l.setRequestHeader &&
                    (l.setRequestHeader('Content-Type', 'application/json'),
                    l.setRequestHeader('X-Rollbar-Access-Token', t)),
                  (l.onreadystatechange = u),
                  l.send(r);
              } catch (t) {
                if ('undefined' != typeof XDomainRequest) {
                  if (!window || !window.location)
                    return o(new Error('No window available during request, unknown environment'));
                  'http:' === window.location.href.substring(0, 5) &&
                    'https' === e.substring(0, 5) &&
                    (e = 'http' + e.substring(5));
                  var h = new XDomainRequest();
                  (h.onprogress = function () {}),
                    (h.ontimeout = function () {
                      o(c('Request timed out', 'ETIMEDOUT'));
                    }),
                    (h.onerror = function () {
                      o(new Error('Error during request'));
                    }),
                    (h.onload = function () {
                      var t = i.jsonParse(h.responseText);
                      o(t.error, t.value);
                    }),
                    h.open(n, e, !0),
                    h.send(r);
                } else o(new Error('Cannot find a method to transport a request'));
              }
            } catch (t) {
              o(t);
            }
          }
          function c(t, e) {
            var n = new Error(t);
            return (n.code = e || 'ENOTFOUND'), n;
          }
          t.exports = {
            get: function (t, e, n, r, s) {
              (r && i.isFunction(r)) || (r = function () {}),
                i.addParamsAndAccessTokenToPath(t, e, n),
                o(t, i.formatUrl(e), 'GET', null, r, s);
            },
            post: function (t, e, n, s, a) {
              if (((s && i.isFunction(s)) || (s = function () {}), !n))
                return s(new Error('Cannot send empty request'));
              var c = r.truncate(n);
              if (c.error) return s(c.error);
              var l = c.value;
              o(t, i.formatUrl(e), 'POST', l, s, a);
            },
            postJsonPayload: function (t, e, n, r, s) {
              (r && i.isFunction(r)) || (r = function () {}), o(t, i.formatUrl(e), 'POST', n, r, s);
            },
          };
        },
        function (t, e, n) {
          'use strict';
          var i = n(0),
            r = n(4),
            s = n(1);
          function o(t, e, n) {
            var r = t.message,
              s = t.custom;
            r || (r = 'Item sent with null or missing arguments.');
            var o = { body: r };
            s && (o.extra = i.merge(s)), i.set(t, 'data.body', { message: o }), n(null, t);
          }
          function a(t) {
            var e = t.stackInfo.stack;
            return (
              e &&
                0 === e.length &&
                t._unhandledStackInfo &&
                t._unhandledStackInfo.stack &&
                (e = t._unhandledStackInfo.stack),
              e
            );
          }
          function c(t, e, n) {
            var s = t && t.data.description,
              o = t && t.custom,
              c = a(t),
              u = r.guessErrorClass(e.message),
              h = { exception: { class: l(e, u[0], n), message: u[1] } };
            if ((s && (h.exception.description = s), c)) {
              var d, p, f, m, g, b, _, y;
              for (
                0 === c.length && ((h.exception.stack = e.rawStack), (h.exception.raw = String(e.rawException))),
                  h.frames = [],
                  _ = 0;
                _ < c.length;
                ++_
              )
                (p = {
                  filename: (d = c[_]).url ? i.sanitizeUrl(d.url) : '(unknown)',
                  lineno: d.line || null,
                  method: d.func && '?' !== d.func ? d.func : '[anonymous]',
                  colno: d.column,
                }),
                  n.sendFrameUrl && (p.url = d.url),
                  (p.method && p.method.endsWith && p.method.endsWith('_rollbar_wrapped')) ||
                    ((f = m = g = null),
                    (b = d.context ? d.context.length : 0) &&
                      ((y = Math.floor(b / 2)),
                      (m = d.context.slice(0, y)),
                      (f = d.context[y]),
                      (g = d.context.slice(y))),
                    f && (p.code = f),
                    (m || g) &&
                      ((p.context = {}), m && m.length && (p.context.pre = m), g && g.length && (p.context.post = g)),
                    d.args && (p.args = d.args),
                    h.frames.push(p));
              h.frames.reverse(), o && (h.extra = i.merge(o));
            }
            return h;
          }
          function l(t, e, n) {
            return t.name ? t.name : n.guessErrorClass ? e : '(unknown)';
          }
          t.exports = {
            handleDomException: function (t, e, n) {
              if (t.err && 'DOMException' === r.Stack(t.err).name) {
                var i = new Error();
                (i.name = t.err.name),
                  (i.message = t.err.message),
                  (i.stack = t.err.stack),
                  (i.nested = t.err),
                  (t.err = i);
              }
              n(null, t);
            },
            handleItemWithError: function (t, e, n) {
              if (((t.data = t.data || {}), t.err))
                try {
                  t.stackInfo = t.err._savedStackTrace || r.parse(t.err, t.skipFrames);
                } catch (e) {
                  s.error('Error while parsing the error object.', e);
                  try {
                    t.message = t.err.message || t.err.description || t.message || String(t.err);
                  } catch (e) {
                    t.message = String(t.err) || String(e);
                  }
                  delete t.err;
                }
              n(null, t);
            },
            ensureItemHasSomethingToSay: function (t, e, n) {
              t.message || t.stackInfo || t.custom || n(new Error('No message, stack info, or custom data'), null),
                n(null, t);
            },
            addBaseInfo: function (t, e, n) {
              (t.data = i.merge(t.data, {
                environment: (e.payload && e.payload.environment) || e.environment,
                level: t.level,
                endpoint: e.endpoint,
                platform: 'browser',
                framework: 'browser-js',
                language: 'javascript',
                server: {},
                uuid: t.uuid,
                notifier: { name: 'rollbar-browser-js', version: e.version },
                custom: t.custom,
              })),
                n(null, t);
            },
            addRequestInfo: function (t) {
              return function (e, n, r) {
                if (!t || !t.location) return r(null, e);
                var s = '$remote_ip';
                n.captureIp ? !0 !== n.captureIp && (s += '_anonymize') : (s = null),
                  i.set(e, 'data.request', { url: t.location.href, query_string: t.location.search, user_ip: s }),
                  r(null, e);
              };
            },
            addClientInfo: function (t) {
              return function (e, n, r) {
                if (!t) return r(null, e);
                var s = t.navigator || {},
                  o = t.screen || {};
                i.set(e, 'data.client', {
                  runtime_ms: e.timestamp - t._rollbarStartTime,
                  timestamp: Math.round(e.timestamp / 1e3),
                  javascript: {
                    browser: s.userAgent,
                    language: s.language,
                    cookie_enabled: s.cookieEnabled,
                    screen: { width: o.width, height: o.height },
                  },
                }),
                  r(null, e);
              };
            },
            addPluginInfo: function (t) {
              return function (e, n, r) {
                if (!t || !t.navigator) return r(null, e);
                for (var s, o = [], a = t.navigator.plugins || [], c = 0, l = a.length; c < l; ++c)
                  o.push({ name: (s = a[c]).name, description: s.description });
                i.set(e, 'data.client.javascript.plugins', o), r(null, e);
              };
            },
            addBody: function (t, e, n) {
              t.stackInfo
                ? t.stackInfo.traceChain
                  ? (function (t, e, n) {
                      for (var r = t.stackInfo.traceChain, s = [], o = r.length, a = 0; a < o; a++) {
                        var l = c(t, r[a], e);
                        s.push(l);
                      }
                      i.set(t, 'data.body', { trace_chain: s }), n(null, t);
                    })(t, e, n)
                  : (function (t, e, n) {
                      if (a(t)) {
                        var s = c(t, t.stackInfo, e);
                        i.set(t, 'data.body', { trace: s }), n(null, t);
                      } else {
                        var u = t.stackInfo,
                          h = r.guessErrorClass(u.message),
                          d = l(u, h[0], e);
                        (t.message = d + ': ' + h[1]), o(t, 0, n);
                      }
                    })(t, e, n)
                : o(t, 0, n);
            },
            scrubPayload: function (t, e, n) {
              (t.data = i.scrub(t.data, e.scrubFields)), n(null, t);
            },
          };
        },
        function (t, e, n) {
          var i, r, s;
          !(function (o, a) {
            'use strict';
            (r = [n(23)]),
              void 0 ===
                (s =
                  'function' ==
                  typeof (i = function (t) {
                    var e = /(^|@)\S+:\d+/,
                      n = /^\s*at .*(\S+:\d+|\(native\))/m,
                      i = /^(eval@)?(\[native code])?$/;
                    return {
                      parse: function (t) {
                        if (void 0 !== t.stacktrace || void 0 !== t['opera#sourceloc']) return this.parseOpera(t);
                        if (t.stack && t.stack.match(n)) return this.parseV8OrIE(t);
                        if (t.stack) return this.parseFFOrSafari(t);
                        throw new Error('Cannot parse given Error object');
                      },
                      extractLocation: function (t) {
                        if (-1 === t.indexOf(':')) return [t];
                        var e = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(t.replace(/[()]/g, ''));
                        return [e[1], e[2] || void 0, e[3] || void 0];
                      },
                      parseV8OrIE: function (e) {
                        return e.stack
                          .split('\n')
                          .filter(function (t) {
                            return !!t.match(n);
                          }, this)
                          .map(function (e) {
                            e.indexOf('(eval ') > -1 &&
                              (e = e.replace(/eval code/g, 'eval').replace(/(\(eval at [^()]*)|(\),.*$)/g, ''));
                            var n = e.replace(/^\s+/, '').replace(/\(eval code/g, '('),
                              i = n.match(/ (\((.+):(\d+):(\d+)\)$)/),
                              r = (n = i ? n.replace(i[0], '') : n).split(/\s+/).slice(1),
                              s = this.extractLocation(i ? i[1] : r.pop()),
                              o = r.join(' ') || void 0,
                              a = ['eval', '<anonymous>'].indexOf(s[0]) > -1 ? void 0 : s[0];
                            return new t({
                              functionName: o,
                              fileName: a,
                              lineNumber: s[1],
                              columnNumber: s[2],
                              source: e,
                            });
                          }, this);
                      },
                      parseFFOrSafari: function (e) {
                        return e.stack
                          .split('\n')
                          .filter(function (t) {
                            return !t.match(i);
                          }, this)
                          .map(function (e) {
                            if (
                              (e.indexOf(' > eval') > -1 &&
                                (e = e.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ':$1')),
                              -1 === e.indexOf('@') && -1 === e.indexOf(':'))
                            )
                              return new t({ functionName: e });
                            var n = /((.*".+"[^@]*)?[^@]*)(?:@)/,
                              i = e.match(n),
                              r = i && i[1] ? i[1] : void 0,
                              s = this.extractLocation(e.replace(n, ''));
                            return new t({
                              functionName: r,
                              fileName: s[0],
                              lineNumber: s[1],
                              columnNumber: s[2],
                              source: e,
                            });
                          }, this);
                      },
                      parseOpera: function (t) {
                        return !t.stacktrace ||
                          (t.message.indexOf('\n') > -1 &&
                            t.message.split('\n').length > t.stacktrace.split('\n').length)
                          ? this.parseOpera9(t)
                          : t.stack
                          ? this.parseOpera11(t)
                          : this.parseOpera10(t);
                      },
                      parseOpera9: function (e) {
                        for (
                          var n = /Line (\d+).*script (?:in )?(\S+)/i,
                            i = e.message.split('\n'),
                            r = [],
                            s = 2,
                            o = i.length;
                          s < o;
                          s += 2
                        ) {
                          var a = n.exec(i[s]);
                          a && r.push(new t({ fileName: a[2], lineNumber: a[1], source: i[s] }));
                        }
                        return r;
                      },
                      parseOpera10: function (e) {
                        for (
                          var n = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,
                            i = e.stacktrace.split('\n'),
                            r = [],
                            s = 0,
                            o = i.length;
                          s < o;
                          s += 2
                        ) {
                          var a = n.exec(i[s]);
                          a &&
                            r.push(
                              new t({ functionName: a[3] || void 0, fileName: a[2], lineNumber: a[1], source: i[s] })
                            );
                        }
                        return r;
                      },
                      parseOpera11: function (n) {
                        return n.stack
                          .split('\n')
                          .filter(function (t) {
                            return !!t.match(e) && !t.match(/^Error created at/);
                          }, this)
                          .map(function (e) {
                            var n,
                              i = e.split('@'),
                              r = this.extractLocation(i.pop()),
                              s = i.shift() || '',
                              o = s.replace(/<anonymous function(: (\w+))?>/, '$2').replace(/\([^)]*\)/g, '') || void 0;
                            s.match(/\(([^)]*)\)/) && (n = s.replace(/^[^(]+\(([^)]*)\)$/, '$1'));
                            var a = void 0 === n || '[arguments not available]' === n ? void 0 : n.split(',');
                            return new t({
                              functionName: o,
                              args: a,
                              fileName: r[0],
                              lineNumber: r[1],
                              columnNumber: r[2],
                              source: e,
                            });
                          }, this);
                      },
                    };
                  })
                    ? i.apply(e, r)
                    : i) || (t.exports = s);
          })();
        },
        function (t, e, n) {
          var i, r, s;
          !(function (n, o) {
            'use strict';
            (r = []),
              void 0 ===
                (s =
                  'function' ==
                  typeof (i = function () {
                    function t(t) {
                      return t.charAt(0).toUpperCase() + t.substring(1);
                    }
                    function e(t) {
                      return function () {
                        return this[t];
                      };
                    }
                    var n = ['isConstructor', 'isEval', 'isNative', 'isToplevel'],
                      i = ['columnNumber', 'lineNumber'],
                      r = ['fileName', 'functionName', 'source'],
                      s = n.concat(i, r, ['args']);
                    function o(e) {
                      if (e) for (var n = 0; n < s.length; n++) void 0 !== e[s[n]] && this['set' + t(s[n])](e[s[n]]);
                    }
                    (o.prototype = {
                      getArgs: function () {
                        return this.args;
                      },
                      setArgs: function (t) {
                        if ('[object Array]' !== Object.prototype.toString.call(t))
                          throw new TypeError('Args must be an Array');
                        this.args = t;
                      },
                      getEvalOrigin: function () {
                        return this.evalOrigin;
                      },
                      setEvalOrigin: function (t) {
                        if (t instanceof o) this.evalOrigin = t;
                        else {
                          if (!(t instanceof Object))
                            throw new TypeError('Eval Origin must be an Object or StackFrame');
                          this.evalOrigin = new o(t);
                        }
                      },
                      toString: function () {
                        var t = this.getFileName() || '',
                          e = this.getLineNumber() || '',
                          n = this.getColumnNumber() || '',
                          i = this.getFunctionName() || '';
                        return this.getIsEval()
                          ? t
                            ? '[eval] (' + t + ':' + e + ':' + n + ')'
                            : '[eval]:' + e + ':' + n
                          : i
                          ? i + ' (' + t + ':' + e + ':' + n + ')'
                          : t + ':' + e + ':' + n;
                      },
                    }),
                      (o.fromString = function (t) {
                        var e = t.indexOf('('),
                          n = t.lastIndexOf(')'),
                          i = t.substring(0, e),
                          r = t.substring(e + 1, n).split(','),
                          s = t.substring(n + 1);
                        if (0 === s.indexOf('@'))
                          var a = /@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(s, ''),
                            c = a[1],
                            l = a[2],
                            u = a[3];
                        return new o({
                          functionName: i,
                          args: r || void 0,
                          fileName: c,
                          lineNumber: l || void 0,
                          columnNumber: u || void 0,
                        });
                      });
                    for (var a = 0; a < n.length; a++)
                      (o.prototype['get' + t(n[a])] = e(n[a])),
                        (o.prototype['set' + t(n[a])] = (function (t) {
                          return function (e) {
                            this[t] = Boolean(e);
                          };
                        })(n[a]));
                    for (var c = 0; c < i.length; c++)
                      (o.prototype['get' + t(i[c])] = e(i[c])),
                        (o.prototype['set' + t(i[c])] = (function (t) {
                          return function (e) {
                            if (((n = e), isNaN(parseFloat(n)) || !isFinite(n)))
                              throw new TypeError(t + ' must be a Number');
                            var n;
                            this[t] = Number(e);
                          };
                        })(i[c]));
                    for (var l = 0; l < r.length; l++)
                      (o.prototype['get' + t(r[l])] = e(r[l])),
                        (o.prototype['set' + t(r[l])] = (function (t) {
                          return function (e) {
                            this[t] = String(e);
                          };
                        })(r[l]));
                    return o;
                  })
                    ? i.apply(e, r)
                    : i) || (t.exports = s);
          })();
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          function r(t, e) {
            i.isFunction(t[e]) && (t[e] = t[e].toString());
          }
          t.exports = {
            itemToPayload: function (t, e, n) {
              var r = e.payload || {};
              r.body && delete r.body;
              var s = i.merge(t.data, r);
              t._isUncaught && (s._isUncaught = !0), t._originalArgs && (s._originalArgs = t._originalArgs), n(null, s);
            },
            addTelemetryData: function (t, e, n) {
              t.telemetryEvents && i.set(t, 'data.body.telemetry', t.telemetryEvents), n(null, t);
            },
            addMessageWithError: function (t, e, n) {
              if (t.message) {
                var r = 'data.body.trace_chain.0',
                  s = i.get(t, r);
                if ((s || (s = i.get(t, (r = 'data.body.trace'))), s)) {
                  if (!s.exception || !s.exception.description)
                    return i.set(t, r + '.exception.description', t.message), void n(null, t);
                  var o = i.get(t, r + '.extra') || {},
                    a = i.merge(o, { message: t.message });
                  i.set(t, r + '.extra', a);
                }
                n(null, t);
              } else n(null, t);
            },
            userTransform: function (t) {
              return function (e, n, r) {
                var s = i.merge(e);
                try {
                  i.isFunction(n.transform) && n.transform(s.data, e);
                } catch (i) {
                  return (
                    (n.transform = null),
                    t.error('Error while calling custom transform() function. Removing custom transform().', i),
                    void r(null, e)
                  );
                }
                r(null, s);
              };
            },
            addConfigToPayload: function (t, e, n) {
              if (!e.sendConfig) return n(null, t);
              var r = i.get(t, 'data.custom') || {};
              (r._rollbarConfig = e), (t.data.custom = r), n(null, t);
            },
            addConfiguredOptions: function (t, e, n) {
              var i = e._configuredOptions;
              r(i, 'transform'),
                r(i, 'checkIgnore'),
                r(i, 'onSendCallback'),
                delete i.accessToken,
                (t.data.notifier.configured_options = i),
                n(null, t);
            },
            addDiagnosticKeys: function (t, e, n) {
              var r = i.merge(t.notifier.client.notifier.diagnostic, t.diagnostic);
              if (
                (i.get(t, 'err._isAnonymous') && (r.is_anonymous = !0),
                t._isUncaught && ((r.is_uncaught = t._isUncaught), delete t._isUncaught),
                t.err)
              )
                try {
                  r.raw_error = {
                    message: t.err.message,
                    name: t.err.name,
                    constructor_name: t.err.constructor && t.err.constructor.name,
                    filename: t.err.fileName,
                    line: t.err.lineNumber,
                    column: t.err.columnNumber,
                    stack: t.err.stack,
                  };
                } catch (t) {
                  r.raw_error = { failed: String(t) };
                }
              (t.data.notifier.diagnostic = i.merge(t.data.notifier.diagnostic, r)), n(null, t);
            },
          };
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          t.exports = {
            checkIgnore: function (t, e) {
              return !i.get(e, 'plugins.jquery.ignoreAjaxErrors') || !i.get(t, 'body.message.extra.isAjax');
            },
          };
        },
        function (t, e, n) {
          'use strict';
          var i = n(0);
          function r(t, e, n) {
            if (!t) return !n;
            var r,
              s = t.frames;
            if (!s || 0 === s.length) return !n;
            for (var o = e.length, a = s.length, c = 0; c < a; c++) {
              if (!i.isType((r = s[c].filename), 'string')) return !n;
              for (var l = 0; l < o; l++) if (new RegExp(e[l]).test(r)) return !0;
            }
            return !1;
          }
          function s(t, e, n, s) {
            var o,
              a,
              c = !1;
            'blacklist' === n && (c = !0);
            try {
              if (
                ((o = c ? e.hostBlackList : e.hostWhiteList),
                (a = i.get(t, 'body.trace_chain') || [i.get(t, 'body.trace')]),
                !o || 0 === o.length)
              )
                return !c;
              if (0 === a.length || !a[0]) return !c;
              for (var l = a.length, u = 0; u < l; u++) if (r(a[u], o, c)) return !0;
            } catch (t) {
              c ? (e.hostBlackList = null) : (e.hostWhiteList = null);
              var h = c ? 'hostBlackList' : 'hostWhiteList';
              return (
                s.error("Error while reading your configuration's " + h + ' option. Removing custom ' + h + '.', t), !c
              );
            }
            return !1;
          }
          t.exports = {
            checkLevel: function (t, e) {
              return !((i.LEVELS[t.level] || 0) < (i.LEVELS[e.reportLevel] || 0));
            },
            userCheckIgnore: function (t) {
              return function (e, n) {
                var r = !!e._isUncaught,
                  s = e._originalArgs;
                delete e._originalArgs;
                try {
                  i.isFunction(n.onSendCallback) && n.onSendCallback(r, s, e);
                } catch (e) {
                  (n.onSendCallback = null), t.error('Error while calling onSendCallback, removing', e);
                }
                try {
                  if (i.isFunction(n.checkIgnore) && n.checkIgnore(r, s, e)) return !1;
                } catch (e) {
                  (n.checkIgnore = null), t.error('Error while calling custom checkIgnore(), removing', e);
                }
                return !0;
              };
            },
            urlIsNotBlacklisted: function (t) {
              return function (e, n) {
                return !s(e, n, 'blacklist', t);
              };
            },
            urlIsWhitelisted: function (t) {
              return function (e, n) {
                return s(e, n, 'whitelist', t);
              };
            },
            messageIsIgnored: function (t) {
              return function (e, n) {
                var r, s, o, a, c, l, u, h;
                try {
                  if (((c = !1), !(o = n.ignoredMessages) || 0 === o.length)) return !0;
                  if (
                    ((u = i.get((l = e.body), 'trace.exception.message')),
                    (h = i.get(l, 'message.body')),
                    !(r = u || h))
                  )
                    return !0;
                  for (a = o.length, s = 0; s < a && !(c = new RegExp(o[s], 'gi').test(r)); s++);
                } catch (e) {
                  (n.ignoredMessages = null),
                    t.error(
                      "Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages."
                    );
                }
                return !c;
              };
            },
          };
        },
        function (t, e, n) {
          'use strict';
          var i = n(0),
            r = n(3),
            s = n(28),
            o = {
              network: !0,
              networkResponseHeaders: !1,
              networkResponseBody: !1,
              networkRequestHeaders: !1,
              networkRequestBody: !1,
              networkErrorOnHttp5xx: !1,
              networkErrorOnHttp4xx: !1,
              networkErrorOnHttp0: !1,
              log: !0,
              dom: !0,
              navigation: !0,
              connectivity: !0,
            };
          function a(t, e, n, i, r) {
            var s = t[e];
            (t[e] = n(s)), i && i[r].push([t, e, s]);
          }
          function c(t, e) {
            for (var n; t[e].length; ) (n = t[e].shift())[0][n[1]] = n[2];
          }
          function l(t, e, n, r, s) {
            this.options = t;
            var a = t.autoInstrument;
            !1 === t.enabled || !1 === a
              ? (this.autoInstrument = {})
              : (i.isType(a, 'object') || (a = o), (this.autoInstrument = i.merge(o, a))),
              (this.scrubTelemetryInputs = !!t.scrubTelemetryInputs),
              (this.telemetryScrubber = t.telemetryScrubber),
              (this.defaultValueScrubber = (function (t) {
                for (var e = [], n = 0; n < t.length; ++n) e.push(new RegExp(t[n], 'i'));
                return function (t) {
                  var n = (function (t) {
                    if (!t || !t.attributes) return null;
                    for (var e = t.attributes, n = 0; n < e.length; ++n) if ('name' === e[n].key) return e[n].value;
                    return null;
                  })(t);
                  if (!n) return !1;
                  for (var i = 0; i < e.length; ++i) if (e[i].test(n)) return !0;
                  return !1;
                };
              })(t.scrubFields)),
              (this.telemeter = e),
              (this.rollbar = n),
              (this.diagnostic = n.client.notifier.diagnostic),
              (this._window = r || {}),
              (this._document = s || {}),
              (this.replacements = { network: [], log: [], navigation: [], connectivity: [] }),
              (this.eventRemovers = { dom: [], connectivity: [] }),
              (this._location = this._window.location),
              (this._lastHref = this._location && this._location.href);
          }
          (l.prototype.configure = function (t) {
            this.options = i.merge(this.options, t);
            var e = t.autoInstrument,
              n = i.merge(this.autoInstrument);
            !1 === t.enabled || !1 === e
              ? (this.autoInstrument = {})
              : (i.isType(e, 'object') || (e = o), (this.autoInstrument = i.merge(o, e))),
              this.instrument(n),
              void 0 !== t.scrubTelemetryInputs && (this.scrubTelemetryInputs = !!t.scrubTelemetryInputs),
              void 0 !== t.telemetryScrubber && (this.telemetryScrubber = t.telemetryScrubber);
          }),
            (l.prototype.instrument = function (t) {
              !this.autoInstrument.network || (t && t.network)
                ? !this.autoInstrument.network && t && t.network && this.deinstrumentNetwork()
                : this.instrumentNetwork(),
                !this.autoInstrument.log || (t && t.log)
                  ? !this.autoInstrument.log && t && t.log && this.deinstrumentConsole()
                  : this.instrumentConsole(),
                !this.autoInstrument.dom || (t && t.dom)
                  ? !this.autoInstrument.dom && t && t.dom && this.deinstrumentDom()
                  : this.instrumentDom(),
                !this.autoInstrument.navigation || (t && t.navigation)
                  ? !this.autoInstrument.navigation && t && t.navigation && this.deinstrumentNavigation()
                  : this.instrumentNavigation(),
                !this.autoInstrument.connectivity || (t && t.connectivity)
                  ? !this.autoInstrument.connectivity && t && t.connectivity && this.deinstrumentConnectivity()
                  : this.instrumentConnectivity();
            }),
            (l.prototype.deinstrumentNetwork = function () {
              c(this.replacements, 'network');
            }),
            (l.prototype.instrumentNetwork = function () {
              var t = this;
              function e(e, n) {
                e in n &&
                  i.isFunction(n[e]) &&
                  a(n, e, function (e) {
                    return t.rollbar.wrap(e);
                  });
              }
              if ('XMLHttpRequest' in this._window) {
                var n = this._window.XMLHttpRequest.prototype;
                a(
                  n,
                  'open',
                  function (e) {
                    return function (n, r) {
                      return (
                        i.isType(r, 'string') &&
                          ((this.__rollbar_xhr = {
                            method: n,
                            url: r,
                            status_code: null,
                            start_time_ms: i.now(),
                            end_time_ms: null,
                          }),
                          t.autoInstrument.networkRequestHeaders && (this.__rollbar_xhr.request_headers = {})),
                        e.apply(this, arguments)
                      );
                    };
                  },
                  this.replacements,
                  'network'
                ),
                  a(
                    n,
                    'setRequestHeader',
                    function (e) {
                      return function (n, r) {
                        return (
                          t.autoInstrument.networkRequestHeaders &&
                            this.__rollbar_xhr &&
                            i.isType(n, 'string') &&
                            i.isType(r, 'string') &&
                            (this.__rollbar_xhr.request_headers[n] = r),
                          'content-type' === n.toLowerCase() && (this.__rollbar_xhr.request_content_type = r),
                          e.apply(this, arguments)
                        );
                      };
                    },
                    this.replacements,
                    'network'
                  ),
                  a(
                    n,
                    'send',
                    function (n) {
                      return function (r) {
                        var s = this;
                        function o() {
                          if (
                            s.__rollbar_xhr &&
                            (null === s.__rollbar_xhr.status_code &&
                              ((s.__rollbar_xhr.status_code = 0),
                              t.autoInstrument.networkRequestBody && (s.__rollbar_xhr.request = r),
                              (s.__rollbar_event = t.captureNetwork(s.__rollbar_xhr, 'xhr', void 0))),
                            s.readyState < 2 && (s.__rollbar_xhr.start_time_ms = i.now()),
                            s.readyState > 3)
                          ) {
                            s.__rollbar_xhr.end_time_ms = i.now();
                            var e = null;
                            if (
                              ((s.__rollbar_xhr.response_content_type = s.getResponseHeader('Content-Type')),
                              t.autoInstrument.networkResponseHeaders)
                            ) {
                              var n = t.autoInstrument.networkResponseHeaders;
                              e = {};
                              try {
                                var o, a;
                                if (!0 === n) {
                                  var c = s.getAllResponseHeaders();
                                  if (c) {
                                    var l,
                                      u,
                                      h = c.trim().split(/[\r\n]+/);
                                    for (a = 0; a < h.length; a++)
                                      (o = (l = h[a].split(': ')).shift()), (u = l.join(': ')), (e[o] = u);
                                  }
                                } else for (a = 0; a < n.length; a++) e[(o = n[a])] = s.getResponseHeader(o);
                              } catch (t) {}
                            }
                            var d = null;
                            if (t.autoInstrument.networkResponseBody)
                              try {
                                d = s.responseText;
                              } catch (t) {}
                            var p = null;
                            (d || e) &&
                              ((p = {}),
                              d &&
                                (p.body = t.isJsonContentType(s.__rollbar_xhr.request_content_type)
                                  ? t.scrubJson(d)
                                  : d),
                              e && (p.headers = e)),
                              p && (s.__rollbar_xhr.response = p);
                            try {
                              var f = s.status;
                              (s.__rollbar_xhr.status_code = f = 1223 === f ? 204 : f),
                                (s.__rollbar_event.level = t.telemeter.levelFromStatus(f)),
                                t.errorOnHttpStatus(s.__rollbar_xhr);
                            } catch (t) {}
                          }
                        }
                        return (
                          e('onload', s),
                          e('onerror', s),
                          e('onprogress', s),
                          'onreadystatechange' in s && i.isFunction(s.onreadystatechange)
                            ? a(s, 'onreadystatechange', function (e) {
                                return t.rollbar.wrap(e, void 0, o);
                              })
                            : (s.onreadystatechange = o),
                          s.__rollbar_xhr && t.trackHttpErrors() && (s.__rollbar_xhr.stack = new Error().stack),
                          n.apply(this, arguments)
                        );
                      };
                    },
                    this.replacements,
                    'network'
                  );
              }
              'fetch' in this._window &&
                a(
                  this._window,
                  'fetch',
                  function (e) {
                    return function (n, r) {
                      for (var s = new Array(arguments.length), o = 0, a = s.length; o < a; o++) s[o] = arguments[o];
                      var c,
                        l = s[0],
                        u = 'GET';
                      i.isType(l, 'string') ? (c = l) : l && ((c = l.url), l.method && (u = l.method)),
                        s[1] && s[1].method && (u = s[1].method);
                      var h = { method: u, url: c, status_code: null, start_time_ms: i.now(), end_time_ms: null };
                      if (s[1] && s[1].headers) {
                        var d = new Headers(s[1].headers);
                        (h.request_content_type = d.get('Content-Type')),
                          t.autoInstrument.networkRequestHeaders &&
                            (h.request_headers = t.fetchHeaders(d, t.autoInstrument.networkRequestHeaders));
                      }
                      return (
                        t.autoInstrument.networkRequestBody &&
                          (s[1] && s[1].body
                            ? (h.request = s[1].body)
                            : s[0] && !i.isType(s[0], 'string') && s[0].body && (h.request = s[0].body)),
                        t.captureNetwork(h, 'fetch', void 0),
                        t.trackHttpErrors() && (h.stack = new Error().stack),
                        e.apply(this, s).then(function (e) {
                          (h.end_time_ms = i.now()),
                            (h.status_code = e.status),
                            (h.response_content_type = e.headers.get('Content-Type'));
                          var n = null;
                          t.autoInstrument.networkResponseHeaders &&
                            (n = t.fetchHeaders(e.headers, t.autoInstrument.networkResponseHeaders));
                          var r = null;
                          return (
                            t.autoInstrument.networkResponseBody && 'function' == typeof e.text && (r = e.text()),
                            (n || r) &&
                              ((h.response = {}),
                              r &&
                                ('function' == typeof r.then
                                  ? r.then(function (e) {
                                      t.isJsonContentType(h.response_content_type) &&
                                        (h.response.body = t.scrubJson(e));
                                    })
                                  : (h.response.body = r)),
                              n && (h.response.headers = n)),
                            t.errorOnHttpStatus(h),
                            e
                          );
                        })
                      );
                    };
                  },
                  this.replacements,
                  'network'
                );
            }),
            (l.prototype.captureNetwork = function (t, e, n) {
              return (
                t.request && this.isJsonContentType(t.request_content_type) && (t.request = this.scrubJson(t.request)),
                this.telemeter.captureNetwork(t, e, n)
              );
            }),
            (l.prototype.isJsonContentType = function (t) {
              return !(!t || !t.toLowerCase().includes('json'));
            }),
            (l.prototype.scrubJson = function (t) {
              return JSON.stringify(i.scrub(JSON.parse(t), this.options.scrubFields));
            }),
            (l.prototype.fetchHeaders = function (t, e) {
              var n = {};
              try {
                var i;
                if (!0 === e) {
                  if ('function' == typeof t.entries)
                    for (var r = t.entries(), s = r.next(); !s.done; ) (n[s.value[0]] = s.value[1]), (s = r.next());
                } else
                  for (i = 0; i < e.length; i++) {
                    var o = e[i];
                    n[o] = t.get(o);
                  }
              } catch (t) {}
              return n;
            }),
            (l.prototype.trackHttpErrors = function () {
              return (
                this.autoInstrument.networkErrorOnHttp5xx ||
                this.autoInstrument.networkErrorOnHttp4xx ||
                this.autoInstrument.networkErrorOnHttp0
              );
            }),
            (l.prototype.errorOnHttpStatus = function (t) {
              var e = t.status_code;
              if (
                (e >= 500 && this.autoInstrument.networkErrorOnHttp5xx) ||
                (e >= 400 && this.autoInstrument.networkErrorOnHttp4xx) ||
                (0 === e && this.autoInstrument.networkErrorOnHttp0)
              ) {
                var n = new Error('HTTP request failed with Status ' + e);
                (n.stack = t.stack), this.rollbar.error(n, { skipFrames: 1 });
              }
            }),
            (l.prototype.deinstrumentConsole = function () {
              if ('console' in this._window && this._window.console.log)
                for (var t; this.replacements.log.length; )
                  (t = this.replacements.log.shift()), (this._window.console[t[0]] = t[1]);
            }),
            (l.prototype.instrumentConsole = function () {
              if ('console' in this._window && this._window.console.log) {
                var t = this,
                  e = this._window.console,
                  n = ['debug', 'info', 'warn', 'error', 'log'];
                try {
                  for (var r = 0, s = n.length; r < s; r++) o(n[r]);
                } catch (t) {
                  this.diagnostic.instrumentConsole = { error: t.message };
                }
              }
              function o(n) {
                var r = e[n],
                  s = e,
                  o = 'warn' === n ? 'warning' : n;
                (e[n] = function () {
                  var e = Array.prototype.slice.call(arguments),
                    n = i.formatArgsAsString(e);
                  t.telemeter.captureLog(n, o), r && Function.prototype.apply.call(r, s, e);
                }),
                  t.replacements.log.push([n, r]);
              }
            }),
            (l.prototype.deinstrumentDom = function () {
              ('addEventListener' in this._window || 'attachEvent' in this._window) && this.removeListeners('dom');
            }),
            (l.prototype.instrumentDom = function () {
              if ('addEventListener' in this._window || 'attachEvent' in this._window) {
                var t = this.handleClick.bind(this),
                  e = this.handleBlur.bind(this);
                this.addListener('dom', this._window, 'click', 'onclick', t, !0),
                  this.addListener('dom', this._window, 'blur', 'onfocusout', e, !0);
              }
            }),
            (l.prototype.handleClick = function (t) {
              try {
                var e = s.getElementFromEvent(t, this._document),
                  n = e && e.tagName,
                  i = s.isDescribedElement(e, 'a') || s.isDescribedElement(e, 'button');
                n && (i || s.isDescribedElement(e, 'input', ['button', 'submit']))
                  ? this.captureDomEvent('click', e)
                  : s.isDescribedElement(e, 'input', ['checkbox', 'radio']) &&
                    this.captureDomEvent('input', e, e.value, e.checked);
              } catch (t) {}
            }),
            (l.prototype.handleBlur = function (t) {
              try {
                var e = s.getElementFromEvent(t, this._document);
                e &&
                  e.tagName &&
                  (s.isDescribedElement(e, 'textarea')
                    ? this.captureDomEvent('input', e, e.value)
                    : s.isDescribedElement(e, 'select') && e.options && e.options.length
                    ? this.handleSelectInputChanged(e)
                    : s.isDescribedElement(e, 'input') &&
                      !s.isDescribedElement(e, 'input', ['button', 'submit', 'hidden', 'checkbox', 'radio']) &&
                      this.captureDomEvent('input', e, e.value));
              } catch (t) {}
            }),
            (l.prototype.handleSelectInputChanged = function (t) {
              if (t.multiple)
                for (var e = 0; e < t.options.length; e++)
                  t.options[e].selected && this.captureDomEvent('input', t, t.options[e].value);
              else
                t.selectedIndex >= 0 &&
                  t.options[t.selectedIndex] &&
                  this.captureDomEvent('input', t, t.options[t.selectedIndex].value);
            }),
            (l.prototype.captureDomEvent = function (t, e, n, i) {
              if (void 0 !== n)
                if (this.scrubTelemetryInputs || 'password' === s.getElementType(e)) n = '[scrubbed]';
                else {
                  var r = s.describeElement(e);
                  this.telemetryScrubber
                    ? this.telemetryScrubber(r) && (n = '[scrubbed]')
                    : this.defaultValueScrubber(r) && (n = '[scrubbed]');
                }
              var o = s.elementArrayToString(s.treeToArray(e));
              this.telemeter.captureDom(t, o, n, i);
            }),
            (l.prototype.deinstrumentNavigation = function () {
              var t = this._window.chrome;
              !(t && t.app && t.app.runtime) &&
                this._window.history &&
                this._window.history.pushState &&
                c(this.replacements, 'navigation');
            }),
            (l.prototype.instrumentNavigation = function () {
              var t = this._window.chrome;
              if (!(t && t.app && t.app.runtime) && this._window.history && this._window.history.pushState) {
                var e = this;
                a(
                  this._window,
                  'onpopstate',
                  function (t) {
                    return function () {
                      var n = e._location.href;
                      e.handleUrlChange(e._lastHref, n), t && t.apply(this, arguments);
                    };
                  },
                  this.replacements,
                  'navigation'
                ),
                  a(
                    this._window.history,
                    'pushState',
                    function (t) {
                      return function () {
                        var n = arguments.length > 2 ? arguments[2] : void 0;
                        return n && e.handleUrlChange(e._lastHref, n + ''), t.apply(this, arguments);
                      };
                    },
                    this.replacements,
                    'navigation'
                  );
              }
            }),
            (l.prototype.handleUrlChange = function (t, e) {
              var n = r.parse(this._location.href),
                i = r.parse(e),
                s = r.parse(t);
              (this._lastHref = e),
                n.protocol === i.protocol && n.host === i.host && (e = i.path + (i.hash || '')),
                n.protocol === s.protocol && n.host === s.host && (t = s.path + (s.hash || '')),
                this.telemeter.captureNavigation(t, e);
            }),
            (l.prototype.deinstrumentConnectivity = function () {
              ('addEventListener' in this._window || 'body' in this._document) &&
                (this._window.addEventListener
                  ? this.removeListeners('connectivity')
                  : c(this.replacements, 'connectivity'));
            }),
            (l.prototype.instrumentConnectivity = function () {
              if ('addEventListener' in this._window || 'body' in this._document)
                if (this._window.addEventListener)
                  this.addListener(
                    'connectivity',
                    this._window,
                    'online',
                    void 0,
                    function () {
                      this.telemeter.captureConnectivityChange('online');
                    }.bind(this),
                    !0
                  ),
                    this.addListener(
                      'connectivity',
                      this._window,
                      'offline',
                      void 0,
                      function () {
                        this.telemeter.captureConnectivityChange('offline');
                      }.bind(this),
                      !0
                    );
                else {
                  var t = this;
                  a(
                    this._document.body,
                    'ononline',
                    function (e) {
                      return function () {
                        t.telemeter.captureConnectivityChange('online'), e && e.apply(this, arguments);
                      };
                    },
                    this.replacements,
                    'connectivity'
                  ),
                    a(
                      this._document.body,
                      'onoffline',
                      function (e) {
                        return function () {
                          t.telemeter.captureConnectivityChange('offline'), e && e.apply(this, arguments);
                        };
                      },
                      this.replacements,
                      'connectivity'
                    );
                }
            }),
            (l.prototype.addListener = function (t, e, n, i, r, s) {
              e.addEventListener
                ? (e.addEventListener(n, r, s),
                  this.eventRemovers[t].push(function () {
                    e.removeEventListener(n, r, s);
                  }))
                : i &&
                  (e.attachEvent(i, r),
                  this.eventRemovers[t].push(function () {
                    e.detachEvent(i, r);
                  }));
            }),
            (l.prototype.removeListeners = function (t) {
              for (; this.eventRemovers[t].length; ) this.eventRemovers[t].shift()();
            }),
            (t.exports = l);
        },
        function (t, e, n) {
          'use strict';
          function i(t) {
            return (t.getAttribute('type') || '').toLowerCase();
          }
          function r(t) {
            if (!t || !t.tagName) return '';
            var e = [t.tagName];
            t.id && e.push('#' + t.id), t.classes && e.push('.' + t.classes.join('.'));
            for (var n = 0; n < t.attributes.length; n++)
              e.push('[' + t.attributes[n].key + '="' + t.attributes[n].value + '"]');
            return e.join('');
          }
          function s(t) {
            if (!t || !t.tagName) return null;
            var e,
              n,
              i,
              r,
              s = {};
            (s.tagName = t.tagName.toLowerCase()),
              t.id && (s.id = t.id),
              (e = t.className) && 'string' == typeof e && (s.classes = e.split(/\s+/));
            var o = ['type', 'name', 'title', 'alt'];
            for (s.attributes = [], r = 0; r < o.length; r++)
              (i = t.getAttribute((n = o[r]))) && s.attributes.push({ key: n, value: i });
            return s;
          }
          t.exports = {
            describeElement: s,
            descriptionToString: r,
            elementArrayToString: function (t) {
              for (var e, n = ' > '.length, i = [], s = 0, o = t.length - 1; o >= 0; o--) {
                if (((e = r(t[o])), o < t.length - 1 && s + i.length * n + e.length >= 83)) {
                  i.unshift('...');
                  break;
                }
                i.unshift(e), (s += e.length);
              }
              return i.join(' > ');
            },
            treeToArray: function (t) {
              for (var e, n = [], i = 0; t && i < 5 && 'html' !== (e = s(t)).tagName; i++)
                n.unshift(e), (t = t.parentNode);
              return n;
            },
            getElementFromEvent: function (t, e) {
              return t.target ? t.target : e && e.elementFromPoint ? e.elementFromPoint(t.clientX, t.clientY) : void 0;
            },
            isDescribedElement: function (t, e, n) {
              if (t.tagName.toLowerCase() !== e.toLowerCase()) return !1;
              if (!n) return !0;
              t = i(t);
              for (var r = 0; r < n.length; r++) if (n[r] === t) return !0;
              return !1;
            },
            getElementType: i,
          };
        },
      ]);
    },
    gRHU: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('2fFW'),
        r = n('NJ4a');
      const s = {
        closed: !0,
        next(t) {},
        error(t) {
          if (i.a.useDeprecatedSynchronousErrorHandling) throw t;
          Object(r.a)(t);
        },
        complete() {},
      };
    },
    iQeY: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return g;
      });
      var i = n('fXoL'),
        r = n('ofXK'),
        s = n('sYmb');
      function o(t, e) {
        if ((1 & t && i.Wb(0, 'h1', 8), 2 & t)) {
          const t = i.nc(2);
          i.vc('translate', t.data);
        }
      }
      function a(t, e) {
        if ((1 & t && i.Wb(0, 'h2', 9), 2 & t)) {
          const t = i.nc(2);
          i.vc('translate', t.data);
        }
      }
      function c(t, e) {
        if ((1 & t && i.Wb(0, 'h3', 10), 2 & t)) {
          const t = i.nc(2);
          i.vc('translate', t.data);
        }
      }
      function l(t, e) {
        if ((1 & t && i.Wb(0, 'h4', 11), 2 & t)) {
          const t = i.nc(2);
          i.vc('translate', t.data);
        }
      }
      function u(t, e) {
        if (
          (1 & t &&
            (i.Zb(0, 3),
            i.Kc(1, o, 1, 1, 'h1', 4),
            i.Kc(2, a, 1, 1, 'h2', 5),
            i.Kc(3, c, 1, 1, 'h3', 6),
            i.Kc(4, l, 1, 1, 'h4', 7),
            i.Yb()),
          2 & t)
        ) {
          const t = i.nc();
          i.vc('ngSwitch', t.size),
            i.Ib(1),
            i.vc('ngSwitchCase', 1),
            i.Ib(1),
            i.vc('ngSwitchCase', 2),
            i.Ib(1),
            i.vc('ngSwitchCase', 3),
            i.Ib(1),
            i.vc('ngSwitchCase', 4);
        }
      }
      function h(t, e) {
        if ((1 & t && (i.Zb(0), i.Wb(1, 'p', 12), i.Yb()), 2 & t)) {
          const t = i.nc();
          i.Ib(1), i.Kb('mat-display-' + t.size), i.vc('translate', t.data);
        }
      }
      function d(t, e) {
        if ((1 & t && i.Wb(0, 'p', 12), 2 & t)) {
          const t = i.nc(2);
          i.Kb('mat-body-' + t.size), i.vc('translate', t.data);
        }
      }
      function p(t, e) {
        if ((1 & t && i.Wb(0, 'span', 15), 2 & t)) {
          const t = i.nc(2);
          i.vc('translate', t.data);
        }
      }
      function f(t, e) {
        if ((1 & t && (i.Zb(0, 3), i.Kc(1, d, 1, 3, 'p', 13), i.Kc(2, p, 1, 1, 'span', 14), i.Yb()), 2 & t)) {
          const t = i.nc();
          i.vc('ngSwitch', t.size), i.Ib(2), i.vc('ngSwitchCase', 3);
        }
      }
      const m = function (t) {
        return { 'disable-margin': t };
      };
      let g = (() => {
        class t {
          constructor() {
            (this.type = 'h'), (this.size = '3'), (this.margin = !0);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-typography']],
            inputs: { type: 'type', size: 'size', margin: 'margin', data: 'data' },
            decls: 4,
            vars: 7,
            consts: [
              [3, 'ngSwitch', 'ngClass'],
              [3, 'ngSwitch', 4, 'ngSwitchCase'],
              [4, 'ngSwitchCase'],
              [3, 'ngSwitch'],
              ['class', 'mat-h1', 3, 'translate', 4, 'ngSwitchCase'],
              ['class', 'mat-h2', 3, 'translate', 4, 'ngSwitchCase'],
              ['class', 'mat-h3', 3, 'translate', 4, 'ngSwitchCase'],
              ['class', 'mat-h4', 3, 'translate', 4, 'ngSwitchCase'],
              [1, 'mat-h1', 3, 'translate'],
              [1, 'mat-h2', 3, 'translate'],
              [1, 'mat-h3', 3, 'translate'],
              [1, 'mat-h4', 3, 'translate'],
              [3, 'translate'],
              [3, 'class', 'translate', 4, 'ngSwitchDefault'],
              ['class', 'mat-caption', 3, 'translate', 4, 'ngSwitchCase'],
              [1, 'mat-caption', 3, 'translate'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.bc(0, 'div', 0),
                i.Kc(1, u, 5, 5, 'ng-container', 1),
                i.Kc(2, h, 2, 3, 'ng-container', 2),
                i.Kc(3, f, 3, 2, 'ng-container', 1),
                i.ac()),
                2 & t &&
                  (i.vc('ngSwitch', e.type)('ngClass', i.xc(5, m, !e.margin)),
                  i.Ib(1),
                  i.vc('ngSwitchCase', 'h'),
                  i.Ib(1),
                  i.vc('ngSwitchCase', 'd'),
                  i.Ib(1),
                  i.vc('ngSwitchCase', 'p'));
            },
            directives: [r.n, r.i, r.o, s.a, r.p],
            styles: [
              '.disable-margin[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .disable-margin[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .disable-margin[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .disable-margin[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .disable-margin[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%], .mat-body-1[_ngcontent-%COMP%], .mat-body-2[_ngcontent-%COMP%], .mat-caption[_ngcontent-%COMP%]{margin:0}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    iadO: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return et;
      }),
        n.d(e, 'b', function () {
          return st;
        }),
        n.d(e, 'c', function () {
          return ot;
        });
      var i = n('u47x'),
        r = n('rDax'),
        s = n('+rOU'),
        o = n('ofXK'),
        a = n('fXoL'),
        c = n('bTqV'),
        l = n('0IaG'),
        u = n('vxfF'),
        h = n('FKr1'),
        d = n('XNiG'),
        p = n('quSY'),
        f = n('VRyK'),
        m = (n('LRne'), n('FtGj')),
        g = n('IzEk'),
        b = n('JX91'),
        _ = n('pLZG'),
        y = n('8LU1'),
        v = n('R0Ic'),
        w = n('3Pt+'),
        x = n('kmnG'),
        C = n('qFsG'),
        k = n('cH1L');
      const O = ['mat-calendar-body', ''];
      function S(t, e) {
        if ((1 & t && (a.bc(0, 'tr', 2), a.bc(1, 'td', 3), a.Mc(2), a.ac(), a.ac()), 2 & t)) {
          const t = a.nc();
          a.Ib(1),
            a.Jc('padding-top', t._cellPadding)('padding-bottom', t._cellPadding),
            a.Jb('colspan', t.numCols),
            a.Ib(1),
            a.Oc(' ', t.label, ' ');
        }
      }
      function E(t, e) {
        if ((1 & t && (a.bc(0, 'td', 7), a.Mc(1), a.ac()), 2 & t)) {
          const t = a.nc(2);
          a.Jc('padding-top', t._cellPadding)('padding-bottom', t._cellPadding),
            a.Jb('colspan', t._firstRowOffset),
            a.Ib(1),
            a.Oc(' ', t._firstRowOffset >= t.labelMinRequiredCells ? t.label : '', ' ');
        }
      }
      function T(t, e) {
        if (1 & t) {
          const t = a.cc();
          a.bc(0, 'td', 8),
            a.jc('click', function () {
              a.Dc(t);
              const n = e.$implicit;
              return a.nc(2)._cellClicked(n);
            }),
            a.bc(1, 'div', 9),
            a.Mc(2),
            a.ac(),
            a.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = e.index,
            i = a.nc().index,
            r = a.nc();
          a.Jc('width', r._cellWidth)('padding-top', r._cellPadding)('padding-bottom', r._cellPadding),
            a.Mb('mat-calendar-body-disabled', !t.enabled)('mat-calendar-body-active', r._isActiveCell(i, n)),
            a.vc('ngClass', t.cssClasses)('tabindex', r._isActiveCell(i, n) ? 0 : -1),
            a.Jb('aria-label', t.ariaLabel)('aria-disabled', !t.enabled || null)(
              'aria-selected',
              r.selectedValue === t.value
            ),
            a.Ib(1),
            a.Mb('mat-calendar-body-selected', r.selectedValue === t.value)(
              'mat-calendar-body-today',
              r.todayValue === t.value
            ),
            a.Ib(1),
            a.Oc(' ', t.displayValue, ' ');
        }
      }
      function I(t, e) {
        if ((1 & t && (a.bc(0, 'tr', 4), a.Kc(1, E, 2, 6, 'td', 5), a.Kc(2, T, 3, 20, 'td', 6), a.ac()), 2 & t)) {
          const t = e.$implicit,
            n = e.index,
            i = a.nc();
          a.Ib(1), a.vc('ngIf', 0 === n && i._firstRowOffset), a.Ib(1), a.vc('ngForOf', t);
        }
      }
      function A(t, e) {
        if ((1 & t && (a.bc(0, 'th', 5), a.Mc(1), a.ac()), 2 & t)) {
          const t = e.$implicit;
          a.Jb('aria-label', t.long), a.Ib(1), a.Nc(t.narrow);
        }
      }
      const D = ['*'];
      function j(t, e) {}
      function R(t, e) {
        if (1 & t) {
          const t = a.cc();
          a.bc(0, 'mat-month-view', 5),
            a.jc('activeDateChange', function (e) {
              return a.Dc(t), (a.nc().activeDate = e);
            })('selectedChange', function (e) {
              return a.Dc(t), a.nc()._dateSelected(e);
            })('_userSelection', function () {
              return a.Dc(t), a.nc()._userSelected();
            }),
            a.ac();
        }
        if (2 & t) {
          const t = a.nc();
          a.vc('activeDate', t.activeDate)('selected', t.selected)('dateFilter', t.dateFilter)('maxDate', t.maxDate)(
            'minDate',
            t.minDate
          )('dateClass', t.dateClass);
        }
      }
      function P(t, e) {
        if (1 & t) {
          const t = a.cc();
          a.bc(0, 'mat-year-view', 6),
            a.jc('activeDateChange', function (e) {
              return a.Dc(t), (a.nc().activeDate = e);
            })('monthSelected', function (e) {
              return a.Dc(t), a.nc()._monthSelectedInYearView(e);
            })('selectedChange', function (e) {
              return a.Dc(t), a.nc()._goToDateInView(e, 'month');
            }),
            a.ac();
        }
        if (2 & t) {
          const t = a.nc();
          a.vc('activeDate', t.activeDate)('selected', t.selected)('dateFilter', t.dateFilter)('maxDate', t.maxDate)(
            'minDate',
            t.minDate
          );
        }
      }
      function M(t, e) {
        if (1 & t) {
          const t = a.cc();
          a.bc(0, 'mat-multi-year-view', 7),
            a.jc('activeDateChange', function (e) {
              return a.Dc(t), (a.nc().activeDate = e);
            })('yearSelected', function (e) {
              return a.Dc(t), a.nc()._yearSelectedInMultiYearView(e);
            })('selectedChange', function (e) {
              return a.Dc(t), a.nc()._goToDateInView(e, 'year');
            }),
            a.ac();
        }
        if (2 & t) {
          const t = a.nc();
          a.vc('activeDate', t.activeDate)('selected', t.selected)('dateFilter', t.dateFilter)('maxDate', t.maxDate)(
            'minDate',
            t.minDate
          );
        }
      }
      function F(t) {
        return Error(
          `MatDatepicker: No provider found for ${t}. You must import one of the following ` +
            'modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a custom implementation.'
        );
      }
      let N = (() => {
        class t {
          constructor() {
            (this.changes = new d.a()),
              (this.calendarLabel = 'Calendar'),
              (this.openCalendarLabel = 'Open calendar'),
              (this.prevMonthLabel = 'Previous month'),
              (this.nextMonthLabel = 'Next month'),
              (this.prevYearLabel = 'Previous year'),
              (this.nextYearLabel = 'Next year'),
              (this.prevMultiYearLabel = 'Previous 20 years'),
              (this.nextMultiYearLabel = 'Next 20 years'),
              (this.switchToMonthViewLabel = 'Choose date'),
              (this.switchToMultiYearViewLabel = 'Choose month and year');
          }
          formatYearRange(t, e) {
            return `${t} \u2013 ${e}`;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = Object(a.Rb)({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class V {
        constructor(t, e, n, i, r = {}) {
          (this.value = t), (this.displayValue = e), (this.ariaLabel = n), (this.enabled = i), (this.cssClasses = r);
        }
      }
      let L = (() => {
          class t {
            constructor(t, e) {
              (this._elementRef = t),
                (this._ngZone = e),
                (this.numCols = 7),
                (this.activeCell = 0),
                (this.cellAspectRatio = 1),
                (this.selectedValueChange = new a.p());
            }
            _cellClicked(t) {
              t.enabled && this.selectedValueChange.emit(t.value);
            }
            ngOnChanges(t) {
              const e = t.numCols,
                { rows: n, numCols: i } = this;
              (t.rows || e) && (this._firstRowOffset = n && n.length && n[0].length ? i - n[0].length : 0),
                (t.cellAspectRatio || e || !this._cellPadding) &&
                  (this._cellPadding = `${(50 * this.cellAspectRatio) / i}%`),
                (!e && this._cellWidth) || (this._cellWidth = `${100 / i}%`);
            }
            _isActiveCell(t, e) {
              let n = t * this.numCols + e;
              return t && (n -= this._firstRowOffset), n == this.activeCell;
            }
            _focusActiveCell() {
              this._ngZone.runOutsideAngular(() => {
                this._ngZone.onStable
                  .asObservable()
                  .pipe(Object(g.a)(1))
                  .subscribe(() => {
                    const t = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');
                    t && t.focus();
                  });
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(a.B));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['', 'mat-calendar-body', '']],
              hostAttrs: ['role', 'grid', 'aria-readonly', 'true', 1, 'mat-calendar-body'],
              inputs: {
                numCols: 'numCols',
                activeCell: 'activeCell',
                cellAspectRatio: 'cellAspectRatio',
                label: 'label',
                rows: 'rows',
                todayValue: 'todayValue',
                selectedValue: 'selectedValue',
                labelMinRequiredCells: 'labelMinRequiredCells',
              },
              outputs: { selectedValueChange: 'selectedValueChange' },
              exportAs: ['matCalendarBody'],
              features: [a.Gb],
              attrs: O,
              decls: 2,
              vars: 2,
              consts: [
                ['aria-hidden', 'true', 4, 'ngIf'],
                ['role', 'row', 4, 'ngFor', 'ngForOf'],
                ['aria-hidden', 'true'],
                [1, 'mat-calendar-body-label'],
                ['role', 'row'],
                [
                  'aria-hidden',
                  'true',
                  'class',
                  'mat-calendar-body-label',
                  3,
                  'paddingTop',
                  'paddingBottom',
                  4,
                  'ngIf',
                ],
                [
                  'role',
                  'gridcell',
                  'class',
                  'mat-calendar-body-cell mat-focus-indicator',
                  3,
                  'ngClass',
                  'tabindex',
                  'mat-calendar-body-disabled',
                  'mat-calendar-body-active',
                  'width',
                  'paddingTop',
                  'paddingBottom',
                  'click',
                  4,
                  'ngFor',
                  'ngForOf',
                ],
                ['aria-hidden', 'true', 1, 'mat-calendar-body-label'],
                [
                  'role',
                  'gridcell',
                  1,
                  'mat-calendar-body-cell',
                  'mat-focus-indicator',
                  3,
                  'ngClass',
                  'tabindex',
                  'click',
                ],
                [1, 'mat-calendar-body-cell-content'],
              ],
              template: function (t, e) {
                1 & t && (a.Kc(0, S, 3, 6, 'tr', 0), a.Kc(1, I, 3, 2, 'tr', 1)),
                  2 & t &&
                    (a.vc('ngIf', e._firstRowOffset < e.labelMinRequiredCells), a.Ib(1), a.vc('ngForOf', e.rows));
              },
              directives: [o.l, o.k, o.i],
              styles: [
                '.mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        H = (() => {
          class t {
            constructor(t, e, n, i) {
              if (
                ((this._changeDetectorRef = t),
                (this._dateFormats = e),
                (this._dateAdapter = n),
                (this._dir = i),
                (this._rerenderSubscription = p.a.EMPTY),
                (this.selectedChange = new a.p()),
                (this._userSelection = new a.p()),
                (this.activeDateChange = new a.p()),
                !this._dateAdapter)
              )
                throw F('DateAdapter');
              if (!this._dateFormats) throw F('MAT_DATE_FORMATS');
              this._activeDate = this._dateAdapter.today();
            }
            get activeDate() {
              return this._activeDate;
            }
            set activeDate(t) {
              const e = this._activeDate,
                n = this._getValidDateOrNull(this._dateAdapter.deserialize(t)) || this._dateAdapter.today();
              (this._activeDate = this._dateAdapter.clampDate(n, this.minDate, this.maxDate)),
                this._hasSameMonthAndYear(e, this._activeDate) || this._init();
            }
            get selected() {
              return this._selected;
            }
            set selected(t) {
              (this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(t))),
                (this._selectedDate = this._getDateInCurrentMonth(this._selected));
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(t) {
              this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(t) {
              this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            ngAfterContentInit() {
              this._rerenderSubscription = this._dateAdapter.localeChanges
                .pipe(Object(b.a)(null))
                .subscribe(() => this._init());
            }
            ngOnDestroy() {
              this._rerenderSubscription.unsubscribe();
            }
            _dateSelected(t) {
              if (this._selectedDate != t) {
                const e = this._dateAdapter.getYear(this.activeDate),
                  n = this._dateAdapter.getMonth(this.activeDate),
                  i = this._dateAdapter.createDate(e, n, t);
                this.selectedChange.emit(i);
              }
              this._userSelection.emit();
            }
            _handleCalendarBodyKeydown(t) {
              const e = this._activeDate,
                n = this._isRtl();
              switch (t.keyCode) {
                case m.i:
                  this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, n ? 1 : -1);
                  break;
                case m.m:
                  this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, n ? -1 : 1);
                  break;
                case m.p:
                  this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);
                  break;
                case m.d:
                  this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);
                  break;
                case m.h:
                  this.activeDate = this._dateAdapter.addCalendarDays(
                    this._activeDate,
                    1 - this._dateAdapter.getDate(this._activeDate)
                  );
                  break;
                case m.e:
                  this.activeDate = this._dateAdapter.addCalendarDays(
                    this._activeDate,
                    this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate)
                  );
                  break;
                case m.l:
                  this.activeDate = t.altKey
                    ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
                    : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
                  break;
                case m.k:
                  this.activeDate = t.altKey
                    ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
                    : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
                  break;
                case m.f:
                case m.n:
                  return void (
                    (this.dateFilter && !this.dateFilter(this._activeDate)) ||
                    (this._dateSelected(this._dateAdapter.getDate(this._activeDate)),
                    this._userSelection.emit(),
                    t.preventDefault())
                  );
                default:
                  return;
              }
              this._dateAdapter.compareDate(e, this.activeDate) && this.activeDateChange.emit(this.activeDate),
                this._focusActiveCell(),
                t.preventDefault();
            }
            _init() {
              (this._selectedDate = this._getDateInCurrentMonth(this.selected)),
                (this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today())),
                (this._monthLabel = this._dateAdapter
                  .getMonthNames('short')
                  [this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase());
              let t = this._dateAdapter.createDate(
                this._dateAdapter.getYear(this.activeDate),
                this._dateAdapter.getMonth(this.activeDate),
                1
              );
              (this._firstWeekOffset =
                (7 + this._dateAdapter.getDayOfWeek(t) - this._dateAdapter.getFirstDayOfWeek()) % 7),
                this._initWeekdays(),
                this._createWeekCells(),
                this._changeDetectorRef.markForCheck();
            }
            _focusActiveCell() {
              this._matCalendarBody._focusActiveCell();
            }
            _initWeekdays() {
              const t = this._dateAdapter.getFirstDayOfWeek(),
                e = this._dateAdapter.getDayOfWeekNames('narrow');
              let n = this._dateAdapter.getDayOfWeekNames('long').map((t, n) => ({ long: t, narrow: e[n] }));
              this._weekdays = n.slice(t).concat(n.slice(0, t));
            }
            _createWeekCells() {
              const t = this._dateAdapter.getNumDaysInMonth(this.activeDate),
                e = this._dateAdapter.getDateNames();
              this._weeks = [[]];
              for (let n = 0, i = this._firstWeekOffset; n < t; n++, i++) {
                7 == i && (this._weeks.push([]), (i = 0));
                const t = this._dateAdapter.createDate(
                    this._dateAdapter.getYear(this.activeDate),
                    this._dateAdapter.getMonth(this.activeDate),
                    n + 1
                  ),
                  r = this._shouldEnableDate(t),
                  s = this._dateAdapter.format(t, this._dateFormats.display.dateA11yLabel),
                  o = this.dateClass ? this.dateClass(t) : void 0;
                this._weeks[this._weeks.length - 1].push(new V(n + 1, e[n], s, r, o));
              }
            }
            _shouldEnableDate(t) {
              return (
                !!t &&
                (!this.minDate || this._dateAdapter.compareDate(t, this.minDate) >= 0) &&
                (!this.maxDate || this._dateAdapter.compareDate(t, this.maxDate) <= 0) &&
                (!this.dateFilter || this.dateFilter(t))
              );
            }
            _getDateInCurrentMonth(t) {
              return t && this._hasSameMonthAndYear(t, this.activeDate) ? this._dateAdapter.getDate(t) : null;
            }
            _hasSameMonthAndYear(t, e) {
              return !(
                !t ||
                !e ||
                this._dateAdapter.getMonth(t) != this._dateAdapter.getMonth(e) ||
                this._dateAdapter.getYear(t) != this._dateAdapter.getYear(e)
              );
            }
            _getValidDateOrNull(t) {
              return this._dateAdapter.isDateInstance(t) && this._dateAdapter.isValid(t) ? t : null;
            }
            _isRtl() {
              return this._dir && 'rtl' === this._dir.value;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.i), a.Vb(h.c, 8), a.Vb(h.a, 8), a.Vb(k.b, 8));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-month-view']],
              viewQuery: function (t, e) {
                var n;
                1 & t && a.Rc(L, !0), 2 & t && a.Ac((n = a.kc())) && (e._matCalendarBody = n.first);
              },
              inputs: {
                activeDate: 'activeDate',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
              },
              outputs: {
                selectedChange: 'selectedChange',
                _userSelection: '_userSelection',
                activeDateChange: 'activeDateChange',
              },
              exportAs: ['matMonthView'],
              decls: 7,
              vars: 7,
              consts: [
                ['role', 'presentation', 1, 'mat-calendar-table'],
                [1, 'mat-calendar-table-header'],
                ['scope', 'col', 4, 'ngFor', 'ngForOf'],
                ['colspan', '7', 'aria-hidden', 'true', 1, 'mat-calendar-table-header-divider'],
                [
                  'mat-calendar-body',
                  '',
                  3,
                  'label',
                  'rows',
                  'todayValue',
                  'selectedValue',
                  'labelMinRequiredCells',
                  'activeCell',
                  'selectedValueChange',
                  'keydown',
                ],
                ['scope', 'col'],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.bc(0, 'table', 0),
                  a.bc(1, 'thead', 1),
                  a.bc(2, 'tr'),
                  a.Kc(3, A, 2, 2, 'th', 2),
                  a.ac(),
                  a.bc(4, 'tr'),
                  a.Wb(5, 'th', 3),
                  a.ac(),
                  a.ac(),
                  a.bc(6, 'tbody', 4),
                  a.jc('selectedValueChange', function (t) {
                    return e._dateSelected(t);
                  })('keydown', function (t) {
                    return e._handleCalendarBodyKeydown(t);
                  }),
                  a.ac(),
                  a.ac()),
                  2 & t &&
                    (a.Ib(3),
                    a.vc('ngForOf', e._weekdays),
                    a.Ib(3),
                    a.vc('label', e._monthLabel)('rows', e._weeks)('todayValue', e._todayDate)(
                      'selectedValue',
                      e._selectedDate
                    )('labelMinRequiredCells', 3)('activeCell', e._dateAdapter.getDate(e.activeDate) - 1));
              },
              directives: [o.k, L],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        z = (() => {
          class t {
            constructor(t, e, n) {
              if (
                ((this._changeDetectorRef = t),
                (this._dateAdapter = e),
                (this._dir = n),
                (this._rerenderSubscription = p.a.EMPTY),
                (this.selectedChange = new a.p()),
                (this.yearSelected = new a.p()),
                (this.activeDateChange = new a.p()),
                !this._dateAdapter)
              )
                throw F('DateAdapter');
              this._activeDate = this._dateAdapter.today();
            }
            get activeDate() {
              return this._activeDate;
            }
            set activeDate(t) {
              let e = this._activeDate;
              const n = this._getValidDateOrNull(this._dateAdapter.deserialize(t)) || this._dateAdapter.today();
              (this._activeDate = this._dateAdapter.clampDate(n, this.minDate, this.maxDate)),
                B(this._dateAdapter, e, this._activeDate, this.minDate, this.maxDate) || this._init();
            }
            get selected() {
              return this._selected;
            }
            set selected(t) {
              (this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(t))),
                (this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected));
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(t) {
              this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(t) {
              this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            ngAfterContentInit() {
              this._rerenderSubscription = this._dateAdapter.localeChanges
                .pipe(Object(b.a)(null))
                .subscribe(() => this._init());
            }
            ngOnDestroy() {
              this._rerenderSubscription.unsubscribe();
            }
            _init() {
              this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());
              const t =
                this._dateAdapter.getYear(this._activeDate) -
                U(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
              this._years = [];
              for (let e = 0, n = []; e < 24; e++)
                n.push(t + e), 4 == n.length && (this._years.push(n.map((t) => this._createCellForYear(t))), (n = []));
              this._changeDetectorRef.markForCheck();
            }
            _yearSelected(t) {
              this.yearSelected.emit(this._dateAdapter.createDate(t, 0, 1));
              let e = this._dateAdapter.getMonth(this.activeDate),
                n = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(t, e, 1));
              this.selectedChange.emit(
                this._dateAdapter.createDate(t, e, Math.min(this._dateAdapter.getDate(this.activeDate), n))
              );
            }
            _handleCalendarBodyKeydown(t) {
              const e = this._activeDate,
                n = this._isRtl();
              switch (t.keyCode) {
                case m.i:
                  this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, n ? 1 : -1);
                  break;
                case m.m:
                  this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, n ? -1 : 1);
                  break;
                case m.p:
                  this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -4);
                  break;
                case m.d:
                  this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, 4);
                  break;
                case m.h:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    -U(this._dateAdapter, this.activeDate, this.minDate, this.maxDate)
                  );
                  break;
                case m.e:
                  this.activeDate = this._dateAdapter.addCalendarYears(
                    this._activeDate,
                    24 - U(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1
                  );
                  break;
                case m.l:
                  this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, t.altKey ? -240 : -24);
                  break;
                case m.k:
                  this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, t.altKey ? 240 : 24);
                  break;
                case m.f:
                case m.n:
                  this._yearSelected(this._dateAdapter.getYear(this._activeDate));
                  break;
                default:
                  return;
              }
              this._dateAdapter.compareDate(e, this.activeDate) && this.activeDateChange.emit(this.activeDate),
                this._focusActiveCell(),
                t.preventDefault();
            }
            _getActiveCell() {
              return U(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
            }
            _focusActiveCell() {
              this._matCalendarBody._focusActiveCell();
            }
            _createCellForYear(t) {
              let e = this._dateAdapter.getYearName(this._dateAdapter.createDate(t, 0, 1));
              return new V(t, e, e, this._shouldEnableYear(t));
            }
            _shouldEnableYear(t) {
              if (
                null == t ||
                (this.maxDate && t > this._dateAdapter.getYear(this.maxDate)) ||
                (this.minDate && t < this._dateAdapter.getYear(this.minDate))
              )
                return !1;
              if (!this.dateFilter) return !0;
              for (
                let e = this._dateAdapter.createDate(t, 0, 1);
                this._dateAdapter.getYear(e) == t;
                e = this._dateAdapter.addCalendarDays(e, 1)
              )
                if (this.dateFilter(e)) return !0;
              return !1;
            }
            _getValidDateOrNull(t) {
              return this._dateAdapter.isDateInstance(t) && this._dateAdapter.isValid(t) ? t : null;
            }
            _isRtl() {
              return this._dir && 'rtl' === this._dir.value;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.i), a.Vb(h.a, 8), a.Vb(k.b, 8));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-multi-year-view']],
              viewQuery: function (t, e) {
                var n;
                1 & t && a.Rc(L, !0), 2 & t && a.Ac((n = a.kc())) && (e._matCalendarBody = n.first);
              },
              inputs: {
                activeDate: 'activeDate',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
              },
              outputs: {
                selectedChange: 'selectedChange',
                yearSelected: 'yearSelected',
                activeDateChange: 'activeDateChange',
              },
              exportAs: ['matMultiYearView'],
              decls: 5,
              vars: 6,
              consts: [
                ['role', 'presentation', 1, 'mat-calendar-table'],
                [1, 'mat-calendar-table-header'],
                ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
                [
                  'mat-calendar-body',
                  '',
                  3,
                  'rows',
                  'todayValue',
                  'selectedValue',
                  'numCols',
                  'cellAspectRatio',
                  'activeCell',
                  'selectedValueChange',
                  'keydown',
                ],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.bc(0, 'table', 0),
                  a.bc(1, 'thead', 1),
                  a.bc(2, 'tr'),
                  a.Wb(3, 'th', 2),
                  a.ac(),
                  a.ac(),
                  a.bc(4, 'tbody', 3),
                  a.jc('selectedValueChange', function (t) {
                    return e._yearSelected(t);
                  })('keydown', function (t) {
                    return e._handleCalendarBodyKeydown(t);
                  }),
                  a.ac(),
                  a.ac()),
                  2 & t &&
                    (a.Ib(4),
                    a.vc('rows', e._years)('todayValue', e._todayYear)('selectedValue', e._selectedYear)('numCols', 4)(
                      'cellAspectRatio',
                      4 / 7
                    )('activeCell', e._getActiveCell()));
              },
              directives: [L],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      function B(t, e, n, i, r) {
        const s = t.getYear(e),
          o = t.getYear(n),
          a = W(t, i, r);
        return Math.floor((s - a) / 24) === Math.floor((o - a) / 24);
      }
      function U(t, e, n, i) {
        return (((t.getYear(e) - W(t, n, i)) % 24) + 24) % 24;
      }
      function W(t, e, n) {
        let i = 0;
        return n ? (i = t.getYear(n) - 24 + 1) : e && (i = t.getYear(e)), i;
      }
      let $ = (() => {
          class t {
            constructor(t, e, n, i) {
              if (
                ((this._changeDetectorRef = t),
                (this._dateFormats = e),
                (this._dateAdapter = n),
                (this._dir = i),
                (this._rerenderSubscription = p.a.EMPTY),
                (this.selectedChange = new a.p()),
                (this.monthSelected = new a.p()),
                (this.activeDateChange = new a.p()),
                !this._dateAdapter)
              )
                throw F('DateAdapter');
              if (!this._dateFormats) throw F('MAT_DATE_FORMATS');
              this._activeDate = this._dateAdapter.today();
            }
            get activeDate() {
              return this._activeDate;
            }
            set activeDate(t) {
              let e = this._activeDate;
              const n = this._getValidDateOrNull(this._dateAdapter.deserialize(t)) || this._dateAdapter.today();
              (this._activeDate = this._dateAdapter.clampDate(n, this.minDate, this.maxDate)),
                this._dateAdapter.getYear(e) !== this._dateAdapter.getYear(this._activeDate) && this._init();
            }
            get selected() {
              return this._selected;
            }
            set selected(t) {
              (this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(t))),
                (this._selectedMonth = this._getMonthInCurrentYear(this._selected));
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(t) {
              this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(t) {
              this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            ngAfterContentInit() {
              this._rerenderSubscription = this._dateAdapter.localeChanges
                .pipe(Object(b.a)(null))
                .subscribe(() => this._init());
            }
            ngOnDestroy() {
              this._rerenderSubscription.unsubscribe();
            }
            _monthSelected(t) {
              const e = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), t, 1);
              this.monthSelected.emit(e);
              const n = this._dateAdapter.getNumDaysInMonth(e);
              this.selectedChange.emit(
                this._dateAdapter.createDate(
                  this._dateAdapter.getYear(this.activeDate),
                  t,
                  Math.min(this._dateAdapter.getDate(this.activeDate), n)
                )
              );
            }
            _handleCalendarBodyKeydown(t) {
              const e = this._activeDate,
                n = this._isRtl();
              switch (t.keyCode) {
                case m.i:
                  this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, n ? 1 : -1);
                  break;
                case m.m:
                  this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, n ? -1 : 1);
                  break;
                case m.p:
                  this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);
                  break;
                case m.d:
                  this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);
                  break;
                case m.h:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    -this._dateAdapter.getMonth(this._activeDate)
                  );
                  break;
                case m.e:
                  this.activeDate = this._dateAdapter.addCalendarMonths(
                    this._activeDate,
                    11 - this._dateAdapter.getMonth(this._activeDate)
                  );
                  break;
                case m.l:
                  this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, t.altKey ? -10 : -1);
                  break;
                case m.k:
                  this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, t.altKey ? 10 : 1);
                  break;
                case m.f:
                case m.n:
                  this._monthSelected(this._dateAdapter.getMonth(this._activeDate));
                  break;
                default:
                  return;
              }
              this._dateAdapter.compareDate(e, this.activeDate) && this.activeDateChange.emit(this.activeDate),
                this._focusActiveCell(),
                t.preventDefault();
            }
            _init() {
              (this._selectedMonth = this._getMonthInCurrentYear(this.selected)),
                (this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today())),
                (this._yearLabel = this._dateAdapter.getYearName(this.activeDate));
              let t = this._dateAdapter.getMonthNames('short');
              (this._months = [
                [0, 1, 2, 3],
                [4, 5, 6, 7],
                [8, 9, 10, 11],
              ].map((e) => e.map((e) => this._createCellForMonth(e, t[e])))),
                this._changeDetectorRef.markForCheck();
            }
            _focusActiveCell() {
              this._matCalendarBody._focusActiveCell();
            }
            _getMonthInCurrentYear(t) {
              return t && this._dateAdapter.getYear(t) == this._dateAdapter.getYear(this.activeDate)
                ? this._dateAdapter.getMonth(t)
                : null;
            }
            _createCellForMonth(t, e) {
              let n = this._dateAdapter.format(
                this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), t, 1),
                this._dateFormats.display.monthYearA11yLabel
              );
              return new V(t, e.toLocaleUpperCase(), n, this._shouldEnableMonth(t));
            }
            _shouldEnableMonth(t) {
              const e = this._dateAdapter.getYear(this.activeDate);
              if (null == t || this._isYearAndMonthAfterMaxDate(e, t) || this._isYearAndMonthBeforeMinDate(e, t))
                return !1;
              if (!this.dateFilter) return !0;
              for (
                let n = this._dateAdapter.createDate(e, t, 1);
                this._dateAdapter.getMonth(n) == t;
                n = this._dateAdapter.addCalendarDays(n, 1)
              )
                if (this.dateFilter(n)) return !0;
              return !1;
            }
            _isYearAndMonthAfterMaxDate(t, e) {
              if (this.maxDate) {
                const n = this._dateAdapter.getYear(this.maxDate),
                  i = this._dateAdapter.getMonth(this.maxDate);
                return t > n || (t === n && e > i);
              }
              return !1;
            }
            _isYearAndMonthBeforeMinDate(t, e) {
              if (this.minDate) {
                const n = this._dateAdapter.getYear(this.minDate),
                  i = this._dateAdapter.getMonth(this.minDate);
                return t < n || (t === n && e < i);
              }
              return !1;
            }
            _getValidDateOrNull(t) {
              return this._dateAdapter.isDateInstance(t) && this._dateAdapter.isValid(t) ? t : null;
            }
            _isRtl() {
              return this._dir && 'rtl' === this._dir.value;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.i), a.Vb(h.c, 8), a.Vb(h.a, 8), a.Vb(k.b, 8));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-year-view']],
              viewQuery: function (t, e) {
                var n;
                1 & t && a.Rc(L, !0), 2 & t && a.Ac((n = a.kc())) && (e._matCalendarBody = n.first);
              },
              inputs: {
                activeDate: 'activeDate',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                dateFilter: 'dateFilter',
              },
              outputs: {
                selectedChange: 'selectedChange',
                monthSelected: 'monthSelected',
                activeDateChange: 'activeDateChange',
              },
              exportAs: ['matYearView'],
              decls: 5,
              vars: 8,
              consts: [
                ['role', 'presentation', 1, 'mat-calendar-table'],
                [1, 'mat-calendar-table-header'],
                ['colspan', '4', 1, 'mat-calendar-table-header-divider'],
                [
                  'mat-calendar-body',
                  '',
                  3,
                  'label',
                  'rows',
                  'todayValue',
                  'selectedValue',
                  'labelMinRequiredCells',
                  'numCols',
                  'cellAspectRatio',
                  'activeCell',
                  'selectedValueChange',
                  'keydown',
                ],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.bc(0, 'table', 0),
                  a.bc(1, 'thead', 1),
                  a.bc(2, 'tr'),
                  a.Wb(3, 'th', 2),
                  a.ac(),
                  a.ac(),
                  a.bc(4, 'tbody', 3),
                  a.jc('selectedValueChange', function (t) {
                    return e._monthSelected(t);
                  })('keydown', function (t) {
                    return e._handleCalendarBodyKeydown(t);
                  }),
                  a.ac(),
                  a.ac()),
                  2 & t &&
                    (a.Ib(4),
                    a.vc('label', e._yearLabel)('rows', e._months)('todayValue', e._todayMonth)(
                      'selectedValue',
                      e._selectedMonth
                    )('labelMinRequiredCells', 2)('numCols', 4)('cellAspectRatio', 4 / 7)(
                      'activeCell',
                      e._dateAdapter.getMonth(e.activeDate)
                    ));
              },
              directives: [L],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        q = (() => {
          class t {
            constructor(t, e, n, i, r) {
              (this._intl = t),
                (this.calendar = e),
                (this._dateAdapter = n),
                (this._dateFormats = i),
                this.calendar.stateChanges.subscribe(() => r.markForCheck());
            }
            get periodButtonText() {
              if ('month' == this.calendar.currentView)
                return this._dateAdapter
                  .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)
                  .toLocaleUpperCase();
              if ('year' == this.calendar.currentView) return this._dateAdapter.getYearName(this.calendar.activeDate);
              const t =
                  this._dateAdapter.getYear(this.calendar.activeDate) -
                  U(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate),
                e = t + 24 - 1,
                n = this._dateAdapter.getYearName(this._dateAdapter.createDate(t, 0, 1)),
                i = this._dateAdapter.getYearName(this._dateAdapter.createDate(e, 0, 1));
              return this._intl.formatYearRange(n, i);
            }
            get periodButtonLabel() {
              return 'month' == this.calendar.currentView
                ? this._intl.switchToMultiYearViewLabel
                : this._intl.switchToMonthViewLabel;
            }
            get prevButtonLabel() {
              return {
                month: this._intl.prevMonthLabel,
                year: this._intl.prevYearLabel,
                'multi-year': this._intl.prevMultiYearLabel,
              }[this.calendar.currentView];
            }
            get nextButtonLabel() {
              return {
                month: this._intl.nextMonthLabel,
                year: this._intl.nextYearLabel,
                'multi-year': this._intl.nextMultiYearLabel,
              }[this.calendar.currentView];
            }
            currentPeriodClicked() {
              this.calendar.currentView = 'month' == this.calendar.currentView ? 'multi-year' : 'month';
            }
            previousClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? -1 : -24
                    );
            }
            nextClicked() {
              this.calendar.activeDate =
                'month' == this.calendar.currentView
                  ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)
                  : this._dateAdapter.addCalendarYears(
                      this.calendar.activeDate,
                      'year' == this.calendar.currentView ? 1 : 24
                    );
            }
            previousEnabled() {
              return (
                !this.calendar.minDate ||
                !this.calendar.minDate ||
                !this._isSameView(this.calendar.activeDate, this.calendar.minDate)
              );
            }
            nextEnabled() {
              return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);
            }
            _isSameView(t, e) {
              return 'month' == this.calendar.currentView
                ? this._dateAdapter.getYear(t) == this._dateAdapter.getYear(e) &&
                    this._dateAdapter.getMonth(t) == this._dateAdapter.getMonth(e)
                : 'year' == this.calendar.currentView
                ? this._dateAdapter.getYear(t) == this._dateAdapter.getYear(e)
                : B(this._dateAdapter, t, e, this.calendar.minDate, this.calendar.maxDate);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(N), a.Vb(Object(a.Y)(() => G)), a.Vb(h.a, 8), a.Vb(h.c, 8), a.Vb(a.i));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-calendar-header']],
              exportAs: ['matCalendarHeader'],
              ngContentSelectors: D,
              decls: 9,
              vars: 8,
              consts: [
                [1, 'mat-calendar-header'],
                [1, 'mat-calendar-controls'],
                [
                  'mat-button',
                  '',
                  'type',
                  'button',
                  'cdkAriaLive',
                  'polite',
                  1,
                  'mat-calendar-period-button',
                  3,
                  'click',
                ],
                [1, 'mat-calendar-arrow'],
                [1, 'mat-calendar-spacer'],
                ['mat-icon-button', '', 'type', 'button', 1, 'mat-calendar-previous-button', 3, 'disabled', 'click'],
                ['mat-icon-button', '', 'type', 'button', 1, 'mat-calendar-next-button', 3, 'disabled', 'click'],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.uc(),
                  a.bc(0, 'div', 0),
                  a.bc(1, 'div', 1),
                  a.bc(2, 'button', 2),
                  a.jc('click', function () {
                    return e.currentPeriodClicked();
                  }),
                  a.Mc(3),
                  a.Wb(4, 'div', 3),
                  a.ac(),
                  a.Wb(5, 'div', 4),
                  a.tc(6),
                  a.bc(7, 'button', 5),
                  a.jc('click', function () {
                    return e.previousClicked();
                  }),
                  a.ac(),
                  a.bc(8, 'button', 6),
                  a.jc('click', function () {
                    return e.nextClicked();
                  }),
                  a.ac(),
                  a.ac(),
                  a.ac()),
                  2 & t &&
                    (a.Ib(2),
                    a.Jb('aria-label', e.periodButtonLabel),
                    a.Ib(1),
                    a.Oc(' ', e.periodButtonText, ' '),
                    a.Ib(1),
                    a.Mb('mat-calendar-invert', 'month' != e.calendar.currentView),
                    a.Ib(3),
                    a.vc('disabled', !e.previousEnabled()),
                    a.Jb('aria-label', e.prevButtonLabel),
                    a.Ib(1),
                    a.vc('disabled', !e.nextEnabled()),
                    a.Jb('aria-label', e.nextButtonLabel));
              },
              directives: [c.a, i.c],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        G = (() => {
          class t {
            constructor(t, e, n, i) {
              if (
                ((this._dateAdapter = e),
                (this._dateFormats = n),
                (this._changeDetectorRef = i),
                (this._moveFocusOnNextTick = !1),
                (this.startView = 'month'),
                (this.selectedChange = new a.p()),
                (this.yearSelected = new a.p()),
                (this.monthSelected = new a.p()),
                (this._userSelection = new a.p()),
                (this.stateChanges = new d.a()),
                !this._dateAdapter)
              )
                throw F('DateAdapter');
              if (!this._dateFormats) throw F('MAT_DATE_FORMATS');
              this._intlChanges = t.changes.subscribe(() => {
                i.markForCheck(), this.stateChanges.next();
              });
            }
            get startAt() {
              return this._startAt;
            }
            set startAt(t) {
              this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            get selected() {
              return this._selected;
            }
            set selected(t) {
              this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(t) {
              this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(t) {
              this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            get activeDate() {
              return this._clampedActiveDate;
            }
            set activeDate(t) {
              (this._clampedActiveDate = this._dateAdapter.clampDate(t, this.minDate, this.maxDate)),
                this.stateChanges.next(),
                this._changeDetectorRef.markForCheck();
            }
            get currentView() {
              return this._currentView;
            }
            set currentView(t) {
              (this._currentView = t), (this._moveFocusOnNextTick = !0), this._changeDetectorRef.markForCheck();
            }
            ngAfterContentInit() {
              (this._calendarHeaderPortal = new s.d(this.headerComponent || q)),
                (this.activeDate = this.startAt || this._dateAdapter.today()),
                (this._currentView = this.startView);
            }
            ngAfterViewChecked() {
              this._moveFocusOnNextTick && ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe(), this.stateChanges.complete();
            }
            ngOnChanges(t) {
              const e = t.minDate || t.maxDate || t.dateFilter;
              if (e && !e.firstChange) {
                const t = this._getCurrentViewComponent();
                t && (this._changeDetectorRef.detectChanges(), t._init());
              }
              this.stateChanges.next();
            }
            focusActiveCell() {
              this._getCurrentViewComponent()._focusActiveCell();
            }
            updateTodaysDate() {
              const t = this.currentView;
              let e;
              (e = 'month' === t ? this.monthView : 'year' === t ? this.yearView : this.multiYearView), e._init();
            }
            _dateSelected(t) {
              t && !this._dateAdapter.sameDate(t, this.selected) && this.selectedChange.emit(t);
            }
            _yearSelectedInMultiYearView(t) {
              this.yearSelected.emit(t);
            }
            _monthSelectedInYearView(t) {
              this.monthSelected.emit(t);
            }
            _userSelected() {
              this._userSelection.emit();
            }
            _goToDateInView(t, e) {
              (this.activeDate = t), (this.currentView = e);
            }
            _getValidDateOrNull(t) {
              return this._dateAdapter.isDateInstance(t) && this._dateAdapter.isValid(t) ? t : null;
            }
            _getCurrentViewComponent() {
              return this.monthView || this.yearView || this.multiYearView;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(N), a.Vb(h.a, 8), a.Vb(h.c, 8), a.Vb(a.i));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-calendar']],
              viewQuery: function (t, e) {
                var n;
                1 & t && (a.Rc(H, !0), a.Rc($, !0), a.Rc(z, !0)),
                  2 & t &&
                    (a.Ac((n = a.kc())) && (e.monthView = n.first),
                    a.Ac((n = a.kc())) && (e.yearView = n.first),
                    a.Ac((n = a.kc())) && (e.multiYearView = n.first));
              },
              hostAttrs: [1, 'mat-calendar'],
              inputs: {
                startView: 'startView',
                startAt: 'startAt',
                selected: 'selected',
                minDate: 'minDate',
                maxDate: 'maxDate',
                headerComponent: 'headerComponent',
                dateFilter: 'dateFilter',
                dateClass: 'dateClass',
              },
              outputs: {
                selectedChange: 'selectedChange',
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                _userSelection: '_userSelection',
              },
              exportAs: ['matCalendar'],
              features: [a.Gb],
              decls: 5,
              vars: 5,
              consts: [
                [3, 'cdkPortalOutlet'],
                ['cdkMonitorSubtreeFocus', '', 'tabindex', '-1', 1, 'mat-calendar-content', 3, 'ngSwitch'],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'selectedChange',
                  '_userSelection',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                  4,
                  'ngSwitchCase',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'dateClass',
                  'activeDateChange',
                  'selectedChange',
                  '_userSelection',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'activeDateChange',
                  'monthSelected',
                  'selectedChange',
                ],
                [
                  3,
                  'activeDate',
                  'selected',
                  'dateFilter',
                  'maxDate',
                  'minDate',
                  'activeDateChange',
                  'yearSelected',
                  'selectedChange',
                ],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.Kc(0, j, 0, 0, 'ng-template', 0),
                  a.bc(1, 'div', 1),
                  a.Kc(2, R, 1, 6, 'mat-month-view', 2),
                  a.Kc(3, P, 1, 5, 'mat-year-view', 3),
                  a.Kc(4, M, 1, 5, 'mat-multi-year-view', 4),
                  a.ac()),
                  2 & t &&
                    (a.vc('cdkPortalOutlet', e._calendarHeaderPortal),
                    a.Ib(1),
                    a.vc('ngSwitch', e.currentView),
                    a.Ib(1),
                    a.vc('ngSwitchCase', 'month'),
                    a.Ib(1),
                    a.vc('ngSwitchCase', 'year'),
                    a.Ib(1),
                    a.vc('ngSwitchCase', 'multi-year'));
              },
              directives: [s.c, i.d, o.n, o.o, H, $, z],
              styles: [
                '.mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:"";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      const X = {
        transformPanel: Object(v.m)('transformPanel', [
          Object(v.j)('void', Object(v.k)({ opacity: 0, transform: 'scale(1, 0.8)' })),
          Object(v.l)(
            'void => enter',
            Object(v.e)('120ms cubic-bezier(0, 0, 0.2, 1)', Object(v.k)({ opacity: 1, transform: 'scale(1, 1)' }))
          ),
          Object(v.l)('* => void', Object(v.e)('100ms linear', Object(v.k)({ opacity: 0 }))),
        ]),
        fadeInCalendar: Object(v.m)('fadeInCalendar', [
          Object(v.j)('void', Object(v.k)({ opacity: 0 })),
          Object(v.j)('enter', Object(v.k)({ opacity: 1 })),
          Object(v.l)('void => *', Object(v.e)('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),
        ]),
      };
      let K = 0;
      const Y = new a.s('mat-datepicker-scroll-strategy'),
        Z = {
          provide: Y,
          deps: [r.c],
          useFactory: function (t) {
            return () => t.scrollStrategies.reposition();
          },
        };
      class Q {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const J = Object(h.v)(Q);
      let tt = (() => {
          class t extends J {
            constructor(t, e) {
              super(t),
                (this._changeDetectorRef = e),
                (this._animationState = 'enter'),
                (this._animationDone = new d.a());
            }
            ngAfterViewInit() {
              this._calendar.focusActiveCell();
            }
            ngOnDestroy() {
              this._animationDone.complete();
            }
            _startExitAnimation() {
              (this._animationState = 'void'), this._changeDetectorRef && this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(a.i));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-datepicker-content']],
              viewQuery: function (t, e) {
                var n;
                1 & t && a.Rc(G, !0), 2 & t && a.Ac((n = a.kc())) && (e._calendar = n.first);
              },
              hostAttrs: [1, 'mat-datepicker-content'],
              hostVars: 3,
              hostBindings: function (t, e) {
                1 & t &&
                  a.Nb('@transformPanel.done', function () {
                    return e._animationDone.next();
                  }),
                  2 & t &&
                    (a.Qc('@transformPanel', e._animationState),
                    a.Mb('mat-datepicker-content-touch', e.datepicker.touchUi));
              },
              inputs: { color: 'color' },
              exportAs: ['matDatepickerContent'],
              features: [a.Fb],
              decls: 1,
              vars: 11,
              consts: [
                [
                  'cdkTrapFocus',
                  '',
                  3,
                  'id',
                  'ngClass',
                  'startAt',
                  'startView',
                  'minDate',
                  'maxDate',
                  'dateFilter',
                  'headerComponent',
                  'selected',
                  'dateClass',
                  'selectedChange',
                  'yearSelected',
                  'monthSelected',
                  '_userSelection',
                ],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.bc(0, 'mat-calendar', 0),
                  a.jc('selectedChange', function (t) {
                    return e.datepicker.select(t);
                  })('yearSelected', function (t) {
                    return e.datepicker._selectYear(t);
                  })('monthSelected', function (t) {
                    return e.datepicker._selectMonth(t);
                  })('_userSelection', function () {
                    return e.datepicker.close();
                  }),
                  a.ac()),
                  2 & t &&
                    a.vc('id', e.datepicker.id)('ngClass', e.datepicker.panelClass)('startAt', e.datepicker.startAt)(
                      'startView',
                      e.datepicker.startView
                    )('minDate', e.datepicker._minDate)('maxDate', e.datepicker._maxDate)(
                      'dateFilter',
                      e.datepicker._dateFilter
                    )('headerComponent', e.datepicker.calendarHeaderComponent)('selected', e.datepicker._selected)(
                      'dateClass',
                      e.datepicker.dateClass
                    )('@fadeInCalendar', 'enter');
              },
              directives: [G, i.e, o.i],
              styles: [
                '.mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\n',
              ],
              encapsulation: 2,
              data: { animation: [X.transformPanel, X.fadeInCalendar] },
              changeDetection: 0,
            })),
            t
          );
        })(),
        et = (() => {
          class t {
            constructor(t, e, n, i, r, s, o, c) {
              if (
                ((this._dialog = t),
                (this._overlay = e),
                (this._ngZone = n),
                (this._viewContainerRef = i),
                (this._dateAdapter = s),
                (this._dir = o),
                (this._document = c),
                (this.startView = 'month'),
                (this._touchUi = !1),
                (this.yearSelected = new a.p()),
                (this.monthSelected = new a.p()),
                (this.openedStream = new a.p()),
                (this.closedStream = new a.p()),
                (this._opened = !1),
                (this.id = `mat-datepicker-${K++}`),
                (this._validSelected = null),
                (this._focusedElementBeforeOpen = null),
                (this._inputSubscription = p.a.EMPTY),
                (this._disabledChange = new d.a()),
                (this._selectedChanged = new d.a()),
                !this._dateAdapter)
              )
                throw F('DateAdapter');
              this._scrollStrategy = r;
            }
            get startAt() {
              return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);
            }
            set startAt(t) {
              this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(t));
            }
            get color() {
              return this._color || (this._datepickerInput ? this._datepickerInput._getThemePalette() : void 0);
            }
            set color(t) {
              this._color = t;
            }
            get touchUi() {
              return this._touchUi;
            }
            set touchUi(t) {
              this._touchUi = Object(y.c)(t);
            }
            get disabled() {
              return void 0 === this._disabled && this._datepickerInput
                ? this._datepickerInput.disabled
                : !!this._disabled;
            }
            set disabled(t) {
              const e = Object(y.c)(t);
              e !== this._disabled && ((this._disabled = e), this._disabledChange.next(e));
            }
            get opened() {
              return this._opened;
            }
            set opened(t) {
              t ? this.open() : this.close();
            }
            get _selected() {
              return this._validSelected;
            }
            set _selected(t) {
              this._validSelected = t;
            }
            get _minDate() {
              return this._datepickerInput && this._datepickerInput.min;
            }
            get _maxDate() {
              return this._datepickerInput && this._datepickerInput.max;
            }
            get _dateFilter() {
              return this._datepickerInput && this._datepickerInput._dateFilter;
            }
            ngOnDestroy() {
              this._destroyPopup(),
                this.close(),
                this._inputSubscription.unsubscribe(),
                this._disabledChange.complete();
            }
            select(t) {
              let e = this._selected;
              (this._selected = t), this._dateAdapter.sameDate(e, this._selected) || this._selectedChanged.next(t);
            }
            _selectYear(t) {
              this.yearSelected.emit(t);
            }
            _selectMonth(t) {
              this.monthSelected.emit(t);
            }
            _registerInput(t) {
              if (this._datepickerInput) throw Error('A MatDatepicker can only be associated with a single input.');
              (this._datepickerInput = t),
                (this._inputSubscription = this._datepickerInput._valueChange.subscribe((t) => (this._selected = t)));
            }
            open() {
              if (!this._opened && !this.disabled) {
                if (!this._datepickerInput) throw Error('Attempted to open an MatDatepicker with no associated input.');
                this._document && (this._focusedElementBeforeOpen = this._document.activeElement),
                  this.touchUi ? this._openAsDialog() : this._openAsPopup(),
                  (this._opened = !0),
                  this.openedStream.emit();
              }
            }
            close() {
              if (!this._opened) return;
              if (this._popupComponentRef && this._popupRef) {
                const t = this._popupComponentRef.instance;
                t._startExitAnimation(), t._animationDone.pipe(Object(g.a)(1)).subscribe(() => this._destroyPopup());
              }
              this._dialogRef && (this._dialogRef.close(), (this._dialogRef = null));
              const t = () => {
                this._opened &&
                  ((this._opened = !1), this.closedStream.emit(), (this._focusedElementBeforeOpen = null));
              };
              this._focusedElementBeforeOpen && 'function' == typeof this._focusedElementBeforeOpen.focus
                ? (this._focusedElementBeforeOpen.focus(), setTimeout(t))
                : t();
            }
            _openAsDialog() {
              this._dialogRef && this._dialogRef.close(),
                (this._dialogRef = this._dialog.open(tt, {
                  direction: this._dir ? this._dir.value : 'ltr',
                  viewContainerRef: this._viewContainerRef,
                  panelClass: 'mat-datepicker-dialog',
                  hasBackdrop: !0,
                  disableClose: !1,
                  width: '',
                  height: '',
                  minWidth: '',
                  minHeight: '',
                  maxWidth: '80vw',
                  maxHeight: '',
                  position: {},
                  autoFocus: !0,
                  restoreFocus: !1,
                })),
                this._dialogRef.afterClosed().subscribe(() => this.close()),
                (this._dialogRef.componentInstance.datepicker = this),
                (this._dialogRef.componentInstance.color = this.color);
            }
            _openAsPopup() {
              const t = new s.d(tt, this._viewContainerRef);
              this._destroyPopup(), this._createPopup();
              const e = (this._popupComponentRef = this._popupRef.attach(t));
              (e.instance.datepicker = this),
                (e.instance.color = this.color),
                this._ngZone.onStable
                  .asObservable()
                  .pipe(Object(g.a)(1))
                  .subscribe(() => {
                    this._popupRef.updatePosition();
                  });
            }
            _createPopup() {
              const t = new r.d({
                positionStrategy: this._createPopupPositionStrategy(),
                hasBackdrop: !0,
                backdropClass: 'mat-overlay-transparent-backdrop',
                direction: this._dir,
                scrollStrategy: this._scrollStrategy(),
                panelClass: 'mat-datepicker-popup',
              });
              (this._popupRef = this._overlay.create(t)),
                this._popupRef.overlayElement.setAttribute('role', 'dialog'),
                Object(f.a)(
                  this._popupRef.backdropClick(),
                  this._popupRef.detachments(),
                  this._popupRef
                    .keydownEvents()
                    .pipe(
                      Object(_.a)((t) => t.keyCode === m.g || (this._datepickerInput && t.altKey && t.keyCode === m.p))
                    )
                ).subscribe((t) => {
                  t && t.preventDefault(), this.close();
                });
            }
            _destroyPopup() {
              this._popupRef && (this._popupRef.dispose(), (this._popupRef = this._popupComponentRef = null));
            }
            _createPopupPositionStrategy() {
              return this._overlay
                .position()
                .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())
                .withTransformOriginOn('.mat-datepicker-content')
                .withFlexibleDimensions(!1)
                .withViewportMargin(8)
                .withLockedPosition()
                .withPositions([
                  { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },
                  { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },
                  { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },
                  { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },
                ]);
            }
            _getValidDateOrNull(t) {
              return this._dateAdapter.isDateInstance(t) && this._dateAdapter.isValid(t) ? t : null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                a.Vb(l.b),
                a.Vb(r.c),
                a.Vb(a.B),
                a.Vb(a.S),
                a.Vb(Y),
                a.Vb(h.a, 8),
                a.Vb(k.b, 8),
                a.Vb(o.d, 8)
              );
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-datepicker']],
              inputs: {
                startView: 'startView',
                startAt: 'startAt',
                color: 'color',
                touchUi: 'touchUi',
                disabled: 'disabled',
                opened: 'opened',
                calendarHeaderComponent: 'calendarHeaderComponent',
                panelClass: 'panelClass',
                dateClass: 'dateClass',
              },
              outputs: {
                yearSelected: 'yearSelected',
                monthSelected: 'monthSelected',
                openedStream: 'opened',
                closedStream: 'closed',
              },
              exportAs: ['matDatepicker'],
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      const nt = { provide: w.l, useExisting: Object(a.Y)(() => st), multi: !0 },
        it = { provide: w.k, useExisting: Object(a.Y)(() => st), multi: !0 };
      class rt {
        constructor(t, e) {
          (this.target = t), (this.targetElement = e), (this.value = this.target.value);
        }
      }
      let st = (() => {
          class t {
            constructor(t, e, n, i) {
              if (
                ((this._elementRef = t),
                (this._dateAdapter = e),
                (this._dateFormats = n),
                (this._formField = i),
                (this.dateChange = new a.p()),
                (this.dateInput = new a.p()),
                (this._valueChange = new a.p()),
                (this._disabledChange = new a.p()),
                (this._onTouched = () => {}),
                (this._cvaOnChange = () => {}),
                (this._validatorOnChange = () => {}),
                (this._datepickerSubscription = p.a.EMPTY),
                (this._localeSubscription = p.a.EMPTY),
                (this._parseValidator = () =>
                  this._lastValueValid ? null : { matDatepickerParse: { text: this._elementRef.nativeElement.value } }),
                (this._minValidator = (t) => {
                  const e = this._getValidDateOrNull(this._dateAdapter.deserialize(t.value));
                  return !this.min || !e || this._dateAdapter.compareDate(this.min, e) <= 0
                    ? null
                    : { matDatepickerMin: { min: this.min, actual: e } };
                }),
                (this._maxValidator = (t) => {
                  const e = this._getValidDateOrNull(this._dateAdapter.deserialize(t.value));
                  return !this.max || !e || this._dateAdapter.compareDate(this.max, e) >= 0
                    ? null
                    : { matDatepickerMax: { max: this.max, actual: e } };
                }),
                (this._filterValidator = (t) => {
                  const e = this._getValidDateOrNull(this._dateAdapter.deserialize(t.value));
                  return this._dateFilter && e && !this._dateFilter(e) ? { matDatepickerFilter: !0 } : null;
                }),
                (this._validator = w.u.compose([
                  this._parseValidator,
                  this._minValidator,
                  this._maxValidator,
                  this._filterValidator,
                ])),
                (this._lastValueValid = !1),
                !this._dateAdapter)
              )
                throw F('DateAdapter');
              if (!this._dateFormats) throw F('MAT_DATE_FORMATS');
              this._localeSubscription = e.localeChanges.subscribe(() => {
                this.value = this.value;
              });
            }
            set matDatepicker(t) {
              t &&
                ((this._datepicker = t),
                this._datepicker._registerInput(this),
                this._datepickerSubscription.unsubscribe(),
                (this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((t) => {
                  (this.value = t),
                    this._cvaOnChange(t),
                    this._onTouched(),
                    this.dateInput.emit(new rt(this, this._elementRef.nativeElement)),
                    this.dateChange.emit(new rt(this, this._elementRef.nativeElement));
                })));
            }
            set matDatepickerFilter(t) {
              (this._dateFilter = t), this._validatorOnChange();
            }
            get value() {
              return this._value;
            }
            set value(t) {
              (t = this._dateAdapter.deserialize(t)),
                (this._lastValueValid = !t || this._dateAdapter.isValid(t)),
                (t = this._getValidDateOrNull(t));
              const e = this.value;
              (this._value = t), this._formatValue(t), this._dateAdapter.sameDate(e, t) || this._valueChange.emit(t);
            }
            get min() {
              return this._min;
            }
            set min(t) {
              (this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(t))), this._validatorOnChange();
            }
            get max() {
              return this._max;
            }
            set max(t) {
              (this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(t))), this._validatorOnChange();
            }
            get disabled() {
              return !!this._disabled;
            }
            set disabled(t) {
              const e = Object(y.c)(t),
                n = this._elementRef.nativeElement;
              this._disabled !== e && ((this._disabled = e), this._disabledChange.emit(e)),
                e && this._isInitialized && n.blur && n.blur();
            }
            ngAfterViewInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              this._datepickerSubscription.unsubscribe(),
                this._localeSubscription.unsubscribe(),
                this._valueChange.complete(),
                this._disabledChange.complete();
            }
            registerOnValidatorChange(t) {
              this._validatorOnChange = t;
            }
            validate(t) {
              return this._validator ? this._validator(t) : null;
            }
            getPopupConnectionElementRef() {
              return this.getConnectedOverlayOrigin();
            }
            getConnectedOverlayOrigin() {
              return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;
            }
            writeValue(t) {
              this.value = t;
            }
            registerOnChange(t) {
              this._cvaOnChange = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            setDisabledState(t) {
              this.disabled = t;
            }
            _onKeydown(t) {
              this._datepicker &&
                t.altKey &&
                t.keyCode === m.d &&
                !this._elementRef.nativeElement.readOnly &&
                (this._datepicker.open(), t.preventDefault());
            }
            _onInput(t) {
              const e = this._lastValueValid;
              let n = this._dateAdapter.parse(t, this._dateFormats.parse.dateInput);
              (this._lastValueValid = !n || this._dateAdapter.isValid(n)),
                (n = this._getValidDateOrNull(n)),
                this._dateAdapter.sameDate(n, this._value)
                  ? e !== this._lastValueValid && this._validatorOnChange()
                  : ((this._value = n),
                    this._cvaOnChange(n),
                    this._valueChange.emit(n),
                    this.dateInput.emit(new rt(this, this._elementRef.nativeElement)));
            }
            _onChange() {
              this.dateChange.emit(new rt(this, this._elementRef.nativeElement));
            }
            _getThemePalette() {
              return this._formField ? this._formField.color : void 0;
            }
            _onBlur() {
              this.value && this._formatValue(this.value), this._onTouched();
            }
            _formatValue(t) {
              this._elementRef.nativeElement.value = t
                ? this._dateAdapter.format(t, this._dateFormats.display.dateInput)
                : '';
            }
            _getValidDateOrNull(t) {
              return this._dateAdapter.isDateInstance(t) && this._dateAdapter.isValid(t) ? t : null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(h.a, 8), a.Vb(h.c, 8), a.Vb(x.a, 8));
            }),
            (t.ɵdir = a.Qb({
              type: t,
              selectors: [['input', 'matDatepicker', '']],
              hostVars: 5,
              hostBindings: function (t, e) {
                1 & t &&
                  a.jc('input', function (t) {
                    return e._onInput(t.target.value);
                  })('change', function () {
                    return e._onChange();
                  })('blur', function () {
                    return e._onBlur();
                  })('keydown', function (t) {
                    return e._onKeydown(t);
                  }),
                  2 & t &&
                    (a.ec('disabled', e.disabled),
                    a.Jb('aria-haspopup', e._datepicker ? 'dialog' : null)(
                      'aria-owns',
                      ((null == e._datepicker ? null : e._datepicker.opened) && e._datepicker.id) || null
                    )('min', e.min ? e._dateAdapter.toIso8601(e.min) : null)(
                      'max',
                      e.max ? e._dateAdapter.toIso8601(e.max) : null
                    ));
              },
              inputs: {
                value: 'value',
                matDatepicker: 'matDatepicker',
                matDatepickerFilter: 'matDatepickerFilter',
                min: 'min',
                max: 'max',
                disabled: 'disabled',
              },
              outputs: { dateChange: 'dateChange', dateInput: 'dateInput' },
              exportAs: ['matDatepickerInput'],
              features: [a.Hb([nt, it, { provide: C.a, useExisting: t }])],
            })),
            t
          );
        })(),
        ot = (() => {
          class t {}
          return (
            (t.ɵmod = a.Tb({ type: t })),
            (t.ɵinj = a.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [N, Z],
              imports: [[o.c, c.b, l.c, r.f, i.a, s.g], u.b],
            })),
            t
          );
        })();
    },
    ihCf: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return p;
      }),
        n.d(e, 'b', function () {
          return f;
        }),
        n.d(e, 'c', function () {
          return m;
        });
      var i = n('nLfN'),
        r = n('fXoL'),
        s = n('8LU1'),
        o = n('EY2u'),
        a = n('XNiG'),
        c = n('xgIS'),
        l = n('3UWI'),
        u = n('1G5W'),
        h = n('ofXK');
      const d = Object(i.f)({ passive: !0 });
      let p = (() => {
          class t {
            constructor(t, e) {
              (this._platform = t), (this._ngZone = e), (this._monitoredElements = new Map());
            }
            monitor(t) {
              if (!this._platform.isBrowser) return o.a;
              const e = Object(s.e)(t),
                n = this._monitoredElements.get(e);
              if (n) return n.subject.asObservable();
              const i = new a.a(),
                r = 'cdk-text-field-autofilled',
                c = (t) => {
                  'cdk-text-field-autofill-start' !== t.animationName || e.classList.contains(r)
                    ? 'cdk-text-field-autofill-end' === t.animationName &&
                      e.classList.contains(r) &&
                      (e.classList.remove(r), this._ngZone.run(() => i.next({ target: t.target, isAutofilled: !1 })))
                    : (e.classList.add(r), this._ngZone.run(() => i.next({ target: t.target, isAutofilled: !0 })));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  e.addEventListener('animationstart', c, d), e.classList.add('cdk-text-field-autofill-monitored');
                }),
                this._monitoredElements.set(e, {
                  subject: i,
                  unlisten: () => {
                    e.removeEventListener('animationstart', c, d);
                  },
                }),
                i.asObservable()
              );
            }
            stopMonitoring(t) {
              const e = Object(s.e)(t),
                n = this._monitoredElements.get(e);
              n &&
                (n.unlisten(),
                n.subject.complete(),
                e.classList.remove('cdk-text-field-autofill-monitored'),
                e.classList.remove('cdk-text-field-autofilled'),
                this._monitoredElements.delete(e));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((t, e) => this.stopMonitoring(e));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(i.a), r.fc(r.B));
            }),
            (t.ɵprov = Object(r.Rb)({
              factory: function () {
                return new t(Object(r.fc)(i.a), Object(r.fc)(r.B));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        f = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._elementRef = t),
                (this._platform = e),
                (this._ngZone = n),
                (this._destroyed = new a.a()),
                (this._enabled = !0),
                (this._previousMinRows = -1),
                (this._document = i),
                (this._textareaElement = this._elementRef.nativeElement),
                (this._measuringClass = e.FIREFOX
                  ? 'cdk-textarea-autosize-measuring-firefox'
                  : 'cdk-textarea-autosize-measuring');
            }
            get minRows() {
              return this._minRows;
            }
            set minRows(t) {
              (this._minRows = Object(s.f)(t)), this._setMinHeight();
            }
            get maxRows() {
              return this._maxRows;
            }
            set maxRows(t) {
              (this._maxRows = Object(s.f)(t)), this._setMaxHeight();
            }
            get enabled() {
              return this._enabled;
            }
            set enabled(t) {
              (t = Object(s.c)(t)),
                this._enabled !== t && ((this._enabled = t) ? this.resizeToFitContent(!0) : this.reset());
            }
            _setMinHeight() {
              const t = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;
              t && (this._textareaElement.style.minHeight = t);
            }
            _setMaxHeight() {
              const t = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;
              t && (this._textareaElement.style.maxHeight = t);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                ((this._initialHeight = this._textareaElement.style.height),
                this.resizeToFitContent(),
                this._ngZone.runOutsideAngular(() => {
                  const t = this._getWindow();
                  Object(c.a)(t, 'resize')
                    .pipe(Object(l.a)(16), Object(u.a)(this._destroyed))
                    .subscribe(() => this.resizeToFitContent(!0));
                }));
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _cacheTextareaLineHeight() {
              if (this._cachedLineHeight) return;
              let t = this._textareaElement.cloneNode(!1);
              (t.rows = 1),
                (t.style.position = 'absolute'),
                (t.style.visibility = 'hidden'),
                (t.style.border = 'none'),
                (t.style.padding = '0'),
                (t.style.height = ''),
                (t.style.minHeight = ''),
                (t.style.maxHeight = ''),
                (t.style.overflow = 'hidden'),
                this._textareaElement.parentNode.appendChild(t),
                (this._cachedLineHeight = t.clientHeight),
                this._textareaElement.parentNode.removeChild(t),
                this._setMinHeight(),
                this._setMaxHeight();
            }
            ngDoCheck() {
              this._platform.isBrowser && this.resizeToFitContent();
            }
            resizeToFitContent(t = !1) {
              if (!this._enabled) return;
              if ((this._cacheTextareaLineHeight(), !this._cachedLineHeight)) return;
              const e = this._elementRef.nativeElement,
                n = e.value;
              if (!t && this._minRows === this._previousMinRows && n === this._previousValue) return;
              const i = e.placeholder;
              e.classList.add(this._measuringClass),
                (e.placeholder = ''),
                (e.style.height = `${e.scrollHeight - 4}px`),
                e.classList.remove(this._measuringClass),
                (e.placeholder = i),
                this._ngZone.runOutsideAngular(() => {
                  'undefined' != typeof requestAnimationFrame
                    ? requestAnimationFrame(() => this._scrollToCaretPosition(e))
                    : setTimeout(() => this._scrollToCaretPosition(e));
                }),
                (this._previousValue = n),
                (this._previousMinRows = this._minRows);
            }
            reset() {
              void 0 !== this._initialHeight && (this._textareaElement.style.height = this._initialHeight);
            }
            _noopInputHandler() {}
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _scrollToCaretPosition(t) {
              const { selectionStart: e, selectionEnd: n } = t,
                i = this._getDocument();
              this._destroyed.isStopped || i.activeElement !== t || t.setSelectionRange(e, n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m), r.Vb(i.a), r.Vb(r.B), r.Vb(h.d, 8));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['textarea', 'cdkTextareaAutosize', '']],
              hostAttrs: ['rows', '1', 1, 'cdk-textarea-autosize'],
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('input', function () {
                    return e._noopInputHandler();
                  });
              },
              inputs: {
                minRows: ['cdkAutosizeMinRows', 'minRows'],
                maxRows: ['cdkAutosizeMaxRows', 'maxRows'],
                enabled: ['cdkTextareaAutosize', 'enabled'],
              },
              exportAs: ['cdkTextareaAutosize'],
            })),
            t
          );
        })(),
        m = (() => {
          class t {}
          return (
            (t.ɵmod = r.Tb({ type: t })),
            (t.ɵinj = r.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[i.b]],
            })),
            t
          );
        })();
    },
    itXk: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('z+Ro'),
        r = n('DH7j'),
        s = n('l7GE'),
        o = n('ZUHj'),
        a = n('yCtX');
      const c = {};
      function l(...t) {
        let e = null,
          n = null;
        return (
          Object(i.a)(t[t.length - 1]) && (n = t.pop()),
          'function' == typeof t[t.length - 1] && (e = t.pop()),
          1 === t.length && Object(r.a)(t[0]) && (t = t[0]),
          Object(a.a)(t, n).lift(new u(e))
        );
      }
      class u {
        constructor(t) {
          this.resultSelector = t;
        }
        call(t, e) {
          return e.subscribe(new h(t, this.resultSelector));
        }
      }
      class h extends s.a {
        constructor(t, e) {
          super(t), (this.resultSelector = e), (this.active = 0), (this.values = []), (this.observables = []);
        }
        _next(t) {
          this.values.push(c), this.observables.push(t);
        }
        _complete() {
          const t = this.observables,
            e = t.length;
          if (0 === e) this.destination.complete();
          else {
            (this.active = e), (this.toRespond = e);
            for (let n = 0; n < e; n++) {
              const e = t[n];
              this.add(Object(o.a)(this, e, e, n));
            }
          }
        }
        notifyComplete(t) {
          0 == (this.active -= 1) && this.destination.complete();
        }
        notifyNext(t, e, n, i, r) {
          const s = this.values,
            o = this.toRespond ? (s[n] === c ? --this.toRespond : this.toRespond) : 0;
          (s[n] = e), 0 === o && (this.resultSelector ? this._tryResultSelector(s) : this.destination.next(s.slice()));
        }
        _tryResultSelector(t) {
          let e;
          try {
            e = this.resultSelector.apply(this, t);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(e);
        }
      }
    },
    jETI: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (t) => t;
    },
    jZKg: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('HDdC'),
        r = n('quSY');
      function s(t, e) {
        return new i.a((n) => {
          const i = new r.a();
          let s = 0;
          return (
            i.add(
              e.schedule(function () {
                s !== t.length ? (n.next(t[s++]), n.closed || i.add(this.schedule())) : n.complete();
              })
            ),
            i
          );
        });
      }
    },
    jhN1: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return V;
      }),
        n.d(e, 'b', function () {
          return j;
        }),
        n.d(e, 'c', function () {
          return S;
        }),
        n.d(e, 'd', function () {
          return F;
        }),
        n.d(e, 'e', function () {
          return w;
        });
      var i = n('ofXK'),
        r = n('fXoL');
      class s extends i.y {
        constructor() {
          super();
        }
        supportsDOMEvents() {
          return !0;
        }
      }
      class o extends s {
        static makeCurrent() {
          Object(i.C)(new o());
        }
        getProperty(t, e) {
          return t[e];
        }
        log(t) {
          window.console && window.console.log && window.console.log(t);
        }
        logGroup(t) {
          window.console && window.console.group && window.console.group(t);
        }
        logGroupEnd() {
          window.console && window.console.groupEnd && window.console.groupEnd();
        }
        onAndCancel(t, e, n) {
          return (
            t.addEventListener(e, n, !1),
            () => {
              t.removeEventListener(e, n, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          return t.parentNode && t.parentNode.removeChild(t), t;
        }
        getValue(t) {
          return t.value;
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return 'window' === e ? window : 'document' === e ? t : 'body' === e ? t.body : null;
        }
        getHistory() {
          return window.history;
        }
        getLocation() {
          return window.location;
        }
        getBaseHref(t) {
          const e = c || ((c = document.querySelector('base')), c) ? c.getAttribute('href') : null;
          return null == e
            ? null
            : ((n = e),
              a || (a = document.createElement('a')),
              a.setAttribute('href', n),
              '/' === a.pathname.charAt(0) ? a.pathname : '/' + a.pathname);
          var n;
        }
        resetBaseElement() {
          c = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        performanceNow() {
          return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();
        }
        supportsCookies() {
          return !0;
        }
        getCookie(t) {
          return Object(i.B)(document.cookie, t);
        }
      }
      let a,
        c = null;
      const l = new r.s('TRANSITION_ID'),
        u = [
          {
            provide: r.d,
            useFactory: function (t, e, n) {
              return () => {
                n.get(r.e).donePromise.then(() => {
                  const n = Object(i.A)();
                  Array.prototype.slice
                    .apply(e.querySelectorAll('style[ng-transition]'))
                    .filter((e) => e.getAttribute('ng-transition') === t)
                    .forEach((t) => n.remove(t));
                });
              };
            },
            deps: [l, i.d, r.t],
            multi: !0,
          },
        ];
      class h {
        static init() {
          Object(r.db)(new h());
        }
        addToWindow(t) {
          (r.wb.getAngularTestability = (e, n = !0) => {
            const i = t.findTestabilityInTree(e, n);
            if (null == i) throw new Error('Could not find testability for element.');
            return i;
          }),
            (r.wb.getAllAngularTestabilities = () => t.getAllTestabilities()),
            (r.wb.getAllAngularRootElements = () => t.getAllRootElements()),
            r.wb.frameworkStabilizers || (r.wb.frameworkStabilizers = []),
            r.wb.frameworkStabilizers.push((t) => {
              const e = r.wb.getAllAngularTestabilities();
              let n = e.length,
                i = !1;
              const s = function (e) {
                (i = i || e), n--, 0 == n && t(i);
              };
              e.forEach(function (t) {
                t.whenStable(s);
              });
            });
        }
        findTestabilityInTree(t, e, n) {
          if (null == e) return null;
          const r = t.getTestability(e);
          return null != r
            ? r
            : n
            ? Object(i.A)().isShadowRoot(e)
              ? this.findTestabilityInTree(t, e.host, !0)
              : this.findTestabilityInTree(t, e.parentElement, !0)
            : null;
        }
      }
      const d = new r.s('EventManagerPlugins');
      let p = (() => {
        class t {
          constructor(t, e) {
            (this._zone = e),
              (this._eventNameToPlugin = new Map()),
              t.forEach((t) => (t.manager = this)),
              (this._plugins = t.slice().reverse());
          }
          addEventListener(t, e, n) {
            return this._findPluginFor(e).addEventListener(t, e, n);
          }
          addGlobalEventListener(t, e, n) {
            return this._findPluginFor(e).addGlobalEventListener(t, e, n);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(t) {
            const e = this._eventNameToPlugin.get(t);
            if (e) return e;
            const n = this._plugins;
            for (let i = 0; i < n.length; i++) {
              const e = n[i];
              if (e.supports(t)) return this._eventNameToPlugin.set(t, e), e;
            }
            throw new Error(`No event manager plugin found for event ${t}`);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(d), r.fc(r.B));
          }),
          (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class f {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, n) {
          const r = Object(i.A)().getGlobalEventTarget(this._doc, t);
          if (!r) throw new Error(`Unsupported event target ${r} for event ${e}`);
          return this.addEventListener(r, e, n);
        }
      }
      let m = (() => {
          class t {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(t) {
              const e = new Set();
              t.forEach((t) => {
                this._stylesSet.has(t) || (this._stylesSet.add(t), e.add(t));
              }),
                this.onStylesAdded(e);
            }
            onStylesAdded(t) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        g = (() => {
          class t extends m {
            constructor(t) {
              super(),
                (this._doc = t),
                (this._hostNodes = new Set()),
                (this._styleNodes = new Set()),
                this._hostNodes.add(t.head);
            }
            _addStylesToHost(t, e) {
              t.forEach((t) => {
                const n = this._doc.createElement('style');
                (n.textContent = t), this._styleNodes.add(e.appendChild(n));
              });
            }
            addHost(t) {
              this._addStylesToHost(this._stylesSet, t), this._hostNodes.add(t);
            }
            removeHost(t) {
              this._hostNodes.delete(t);
            }
            onStylesAdded(t) {
              this._hostNodes.forEach((e) => this._addStylesToHost(t, e));
            }
            ngOnDestroy() {
              this._styleNodes.forEach((t) => Object(i.A)().remove(t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(i.d));
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const b = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
        },
        _ = /%COMP%/g;
      function y(t, e, n) {
        for (let i = 0; i < e.length; i++) {
          let r = e[i];
          Array.isArray(r) ? y(t, r, n) : ((r = r.replace(_, t)), n.push(r));
        }
        return n;
      }
      function v(t) {
        return (e) => {
          if ('__ngUnwrap__' === e) return t;
          !1 === t(e) && (e.preventDefault(), (e.returnValue = !1));
        };
      }
      let w = (() => {
        class t {
          constructor(t, e, n) {
            (this.eventManager = t),
              (this.sharedStylesHost = e),
              (this.appId = n),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new x(t));
          }
          createRenderer(t, e) {
            if (!t || !e) return this.defaultRenderer;
            switch (e.encapsulation) {
              case r.T.Emulated: {
                let n = this.rendererByCompId.get(e.id);
                return (
                  n ||
                    ((n = new C(this.eventManager, this.sharedStylesHost, e, this.appId)),
                    this.rendererByCompId.set(e.id, n)),
                  n.applyToHost(t),
                  n
                );
              }
              case r.T.Native:
              case r.T.ShadowDom:
                return new k(this.eventManager, this.sharedStylesHost, t, e);
              default:
                if (!this.rendererByCompId.has(e.id)) {
                  const t = y(e.id, e.styles, []);
                  this.sharedStylesHost.addStyles(t), this.rendererByCompId.set(e.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(p), r.fc(g), r.fc(r.c));
          }),
          (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class x {
        constructor(t) {
          (this.eventManager = t), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(t, e) {
          return e ? document.createElementNS(b[e] || e, t) : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          t.appendChild(e);
        }
        insertBefore(t, e, n) {
          t && t.insertBefore(e, n);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let n = 'string' == typeof t ? document.querySelector(t) : t;
          if (!n) throw new Error(`The selector "${t}" did not match any elements`);
          return e || (n.textContent = ''), n;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, n, i) {
          if (i) {
            e = i + ':' + e;
            const r = b[i];
            r ? t.setAttributeNS(r, e, n) : t.setAttribute(e, n);
          } else t.setAttribute(e, n);
        }
        removeAttribute(t, e, n) {
          if (n) {
            const i = b[n];
            i ? t.removeAttributeNS(i, e) : t.removeAttribute(`${n}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, n, i) {
          i & r.I.DashCase ? t.style.setProperty(e, n, i & r.I.Important ? 'important' : '') : (t.style[e] = n);
        }
        removeStyle(t, e, n) {
          n & r.I.DashCase ? t.style.removeProperty(e) : (t.style[e] = '');
        }
        setProperty(t, e, n) {
          t[e] = n;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, n) {
          return 'string' == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, v(n))
            : this.eventManager.addEventListener(t, e, v(n));
        }
      }
      class C extends x {
        constructor(t, e, n, i) {
          super(t), (this.component = n);
          const r = y(i + '-' + n.id, n.styles, []);
          e.addStyles(r),
            (this.contentAttr = '_ngcontent-%COMP%'.replace(_, i + '-' + n.id)),
            (this.hostAttr = (function (t) {
              return '_nghost-%COMP%'.replace(_, t);
            })(i + '-' + n.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, '');
        }
        createElement(t, e) {
          const n = super.createElement(t, e);
          return super.setAttribute(n, this.contentAttr, ''), n;
        }
      }
      class k extends x {
        constructor(t, e, n, i) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = n),
            (this.component = i),
            (this.shadowRoot =
              i.encapsulation === r.T.ShadowDom ? n.attachShadow({ mode: 'open' }) : n.createShadowRoot()),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const s = y(i.id, i.styles, []);
          for (let r = 0; r < s.length; r++) {
            const t = document.createElement('style');
            (t.textContent = s[r]), this.shadowRoot.appendChild(t);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, n) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, n);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)));
        }
      }
      let O = (() => {
          class t extends f {
            constructor(t) {
              super(t);
            }
            supports(t) {
              return !0;
            }
            addEventListener(t, e, n) {
              return t.addEventListener(e, n, !1), () => this.removeEventListener(t, e, n);
            }
            removeEventListener(t, e, n) {
              return t.removeEventListener(e, n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(i.d));
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        S = (() => {
          class t {
            constructor() {
              (this.events = []), (this.overrides = {});
            }
            buildHammer(t) {
              const e = new Hammer(t, this.options);
              e.get('pinch').set({ enable: !0 }), e.get('rotate').set({ enable: !0 });
              for (const n in this.overrides) e.get(n).set(this.overrides[n]);
              return e;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const E = ['alt', 'control', 'meta', 'shift'],
        T = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        I = {
          A: '1',
          B: '2',
          C: '3',
          D: '4',
          E: '5',
          F: '6',
          G: '7',
          H: '8',
          I: '9',
          J: '*',
          K: '+',
          M: '-',
          N: '.',
          O: '/',
          '`': '0',
          '\x90': 'NumLock',
        },
        A = { alt: (t) => t.altKey, control: (t) => t.ctrlKey, meta: (t) => t.metaKey, shift: (t) => t.shiftKey };
      let D = (() => {
          class t extends f {
            constructor(t) {
              super(t);
            }
            supports(e) {
              return null != t.parseEventName(e);
            }
            addEventListener(e, n, r) {
              const s = t.parseEventName(n),
                o = t.eventCallback(s.fullKey, r, this.manager.getZone());
              return this.manager.getZone().runOutsideAngular(() => Object(i.A)().onAndCancel(e, s.domEventName, o));
            }
            static parseEventName(e) {
              const n = e.toLowerCase().split('.'),
                i = n.shift();
              if (0 === n.length || ('keydown' !== i && 'keyup' !== i)) return null;
              const r = t._normalizeKey(n.pop());
              let s = '';
              if (
                (E.forEach((t) => {
                  const e = n.indexOf(t);
                  e > -1 && (n.splice(e, 1), (s += t + '.'));
                }),
                (s += r),
                0 != n.length || 0 === r.length)
              )
                return null;
              const o = {};
              return (o.domEventName = i), (o.fullKey = s), o;
            }
            static getEventFullKey(t) {
              let e = '',
                n = (function (t) {
                  let e = t.key;
                  if (null == e) {
                    if (((e = t.keyIdentifier), null == e)) return 'Unidentified';
                    e.startsWith('U+') &&
                      ((e = String.fromCharCode(parseInt(e.substring(2), 16))),
                      3 === t.location && I.hasOwnProperty(e) && (e = I[e]));
                  }
                  return T[e] || e;
                })(t);
              return (
                (n = n.toLowerCase()),
                ' ' === n ? (n = 'space') : '.' === n && (n = 'dot'),
                E.forEach((i) => {
                  i != n && (0, A[i])(t) && (e += i + '.');
                }),
                (e += n),
                e
              );
            }
            static eventCallback(e, n, i) {
              return (r) => {
                t.getEventFullKey(r) === e && i.runGuarded(() => n(r));
              };
            }
            static _normalizeKey(t) {
              switch (t) {
                case 'esc':
                  return 'escape';
                default:
                  return t;
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(i.d));
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        j = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(r.Rb)({
              factory: function () {
                return Object(r.fc)(P);
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      function R(t) {
        return new P(t.get(i.d));
      }
      let P = (() => {
        class t extends j {
          constructor(t) {
            super(), (this._doc = t);
          }
          sanitize(t, e) {
            if (null == e) return null;
            switch (t) {
              case r.K.NONE:
                return e;
              case r.K.HTML:
                return Object(r.lb)(e, 'HTML') ? Object(r.Eb)(e) : Object(r.ib)(this._doc, String(e));
              case r.K.STYLE:
                return Object(r.lb)(e, 'Style') ? Object(r.Eb)(e) : Object(r.jb)(e);
              case r.K.SCRIPT:
                if (Object(r.lb)(e, 'Script')) return Object(r.Eb)(e);
                throw new Error('unsafe value used in a script context');
              case r.K.URL:
                return Object(r.vb)(e), Object(r.lb)(e, 'URL') ? Object(r.Eb)(e) : Object(r.kb)(String(e));
              case r.K.RESOURCE_URL:
                if (Object(r.lb)(e, 'ResourceURL')) return Object(r.Eb)(e);
                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');
              default:
                throw new Error(`Unexpected SecurityContext ${t} (see http://g.co/ng/security#xss)`);
            }
          }
          bypassSecurityTrustHtml(t) {
            return Object(r.mb)(t);
          }
          bypassSecurityTrustStyle(t) {
            return Object(r.pb)(t);
          }
          bypassSecurityTrustScript(t) {
            return Object(r.ob)(t);
          }
          bypassSecurityTrustUrl(t) {
            return Object(r.qb)(t);
          }
          bypassSecurityTrustResourceUrl(t) {
            return Object(r.nb)(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(i.d));
          }),
          (t.ɵprov = Object(r.Rb)({
            factory: function () {
              return R(Object(r.fc)(r.q));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const M = [
          { provide: r.D, useValue: i.z },
          {
            provide: r.E,
            useValue: function () {
              o.makeCurrent(), h.init();
            },
            multi: !0,
          },
          {
            provide: i.d,
            useFactory: function () {
              return Object(r.Cb)(document), document;
            },
            deps: [],
          },
        ],
        F = Object(r.V)(r.cb, 'browser', M),
        N = [
          [],
          { provide: r.fb, useValue: 'root' },
          {
            provide: r.o,
            useFactory: function () {
              return new r.o();
            },
            deps: [],
          },
          { provide: d, useClass: O, multi: !0, deps: [i.d, r.B, r.D] },
          { provide: d, useClass: D, multi: !0, deps: [i.d] },
          [],
          { provide: w, useClass: w, deps: [p, g, r.c] },
          { provide: r.H, useExisting: w },
          { provide: m, useExisting: g },
          { provide: g, useClass: g, deps: [i.d] },
          { provide: r.P, useClass: r.P, deps: [r.B] },
          { provide: p, useClass: p, deps: [d, r.B] },
          [],
        ];
      let V = (() => {
        class t {
          constructor(t) {
            if (t)
              throw new Error(
                'BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.'
              );
          }
          static withServerTransition(e) {
            return {
              ngModule: t,
              providers: [{ provide: r.c, useValue: e.appId }, { provide: l, useExisting: r.c }, u],
            };
          }
        }
        return (
          (t.ɵmod = r.Tb({ type: t })),
          (t.ɵinj = r.Sb({
            factory: function (e) {
              return new (e || t)(r.fc(t, 12));
            },
            providers: N,
            imports: [i.c, r.f],
          })),
          t
        );
      })();
      'undefined' != typeof window && window;
    },
    jtHE: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return g;
      });
      var i = n('XNiG'),
        r = n('3N8a');
      class s extends r.a {
        constructor(t, e) {
          super(t, e), (this.scheduler = t), (this.work = e);
        }
        schedule(t, e = 0) {
          return e > 0 ? super.schedule(t, e) : ((this.delay = e), (this.state = t), this.scheduler.flush(this), this);
        }
        execute(t, e) {
          return e > 0 || this.closed ? super.execute(t, e) : this._execute(t, e);
        }
        requestAsyncId(t, e, n = 0) {
          return (null !== n && n > 0) || (null === n && this.delay > 0)
            ? super.requestAsyncId(t, e, n)
            : t.flush(this);
        }
      }
      var o = n('IjjT');
      class a extends o.a {}
      const c = new a(s);
      var l = n('quSY'),
        u = n('7o/Q'),
        h = n('WMd4');
      class d extends u.a {
        constructor(t, e, n = 0) {
          super(t), (this.scheduler = e), (this.delay = n);
        }
        static dispatch(t) {
          const { notification: e, destination: n } = t;
          e.observe(n), this.unsubscribe();
        }
        scheduleMessage(t) {
          this.destination.add(this.scheduler.schedule(d.dispatch, this.delay, new p(t, this.destination)));
        }
        _next(t) {
          this.scheduleMessage(h.a.createNext(t));
        }
        _error(t) {
          this.scheduleMessage(h.a.createError(t)), this.unsubscribe();
        }
        _complete() {
          this.scheduleMessage(h.a.createComplete()), this.unsubscribe();
        }
      }
      class p {
        constructor(t, e) {
          (this.notification = t), (this.destination = e);
        }
      }
      var f = n('9ppp'),
        m = n('Ylt2');
      class g extends i.a {
        constructor(t = Number.POSITIVE_INFINITY, e = Number.POSITIVE_INFINITY, n) {
          super(),
            (this.scheduler = n),
            (this._events = []),
            (this._infiniteTimeWindow = !1),
            (this._bufferSize = t < 1 ? 1 : t),
            (this._windowTime = e < 1 ? 1 : e),
            e === Number.POSITIVE_INFINITY
              ? ((this._infiniteTimeWindow = !0), (this.next = this.nextInfiniteTimeWindow))
              : (this.next = this.nextTimeWindow);
        }
        nextInfiniteTimeWindow(t) {
          const e = this._events;
          e.push(t), e.length > this._bufferSize && e.shift(), super.next(t);
        }
        nextTimeWindow(t) {
          this._events.push(new b(this._getNow(), t)), this._trimBufferThenGetEvents(), super.next(t);
        }
        _subscribe(t) {
          const e = this._infiniteTimeWindow,
            n = e ? this._events : this._trimBufferThenGetEvents(),
            i = this.scheduler,
            r = n.length;
          let s;
          if (this.closed) throw new f.a();
          if (
            (this.isStopped || this.hasError ? (s = l.a.EMPTY) : (this.observers.push(t), (s = new m.a(this, t))),
            i && t.add((t = new d(t, i))),
            e)
          )
            for (let o = 0; o < r && !t.closed; o++) t.next(n[o]);
          else for (let o = 0; o < r && !t.closed; o++) t.next(n[o].value);
          return this.hasError ? t.error(this.thrownError) : this.isStopped && t.complete(), s;
        }
        _getNow() {
          return (this.scheduler || c).now();
        }
        _trimBufferThenGetEvents() {
          const t = this._getNow(),
            e = this._bufferSize,
            n = this._windowTime,
            i = this._events,
            r = i.length;
          let s = 0;
          for (; s < r && !(t - i[s].time < n); ) s++;
          return r > e && (s = Math.max(s, r - e)), s > 0 && i.splice(0, s), i;
        }
      }
      class b {
        constructor(t, e) {
          (this.time = t), (this.value = e);
        }
      }
    },
    kJWO: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => ('function' == typeof Symbol && Symbol.observable) || '@@observable')();
    },
    kmnG: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return Y;
      }),
        n.d(e, 'b', function () {
          return K;
        }),
        n.d(e, 'c', function () {
          return F;
        }),
        n.d(e, 'd', function () {
          return Z;
        }),
        n.d(e, 'e', function () {
          return V;
        }),
        n.d(e, 'f', function () {
          return Q;
        }),
        n.d(e, 'g', function () {
          return z;
        }),
        n.d(e, 'h', function () {
          return B;
        }),
        n.d(e, 'i', function () {
          return W;
        }),
        n.d(e, 'j', function () {
          return $;
        });
      var i = n('GU7r'),
        r = n('ofXK'),
        s = n('fXoL'),
        o = n('FKr1'),
        a = n('8LU1'),
        c = n('XNiG'),
        l = n('VRyK'),
        u = n('xgIS'),
        h = n('JX91'),
        d = n('1G5W'),
        p = n('IzEk'),
        f = n('R0Ic'),
        m = n('R1ws'),
        g = n('cH1L'),
        b = n('nLfN');
      const _ = ['underline'],
        y = ['connectionContainer'],
        v = ['inputContainer'],
        w = ['label'];
      function x(t, e) {
        1 & t &&
          (s.Zb(0),
          s.bc(1, 'div', 14),
          s.Wb(2, 'div', 15),
          s.Wb(3, 'div', 16),
          s.Wb(4, 'div', 17),
          s.ac(),
          s.bc(5, 'div', 18),
          s.Wb(6, 'div', 15),
          s.Wb(7, 'div', 16),
          s.Wb(8, 'div', 17),
          s.ac(),
          s.Yb());
      }
      function C(t, e) {
        1 & t && (s.bc(0, 'div', 19), s.tc(1, 1), s.ac());
      }
      function k(t, e) {
        if ((1 & t && (s.Zb(0), s.tc(1, 2), s.bc(2, 'span'), s.Mc(3), s.ac(), s.Yb()), 2 & t)) {
          const t = s.nc(2);
          s.Ib(3), s.Nc(t._control.placeholder);
        }
      }
      function O(t, e) {
        1 & t && s.tc(0, 3, ['*ngSwitchCase', 'true']);
      }
      function S(t, e) {
        1 & t && (s.bc(0, 'span', 23), s.Mc(1, ' *'), s.ac());
      }
      function E(t, e) {
        if (1 & t) {
          const t = s.cc();
          s.bc(0, 'label', 20, 21),
            s.jc('cdkObserveContent', function () {
              return s.Dc(t), s.nc().updateOutlineGap();
            }),
            s.Kc(2, k, 4, 1, 'ng-container', 12),
            s.Kc(3, O, 1, 0, void 0, 12),
            s.Kc(4, S, 2, 0, 'span', 22),
            s.ac();
        }
        if (2 & t) {
          const t = s.nc();
          s.Mb('mat-empty', t._control.empty && !t._shouldAlwaysFloat)(
            'mat-form-field-empty',
            t._control.empty && !t._shouldAlwaysFloat
          )('mat-accent', 'accent' == t.color)('mat-warn', 'warn' == t.color),
            s.vc('cdkObserveContentDisabled', 'outline' != t.appearance)('id', t._labelId)('ngSwitch', t._hasLabel()),
            s.Jb('for', t._control.id)('aria-owns', t._control.id),
            s.Ib(2),
            s.vc('ngSwitchCase', !1),
            s.Ib(1),
            s.vc('ngSwitchCase', !0),
            s.Ib(1),
            s.vc('ngIf', !t.hideRequiredMarker && t._control.required && !t._control.disabled);
        }
      }
      function T(t, e) {
        1 & t && (s.bc(0, 'div', 24), s.tc(1, 4), s.ac());
      }
      function I(t, e) {
        if ((1 & t && (s.bc(0, 'div', 25, 26), s.Wb(2, 'span', 27), s.ac()), 2 & t)) {
          const t = s.nc();
          s.Ib(2), s.Mb('mat-accent', 'accent' == t.color)('mat-warn', 'warn' == t.color);
        }
      }
      function A(t, e) {
        if ((1 & t && (s.bc(0, 'div'), s.tc(1, 5), s.ac()), 2 & t)) {
          const t = s.nc();
          s.vc('@transitionMessages', t._subscriptAnimationState);
        }
      }
      function D(t, e) {
        if ((1 & t && (s.bc(0, 'div', 31), s.Mc(1), s.ac()), 2 & t)) {
          const t = s.nc(2);
          s.vc('id', t._hintLabelId), s.Ib(1), s.Nc(t.hintLabel);
        }
      }
      function j(t, e) {
        if (
          (1 & t &&
            (s.bc(0, 'div', 28), s.Kc(1, D, 2, 2, 'div', 29), s.tc(2, 6), s.Wb(3, 'div', 30), s.tc(4, 7), s.ac()),
          2 & t)
        ) {
          const t = s.nc();
          s.vc('@transitionMessages', t._subscriptAnimationState), s.Ib(1), s.vc('ngIf', t.hintLabel);
        }
      }
      const R = [
          '*',
          [['', 'matPrefix', '']],
          [['mat-placeholder']],
          [['mat-label']],
          [['', 'matSuffix', '']],
          [['mat-error']],
          [['mat-hint', 3, 'align', 'end']],
          [['mat-hint', 'align', 'end']],
        ],
        P = [
          '*',
          '[matPrefix]',
          'mat-placeholder',
          'mat-label',
          '[matSuffix]',
          'mat-error',
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let M = 0,
        F = (() => {
          class t {
            constructor() {
              this.id = `mat-error-${M++}`;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Qb({
              type: t,
              selectors: [['mat-error']],
              hostAttrs: ['role', 'alert', 1, 'mat-error'],
              hostVars: 1,
              hostBindings: function (t, e) {
                2 & t && s.Jb('id', e.id);
              },
              inputs: { id: 'id' },
            })),
            t
          );
        })();
      const N = {
        transitionMessages: Object(f.m)('transitionMessages', [
          Object(f.j)('enter', Object(f.k)({ opacity: 1, transform: 'translateY(0%)' })),
          Object(f.l)('void => enter', [
            Object(f.k)({ opacity: 0, transform: 'translateY(-100%)' }),
            Object(f.e)('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ]),
        ]),
      };
      let V = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵdir = s.Qb({ type: t })),
          t
        );
      })();
      function L(t) {
        return Error(`A hint was already declared for 'align="${t}"'.`);
      }
      let H = 0,
        z = (() => {
          class t {
            constructor() {
              (this.align = 'start'), (this.id = `mat-hint-${H++}`);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Qb({
              type: t,
              selectors: [['mat-hint']],
              hostAttrs: [1, 'mat-hint'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t && (s.Jb('id', e.id)('align', null), s.Mb('mat-right', 'end' == e.align));
              },
              inputs: { align: 'align', id: 'id' },
            })),
            t
          );
        })(),
        B = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Qb({ type: t, selectors: [['mat-label']] })),
            t
          );
        })(),
        U = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Qb({ type: t, selectors: [['mat-placeholder']] })),
            t
          );
        })(),
        W = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Qb({ type: t, selectors: [['', 'matPrefix', '']] })),
            t
          );
        })(),
        $ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Qb({ type: t, selectors: [['', 'matSuffix', '']] })),
            t
          );
        })(),
        q = 0;
      class G {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const X = Object(o.v)(G, 'primary'),
        K = new s.s('MAT_FORM_FIELD_DEFAULT_OPTIONS'),
        Y = new s.s('MatFormField');
      let Z = (() => {
          class t extends X {
            constructor(t, e, n, i, r, s, o, a) {
              super(t),
                (this._elementRef = t),
                (this._changeDetectorRef = e),
                (this._dir = i),
                (this._defaults = r),
                (this._platform = s),
                (this._ngZone = o),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new c.a()),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ''),
                (this._hintLabel = ''),
                (this._hintLabelId = `mat-hint-${q++}`),
                (this._labelId = `mat-form-field-label-${q++}`),
                (this._labelOptions = n || {}),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = 'NoopAnimations' !== a),
                (this.appearance = r && r.appearance ? r.appearance : 'legacy'),
                (this._hideRequiredMarker = !(!r || null == r.hideRequiredMarker) && r.hideRequiredMarker);
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(t) {
              const e = this._appearance;
              (this._appearance = t || (this._defaults && this._defaults.appearance) || 'legacy'),
                'outline' === this._appearance && e !== t && (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(t) {
              this._hideRequiredMarker = Object(a.c)(t);
            }
            get _shouldAlwaysFloat() {
              return 'always' === this.floatLabel && !this._showAlwaysAnimate;
            }
            get _canLabelFloat() {
              return 'never' !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(t) {
              (this._hintLabel = t), this._processHints();
            }
            get floatLabel() {
              return 'legacy' !== this.appearance && 'never' === this._floatLabel ? 'auto' : this._floatLabel;
            }
            set floatLabel(t) {
              t !== this._floatLabel &&
                ((this._floatLabel = t || this._getDefaultFloatLabelState()), this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;
            }
            set _control(t) {
              this._explicitFormFieldControl = t;
            }
            get _labelChild() {
              return this._labelChildNonStatic || this._labelChildStatic;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const t = this._control;
              t.controlType && this._elementRef.nativeElement.classList.add(`mat-form-field-type-${t.controlType}`),
                t.stateChanges.pipe(Object(h.a)(null)).subscribe(() => {
                  this._validatePlaceholders(), this._syncDescribedByIds(), this._changeDetectorRef.markForCheck();
                }),
                t.ngControl &&
                  t.ngControl.valueChanges &&
                  t.ngControl.valueChanges
                    .pipe(Object(d.a)(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable
                    .asObservable()
                    .pipe(Object(d.a)(this._destroyed))
                    .subscribe(() => {
                      this._outlineGapCalculationNeededOnStable && this.updateOutlineGap();
                    });
                }),
                Object(l.a)(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0), this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe(Object(h.a)(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe(Object(h.a)(null)).subscribe(() => {
                  this._syncDescribedByIds(), this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe(Object(d.a)(this._destroyed)).subscribe(() => {
                    'function' == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(), this._outlineGapCalculationNeededImmediately && this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = 'enter'), this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(t) {
              const e = this._control ? this._control.ngControl : null;
              return e && e[t];
            }
            _hasPlaceholder() {
              return !!((this._control && this._control.placeholder) || this._placeholderChild);
            }
            _hasLabel() {
              return !!this._labelChild;
            }
            _shouldLabelFloat() {
              return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);
            }
            _hideControlPlaceholder() {
              return (
                ('legacy' === this.appearance && !this._hasLabel()) || (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return this._hasLabel() || ('legacy' === this.appearance && this._hasPlaceholder());
            }
            _getDisplayedMessages() {
              return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState
                ? 'error'
                : 'hint';
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  Object(u.a)(this._label.nativeElement, 'transitionend')
                    .pipe(Object(p.a)(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = 'always'),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {
              if (this._control.placeholder && this._placeholderChild)
                throw Error('Placeholder attribute and child element were both specified.');
            }
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {
              if (this._hintChildren) {
                let t, e;
                this._hintChildren.forEach((n) => {
                  if ('start' === n.align) {
                    if (t || this.hintLabel) throw L('start');
                    t = n;
                  } else if ('end' === n.align) {
                    if (e) throw L('end');
                    e = n;
                  }
                });
              }
            }
            _getDefaultFloatLabelState() {
              return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';
            }
            _syncDescribedByIds() {
              if (this._control) {
                let t = [];
                if ('hint' === this._getDisplayedMessages()) {
                  const e = this._hintChildren ? this._hintChildren.find((t) => 'start' === t.align) : null,
                    n = this._hintChildren ? this._hintChildren.find((t) => 'end' === t.align) : null;
                  e ? t.push(e.id) : this._hintLabel && t.push(this._hintLabelId), n && t.push(n.id);
                } else this._errorChildren && (t = this._errorChildren.map((t) => t.id));
                this._control.setDescribedByIds(t);
              }
            }
            _validateControlChild() {
              if (!this._control) throw Error('mat-form-field must contain a MatFormFieldControl.');
            }
            updateOutlineGap() {
              const t = this._label ? this._label.nativeElement : null;
              if ('outline' !== this.appearance || !t || !t.children.length || !t.textContent.trim()) return;
              if (!this._platform.isBrowser) return;
              if (!this._isAttachedToDOM()) return void (this._outlineGapCalculationNeededImmediately = !0);
              let e = 0,
                n = 0;
              const i = this._connectionContainerRef.nativeElement,
                r = i.querySelectorAll('.mat-form-field-outline-start'),
                s = i.querySelectorAll('.mat-form-field-outline-gap');
              if (this._label && this._label.nativeElement.children.length) {
                const r = i.getBoundingClientRect();
                if (0 === r.width && 0 === r.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const s = this._getStartEnd(r),
                  o = this._getStartEnd(t.children[0].getBoundingClientRect());
                let a = 0;
                for (const e of t.children) a += e.offsetWidth;
                (e = Math.abs(o - s) - 5), (n = a > 0 ? 0.75 * a + 10 : 0);
              }
              for (let o = 0; o < r.length; o++) r[o].style.width = `${e}px`;
              for (let o = 0; o < s.length; o++) s[o].style.width = `${n}px`;
              this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(t) {
              return this._dir && 'rtl' === this._dir.value ? t.right : t.left;
            }
            _isAttachedToDOM() {
              const t = this._elementRef.nativeElement;
              if (t.getRootNode) {
                const e = t.getRootNode();
                return e && e !== t;
              }
              return document.documentElement.contains(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                s.Vb(s.m),
                s.Vb(s.i),
                s.Vb(o.d, 8),
                s.Vb(g.b, 8),
                s.Vb(K, 8),
                s.Vb(b.a),
                s.Vb(s.B),
                s.Vb(m.a, 8)
              );
            }),
            (t.ɵcmp = s.Pb({
              type: t,
              selectors: [['mat-form-field']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t &&
                  (s.Ob(n, V, !0),
                  s.Hc(n, V, !0),
                  s.Ob(n, B, !0),
                  s.Hc(n, B, !0),
                  s.Ob(n, U, !0),
                  s.Ob(n, F, !0),
                  s.Ob(n, z, !0),
                  s.Ob(n, W, !0),
                  s.Ob(n, $, !0)),
                  2 & t &&
                    (s.Ac((i = s.kc())) && (e._controlNonStatic = i.first),
                    s.Ac((i = s.kc())) && (e._controlStatic = i.first),
                    s.Ac((i = s.kc())) && (e._labelChildNonStatic = i.first),
                    s.Ac((i = s.kc())) && (e._labelChildStatic = i.first),
                    s.Ac((i = s.kc())) && (e._placeholderChild = i.first),
                    s.Ac((i = s.kc())) && (e._errorChildren = i),
                    s.Ac((i = s.kc())) && (e._hintChildren = i),
                    s.Ac((i = s.kc())) && (e._prefixChildren = i),
                    s.Ac((i = s.kc())) && (e._suffixChildren = i));
              },
              viewQuery: function (t, e) {
                var n;
                1 & t && (s.Rc(_, !0), s.Ic(y, !0), s.Rc(v, !0), s.Rc(w, !0)),
                  2 & t &&
                    (s.Ac((n = s.kc())) && (e.underlineRef = n.first),
                    s.Ac((n = s.kc())) && (e._connectionContainerRef = n.first),
                    s.Ac((n = s.kc())) && (e._inputContainerRef = n.first),
                    s.Ac((n = s.kc())) && (e._label = n.first));
              },
              hostAttrs: [1, 'mat-form-field'],
              hostVars: 44,
              hostBindings: function (t, e) {
                2 & t &&
                  s.Mb('mat-form-field-appearance-standard', 'standard' == e.appearance)(
                    'mat-form-field-appearance-fill',
                    'fill' == e.appearance
                  )('mat-form-field-appearance-outline', 'outline' == e.appearance)(
                    'mat-form-field-appearance-legacy',
                    'legacy' == e.appearance
                  )('mat-form-field-invalid', e._control.errorState)('mat-form-field-can-float', e._canLabelFloat)(
                    'mat-form-field-should-float',
                    e._shouldLabelFloat()
                  )('mat-form-field-has-label', e._hasFloatingLabel())(
                    'mat-form-field-hide-placeholder',
                    e._hideControlPlaceholder()
                  )('mat-form-field-disabled', e._control.disabled)('mat-form-field-autofilled', e._control.autofilled)(
                    'mat-focused',
                    e._control.focused
                  )('mat-accent', 'accent' == e.color)('mat-warn', 'warn' == e.color)(
                    'ng-untouched',
                    e._shouldForward('untouched')
                  )('ng-touched', e._shouldForward('touched'))('ng-pristine', e._shouldForward('pristine'))(
                    'ng-dirty',
                    e._shouldForward('dirty')
                  )('ng-valid', e._shouldForward('valid'))('ng-invalid', e._shouldForward('invalid'))(
                    'ng-pending',
                    e._shouldForward('pending')
                  )('_mat-animation-noopable', !e._animationsEnabled);
              },
              inputs: {
                color: 'color',
                floatLabel: 'floatLabel',
                appearance: 'appearance',
                hideRequiredMarker: 'hideRequiredMarker',
                hintLabel: 'hintLabel',
              },
              exportAs: ['matFormField'],
              features: [s.Hb([{ provide: Y, useExisting: t }]), s.Fb],
              ngContentSelectors: P,
              decls: 15,
              vars: 8,
              consts: [
                [1, 'mat-form-field-wrapper'],
                [1, 'mat-form-field-flex', 3, 'click'],
                ['connectionContainer', ''],
                [4, 'ngIf'],
                ['class', 'mat-form-field-prefix', 4, 'ngIf'],
                [1, 'mat-form-field-infix'],
                ['inputContainer', ''],
                [1, 'mat-form-field-label-wrapper'],
                [
                  'class',
                  'mat-form-field-label',
                  3,
                  'cdkObserveContentDisabled',
                  'id',
                  'mat-empty',
                  'mat-form-field-empty',
                  'mat-accent',
                  'mat-warn',
                  'ngSwitch',
                  'cdkObserveContent',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-form-field-suffix', 4, 'ngIf'],
                ['class', 'mat-form-field-underline', 4, 'ngIf'],
                [1, 'mat-form-field-subscript-wrapper', 3, 'ngSwitch'],
                [4, 'ngSwitchCase'],
                ['class', 'mat-form-field-hint-wrapper', 4, 'ngSwitchCase'],
                [1, 'mat-form-field-outline'],
                [1, 'mat-form-field-outline-start'],
                [1, 'mat-form-field-outline-gap'],
                [1, 'mat-form-field-outline-end'],
                [1, 'mat-form-field-outline', 'mat-form-field-outline-thick'],
                [1, 'mat-form-field-prefix'],
                [1, 'mat-form-field-label', 3, 'cdkObserveContentDisabled', 'id', 'ngSwitch', 'cdkObserveContent'],
                ['label', ''],
                ['class', 'mat-placeholder-required mat-form-field-required-marker', 'aria-hidden', 'true', 4, 'ngIf'],
                ['aria-hidden', 'true', 1, 'mat-placeholder-required', 'mat-form-field-required-marker'],
                [1, 'mat-form-field-suffix'],
                [1, 'mat-form-field-underline'],
                ['underline', ''],
                [1, 'mat-form-field-ripple'],
                [1, 'mat-form-field-hint-wrapper'],
                ['class', 'mat-hint', 3, 'id', 4, 'ngIf'],
                [1, 'mat-form-field-hint-spacer'],
                [1, 'mat-hint', 3, 'id'],
              ],
              template: function (t, e) {
                1 & t &&
                  (s.uc(R),
                  s.bc(0, 'div', 0),
                  s.bc(1, 'div', 1, 2),
                  s.jc('click', function (t) {
                    return e._control.onContainerClick && e._control.onContainerClick(t);
                  }),
                  s.Kc(3, x, 9, 0, 'ng-container', 3),
                  s.Kc(4, C, 2, 0, 'div', 4),
                  s.bc(5, 'div', 5, 6),
                  s.tc(7),
                  s.bc(8, 'span', 7),
                  s.Kc(9, E, 5, 16, 'label', 8),
                  s.ac(),
                  s.ac(),
                  s.Kc(10, T, 2, 0, 'div', 9),
                  s.ac(),
                  s.Kc(11, I, 3, 4, 'div', 10),
                  s.bc(12, 'div', 11),
                  s.Kc(13, A, 2, 1, 'div', 12),
                  s.Kc(14, j, 5, 2, 'div', 13),
                  s.ac(),
                  s.ac()),
                  2 & t &&
                    (s.Ib(3),
                    s.vc('ngIf', 'outline' == e.appearance),
                    s.Ib(1),
                    s.vc('ngIf', e._prefixChildren.length),
                    s.Ib(5),
                    s.vc('ngIf', e._hasFloatingLabel()),
                    s.Ib(1),
                    s.vc('ngIf', e._suffixChildren.length),
                    s.Ib(1),
                    s.vc('ngIf', 'outline' != e.appearance),
                    s.Ib(1),
                    s.vc('ngSwitch', e._getDisplayedMessages()),
                    s.Ib(1),
                    s.vc('ngSwitchCase', 'error'),
                    s.Ib(1),
                    s.vc('ngSwitchCase', 'hint'));
              },
              directives: [r.l, r.n, r.o, i.a],
              styles: [
                '.mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n',
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n',
                '.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',
                '.mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n',
                '.mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n',
                '.mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n',
              ],
              encapsulation: 2,
              data: { animation: [N.transitionMessages] },
              changeDetection: 0,
            })),
            t
          );
        })(),
        Q = (() => {
          class t {}
          return (
            (t.ɵmod = s.Tb({ type: t })),
            (t.ɵinj = s.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, o.g, i.c], o.g],
            })),
            t
          );
        })();
    },
    l5mm: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('HDdC'),
        r = n('D0XW'),
        s = n('Y7HM');
      function o(t = 0, e = r.a) {
        return (
          (!Object(s.a)(t) || t < 0) && (t = 0),
          (e && 'function' == typeof e.schedule) || (e = r.a),
          new i.a((n) => (n.add(e.schedule(a, t, { subscriber: n, counter: 0, period: t })), n))
        );
      }
      function a(t) {
        const { subscriber: e, counter: n, period: i } = t;
        e.next(n), this.schedule({ subscriber: e, counter: n + 1, period: i }, i);
      }
    },
    l7GE: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('7o/Q');
      class r extends i.a {
        notifyNext(t, e, n, i, r) {
          this.destination.next(e);
        }
        notifyError(t, e) {
          this.destination.error(t);
        }
        notifyComplete(t) {
          this.destination.complete();
        }
      }
    },
    lDzL: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return At;
      }),
        n.d(e, 'b', function () {
          return ue;
        }),
        n.d(e, 'c', function () {
          return Lt;
        }),
        n.d(e, 'd', function () {
          return Vt;
        }),
        n.d(e, 'e', function () {
          return Oe;
        });
      var i = n('mrSG'),
        r = n('fXoL'),
        s = n('ofXK'),
        o = n('XNiG'),
        a = n('xgIS'),
        c = n('2Vo4'),
        l = n('1G5W');
      const u = ['*'];
      function h(t, e) {
        1 & t && r.Wb(0, 'datatable-progress');
      }
      function d(t, e) {
        if ((1 & t && r.Wb(0, 'datatable-summary-row', 9), 2 & t)) {
          const t = r.nc(2);
          r.vc('rowHeight', t.summaryHeight)('offsetX', t.offsetX)('innerWidth', t.innerWidth)('rows', t.rows)(
            'columns',
            t.columns
          );
        }
      }
      function p(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-body-row', 13),
            r.jc('treeAction', function () {
              r.Dc(t);
              const e = r.nc().$implicit;
              return r.nc(2).onTreeAction(e);
            })('activate', function (e) {
              r.Dc(t);
              const n = r.nc().index,
                i = r.nc(2);
              return r.Bc(2).onActivate(e, i.indexes.first + n);
            }),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc().$implicit,
            e = r.nc(2),
            n = r.Bc(2);
          r.vc('isSelected', n.getRowSelected(t))('innerWidth', e.innerWidth)('offsetX', e.offsetX)(
            'columns',
            e.columns
          )('rowHeight', e.getRowHeight(t))('row', t)('rowIndex', e.getRowIndex(t))('expanded', e.getRowExpanded(t))(
            'rowClass',
            e.rowClass
          )('displayCheck', e.displayCheck)('treeStatus', t && t.treeStatus);
        }
      }
      function f(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-body-row', 15),
            r.jc('activate', function (n) {
              r.Dc(t);
              const i = e.index;
              return r.nc(4), r.Bc(2).onActivate(n, i);
            }),
            r.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = r.nc(2).$implicit,
            i = r.nc(2),
            s = r.Bc(2);
          r.vc('isSelected', s.getRowSelected(t))('innerWidth', i.innerWidth)('offsetX', i.offsetX)(
            'columns',
            i.columns
          )('rowHeight', i.getRowHeight(t))('row', t)('group', n.value)('rowIndex', i.getRowIndex(t))(
            'expanded',
            i.getRowExpanded(t)
          )('rowClass', i.rowClass);
        }
      }
      function m(t, e) {
        if ((1 & t && r.Kc(0, f, 1, 10, 'datatable-body-row', 14), 2 & t)) {
          const t = r.nc().$implicit,
            e = r.nc(2);
          r.vc('ngForOf', t.value)('ngForTrackBy', e.rowTrackingFn);
        }
      }
      function g(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-row-wrapper', 10),
            r.jc('rowContextmenu', function (e) {
              return r.Dc(t), r.nc(2).rowContextmenu.emit(e);
            }),
            r.Kc(1, p, 1, 11, 'datatable-body-row', 11),
            r.Kc(2, m, 1, 2, 'ng-template', null, 12, r.Lc),
            r.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = e.index,
            i = r.Bc(3),
            s = r.nc(2);
          r.vc('groupedRows', s.groupedRows)('innerWidth', s.innerWidth)('ngStyle', s.getRowsStyles(t))(
            'rowDetail',
            s.rowDetail
          )('groupHeader', s.groupHeader)('offsetX', s.offsetX)('detailRowHeight', s.getDetailRowHeight(t && t[n], n))(
            'row',
            t
          )('expanded', s.getRowExpanded(t))('rowIndex', s.getRowIndex(t && t[n])),
            r.Ib(1),
            r.vc('ngIf', !s.groupedRows)('ngIfElse', i);
        }
      }
      function b(t, e) {
        if ((1 & t && r.Wb(0, 'datatable-summary-row', 16), 2 & t)) {
          const t = r.nc(2);
          r.vc('ngStyle', t.getBottomSummaryRowStyles())('rowHeight', t.summaryHeight)('offsetX', t.offsetX)(
            'innerWidth',
            t.innerWidth
          )('rows', t.rows)('columns', t.columns);
        }
      }
      function _(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-scroller', 5),
            r.jc('scroll', function (e) {
              return r.Dc(t), r.nc().onBodyScroll(e);
            }),
            r.Kc(1, d, 1, 5, 'datatable-summary-row', 6),
            r.Kc(2, g, 4, 12, 'datatable-row-wrapper', 7),
            r.Kc(3, b, 1, 6, 'datatable-summary-row', 8),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc();
          r.vc('scrollbarV', t.scrollbarV)('scrollbarH', t.scrollbarH)('scrollHeight', t.scrollHeight)(
            'scrollWidth',
            null == t.columnGroupWidths ? null : t.columnGroupWidths.total
          ),
            r.Ib(1),
            r.vc('ngIf', t.summaryRow && 'top' === t.summaryPosition),
            r.Ib(1),
            r.vc('ngForOf', t.temp)('ngForTrackBy', t.rowTrackingFn),
            r.Ib(1),
            r.vc('ngIf', t.summaryRow && 'bottom' === t.summaryPosition);
        }
      }
      function y(t, e) {
        if ((1 & t && r.Wb(0, 'div', 17), 2 & t)) {
          const t = r.nc();
          r.vc('innerHTML', t.emptyMessage, r.Ec);
        }
      }
      function v(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-header-cell', 4),
            r.jc('resize', function (n) {
              r.Dc(t);
              const i = e.$implicit;
              return r.nc(2).onColumnResized(n, i);
            })('longPressStart', function (e) {
              return r.Dc(t), r.nc(2).onLongPressStart(e);
            })('longPressEnd', function (e) {
              return r.Dc(t), r.nc(2).onLongPressEnd(e);
            })('sort', function (e) {
              return r.Dc(t), r.nc(2).onSort(e);
            })('select', function (e) {
              return r.Dc(t), r.nc(2).select.emit(e);
            })('columnContextmenu', function (e) {
              return r.Dc(t), r.nc(2).columnContextmenu.emit(e);
            }),
            r.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = r.nc(2);
          r.vc('resizeEnabled', t.resizeable)('pressModel', t)('pressEnabled', n.reorderable && t.draggable)(
            'dragX',
            n.reorderable && t.draggable && t.dragging
          )('dragY', !1)('dragModel', t)('dragEventTarget', n.dragEventTarget)('headerHeight', n.headerHeight)(
            'isTarget',
            t.isTarget
          )('targetMarkerTemplate', n.targetMarkerTemplate)('targetMarkerContext', t.targetMarkerContext)('column', t)(
            'sortType',
            n.sortType
          )('sorts', n.sorts)('selectionType', n.selectionType)('sortAscendingIcon', n.sortAscendingIcon)(
            'sortDescendingIcon',
            n.sortDescendingIcon
          )('allRowsSelected', n.allRowsSelected);
        }
      }
      function w(t, e) {
        if ((1 & t && (r.bc(0, 'div', 2), r.Kc(1, v, 1, 18, 'datatable-header-cell', 3), r.ac()), 2 & t)) {
          const t = e.$implicit,
            n = r.nc();
          r.Kb('datatable-row-' + t.type),
            r.vc('ngStyle', n._styleByGroup[t.type]),
            r.Ib(1),
            r.vc('ngForOf', t.columns)('ngForTrackBy', n.columnTrackingFn);
        }
      }
      function x(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-header', 4),
            r.jc('sort', function (e) {
              return r.Dc(t), r.nc().onColumnSort(e);
            })('resize', function (e) {
              return r.Dc(t), r.nc().onColumnResize(e);
            })('reorder', function (e) {
              return r.Dc(t), r.nc().onColumnReorder(e);
            })('select', function (e) {
              return r.Dc(t), r.nc().onHeaderSelect(e);
            })('columnContextmenu', function (e) {
              return r.Dc(t), r.nc().onColumnContextmenu(e);
            }),
            r.oc(1, 'async'),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc();
          r.vc('sorts', t.sorts)('sortType', t.sortType)('scrollbarH', t.scrollbarH)('innerWidth', t._innerWidth)(
            'offsetX',
            r.pc(1, 14, t._offsetX)
          )('dealsWithGroup', void 0 !== t.groupedRows)('columns', t._internalColumns)('headerHeight', t.headerHeight)(
            'reorderable',
            t.reorderable
          )('targetMarkerTemplate', t.targetMarkerTemplate)('sortAscendingIcon', t.cssClasses.sortAscending)(
            'sortDescendingIcon',
            t.cssClasses.sortDescending
          )('allRowsSelected', t.allRowsSelected)('selectionType', t.selectionType);
        }
      }
      function C(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-footer', 5),
            r.jc('page', function (e) {
              return r.Dc(t), r.nc().onFooterPage(e);
            }),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc();
          r.vc('rowCount', t.rowCount)('pageSize', t.pageSize)('offset', t.offset)('footerHeight', t.footerHeight)(
            'footerTemplate',
            t.footer
          )('totalMessage', t.messages.totalMessage)('pagerLeftArrowIcon', t.cssClasses.pagerLeftArrow)(
            'pagerRightArrowIcon',
            t.cssClasses.pagerRightArrow
          )('pagerPreviousIcon', t.cssClasses.pagerPrevious)('selectedCount', t.selected.length)(
            'selectedMessage',
            !!t.selectionType && t.messages.selectedMessage
          )('pagerNextIcon', t.cssClasses.pagerNext);
        }
      }
      function k(t, e) {}
      function O(t, e) {
        if ((1 & t && r.Kc(0, k, 0, 0, 'ng-template', 5), 2 & t)) {
          const t = r.nc();
          r.vc('ngTemplateOutlet', t.targetMarkerTemplate)('ngTemplateOutletContext', t.targetMarkerContext);
        }
      }
      function S(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'label', 6),
            r.bc(1, 'input', 7),
            r.jc('change', function () {
              r.Dc(t);
              const e = r.nc();
              return e.select.emit(!e.allRowsSelected);
            }),
            r.ac(),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc();
          r.Ib(1), r.vc('checked', t.allRowsSelected);
        }
      }
      function E(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'span', 8),
            r.bc(1, 'span', 9),
            r.jc('click', function () {
              return r.Dc(t), r.nc().onSort();
            }),
            r.ac(),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc();
          r.Ib(1), r.vc('innerHTML', t.name, r.Ec);
        }
      }
      function T(t, e) {}
      function I(t, e) {
        if ((1 & t && r.Kc(0, T, 0, 0, 'ng-template', 5), 2 & t)) {
          const t = r.nc();
          r.vc('ngTemplateOutlet', t.column.headerTemplate)('ngTemplateOutletContext', t.cellContext);
        }
      }
      function A(t, e) {}
      const D = function (t, e, n, i, r) {
        return { rowCount: t, pageSize: e, selectedCount: n, curPage: i, offset: r };
      };
      function j(t, e) {
        if ((1 & t && r.Kc(0, A, 0, 0, 'ng-template', 4), 2 & t)) {
          const t = r.nc();
          r.vc('ngTemplateOutlet', t.footerTemplate.template)(
            'ngTemplateOutletContext',
            r.zc(2, D, t.rowCount, t.pageSize, t.selectedCount, t.curPage, t.offset)
          );
        }
      }
      function R(t, e) {
        if ((1 & t && (r.bc(0, 'span'), r.Mc(1), r.ac()), 2 & t)) {
          const t = r.nc(2);
          r.Ib(1),
            r.Pc(' ', null == t.selectedCount ? null : t.selectedCount.toLocaleString(), ' ', t.selectedMessage, ' / ');
        }
      }
      function P(t, e) {
        if ((1 & t && (r.bc(0, 'div', 5), r.Kc(1, R, 2, 2, 'span', 1), r.Mc(2), r.ac()), 2 & t)) {
          const t = r.nc();
          r.Ib(1),
            r.vc('ngIf', t.selectedMessage),
            r.Ib(1),
            r.Pc(' ', null == t.rowCount ? null : t.rowCount.toLocaleString(), ' ', t.totalMessage, ' ');
        }
      }
      function M(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-pager', 6),
            r.jc('change', function (e) {
              return r.Dc(t), r.nc().page.emit(e);
            }),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc();
          r.vc('pagerLeftArrowIcon', t.pagerLeftArrowIcon)('pagerRightArrowIcon', t.pagerRightArrowIcon)(
            'pagerPreviousIcon',
            t.pagerPreviousIcon
          )('pagerNextIcon', t.pagerNextIcon)('page', t.curPage)('size', t.pageSize)('count', t.rowCount)(
            'hidden',
            !t.isVisible
          );
        }
      }
      const F = function (t) {
        return { 'selected-count': t };
      };
      function N(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'li', 6),
            r.bc(1, 'a', 7),
            r.jc('click', function () {
              r.Dc(t);
              const n = e.$implicit;
              return r.nc().selectPage(n.number);
            }),
            r.Mc(2),
            r.ac(),
            r.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = r.nc();
          r.Mb('active', t.number === n.page), r.Jb('aria-label', 'page ' + t.number), r.Ib(2), r.Oc(' ', t.text, ' ');
        }
      }
      function V(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'datatable-body-cell', 3),
            r.jc('activate', function (n) {
              r.Dc(t);
              const i = e.index;
              return r.nc(2).onActivate(n, i);
            })('treeAction', function () {
              return r.Dc(t), r.nc(2).onTreeAction();
            }),
            r.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = r.nc(2);
          r.vc('row', n.row)('group', n.group)('expanded', n.expanded)('isSelected', n.isSelected)(
            'rowIndex',
            n.rowIndex
          )('column', t)('rowHeight', n.rowHeight)('displayCheck', n.displayCheck)('treeStatus', n.treeStatus);
        }
      }
      function L(t, e) {
        if ((1 & t && (r.bc(0, 'div', 1), r.Kc(1, V, 1, 9, 'datatable-body-cell', 2), r.ac()), 2 & t)) {
          const t = e.$implicit,
            n = r.nc();
          r.Lb('datatable-row-', t.type, ' datatable-row-group'),
            r.vc('ngStyle', n._groupStyles[t.type]),
            r.Ib(1),
            r.vc('ngForOf', t.columns)('ngForTrackBy', n.columnTrackingFn);
        }
      }
      function H(t, e) {}
      function z(t, e) {
        if ((1 & t && r.Kc(0, H, 0, 0, 'ng-template', 4), 2 & t)) {
          const t = r.nc(2);
          r.vc('ngTemplateOutlet', t.groupHeader.template)('ngTemplateOutletContext', t.groupContext);
        }
      }
      function B(t, e) {
        if ((1 & t && (r.bc(0, 'div', 3), r.Kc(1, z, 1, 2, void 0, 1), r.ac()), 2 & t)) {
          const t = r.nc();
          r.vc('ngStyle', t.getGroupHeaderStyle()), r.Ib(1), r.vc('ngIf', t.groupHeader && t.groupHeader.template);
        }
      }
      function U(t, e) {
        1 & t &&
          r.tc(0, 0, [
            '*ngIf',
            '(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template',
          ]);
      }
      function W(t, e) {}
      function $(t, e) {
        if ((1 & t && r.Kc(0, W, 0, 0, 'ng-template', 4), 2 & t)) {
          const t = r.nc(2);
          r.vc('ngTemplateOutlet', t.rowDetail.template)('ngTemplateOutletContext', t.rowContext);
        }
      }
      function q(t, e) {
        if ((1 & t && (r.bc(0, 'div', 5), r.Kc(1, $, 1, 2, void 0, 1), r.ac()), 2 & t)) {
          const t = r.nc();
          r.Jc('height', t.detailRowHeight, 'px'), r.Ib(1), r.vc('ngIf', t.rowDetail && t.rowDetail.template);
        }
      }
      const G = ['cellTemplate'];
      function X(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'label', 4),
            r.bc(1, 'input', 5),
            r.jc('click', function (e) {
              return r.Dc(t), r.nc().onCheckboxChange(e);
            }),
            r.ac(),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc();
          r.Ib(1), r.vc('checked', t.isSelected);
        }
      }
      function K(t, e) {
        1 & t && r.Wb(0, 'i', 11);
      }
      function Y(t, e) {
        1 & t && r.Wb(0, 'i', 12);
      }
      function Z(t, e) {
        1 & t && r.Wb(0, 'i', 13);
      }
      function Q(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'button', 7),
            r.jc('click', function () {
              return r.Dc(t), r.nc(2).onTreeAction();
            }),
            r.bc(1, 'span'),
            r.Kc(2, K, 1, 0, 'i', 8),
            r.Kc(3, Y, 1, 0, 'i', 9),
            r.Kc(4, Z, 1, 0, 'i', 10),
            r.ac(),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc(2);
          r.vc('disabled', 'disabled' === t.treeStatus),
            r.Ib(2),
            r.vc('ngIf', 'loading' === t.treeStatus),
            r.Ib(1),
            r.vc('ngIf', 'collapsed' === t.treeStatus),
            r.Ib(1),
            r.vc('ngIf', 'expanded' === t.treeStatus || 'disabled' === t.treeStatus);
        }
      }
      function J(t, e) {}
      const tt = function (t) {
        return { cellContext: t };
      };
      function et(t, e) {
        if ((1 & t && r.Kc(0, J, 0, 0, 'ng-template', 14), 2 & t)) {
          const t = r.nc(2);
          r.vc('ngTemplateOutlet', t.column.treeToggleTemplate)('ngTemplateOutletContext', r.xc(2, tt, t.cellContext));
        }
      }
      function nt(t, e) {
        if ((1 & t && (r.Zb(0), r.Kc(1, Q, 5, 4, 'button', 6), r.Kc(2, et, 1, 4, void 0, 2), r.Yb()), 2 & t)) {
          const t = r.nc();
          r.Ib(1), r.vc('ngIf', !t.column.treeToggleTemplate), r.Ib(1), r.vc('ngIf', t.column.treeToggleTemplate);
        }
      }
      function it(t, e) {
        if ((1 & t && r.Wb(0, 'span', 15), 2 & t)) {
          const t = r.nc();
          r.vc('title', t.sanitizedValue)('innerHTML', t.value, r.Ec);
        }
      }
      function rt(t, e) {}
      function st(t, e) {
        if ((1 & t && r.Kc(0, rt, 0, 0, 'ng-template', 14, 16, r.Lc), 2 & t)) {
          const t = r.nc();
          r.vc('ngTemplateOutlet', t.column.cellTemplate)('ngTemplateOutletContext', t.cellContext);
        }
      }
      function ot(t, e) {
        if ((1 & t && r.Wb(0, 'datatable-body-row', 1), 2 & t)) {
          const t = r.nc();
          r.vc('innerWidth', t.innerWidth)('offsetX', t.offsetX)('columns', t._internalColumns)(
            'rowHeight',
            t.rowHeight
          )('row', t.summaryRow)('rowIndex', -1);
        }
      }
      let at = (() => {
          let t = class {
            constructor(t) {
              (this.document = t), (this.width = this.getWidth());
            }
            getWidth() {
              const t = this.document.createElement('div');
              (t.style.visibility = 'hidden'),
                (t.style.width = '100px'),
                (t.style.msOverflowStyle = 'scrollbar'),
                this.document.body.appendChild(t);
              const e = t.offsetWidth;
              t.style.overflow = 'scroll';
              const n = this.document.createElement('div');
              (n.style.width = '100%'), t.appendChild(n);
              const i = n.offsetWidth;
              return t.parentNode.removeChild(t), e - i;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(s.d));
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        ct = (() => {
          let t = class {
            getDimensions(t) {
              return t.getBoundingClientRect();
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        lt = (() => {
          let t = class {
            constructor() {
              this.columnInputChanges = new o.a();
            }
            get columnInputChanges$() {
              return this.columnInputChanges.asObservable();
            }
            onInputChange() {
              this.columnInputChanges.next();
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        ut = (() => {
          let t = class {
            constructor(t) {
              this.template = t;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.O));
            }),
            (t.ɵdir = r.Qb({ type: t, selectors: [['', 'ngx-datatable-footer-template', '']] })),
            t
          );
        })(),
        ht = (() => {
          let t = class {
            constructor(t, e) {
              (this.element = t), (this.zone = e), (this.isVisible = !1), (this.visible = new r.p());
            }
            ngOnInit() {
              this.runCheck();
            }
            ngOnDestroy() {
              clearTimeout(this.timeout);
            }
            onVisibilityChange() {
              this.zone.run(() => {
                (this.isVisible = !0), this.visible.emit(!0);
              });
            }
            runCheck() {
              const t = () => {
                const { offsetHeight: e, offsetWidth: n } = this.element.nativeElement;
                e && n
                  ? (clearTimeout(this.timeout), this.onVisibilityChange())
                  : (clearTimeout(this.timeout),
                    this.zone.runOutsideAngular(() => {
                      this.timeout = setTimeout(() => t(), 50);
                    }));
              };
              this.timeout = setTimeout(() => t());
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m), r.Vb(r.B));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'visibilityObserver', '']],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && r.Mb('visible', e.isVisible);
              },
              outputs: { visible: 'visible' },
            })),
            t
          );
        })(),
        dt = (() => {
          let t = class {
            constructor(t) {
              (this.dragX = !0),
                (this.dragY = !0),
                (this.dragStart = new r.p()),
                (this.dragging = new r.p()),
                (this.dragEnd = new r.p()),
                (this.isDragging = !1),
                (this.element = t.nativeElement);
            }
            ngOnChanges(t) {
              t.dragEventTarget &&
                t.dragEventTarget.currentValue &&
                this.dragModel.dragging &&
                this.onMousedown(t.dragEventTarget.currentValue);
            }
            ngOnDestroy() {
              this._destroySubscription();
            }
            onMouseup(t) {
              this.isDragging &&
                ((this.isDragging = !1),
                this.element.classList.remove('dragging'),
                this.subscription &&
                  (this._destroySubscription(),
                  this.dragEnd.emit({ event: t, element: this.element, model: this.dragModel })));
            }
            onMousedown(t) {
              if (t.target.classList.contains('draggable') && (this.dragX || this.dragY)) {
                t.preventDefault(), (this.isDragging = !0);
                const e = { x: t.clientX, y: t.clientY },
                  n = Object(a.a)(document, 'mouseup');
                this.subscription = n.subscribe((t) => this.onMouseup(t));
                const i = Object(a.a)(document, 'mousemove')
                  .pipe(Object(l.a)(n))
                  .subscribe((t) => this.move(t, e));
                this.subscription.add(i),
                  this.dragStart.emit({ event: t, element: this.element, model: this.dragModel });
              }
            }
            move(t, e) {
              if (!this.isDragging) return;
              const n = t.clientY - e.y;
              this.dragX && (this.element.style.left = `${t.clientX - e.x}px`),
                this.dragY && (this.element.style.top = `${n}px`),
                this.element.classList.add('dragging'),
                this.dragging.emit({ event: t, element: this.element, model: this.dragModel });
            }
            _destroySubscription() {
              this.subscription && (this.subscription.unsubscribe(), (this.subscription = void 0));
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'draggable', '']],
              inputs: { dragX: 'dragX', dragY: 'dragY', dragEventTarget: 'dragEventTarget', dragModel: 'dragModel' },
              outputs: { dragStart: 'dragStart', dragging: 'dragging', dragEnd: 'dragEnd' },
              features: [r.Gb],
            })),
            t
          );
        })(),
        pt = (() => {
          let t = class {
            constructor(t, e) {
              (this.renderer = e),
                (this.resizeEnabled = !0),
                (this.resize = new r.p()),
                (this.resizing = !1),
                (this.element = t.nativeElement);
            }
            ngAfterViewInit() {
              const t = this.renderer;
              (this.resizeHandle = t.createElement('span')),
                t.addClass(this.resizeHandle, this.resizeEnabled ? 'resize-handle' : 'resize-handle--not-resizable'),
                t.appendChild(this.element, this.resizeHandle);
            }
            ngOnDestroy() {
              this._destroySubscription(),
                this.renderer.destroyNode
                  ? this.renderer.destroyNode(this.resizeHandle)
                  : this.resizeHandle &&
                    this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);
            }
            onMouseup() {
              (this.resizing = !1),
                this.subscription &&
                  !this.subscription.closed &&
                  (this._destroySubscription(), this.resize.emit(this.element.clientWidth));
            }
            onMousedown(t) {
              const e = t.target.classList.contains('resize-handle'),
                n = this.element.clientWidth,
                i = t.screenX;
              if (e) {
                t.stopPropagation(), (this.resizing = !0);
                const e = Object(a.a)(document, 'mouseup');
                this.subscription = e.subscribe((t) => this.onMouseup());
                const r = Object(a.a)(document, 'mousemove')
                  .pipe(Object(l.a)(e))
                  .subscribe((t) => this.move(t, n, i));
                this.subscription.add(r);
              }
            }
            move(t, e, n) {
              const i = e + (t.screenX - n);
              (!this.minWidth || i >= this.minWidth) &&
                (!this.maxWidth || i <= this.maxWidth) &&
                (this.element.style.width = `${i}px`);
            }
            _destroySubscription() {
              this.subscription && (this.subscription.unsubscribe(), (this.subscription = void 0));
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m), r.Vb(r.G));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'resizeable', '']],
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('mousedown', function (t) {
                    return e.onMousedown(t);
                  }),
                  2 & t && r.Mb('resizeable', e.resizeEnabled);
              },
              inputs: { resizeEnabled: 'resizeEnabled', minWidth: 'minWidth', maxWidth: 'maxWidth' },
              outputs: { resize: 'resize' },
            })),
            t
          );
        })(),
        ft = (() => {
          let t = class {
            constructor(t, e) {
              (this.document = e),
                (this.reorder = new r.p()),
                (this.targetChanged = new r.p()),
                (this.differ = t.find({}).create());
            }
            ngAfterContentInit() {
              this.updateSubscriptions(), this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));
            }
            ngOnDestroy() {
              this.draggables.forEach((t) => {
                t.dragStart.unsubscribe(), t.dragging.unsubscribe(), t.dragEnd.unsubscribe();
              });
            }
            updateSubscriptions() {
              const t = this.differ.diff(this.createMapDiffs());
              if (t) {
                const e = ({ currentValue: t, previousValue: e }) => {
                    n({ previousValue: e }),
                      t &&
                        (t.dragStart.subscribe(this.onDragStart.bind(this)),
                        t.dragging.subscribe(this.onDragging.bind(this)),
                        t.dragEnd.subscribe(this.onDragEnd.bind(this)));
                  },
                  n = ({ previousValue: t }) => {
                    t && (t.dragStart.unsubscribe(), t.dragging.unsubscribe(), t.dragEnd.unsubscribe());
                  };
                t.forEachAddedItem(e), t.forEachRemovedItem(n);
              }
            }
            onDragStart() {
              this.positions = {};
              let t = 0;
              for (const e of this.draggables.toArray()) {
                const n = e.element,
                  i = parseInt(n.offsetLeft.toString(), 0);
                this.positions[e.dragModel.prop] = {
                  left: i,
                  right: i + parseInt(n.offsetWidth.toString(), 0),
                  index: t++,
                  element: n,
                };
              }
            }
            onDragging({ model: t, event: e }) {
              const n = this.positions[t.prop],
                i = this.isTarget(t, e);
              i
                ? this.lastDraggingIndex !== i.i &&
                  (this.targetChanged.emit({ prevIndex: this.lastDraggingIndex, newIndex: i.i, initialIndex: n.index }),
                  (this.lastDraggingIndex = i.i))
                : this.lastDraggingIndex !== n.index &&
                  (this.targetChanged.emit({ prevIndex: this.lastDraggingIndex, initialIndex: n.index }),
                  (this.lastDraggingIndex = n.index));
            }
            onDragEnd({ element: t, model: e, event: n }) {
              const i = this.positions[e.prop],
                r = this.isTarget(e, n);
              r && this.reorder.emit({ prevIndex: i.index, newIndex: r.i, model: e }),
                (this.lastDraggingIndex = void 0),
                (t.style.left = 'auto');
            }
            isTarget(t, e) {
              let n = 0;
              const i = this.document.elementsFromPoint(e.x || e.clientX, e.y || e.clientY);
              for (const r in this.positions) {
                const e = this.positions[r];
                if (t.prop !== r && i.find((t) => t === e.element)) return { pos: e, i: n };
                n++;
              }
            }
            createMapDiffs() {
              return this.draggables.toArray().reduce((t, e) => ((t[e.dragModel.$$id] = e), t), {});
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.v), r.Vb(s.d));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'orderable', '']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && r.Ob(n, dt, !0), 2 & t && r.Ac((i = r.kc())) && (e.draggables = i);
              },
              outputs: { reorder: 'reorder', targetChanged: 'targetChanged' },
            })),
            t
          );
        })(),
        mt = (() => {
          let t = class {
            constructor() {
              (this.pressEnabled = !0),
                (this.duration = 500),
                (this.longPressStart = new r.p()),
                (this.longPressing = new r.p()),
                (this.longPressEnd = new r.p()),
                (this.mouseX = 0),
                (this.mouseY = 0);
            }
            get press() {
              return this.pressing;
            }
            get isLongPress() {
              return this.isLongPressing;
            }
            onMouseDown(t) {
              if (1 !== t.which || !this.pressEnabled) return;
              if (t.target.classList.contains('resize-handle')) return;
              (this.mouseX = t.clientX), (this.mouseY = t.clientY), (this.pressing = !0), (this.isLongPressing = !1);
              const e = Object(a.a)(document, 'mouseup');
              (this.subscription = e.subscribe((t) => this.onMouseup())),
                (this.timeout = setTimeout(() => {
                  (this.isLongPressing = !0),
                    this.longPressStart.emit({ event: t, model: this.pressModel }),
                    this.subscription.add(
                      Object(a.a)(document, 'mousemove')
                        .pipe(Object(l.a)(e))
                        .subscribe((t) => this.onMouseMove(t))
                    ),
                    this.loop(t);
                }, this.duration)),
                this.loop(t);
            }
            onMouseMove(t) {
              if (this.pressing && !this.isLongPressing) {
                const e = Math.abs(t.clientX - this.mouseX) > 10,
                  n = Math.abs(t.clientY - this.mouseY) > 10;
                (e || n) && this.endPress();
              }
            }
            loop(t) {
              this.isLongPressing &&
                (this.timeout = setTimeout(() => {
                  this.longPressing.emit({ event: t, model: this.pressModel }), this.loop(t);
                }, 50));
            }
            endPress() {
              clearTimeout(this.timeout),
                (this.isLongPressing = !1),
                (this.pressing = !1),
                this._destroySubscription(),
                this.longPressEnd.emit({ model: this.pressModel });
            }
            onMouseup() {
              this.endPress();
            }
            ngOnDestroy() {
              this._destroySubscription();
            }
            _destroySubscription() {
              this.subscription && (this.subscription.unsubscribe(), (this.subscription = void 0));
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'long-press', '']],
              hostVars: 4,
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('mousedown', function (t) {
                    return e.onMouseDown(t);
                  }),
                  2 & t && r.Mb('press', e.press)('longpress', e.isLongPress);
              },
              inputs: { pressEnabled: 'pressEnabled', duration: 'duration', pressModel: 'pressModel' },
              outputs: { longPressStart: 'longPressStart', longPressing: 'longPressing', longPressEnd: 'longPressEnd' },
            })),
            t
          );
        })(),
        gt = (() => {
          let t = class {
            constructor(t, e, n) {
              (this.ngZone = t),
                (this.renderer = n),
                (this.scrollbarV = !1),
                (this.scrollbarH = !1),
                (this.scroll = new r.p()),
                (this.scrollYPos = 0),
                (this.scrollXPos = 0),
                (this.prevScrollYPos = 0),
                (this.prevScrollXPos = 0),
                (this._scrollEventListener = null),
                (this.element = e.nativeElement);
            }
            ngOnInit() {
              if (this.scrollbarV || this.scrollbarH) {
                const t = this.renderer;
                (this.parentElement = t.parentNode(t.parentNode(this.element))),
                  (this._scrollEventListener = this.onScrolled.bind(this)),
                  this.parentElement.addEventListener('scroll', this._scrollEventListener);
              }
            }
            ngOnDestroy() {
              this._scrollEventListener &&
                (this.parentElement.removeEventListener('scroll', this._scrollEventListener),
                (this._scrollEventListener = null));
            }
            setOffset(t) {
              this.parentElement && (this.parentElement.scrollTop = t);
            }
            onScrolled(t) {
              const e = t.currentTarget;
              requestAnimationFrame(() => {
                (this.scrollYPos = e.scrollTop), (this.scrollXPos = e.scrollLeft), this.updateOffset();
              });
            }
            updateOffset() {
              let t;
              this.scrollYPos < this.prevScrollYPos
                ? (t = 'down')
                : this.scrollYPos > this.prevScrollYPos && (t = 'up'),
                this.scroll.emit({ direction: t, scrollYPos: this.scrollYPos, scrollXPos: this.scrollXPos }),
                (this.prevScrollYPos = this.scrollYPos),
                (this.prevScrollXPos = this.scrollXPos);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.B), r.Vb(r.m), r.Vb(r.G));
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-scroller']],
              hostAttrs: [1, 'datatable-scroll'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t && r.Jc('height', e.scrollHeight, 'px')('width', e.scrollWidth, 'px');
              },
              inputs: {
                scrollbarV: 'scrollbarV',
                scrollbarH: 'scrollbarH',
                scrollHeight: 'scrollHeight',
                scrollWidth: 'scrollWidth',
              },
              outputs: { scroll: 'scroll' },
              ngContentSelectors: u,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (r.uc(), r.tc(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        bt = (() => {
          let t = class {
            constructor(t) {
              this.template = t;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.O));
            }),
            (t.ɵdir = r.Qb({ type: t, selectors: [['', 'ngx-datatable-group-header-template', '']] })),
            t
          );
        })(),
        _t = (() => {
          let t = class {
            constructor() {
              (this.rowHeight = 0), (this.toggle = new r.p());
            }
            get template() {
              return this._templateInput || this._templateQuery;
            }
            toggleExpandGroup(t) {
              this.toggle.emit({ type: 'group', value: t });
            }
            expandAllGroups() {
              this.toggle.emit({ type: 'all', value: !0 });
            }
            collapseAllGroups() {
              this.toggle.emit({ type: 'all', value: !1 });
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['ngx-datatable-group-header']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && r.Hc(n, bt, !0, r.O), 2 & t && r.Ac((i = r.kc())) && (e._templateQuery = i.first);
              },
              inputs: { rowHeight: 'rowHeight', _templateInput: ['template', '_templateInput'] },
              outputs: { toggle: 'toggle' },
            })),
            t
          );
        })();
      function yt() {
        return '';
      }
      function vt(t) {
        return null == t ? yt : 'number' == typeof t ? wt : -1 !== t.indexOf('.') ? Ct : xt;
      }
      function wt(t, e) {
        if (null == t) return '';
        if (!t || null == e) return t;
        const n = t[e];
        return null == n ? '' : n;
      }
      function xt(t, e) {
        if (null == t) return '';
        if (!t || !e) return t;
        const n = t[e];
        return null == n ? '' : n;
      }
      function Ct(t, e) {
        if (null == t) return '';
        if (!t || !e) return t;
        let n = t[e];
        if (void 0 !== n) return n;
        n = t;
        const i = e.split('.');
        if (i.length) for (let r = 0; r < i.length; r++) if (((n = n[i[r]]), null == n)) return '';
        return n;
      }
      function kt(t) {
        return t && ((e) => vt(t)(e, t));
      }
      function Ot(t, e, n) {
        if (e && n) {
          const i = {},
            r = t.length;
          let s = null;
          i[0] = new St();
          const o = t.reduce((t, e) => {
            const i = n(e);
            return -1 === t.indexOf(i) && t.push(i), t;
          }, []);
          for (let e = 0; e < r; e++) i[n(t[e])] = new St(t[e]);
          for (let c = 0; c < r; c++) {
            s = i[n(t[c])];
            let r = 0;
            const a = e(s.row);
            a && o.indexOf(a) > -1 && (r = a),
              (s.parent = i[r]),
              (s.row.level = s.parent.row.level + 1),
              s.parent.children.push(s);
          }
          let a = [];
          return (
            i[0].flatten(function () {
              a = [...a, this.row];
            }, !0),
            a
          );
        }
        return t;
      }
      class St {
        constructor(t = null) {
          t || (t = { level: -1, treeStatus: 'expanded' }), (this.row = t), (this.parent = null), (this.children = []);
        }
        flatten(t, e) {
          if ('expanded' === this.row.treeStatus)
            for (let n = 0, i = this.children.length; n < i; n++) {
              const i = this.children[n];
              t.apply(i, Array.prototype.slice.call(arguments, 2)), e && i.flatten.apply(i, arguments);
            }
        }
      }
      function Et(t) {
        return (t = (t = (t = t.replace(/[^a-zA-Z0-9 ]/g, ' ')).replace(/([a-z](?=[A-Z]))/g, '$1 '))
          .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')
          .trim()
          .toLowerCase()).replace(/([ 0-9]+)([a-zA-Z])/g, function (t, e, n) {
          return e.trim() + n.toUpperCase();
        });
      }
      function Tt(t) {
        if (!t) return;
        let e = !1;
        for (const n of t)
          n.$$id || (n.$$id = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4)),
            It(n.prop) && n.name && (n.prop = Et(n.name)),
            n.$$valueGetter || (n.$$valueGetter = vt(n.prop)),
            !It(n.prop) &&
              It(n.name) &&
              (n.name = String(n.prop)
                .replace(/([A-Z])/g, (t) => ` ${t}`)
                .replace(/^./, (t) => t.toUpperCase())),
            It(n.prop) && It(n.name) && (n.name = ''),
            n.hasOwnProperty('resizeable') || (n.resizeable = !0),
            n.hasOwnProperty('sortable') || (n.sortable = !0),
            n.hasOwnProperty('draggable') || (n.draggable = !0),
            n.hasOwnProperty('canAutoResize') || (n.canAutoResize = !0),
            n.hasOwnProperty('width') || (n.width = 150),
            n.hasOwnProperty('isTreeColumn') && n.isTreeColumn && !e ? (e = !0) : (n.isTreeColumn = !1);
      }
      function It(t) {
        return null == t;
      }
      var At = (function (t) {
          return (t.standard = 'standard'), (t.flex = 'flex'), (t.force = 'force'), t;
        })({}),
        Dt = (function (t) {
          return (
            (t.single = 'single'),
            (t.multi = 'multi'),
            (t.multiClick = 'multiClick'),
            (t.cell = 'cell'),
            (t.checkbox = 'checkbox'),
            t
          );
        })({}),
        jt = (function (t) {
          return (t.single = 'single'), (t.multi = 'multi'), t;
        })({}),
        Rt = (function (t) {
          return (t.header = 'header'), (t.body = 'body'), t;
        })({});
      let Pt = (() => {
          let t = class {
            constructor(t) {
              this.template = t;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.O));
            }),
            (t.ɵdir = r.Qb({ type: t, selectors: [['', 'ngx-datatable-header-template', '']] })),
            t
          );
        })(),
        Mt = (() => {
          let t = class {
            constructor(t) {
              this.template = t;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.O));
            }),
            (t.ɵdir = r.Qb({ type: t, selectors: [['', 'ngx-datatable-cell-template', '']] })),
            t
          );
        })(),
        Ft = (() => {
          let t = class {
            constructor(t) {
              this.template = t;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.O));
            }),
            (t.ɵdir = r.Qb({ type: t, selectors: [['', 'ngx-datatable-tree-toggle', '']] })),
            t
          );
        })(),
        Nt = (() => {
          let t = class {
            constructor(t) {
              (this.columnChangesService = t), (this.isFirstChange = !0);
            }
            get cellTemplate() {
              return this._cellTemplateInput || this._cellTemplateQuery;
            }
            get headerTemplate() {
              return this._headerTemplateInput || this._headerTemplateQuery;
            }
            get treeToggleTemplate() {
              return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;
            }
            ngOnChanges() {
              this.isFirstChange ? (this.isFirstChange = !1) : this.columnChangesService.onInputChange();
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(lt));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['ngx-datatable-column']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && (r.Hc(n, Mt, !0, r.O), r.Hc(n, Pt, !0, r.O), r.Hc(n, Ft, !0, r.O)),
                  2 & t &&
                    (r.Ac((i = r.kc())) && (e._cellTemplateQuery = i.first),
                    r.Ac((i = r.kc())) && (e._headerTemplateQuery = i.first),
                    r.Ac((i = r.kc())) && (e._treeToggleTemplateQuery = i.first));
              },
              inputs: {
                name: 'name',
                prop: 'prop',
                frozenLeft: 'frozenLeft',
                frozenRight: 'frozenRight',
                flexGrow: 'flexGrow',
                resizeable: 'resizeable',
                comparator: 'comparator',
                pipe: 'pipe',
                sortable: 'sortable',
                draggable: 'draggable',
                canAutoResize: 'canAutoResize',
                minWidth: 'minWidth',
                width: 'width',
                maxWidth: 'maxWidth',
                checkboxable: 'checkboxable',
                headerCheckboxable: 'headerCheckboxable',
                headerClass: 'headerClass',
                cellClass: 'cellClass',
                isTreeColumn: 'isTreeColumn',
                treeLevelIndent: 'treeLevelIndent',
                summaryFunc: 'summaryFunc',
                summaryTemplate: 'summaryTemplate',
                _cellTemplateInput: ['cellTemplate', '_cellTemplateInput'],
                _headerTemplateInput: ['headerTemplate', '_headerTemplateInput'],
                _treeToggleTemplateInput: ['treeToggleTemplate', '_treeToggleTemplateInput'],
              },
              features: [r.Gb],
            })),
            t
          );
        })(),
        Vt = (() => {
          let t = class {
            constructor(t) {
              this.template = t;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.O));
            }),
            (t.ɵdir = r.Qb({ type: t, selectors: [['', 'ngx-datatable-row-detail-template', '']] })),
            t
          );
        })(),
        Lt = (() => {
          let t = class {
            constructor() {
              (this.rowHeight = 0), (this.toggle = new r.p());
            }
            get template() {
              return this._templateInput || this._templateQuery;
            }
            toggleExpandRow(t) {
              this.toggle.emit({ type: 'row', value: t });
            }
            expandAllRows() {
              this.toggle.emit({ type: 'all', value: !0 });
            }
            collapseAllRows() {
              this.toggle.emit({ type: 'all', value: !1 });
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['ngx-datatable-row-detail']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && r.Hc(n, Vt, !0, r.O), 2 & t && r.Ac((i = r.kc())) && (e._templateQuery = i.first);
              },
              inputs: { rowHeight: 'rowHeight', _templateInput: ['template', '_templateInput'] },
              outputs: { toggle: 'toggle' },
            })),
            t
          );
        })(),
        Ht = (() => {
          let t = class {
            get template() {
              return this._templateInput || this._templateQuery;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['ngx-datatable-footer']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && r.Ob(n, ut, !0, r.O), 2 & t && r.Ac((i = r.kc())) && (e._templateQuery = i.first);
              },
              inputs: {
                footerHeight: 'footerHeight',
                totalMessage: 'totalMessage',
                selectedMessage: 'selectedMessage',
                pagerLeftArrowIcon: 'pagerLeftArrowIcon',
                pagerRightArrowIcon: 'pagerRightArrowIcon',
                pagerPreviousIcon: 'pagerPreviousIcon',
                pagerNextIcon: 'pagerNextIcon',
                _templateInput: ['template', '_templateInput'],
              },
            })),
            t
          );
        })();
      function zt(t) {
        const e = { left: [], center: [], right: [] };
        if (t) for (const n of t) n.frozenLeft ? e.left.push(n) : n.frozenRight ? e.right.push(n) : e.center.push(n);
        return e;
      }
      function Bt(t, e) {
        return { left: Ut(t.left), center: Ut(t.center), right: Ut(t.right), total: Math.floor(Ut(e)) };
      }
      function Ut(t, e) {
        let n = 0;
        if (t) for (const i of t) n += parseFloat(e && i[e] ? i[e] : i.width);
        return n;
      }
      function Wt(t) {
        const e = [],
          n = zt(t);
        return (
          e.push({ type: 'left', columns: n.left }),
          e.push({ type: 'center', columns: n.center }),
          e.push({ type: 'right', columns: n.right }),
          e
        );
      }
      class $t {
        constructor() {
          this.treeArray = [];
        }
        clearCache() {
          this.treeArray = [];
        }
        initCache(t) {
          const {
              rows: e,
              rowHeight: n,
              detailRowHeight: i,
              externalVirtual: r,
              rowCount: s,
              rowIndexes: o,
              rowExpansions: a,
            } = t,
            c = 'function' == typeof n,
            l = 'function' == typeof i;
          if (!c && isNaN(n))
            throw new Error(
              `Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${n}) when 'scrollbarV' is enabled.`
            );
          if (!l && isNaN(i))
            throw new Error(
              `Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${i}) when 'scrollbarV' is enabled.`
            );
          const u = r ? s : e.length;
          this.treeArray = new Array(u);
          for (let h = 0; h < u; ++h) this.treeArray[h] = 0;
          for (let h = 0; h < u; ++h) {
            const t = e[h];
            let r = n;
            c && (r = n(t));
            const s = a.has(t);
            t && s && (r += l ? i(t, o.get(t)) : i), this.update(h, r);
          }
        }
        getRowIndex(t) {
          return 0 === t ? 0 : this.calcRowIndex(t);
        }
        update(t, e) {
          if (!this.treeArray.length)
            throw new Error(`Update at index ${t} with value ${e} failed:\n        Row Height cache not initialized.`);
          const n = this.treeArray.length;
          for (t |= 0; t < n; ) (this.treeArray[t] += e), (t |= t + 1);
        }
        query(t) {
          if (!this.treeArray.length)
            throw new Error(`query at index ${t} failed: Fenwick tree array not initialized.`);
          let e = 0;
          for (t |= 0; t >= 0; ) (e += this.treeArray[t]), (t = (t & (t + 1)) - 1);
          return e;
        }
        queryBetween(t, e) {
          return this.query(e) - this.query(t - 1);
        }
        calcRowIndex(t) {
          if (!this.treeArray.length) return 0;
          let e = -1;
          const n = this.treeArray.length;
          for (let i = Math.pow(2, n.toString(2).length - 1); 0 !== i; i >>= 1) {
            const r = e + i;
            r < n && t >= this.treeArray[r] && ((t -= this.treeArray[r]), (e = r));
          }
          return e + 1;
        }
      }
      const qt = {},
        Gt = 'undefined' != typeof document ? document.createElement('div').style : void 0,
        Xt = (function () {
          const t = 'undefined' != typeof window ? window.getComputedStyle(document.documentElement, '') : void 0,
            e =
              void 0 !== t
                ? Array.prototype.slice
                    .call(t)
                    .join('')
                    .match(/-(moz|webkit|ms)-/)
                : null,
            n = null !== e ? e[1] : void 0,
            i = void 0 !== n ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + n + ')', 'i'))[1] : void 0;
          return i ? { dom: i, lowercase: n, css: `-${n}-`, js: n[0].toUpperCase() + n.substr(1) } : void 0;
        })();
      function Kt(t) {
        const e = Et(t);
        return (
          qt[e] ||
            (void 0 !== Xt && void 0 !== Gt[Xt.css + t] ? (qt[e] = Xt.css + t) : void 0 !== Gt[t] && (qt[e] = t)),
          qt[e]
        );
      }
      const Yt = 'undefined' != typeof window ? Kt('transform') : void 0,
        Zt = 'undefined' != typeof window ? Kt('backfaceVisibility') : void 0,
        Qt = 'undefined' != typeof window ? !!Kt('transform') : void 0,
        Jt = 'undefined' != typeof window ? !!Kt('perspective') : void 0,
        te = 'undefined' != typeof window ? window.navigator.userAgent : 'Chrome',
        ee = /Safari\//.test(te) && !/Chrome\//.test(te);
      function ne(t, e, n) {
        void 0 !== Yt && Qt
          ? !ee && Jt
            ? ((t[Yt] = `translate3d(${e}px, ${n}px, 0)`), (t[Zt] = 'hidden'))
            : (t[Et(Yt)] = `translate(${e}px, ${n}px)`)
          : ((t.top = `${n}px`), (t.left = `${e}px`));
      }
      let ie = (() => {
          let t = class {
            constructor(t) {
              (this.cd = t),
                (this.selected = []),
                (this.scroll = new r.p()),
                (this.page = new r.p()),
                (this.activate = new r.p()),
                (this.select = new r.p()),
                (this.detailToggle = new r.p()),
                (this.rowContextmenu = new r.p(!1)),
                (this.treeAction = new r.p()),
                (this.rowHeightsCache = new $t()),
                (this.temp = []),
                (this.offsetY = 0),
                (this.indexes = {}),
                (this.rowIndexes = new WeakMap()),
                (this.rowExpansions = []),
                (this.getDetailRowHeight = (t, e) => {
                  if (!this.rowDetail) return 0;
                  const n = this.rowDetail.rowHeight;
                  return 'function' == typeof n ? n(t, e) : n;
                }),
                (this.rowTrackingFn = (t, e) => {
                  const n = this.getRowIndex(e);
                  return this.trackByProp ? e[this.trackByProp] : n;
                });
            }
            set pageSize(t) {
              (this._pageSize = t), this.recalcLayout();
            }
            get pageSize() {
              return this._pageSize;
            }
            set rows(t) {
              (this._rows = t), this.recalcLayout();
            }
            get rows() {
              return this._rows;
            }
            set columns(t) {
              this._columns = t;
              const e = zt(t);
              this.columnGroupWidths = Bt(e, t);
            }
            get columns() {
              return this._columns;
            }
            set offset(t) {
              (this._offset = t),
                (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) && this.recalcLayout();
            }
            get offset() {
              return this._offset;
            }
            set rowCount(t) {
              (this._rowCount = t), this.recalcLayout();
            }
            get rowCount() {
              return this._rowCount;
            }
            get bodyWidth() {
              return this.scrollbarH ? this.innerWidth + 'px' : '100%';
            }
            set bodyHeight(t) {
              (this._bodyHeight = this.scrollbarV ? t + 'px' : 'auto'), this.recalcLayout();
            }
            get bodyHeight() {
              return this._bodyHeight;
            }
            get selectEnabled() {
              return !!this.selectionType;
            }
            get scrollHeight() {
              if (this.scrollbarV && this.virtualization && this.rowCount)
                return this.rowHeightsCache.query(this.rowCount - 1);
            }
            ngOnInit() {
              this.rowDetail &&
                (this.listener = this.rowDetail.toggle.subscribe(({ type: t, value: e }) => {
                  'row' === t && this.toggleRowExpansion(e),
                    'all' === t && this.toggleAllRows(e),
                    this.updateIndexes(),
                    this.updateRows(),
                    this.cd.markForCheck();
                })),
                this.groupHeader &&
                  (this.listener = this.groupHeader.toggle.subscribe(({ type: t, value: e }) => {
                    'group' === t && this.toggleRowExpansion(e),
                      'all' === t && this.toggleAllRows(e),
                      this.updateIndexes(),
                      this.updateRows(),
                      this.cd.markForCheck();
                  }));
            }
            ngOnDestroy() {
              (this.rowDetail || this.groupHeader) && this.listener.unsubscribe();
            }
            updateOffsetY(t) {
              this.scroller &&
                (this.scrollbarV && this.virtualization && t
                  ? (t = this.rowHeightsCache.query(this.pageSize * t - 1))
                  : this.scrollbarV && !this.virtualization && (t = 0),
                this.scroller.setOffset(t || 0));
            }
            onBodyScroll(t) {
              const e = t.scrollYPos,
                n = t.scrollXPos;
              (this.offsetY === e && this.offsetX === n) || this.scroll.emit({ offsetY: e, offsetX: n }),
                (this.offsetY = e),
                (this.offsetX = n),
                this.updateIndexes(),
                this.updatePage(t.direction),
                this.updateRows();
            }
            updatePage(t) {
              let e = this.indexes.first / this.pageSize;
              'up' === t ? (e = Math.ceil(e)) : 'down' === t && (e = Math.floor(e)),
                void 0 === t || isNaN(e) || this.page.emit({ offset: e });
            }
            updateRows() {
              const { first: t, last: e } = this.indexes;
              let n = t,
                i = 0;
              const r = [];
              if (this.groupedRows) {
                let t = 3;
                for (
                  1 === this.groupedRows.length && (t = this.groupedRows[0].value.length);
                  n < e && n < this.groupedRows.length;

                ) {
                  const t = this.groupedRows[n];
                  this.rowIndexes.set(t, n),
                    t.value &&
                      t.value.forEach((t, e) => {
                        this.rowIndexes.set(t, `${n}-${e}`);
                      }),
                    (r[i] = t),
                    i++,
                    n++;
                }
              } else
                for (; n < e && n < this.rowCount; ) {
                  const t = this.rows[n];
                  t && (this.rowIndexes.set(t, n), (r[i] = t)), i++, n++;
                }
              this.temp = r;
            }
            getRowHeight(t) {
              return 'function' == typeof this.rowHeight ? this.rowHeight(t) : this.rowHeight;
            }
            getGroupHeight(t) {
              let e = 0;
              if (t.value) for (let n = 0; n < t.value.length; n++) e += this.getRowAndDetailHeight(t.value[n]);
              return e;
            }
            getRowAndDetailHeight(t) {
              let e = this.getRowHeight(t);
              return this.getRowExpanded(t) && (e += this.getDetailRowHeight(t)), e;
            }
            getRowsStyles(t) {
              const e = {};
              if (
                (this.groupedRows && (e.width = this.columnGroupWidths.total), this.scrollbarV && this.virtualization)
              ) {
                let n = 0;
                if (this.groupedRows) {
                  const e = t[t.length - 1];
                  n = e ? this.getRowIndex(e) : 0;
                } else n = this.getRowIndex(t);
                ne(e, 0, this.rowHeightsCache.query(n - 1));
              }
              return e;
            }
            getBottomSummaryRowStyles() {
              if (!this.scrollbarV || !this.rows || !this.rows.length) return null;
              const t = { position: 'absolute' };
              return ne(t, 0, this.rowHeightsCache.query(this.rows.length - 1)), t;
            }
            hideIndicator() {
              setTimeout(() => (this.loadingIndicator = !1), 500);
            }
            updateIndexes() {
              let t = 0,
                e = 0;
              if (this.scrollbarV)
                if (this.virtualization) {
                  const n = parseInt(this.bodyHeight, 0);
                  (t = this.rowHeightsCache.getRowIndex(this.offsetY)),
                    (e = this.rowHeightsCache.getRowIndex(n + this.offsetY) + 1);
                } else (t = 0), (e = this.rowCount);
              else
                this.externalPaging || (t = Math.max(this.offset * this.pageSize, 0)),
                  (e = Math.min(t + this.pageSize, this.rowCount));
              this.indexes = { first: t, last: e };
            }
            refreshRowHeightCache() {
              if (
                this.scrollbarV &&
                (!this.scrollbarV || this.virtualization) &&
                (this.rowHeightsCache.clearCache(), this.rows && this.rows.length)
              ) {
                const t = new Set();
                for (const e of this.rows) this.getRowExpanded(e) && t.add(e);
                this.rowHeightsCache.initCache({
                  rows: this.rows,
                  rowHeight: this.rowHeight,
                  detailRowHeight: this.getDetailRowHeight,
                  externalVirtual: this.scrollbarV && this.externalPaging,
                  rowCount: this.rowCount,
                  rowIndexes: this.rowIndexes,
                  rowExpansions: t,
                });
              }
            }
            getAdjustedViewPortIndex() {
              const t = this.indexes.first;
              return this.scrollbarV && this.virtualization && this.rowHeightsCache.query(t - 1) <= this.offsetY
                ? t - 1
                : t;
            }
            toggleRowExpansion(t) {
              const e = this.getAdjustedViewPortIndex(),
                n = this.getRowExpandedIdx(t, this.rowExpansions),
                i = n > -1;
              if (this.scrollbarV && this.virtualization) {
                const e = this.getDetailRowHeight(t) * (i ? -1 : 1),
                  n = this.getRowIndex(t);
                this.rowHeightsCache.update(n, e);
              }
              i ? this.rowExpansions.splice(n, 1) : this.rowExpansions.push(t),
                this.detailToggle.emit({ rows: [t], currentIndex: e });
            }
            toggleAllRows(t) {
              this.rowExpansions = [];
              const e = this.getAdjustedViewPortIndex();
              if (t) for (const n of this.rows) this.rowExpansions.push(n);
              this.scrollbarV && this.recalcLayout(), this.detailToggle.emit({ rows: this.rows, currentIndex: e });
            }
            recalcLayout() {
              this.refreshRowHeightCache(), this.updateIndexes(), this.updateRows();
            }
            columnTrackingFn(t, e) {
              return e.$$id;
            }
            stylesByGroup(t) {
              const e = this.columnGroupWidths,
                n = this.offsetX,
                i = { width: `${e[t]}px` };
              if ('left' === t) ne(i, n, 0);
              else if ('right' === t) {
                const t = parseInt(this.innerWidth + '', 0);
                ne(i, -1 * (e.total - t - n), 0);
              }
              return i;
            }
            getRowExpanded(t) {
              if (0 === this.rowExpansions.length && this.groupExpansionDefault)
                for (const e of this.groupedRows) this.rowExpansions.push(e);
              return this.getRowExpandedIdx(t, this.rowExpansions) > -1;
            }
            getRowExpandedIdx(t, e) {
              if (!e || !e.length) return -1;
              const n = this.rowIdentity(t);
              return e.findIndex((t) => this.rowIdentity(t) === n);
            }
            getRowIndex(t) {
              return this.rowIndexes.get(t) || 0;
            }
            onTreeAction(t) {
              this.treeAction.emit({ row: t });
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.i));
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-body']],
              viewQuery: function (t, e) {
                var n;
                1 & t && r.Rc(gt, !0), 2 & t && r.Ac((n = r.kc())) && (e.scroller = n.first);
              },
              hostAttrs: [1, 'datatable-body'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t && r.Jc('width', e.bodyWidth)('height', e.bodyHeight);
              },
              inputs: {
                selected: 'selected',
                pageSize: 'pageSize',
                rows: 'rows',
                columns: 'columns',
                offset: 'offset',
                rowCount: 'rowCount',
                bodyHeight: 'bodyHeight',
                offsetX: 'offsetX',
                loadingIndicator: 'loadingIndicator',
                scrollbarV: 'scrollbarV',
                scrollbarH: 'scrollbarH',
                externalPaging: 'externalPaging',
                rowHeight: 'rowHeight',
                emptyMessage: 'emptyMessage',
                selectionType: 'selectionType',
                rowIdentity: 'rowIdentity',
                rowDetail: 'rowDetail',
                groupHeader: 'groupHeader',
                selectCheck: 'selectCheck',
                displayCheck: 'displayCheck',
                trackByProp: 'trackByProp',
                rowClass: 'rowClass',
                groupedRows: 'groupedRows',
                groupExpansionDefault: 'groupExpansionDefault',
                innerWidth: 'innerWidth',
                groupRowsBy: 'groupRowsBy',
                virtualization: 'virtualization',
                summaryRow: 'summaryRow',
                summaryPosition: 'summaryPosition',
                summaryHeight: 'summaryHeight',
              },
              outputs: {
                scroll: 'scroll',
                page: 'page',
                activate: 'activate',
                select: 'select',
                detailToggle: 'detailToggle',
                rowContextmenu: 'rowContextmenu',
                treeAction: 'treeAction',
              },
              decls: 5,
              vars: 9,
              consts: [
                [4, 'ngIf'],
                [
                  3,
                  'selected',
                  'rows',
                  'selectCheck',
                  'selectEnabled',
                  'selectionType',
                  'rowIdentity',
                  'select',
                  'activate',
                ],
                ['selector', ''],
                [3, 'scrollbarV', 'scrollbarH', 'scrollHeight', 'scrollWidth', 'scroll', 4, 'ngIf'],
                ['class', 'empty-row', 3, 'innerHTML', 4, 'ngIf'],
                [3, 'scrollbarV', 'scrollbarH', 'scrollHeight', 'scrollWidth', 'scroll'],
                [3, 'rowHeight', 'offsetX', 'innerWidth', 'rows', 'columns', 4, 'ngIf'],
                [
                  3,
                  'groupedRows',
                  'innerWidth',
                  'ngStyle',
                  'rowDetail',
                  'groupHeader',
                  'offsetX',
                  'detailRowHeight',
                  'row',
                  'expanded',
                  'rowIndex',
                  'rowContextmenu',
                  4,
                  'ngFor',
                  'ngForOf',
                  'ngForTrackBy',
                ],
                [3, 'ngStyle', 'rowHeight', 'offsetX', 'innerWidth', 'rows', 'columns', 4, 'ngIf'],
                [3, 'rowHeight', 'offsetX', 'innerWidth', 'rows', 'columns'],
                [
                  3,
                  'groupedRows',
                  'innerWidth',
                  'ngStyle',
                  'rowDetail',
                  'groupHeader',
                  'offsetX',
                  'detailRowHeight',
                  'row',
                  'expanded',
                  'rowIndex',
                  'rowContextmenu',
                ],
                [
                  'tabindex',
                  '-1',
                  3,
                  'isSelected',
                  'innerWidth',
                  'offsetX',
                  'columns',
                  'rowHeight',
                  'row',
                  'rowIndex',
                  'expanded',
                  'rowClass',
                  'displayCheck',
                  'treeStatus',
                  'treeAction',
                  'activate',
                  4,
                  'ngIf',
                  'ngIfElse',
                ],
                ['groupedRowsTemplate', ''],
                [
                  'tabindex',
                  '-1',
                  3,
                  'isSelected',
                  'innerWidth',
                  'offsetX',
                  'columns',
                  'rowHeight',
                  'row',
                  'rowIndex',
                  'expanded',
                  'rowClass',
                  'displayCheck',
                  'treeStatus',
                  'treeAction',
                  'activate',
                ],
                [
                  'tabindex',
                  '-1',
                  3,
                  'isSelected',
                  'innerWidth',
                  'offsetX',
                  'columns',
                  'rowHeight',
                  'row',
                  'group',
                  'rowIndex',
                  'expanded',
                  'rowClass',
                  'activate',
                  4,
                  'ngFor',
                  'ngForOf',
                  'ngForTrackBy',
                ],
                [
                  'tabindex',
                  '-1',
                  3,
                  'isSelected',
                  'innerWidth',
                  'offsetX',
                  'columns',
                  'rowHeight',
                  'row',
                  'group',
                  'rowIndex',
                  'expanded',
                  'rowClass',
                  'activate',
                ],
                [3, 'ngStyle', 'rowHeight', 'offsetX', 'innerWidth', 'rows', 'columns'],
                [1, 'empty-row', 3, 'innerHTML'],
              ],
              template: function (t, e) {
                1 & t &&
                  (r.Kc(0, h, 1, 0, 'datatable-progress', 0),
                  r.bc(1, 'datatable-selection', 1, 2),
                  r.jc('select', function (t) {
                    return e.select.emit(t);
                  })('activate', function (t) {
                    return e.activate.emit(t);
                  }),
                  r.Kc(3, _, 4, 8, 'datatable-scroller', 3),
                  r.Kc(4, y, 1, 1, 'div', 4),
                  r.ac()),
                  2 & t &&
                    (r.vc('ngIf', e.loadingIndicator),
                    r.Ib(1),
                    r.vc('selected', e.selected)('rows', e.rows)('selectCheck', e.selectCheck)(
                      'selectEnabled',
                      e.selectEnabled
                    )('selectionType', e.selectionType)('rowIdentity', e.rowIdentity),
                    r.Ib(2),
                    r.vc('ngIf', null == e.rows ? null : e.rows.length),
                    r.Ib(1),
                    r.vc('ngIf', !((null != e.rows && e.rows.length) || e.loadingIndicator)));
              },
              directives: function () {
                return [s.l, ve, fe, gt, s.k, Ce, be, s.m, ge];
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        re = (() => {
          let t = class {
            constructor(t) {
              (this.cd = t),
                (this.sort = new r.p()),
                (this.reorder = new r.p()),
                (this.resize = new r.p()),
                (this.select = new r.p()),
                (this.columnContextmenu = new r.p(!1)),
                (this._columnGroupWidths = { total: 100 }),
                (this._styleByGroup = { left: {}, center: {}, right: {} }),
                (this.destroyed = !1);
            }
            set innerWidth(t) {
              (this._innerWidth = t),
                setTimeout(() => {
                  if (this._columns) {
                    const t = zt(this._columns);
                    (this._columnGroupWidths = Bt(t, this._columns)), this.setStylesByGroup();
                  }
                });
            }
            get innerWidth() {
              return this._innerWidth;
            }
            set headerHeight(t) {
              this._headerHeight = 'auto' !== t ? `${t}px` : t;
            }
            get headerHeight() {
              return this._headerHeight;
            }
            set columns(t) {
              this._columns = t;
              const e = zt(t);
              (this._columnsByPin = Wt(t)),
                setTimeout(() => {
                  (this._columnGroupWidths = Bt(e, t)), this.setStylesByGroup();
                });
            }
            get columns() {
              return this._columns;
            }
            set offsetX(t) {
              (this._offsetX = t), this.setStylesByGroup();
            }
            get offsetX() {
              return this._offsetX;
            }
            ngOnDestroy() {
              this.destroyed = !0;
            }
            onLongPressStart({ event: t, model: e }) {
              (e.dragging = !0), (this.dragEventTarget = t);
            }
            onLongPressEnd({ event: t, model: e }) {
              (this.dragEventTarget = t),
                setTimeout(() => {
                  const t = this._columns.find((t) => t.$$id === e.$$id);
                  t && (t.dragging = !1);
                }, 5);
            }
            get headerWidth() {
              return this.scrollbarH ? this.innerWidth + 'px' : '100%';
            }
            trackByGroups(t, e) {
              return e.type;
            }
            columnTrackingFn(t, e) {
              return e.$$id;
            }
            onColumnResized(t, e) {
              t <= e.minWidth ? (t = e.minWidth) : t >= e.maxWidth && (t = e.maxWidth),
                this.resize.emit({ column: e, prevValue: e.width, newValue: t });
            }
            onColumnReordered({ prevIndex: t, newIndex: e, model: n }) {
              const i = this.getColumn(e);
              (i.isTarget = !1),
                (i.targetMarkerContext = void 0),
                this.reorder.emit({ column: n, prevValue: t, newValue: e });
            }
            onTargetChanged({ prevIndex: t, newIndex: e, initialIndex: n }) {
              if (t || 0 === t) {
                const e = this.getColumn(t);
                (e.isTarget = !1), (e.targetMarkerContext = void 0);
              }
              if (e || 0 === e) {
                const t = this.getColumn(e);
                (t.isTarget = !0),
                  n !== e &&
                    (t.targetMarkerContext = {
                      class: 'targetMarker '.concat(n > e ? 'dragFromRight' : 'dragFromLeft'),
                    });
              }
            }
            getColumn(t) {
              const e = this._columnsByPin[0].columns.length;
              if (t < e) return this._columnsByPin[0].columns[t];
              const n = this._columnsByPin[1].columns.length;
              return t < e + n ? this._columnsByPin[1].columns[t - e] : this._columnsByPin[2].columns[t - e - n];
            }
            onSort({ column: t, prevValue: e, newValue: n }) {
              if (t.dragging) return;
              const i = this.calcNewSorts(t, e, n);
              this.sort.emit({ sorts: i, column: t, prevValue: e, newValue: n });
            }
            calcNewSorts(t, e, n) {
              let i = 0;
              this.sorts || (this.sorts = []);
              const r = this.sorts.map((e, n) => ((e = Object.assign({}, e)).prop === t.prop && (i = n), e));
              return (
                void 0 === n
                  ? r.splice(i, 1)
                  : e
                  ? (r[i].dir = n)
                  : (this.sortType === jt.single && r.splice(0, this.sorts.length), r.push({ dir: n, prop: t.prop })),
                r
              );
            }
            setStylesByGroup() {
              (this._styleByGroup.left = this.calcStylesByGroup('left')),
                (this._styleByGroup.center = this.calcStylesByGroup('center')),
                (this._styleByGroup.right = this.calcStylesByGroup('right')),
                this.destroyed || this.cd.detectChanges();
            }
            calcStylesByGroup(t) {
              const e = this._columnGroupWidths,
                n = { width: `${e[t]}px` };
              return (
                'center' === t
                  ? ne(n, -1 * this.offsetX, 0)
                  : 'right' === t && ne(n, -1 * (e.total - this.innerWidth), 0),
                n
              );
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.i));
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-header']],
              hostAttrs: [1, 'datatable-header'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t && r.Jc('height', e.headerHeight)('width', e.headerWidth);
              },
              inputs: {
                innerWidth: 'innerWidth',
                headerHeight: 'headerHeight',
                columns: 'columns',
                offsetX: 'offsetX',
                sorts: 'sorts',
                sortAscendingIcon: 'sortAscendingIcon',
                sortDescendingIcon: 'sortDescendingIcon',
                scrollbarH: 'scrollbarH',
                dealsWithGroup: 'dealsWithGroup',
                targetMarkerTemplate: 'targetMarkerTemplate',
                sortType: 'sortType',
                allRowsSelected: 'allRowsSelected',
                selectionType: 'selectionType',
                reorderable: 'reorderable',
              },
              outputs: {
                sort: 'sort',
                reorder: 'reorder',
                resize: 'resize',
                select: 'select',
                columnContextmenu: 'columnContextmenu',
              },
              decls: 2,
              vars: 4,
              consts: [
                ['orderable', '', 1, 'datatable-header-inner', 3, 'reorder', 'targetChanged'],
                [3, 'class', 'ngStyle', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
                [3, 'ngStyle'],
                [
                  'resizeable',
                  '',
                  'long-press',
                  '',
                  'draggable',
                  '',
                  3,
                  'resizeEnabled',
                  'pressModel',
                  'pressEnabled',
                  'dragX',
                  'dragY',
                  'dragModel',
                  'dragEventTarget',
                  'headerHeight',
                  'isTarget',
                  'targetMarkerTemplate',
                  'targetMarkerContext',
                  'column',
                  'sortType',
                  'sorts',
                  'selectionType',
                  'sortAscendingIcon',
                  'sortDescendingIcon',
                  'allRowsSelected',
                  'resize',
                  'longPressStart',
                  'longPressEnd',
                  'sort',
                  'select',
                  'columnContextmenu',
                  4,
                  'ngFor',
                  'ngForOf',
                  'ngForTrackBy',
                ],
                [
                  'resizeable',
                  '',
                  'long-press',
                  '',
                  'draggable',
                  '',
                  3,
                  'resizeEnabled',
                  'pressModel',
                  'pressEnabled',
                  'dragX',
                  'dragY',
                  'dragModel',
                  'dragEventTarget',
                  'headerHeight',
                  'isTarget',
                  'targetMarkerTemplate',
                  'targetMarkerContext',
                  'column',
                  'sortType',
                  'sorts',
                  'selectionType',
                  'sortAscendingIcon',
                  'sortDescendingIcon',
                  'allRowsSelected',
                  'resize',
                  'longPressStart',
                  'longPressEnd',
                  'sort',
                  'select',
                  'columnContextmenu',
                ],
              ],
              template: function (t, e) {
                1 & t &&
                  (r.bc(0, 'div', 0),
                  r.jc('reorder', function (t) {
                    return e.onColumnReordered(t);
                  })('targetChanged', function (t) {
                    return e.onTargetChanged(t);
                  }),
                  r.Kc(1, w, 2, 5, 'div', 1),
                  r.ac()),
                  2 & t &&
                    (r.Jc('width', e._columnGroupWidths.total, 'px'),
                    r.Ib(1),
                    r.vc('ngForOf', e._columnsByPin)('ngForTrackBy', e.trackByGroups));
              },
              directives: function () {
                return [ft, s.k, s.m, he, pt, mt, dt];
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      function se(t, e, n) {
        let i, r, s;
        n = n || {};
        let o = null,
          a = 0;
        function c() {
          (a = !1 === n.leading ? 0 : +new Date()), (o = null), (s = t.apply(i, r));
        }
        return function () {
          const l = +new Date();
          a || !1 !== n.leading || (a = l);
          const u = e - (l - a);
          return (
            (i = this),
            (r = arguments),
            u <= 0
              ? (clearTimeout(o), (o = null), (a = l), (s = t.apply(i, r)))
              : o || !1 === n.trailing || (o = setTimeout(c, u)),
            s
          );
        };
      }
      function oe(t, e) {
        for (const n of e) {
          const e = t.indexOf(n);
          t.splice(e, 1);
        }
      }
      function ae(t, e = 300) {
        let n = 0;
        for (const i of t) n += i.width || e;
        return n;
      }
      var ce = (function (t) {
        return (t.asc = 'asc'), (t.desc = 'desc'), t;
      })({});
      function le(t, e) {
        if ((null == t && (t = 0), null == e && (e = 0), t instanceof Date && e instanceof Date)) {
          if (t < e) return -1;
          if (t > e) return 1;
        } else if (isNaN(parseFloat(t)) || !isFinite(t) || isNaN(parseFloat(e)) || !isFinite(e)) {
          if (((t = String(t)), (e = String(e)), t.toLowerCase() < e.toLowerCase())) return -1;
          if (t.toLowerCase() > e.toLowerCase()) return 1;
        } else {
          if (parseFloat(t) < parseFloat(e)) return -1;
          if (parseFloat(t) > parseFloat(e)) return 1;
        }
        return 0;
      }
      let ue = (() => {
          let t = class {
            constructor(t, e, n, i, s, o, a) {
              (this.scrollbarHelper = t),
                (this.dimensionsHelper = e),
                (this.cd = n),
                (this.columnChangesService = o),
                (this.configuration = a),
                (this.selected = []),
                (this.scrollbarV = !1),
                (this.scrollbarH = !1),
                (this.rowHeight = 30),
                (this.columnMode = At.standard),
                (this.headerHeight = 30),
                (this.footerHeight = 0),
                (this.externalPaging = !1),
                (this.externalSorting = !1),
                (this.loadingIndicator = !1),
                (this.reorderable = !0),
                (this.swapColumns = !0),
                (this.sortType = jt.single),
                (this.sorts = []),
                (this.cssClasses = {
                  sortAscending: 'datatable-icon-up',
                  sortDescending: 'datatable-icon-down',
                  pagerLeftArrow: 'datatable-icon-left',
                  pagerRightArrow: 'datatable-icon-right',
                  pagerPrevious: 'datatable-icon-prev',
                  pagerNext: 'datatable-icon-skip',
                }),
                (this.messages = {
                  emptyMessage: 'No data to display',
                  totalMessage: 'total',
                  selectedMessage: 'selected',
                }),
                (this.groupExpansionDefault = !1),
                (this.selectAllRowsOnPage = !1),
                (this.virtualization = !0),
                (this.summaryRow = !1),
                (this.summaryHeight = 30),
                (this.summaryPosition = 'top'),
                (this.scroll = new r.p()),
                (this.activate = new r.p()),
                (this.select = new r.p()),
                (this.sort = new r.p()),
                (this.page = new r.p()),
                (this.reorder = new r.p()),
                (this.resize = new r.p()),
                (this.tableContextmenu = new r.p(!1)),
                (this.treeAction = new r.p()),
                (this.rowCount = 0),
                (this._offsetX = new c.a(0)),
                (this._count = 0),
                (this._offset = 0),
                (this._subscriptions = []),
                (this.rowIdentity = (t) => (this._groupRowsBy ? t.key : t)),
                (this.element = i.nativeElement),
                (this.rowDiffer = s.find({}).create()),
                this.configuration &&
                  this.configuration.messages &&
                  (this.messages = Object.assign({}, this.configuration.messages));
            }
            set rows(t) {
              (this._rows = t),
                t && (this._internalRows = [...t]),
                this.externalSorting || this.sortInternalRows(),
                (this._internalRows = Ot(this._internalRows, kt(this.treeFromRelation), kt(this.treeToRelation))),
                this.recalculate(),
                this._rows &&
                  this._groupRowsBy &&
                  (this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy)),
                this.cd.markForCheck();
            }
            get rows() {
              return this._rows;
            }
            set groupRowsBy(t) {
              t &&
                ((this._groupRowsBy = t),
                this._rows &&
                  this._groupRowsBy &&
                  (this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy)));
            }
            get groupRowsBy() {
              return this._groupRowsBy;
            }
            set columns(t) {
              t && ((this._internalColumns = [...t]), Tt(this._internalColumns), this.recalculateColumns()),
                (this._columns = t);
            }
            get columns() {
              return this._columns;
            }
            set limit(t) {
              (this._limit = t), this.recalculate();
            }
            get limit() {
              return this._limit;
            }
            set count(t) {
              (this._count = t), this.recalculate();
            }
            get count() {
              return this._count;
            }
            set offset(t) {
              this._offset = t;
            }
            get offset() {
              return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);
            }
            get isFixedHeader() {
              const t = this.headerHeight;
              return 'string' != typeof t || 'auto' !== t;
            }
            get isFixedRow() {
              return 'auto' !== this.rowHeight;
            }
            get isVertScroll() {
              return this.scrollbarV;
            }
            get isVirtualized() {
              return this.virtualization;
            }
            get isHorScroll() {
              return this.scrollbarH;
            }
            get isSelectable() {
              return void 0 !== this.selectionType;
            }
            get isCheckboxSelection() {
              return this.selectionType === Dt.checkbox;
            }
            get isCellSelection() {
              return this.selectionType === Dt.cell;
            }
            get isSingleSelection() {
              return this.selectionType === Dt.single;
            }
            get isMultiSelection() {
              return this.selectionType === Dt.multi;
            }
            get isMultiClickSelection() {
              return this.selectionType === Dt.multiClick;
            }
            set columnTemplates(t) {
              (this._columnTemplates = t), this.translateColumns(t);
            }
            get columnTemplates() {
              return this._columnTemplates;
            }
            get allRowsSelected() {
              let t = this.rows && this.selected && this.selected.length === this.rows.length;
              if (this.bodyComponent && this.selectAllRowsOnPage) {
                const e = this.bodyComponent.indexes;
                t = this.selected.length === e.last - e.first;
              }
              return this.selected && this.rows && 0 !== this.rows.length && t;
            }
            ngOnInit() {
              this.recalculate();
            }
            ngAfterViewInit() {
              this.externalSorting || this.sortInternalRows(),
                'undefined' != typeof requestAnimationFrame &&
                  requestAnimationFrame(() => {
                    this.recalculate(),
                      this.externalPaging &&
                        this.scrollbarV &&
                        this.page.emit({ count: this.count, pageSize: this.pageSize, limit: this.limit, offset: 0 });
                  });
            }
            ngAfterContentInit() {
              this.columnTemplates.changes.subscribe((t) => this.translateColumns(t)),
                this.listenForColumnInputChanges();
            }
            translateColumns(t) {
              if (t) {
                const e = t.toArray();
                e.length &&
                  ((this._internalColumns = (function (t) {
                    const e = [];
                    for (const n of t) {
                      const t = {},
                        i = Object.getOwnPropertyNames(n);
                      for (const e of i) t[e] = n[e];
                      n.headerTemplate && (t.headerTemplate = n.headerTemplate),
                        n.cellTemplate && (t.cellTemplate = n.cellTemplate),
                        n.summaryFunc && (t.summaryFunc = n.summaryFunc),
                        n.summaryTemplate && (t.summaryTemplate = n.summaryTemplate),
                        e.push(t);
                    }
                    return e;
                  })(e)),
                  Tt(this._internalColumns),
                  this.recalculateColumns(),
                  this.sortInternalRows(),
                  this.cd.markForCheck());
              }
            }
            groupArrayBy(t, e) {
              const n = new Map();
              return (
                t.forEach((t) => {
                  const i = t[e];
                  n.has(i) ? n.get(i).push(t) : n.set(i, [t]);
                }),
                Array.from(n, (t) => ({ key: t[0], value: t[1] }))
              );
            }
            ngDoCheck() {
              this.rowDiffer.diff(this.rows) &&
                (this.externalSorting ? (this._internalRows = [...this.rows]) : this.sortInternalRows(),
                (this._internalRows = Ot(this._internalRows, kt(this.treeFromRelation), kt(this.treeToRelation))),
                this.recalculatePages(),
                this.cd.markForCheck());
            }
            recalculate() {
              this.recalculateDims(), this.recalculateColumns(), this.cd.markForCheck();
            }
            onWindowResize() {
              this.recalculate();
            }
            recalculateColumns(t = this._internalColumns, e = -1, n = this.scrollbarH) {
              if (!t) return;
              let i = this._innerWidth;
              return (
                this.scrollbarV && (i -= this.scrollbarHelper.width),
                this.columnMode === At.force
                  ? (function (t, e, n, i, r = 300) {
                      const s = t.slice(n + 1, t.length).filter((t) => !1 !== t.canAutoResize);
                      for (const h of s) h.$$oldWidth || (h.$$oldWidth = h.width);
                      let o = 0,
                        a = !1,
                        c = ae(t, r),
                        l = e - c;
                      const u = [];
                      do {
                        (o = l / s.length), (a = c >= e);
                        for (const t of s) {
                          if (a && i) t.width = t.$$oldWidth || t.width || r;
                          else {
                            const e = (t.width || r) + o;
                            t.minWidth && e < t.minWidth
                              ? ((t.width = t.minWidth), u.push(t))
                              : t.maxWidth && e > t.maxWidth
                              ? ((t.width = t.maxWidth), u.push(t))
                              : (t.width = e);
                          }
                          t.width = Math.max(0, t.width);
                        }
                        (c = ae(t)), (l = e - c), oe(s, u);
                      } while (l > 1 && 0 !== s.length);
                    })(t, i, e, n)
                  : this.columnMode === At.flex &&
                    (function (t, e) {
                      const n = (function (t, e) {
                          let n = 0;
                          for (const i of t) n += i.width;
                          return n;
                        })(t),
                        i = (function (t) {
                          let e = 0;
                          for (const n of t) e += n.flexGrow || 0;
                          return e;
                        })(t),
                        r = zt(t);
                      n !== e &&
                        (function (t, e, n) {
                          for (const s in t)
                            for (const i of t[s])
                              i.canAutoResize ? (i.width = 0) : ((e -= i.width), (n -= i.flexGrow ? i.flexGrow : 0));
                          const i = {};
                          let r = e;
                          do {
                            const e = r / n;
                            r = 0;
                            for (const n in t)
                              for (const s of t[n])
                                if (s.canAutoResize && !i[s.prop]) {
                                  const t = s.width + s.flexGrow * e;
                                  void 0 !== s.minWidth && t < s.minWidth
                                    ? ((r += t - s.minWidth), (s.width = s.minWidth), (i[s.prop] = !0))
                                    : (s.width = t);
                                }
                          } while (0 !== r);
                        })(r, e, i);
                    })(t, i),
                t
              );
            }
            recalculateDims() {
              const t = this.dimensionsHelper.getDimensions(this.element);
              if (((this._innerWidth = Math.floor(t.width)), this.scrollbarV)) {
                let e = t.height;
                this.headerHeight && (e -= this.headerHeight),
                  this.footerHeight && (e -= this.footerHeight),
                  (this.bodyHeight = e);
              }
              this.recalculatePages();
            }
            recalculatePages() {
              (this.pageSize = this.calcPageSize()), (this.rowCount = this.calcRowCount());
            }
            onBodyPage({ offset: t }) {
              (this.externalPaging && !this.virtualization) ||
                ((this.offset = t),
                this.page.emit({ count: this.count, pageSize: this.pageSize, limit: this.limit, offset: this.offset }));
            }
            onBodyScroll(t) {
              this._offsetX.next(t.offsetX), this.scroll.emit(t), this.cd.detectChanges();
            }
            onFooterPage(t) {
              (this.offset = t.page - 1),
                this.bodyComponent.updateOffsetY(this.offset),
                this.page.emit({ count: this.count, pageSize: this.pageSize, limit: this.limit, offset: this.offset }),
                this.selectAllRowsOnPage && ((this.selected = []), this.select.emit({ selected: this.selected }));
            }
            calcPageSize(t = this.rows) {
              if (this.scrollbarV && this.virtualization) {
                const t = Math.ceil(this.bodyHeight / this.rowHeight);
                return Math.max(t, 0);
              }
              return void 0 !== this.limit ? this.limit : t ? t.length : 0;
            }
            calcRowCount(t = this.rows) {
              return this.externalPaging
                ? this.count
                : t
                ? this.groupedRows
                  ? this.groupedRows.length
                  : null != this.treeFromRelation && null != this.treeToRelation
                  ? this._internalRows.length
                  : t.length
                : 0;
            }
            onColumnContextmenu({ event: t, column: e }) {
              this.tableContextmenu.emit({ event: t, type: Rt.header, content: e });
            }
            onRowContextmenu({ event: t, row: e }) {
              this.tableContextmenu.emit({ event: t, type: Rt.body, content: e });
            }
            onColumnResize({ column: t, newValue: e }) {
              if (void 0 === t) return;
              let n;
              const i = this._internalColumns.map(
                (i, r) => (
                  (i = Object.assign({}, i)).$$id === t.$$id && ((n = r), (i.width = e), (i.$$oldWidth = e)), i
                )
              );
              this.recalculateColumns(i, n), (this._internalColumns = i), this.resize.emit({ column: t, newValue: e });
            }
            onColumnReorder({ column: t, newValue: e, prevValue: n }) {
              const i = this._internalColumns.map((t) => Object.assign({}, t));
              if (this.swapColumns) {
                const r = i[e];
                (i[e] = t), (i[n] = r);
              } else if (e > n) {
                const t = i[n];
                for (let r = n; r < e; r++) i[r] = i[r + 1];
                i[e] = t;
              } else {
                const t = i[n];
                for (let r = n; r > e; r--) i[r] = i[r - 1];
                i[e] = t;
              }
              (this._internalColumns = i), this.reorder.emit({ column: t, newValue: e, prevValue: n });
            }
            onColumnSort(t) {
              this.selectAllRowsOnPage && ((this.selected = []), this.select.emit({ selected: this.selected })),
                (this.sorts = t.sorts),
                !1 === this.externalSorting && this.sortInternalRows(),
                (this._internalRows = Ot(this._internalRows, kt(this.treeFromRelation), kt(this.treeToRelation))),
                (this.offset = 0),
                this.bodyComponent.updateOffsetY(this.offset),
                this.sort.emit(t);
            }
            onHeaderSelect(t) {
              if (this.bodyComponent && this.selectAllRowsOnPage) {
                const t = this.bodyComponent.indexes.first,
                  e = this.bodyComponent.indexes.last,
                  n = this.selected.length === e - t;
                (this.selected = []), n || this.selected.push(...this._internalRows.slice(t, e));
              } else {
                const t = this.selected.length === this.rows.length;
                (this.selected = []), t || this.selected.push(...this.rows);
              }
              this.select.emit({ selected: this.selected });
            }
            onBodySelect(t) {
              this.select.emit(t);
            }
            onTreeAction(t) {
              const e = t.row,
                n = this._rows.findIndex((e) => e[this.treeToRelation] === t.row[this.treeToRelation]);
              this.treeAction.emit({ row: e, rowIndex: n });
            }
            ngOnDestroy() {
              this._subscriptions.forEach((t) => t.unsubscribe());
            }
            listenForColumnInputChanges() {
              this._subscriptions.push(
                this.columnChangesService.columnInputChanges$.subscribe(() => {
                  this.columnTemplates && this.columnTemplates.notifyOnChanges();
                })
              );
            }
            sortInternalRows() {
              this._internalRows = (function (t, e, n) {
                if (!t) return [];
                if (!n || !n.length || !e) return [...t];
                const i = new Map();
                t.forEach((t, e) => i.set(t, e));
                const r = [...t],
                  s = e.reduce(
                    (t, e) => (e.comparator && 'function' == typeof e.comparator && (t[e.prop] = e.comparator), t),
                    {}
                  ),
                  o = n.map((t) => {
                    const e = t.prop;
                    return { prop: e, dir: t.dir, valueGetter: vt(e), compareFn: s[e] || le };
                  });
                return r.sort(function (t, e) {
                  for (const n of o) {
                    const { prop: i, valueGetter: r } = n,
                      s = r(t, i),
                      o = r(e, i),
                      a = n.dir !== ce.desc ? n.compareFn(s, o, t, e, n.dir) : -n.compareFn(s, o, t, e, n.dir);
                    if (0 !== a) return a;
                  }
                  return i.has(t) && i.has(e) ? (i.get(t) < i.get(e) ? -1 : 1) : 0;
                });
              })(this._internalRows, this._internalColumns, this.sorts);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                r.Vb(at, 4),
                r.Vb(ct, 4),
                r.Vb(r.i),
                r.Vb(r.m),
                r.Vb(r.v),
                r.Vb(lt),
                r.Vb('configuration', 8)
              );
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['ngx-datatable']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && (r.Ob(n, Lt, !0), r.Ob(n, _t, !0), r.Ob(n, Ht, !0), r.Ob(n, Nt, !1)),
                  2 & t &&
                    (r.Ac((i = r.kc())) && (e.rowDetail = i.first),
                    r.Ac((i = r.kc())) && (e.groupHeader = i.first),
                    r.Ac((i = r.kc())) && (e.footer = i.first),
                    r.Ac((i = r.kc())) && (e.columnTemplates = i));
              },
              viewQuery: function (t, e) {
                var n;
                1 & t && (r.Rc(ie, !0), r.Rc(re, !0)),
                  2 & t &&
                    (r.Ac((n = r.kc())) && (e.bodyComponent = n.first),
                    r.Ac((n = r.kc())) && (e.headerComponent = n.first));
              },
              hostAttrs: [1, 'ngx-datatable'],
              hostVars: 22,
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc(
                    'resize',
                    function () {
                      return e.onWindowResize();
                    },
                    !1,
                    r.Cc
                  ),
                  2 & t &&
                    r.Mb('fixed-header', e.isFixedHeader)('fixed-row', e.isFixedRow)('scroll-vertical', e.isVertScroll)(
                      'virtualized',
                      e.isVirtualized
                    )('scroll-horz', e.isHorScroll)('selectable', e.isSelectable)(
                      'checkbox-selection',
                      e.isCheckboxSelection
                    )('cell-selection', e.isCellSelection)('single-selection', e.isSingleSelection)(
                      'multi-selection',
                      e.isMultiSelection
                    )('multi-click-selection', e.isMultiClickSelection);
              },
              inputs: {
                selected: 'selected',
                scrollbarV: 'scrollbarV',
                scrollbarH: 'scrollbarH',
                rowHeight: 'rowHeight',
                columnMode: 'columnMode',
                headerHeight: 'headerHeight',
                footerHeight: 'footerHeight',
                externalPaging: 'externalPaging',
                externalSorting: 'externalSorting',
                loadingIndicator: 'loadingIndicator',
                reorderable: 'reorderable',
                swapColumns: 'swapColumns',
                sortType: 'sortType',
                sorts: 'sorts',
                cssClasses: 'cssClasses',
                messages: 'messages',
                groupExpansionDefault: 'groupExpansionDefault',
                selectAllRowsOnPage: 'selectAllRowsOnPage',
                virtualization: 'virtualization',
                summaryRow: 'summaryRow',
                summaryHeight: 'summaryHeight',
                summaryPosition: 'summaryPosition',
                rowIdentity: 'rowIdentity',
                rows: 'rows',
                groupedRows: 'groupedRows',
                groupRowsBy: 'groupRowsBy',
                columns: 'columns',
                limit: 'limit',
                count: 'count',
                offset: 'offset',
                targetMarkerTemplate: 'targetMarkerTemplate',
                selectionType: 'selectionType',
                rowClass: 'rowClass',
                selectCheck: 'selectCheck',
                displayCheck: 'displayCheck',
                trackByProp: 'trackByProp',
                treeFromRelation: 'treeFromRelation',
                treeToRelation: 'treeToRelation',
              },
              outputs: {
                scroll: 'scroll',
                activate: 'activate',
                select: 'select',
                sort: 'sort',
                page: 'page',
                reorder: 'reorder',
                resize: 'resize',
                tableContextmenu: 'tableContextmenu',
                treeAction: 'treeAction',
              },
              decls: 5,
              vars: 34,
              consts: [
                ['visibilityObserver', '', 3, 'visible'],
                [
                  3,
                  'sorts',
                  'sortType',
                  'scrollbarH',
                  'innerWidth',
                  'offsetX',
                  'dealsWithGroup',
                  'columns',
                  'headerHeight',
                  'reorderable',
                  'targetMarkerTemplate',
                  'sortAscendingIcon',
                  'sortDescendingIcon',
                  'allRowsSelected',
                  'selectionType',
                  'sort',
                  'resize',
                  'reorder',
                  'select',
                  'columnContextmenu',
                  4,
                  'ngIf',
                ],
                [
                  3,
                  'groupRowsBy',
                  'groupedRows',
                  'rows',
                  'groupExpansionDefault',
                  'scrollbarV',
                  'scrollbarH',
                  'virtualization',
                  'loadingIndicator',
                  'externalPaging',
                  'rowHeight',
                  'rowCount',
                  'offset',
                  'trackByProp',
                  'columns',
                  'pageSize',
                  'offsetX',
                  'rowDetail',
                  'groupHeader',
                  'selected',
                  'innerWidth',
                  'bodyHeight',
                  'selectionType',
                  'emptyMessage',
                  'rowIdentity',
                  'rowClass',
                  'selectCheck',
                  'displayCheck',
                  'summaryRow',
                  'summaryHeight',
                  'summaryPosition',
                  'page',
                  'activate',
                  'rowContextmenu',
                  'select',
                  'scroll',
                  'treeAction',
                ],
                [
                  3,
                  'rowCount',
                  'pageSize',
                  'offset',
                  'footerHeight',
                  'footerTemplate',
                  'totalMessage',
                  'pagerLeftArrowIcon',
                  'pagerRightArrowIcon',
                  'pagerPreviousIcon',
                  'selectedCount',
                  'selectedMessage',
                  'pagerNextIcon',
                  'page',
                  4,
                  'ngIf',
                ],
                [
                  3,
                  'sorts',
                  'sortType',
                  'scrollbarH',
                  'innerWidth',
                  'offsetX',
                  'dealsWithGroup',
                  'columns',
                  'headerHeight',
                  'reorderable',
                  'targetMarkerTemplate',
                  'sortAscendingIcon',
                  'sortDescendingIcon',
                  'allRowsSelected',
                  'selectionType',
                  'sort',
                  'resize',
                  'reorder',
                  'select',
                  'columnContextmenu',
                ],
                [
                  3,
                  'rowCount',
                  'pageSize',
                  'offset',
                  'footerHeight',
                  'footerTemplate',
                  'totalMessage',
                  'pagerLeftArrowIcon',
                  'pagerRightArrowIcon',
                  'pagerPreviousIcon',
                  'selectedCount',
                  'selectedMessage',
                  'pagerNextIcon',
                  'page',
                ],
              ],
              template: function (t, e) {
                1 & t &&
                  (r.bc(0, 'div', 0),
                  r.jc('visible', function () {
                    return e.recalculate();
                  }),
                  r.Kc(1, x, 2, 16, 'datatable-header', 1),
                  r.bc(2, 'datatable-body', 2),
                  r.jc('page', function (t) {
                    return e.onBodyPage(t);
                  })('activate', function (t) {
                    return e.activate.emit(t);
                  })('rowContextmenu', function (t) {
                    return e.onRowContextmenu(t);
                  })('select', function (t) {
                    return e.onBodySelect(t);
                  })('scroll', function (t) {
                    return e.onBodyScroll(t);
                  })('treeAction', function (t) {
                    return e.onTreeAction(t);
                  }),
                  r.oc(3, 'async'),
                  r.ac(),
                  r.Kc(4, C, 1, 12, 'datatable-footer', 3),
                  r.ac()),
                  2 & t &&
                    (r.Ib(1),
                    r.vc('ngIf', e.headerHeight),
                    r.Ib(1),
                    r.vc('groupRowsBy', e.groupRowsBy)('groupedRows', e.groupedRows)('rows', e._internalRows)(
                      'groupExpansionDefault',
                      e.groupExpansionDefault
                    )('scrollbarV', e.scrollbarV)('scrollbarH', e.scrollbarH)('virtualization', e.virtualization)(
                      'loadingIndicator',
                      e.loadingIndicator
                    )('externalPaging', e.externalPaging)('rowHeight', e.rowHeight)('rowCount', e.rowCount)(
                      'offset',
                      e.offset
                    )('trackByProp', e.trackByProp)('columns', e._internalColumns)('pageSize', e.pageSize)(
                      'offsetX',
                      r.pc(3, 32, e._offsetX)
                    )('rowDetail', e.rowDetail)('groupHeader', e.groupHeader)('selected', e.selected)(
                      'innerWidth',
                      e._innerWidth
                    )('bodyHeight', e.bodyHeight)('selectionType', e.selectionType)(
                      'emptyMessage',
                      e.messages.emptyMessage
                    )('rowIdentity', e.rowIdentity)('rowClass', e.rowClass)('selectCheck', e.selectCheck)(
                      'displayCheck',
                      e.displayCheck
                    )('summaryRow', e.summaryRow)('summaryHeight', e.summaryHeight)(
                      'summaryPosition',
                      e.summaryPosition
                    ),
                    r.Ib(2),
                    r.vc('ngIf', e.footerHeight));
              },
              directives: function () {
                return [ht, s.l, ie, re, de];
              },
              pipes: function () {
                return [s.b];
              },
              styles: [
                '.ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;transform:translate3d(0,0,0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable :after,.ngx-datatable :before{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-header-inner,.ngx-datatable .datatable-row-center{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:0}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:0}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:0}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            Object(i.b)(
              [
                function (t, e, n) {
                  return {
                    configurable: !0,
                    enumerable: n.enumerable,
                    get: function () {
                      return (
                        Object.defineProperty(this, e, {
                          configurable: !0,
                          enumerable: n.enumerable,
                          value: se(n.value, 5, void 0),
                        }),
                        this[e]
                      );
                    },
                  };
                },
              ],
              t.prototype,
              'onWindowResize',
              null
            ),
            t
          );
        })(),
        he = (() => {
          let t = class {
            constructor(t) {
              (this.cd = t),
                (this.sort = new r.p()),
                (this.select = new r.p()),
                (this.columnContextmenu = new r.p(!1)),
                (this.sortFn = this.onSort.bind(this)),
                (this.selectFn = this.select.emit.bind(this.select)),
                (this.cellContext = {
                  column: this.column,
                  sortDir: this.sortDir,
                  sortFn: this.sortFn,
                  allRowsSelected: this.allRowsSelected,
                  selectFn: this.selectFn,
                });
            }
            set allRowsSelected(t) {
              (this._allRowsSelected = t), (this.cellContext.allRowsSelected = t);
            }
            get allRowsSelected() {
              return this._allRowsSelected;
            }
            set column(t) {
              (this._column = t), (this.cellContext.column = t), this.cd.markForCheck();
            }
            get column() {
              return this._column;
            }
            set sorts(t) {
              (this._sorts = t),
                (this.sortDir = this.calcSortDir(t)),
                (this.cellContext.sortDir = this.sortDir),
                (this.sortClass = this.calcSortClass(this.sortDir)),
                this.cd.markForCheck();
            }
            get sorts() {
              return this._sorts;
            }
            get columnCssClasses() {
              let t = 'datatable-header-cell';
              if (
                (this.column.sortable && (t += ' sortable'),
                this.column.resizeable && (t += ' resizeable'),
                this.column.headerClass)
              )
                if ('string' == typeof this.column.headerClass) t += ' ' + this.column.headerClass;
                else if ('function' == typeof this.column.headerClass) {
                  const e = this.column.headerClass({ column: this.column });
                  if ('string' == typeof e) t += e;
                  else if ('object' == typeof e) {
                    const n = Object.keys(e);
                    for (const i of n) !0 === e[i] && (t += ` ${i}`);
                  }
                }
              const e = this.sortDir;
              return e && (t += ` sort-active sort-${e}`), t;
            }
            get name() {
              return void 0 === this.column.headerTemplate ? this.column.name : void 0;
            }
            get minWidth() {
              return this.column.minWidth;
            }
            get maxWidth() {
              return this.column.maxWidth;
            }
            get width() {
              return this.column.width;
            }
            get isCheckboxable() {
              return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === Dt.checkbox;
            }
            onContextmenu(t) {
              this.columnContextmenu.emit({ event: t, column: this.column });
            }
            calcSortDir(t) {
              if (t && this.column) {
                const e = t.find((t) => t.prop === this.column.prop);
                if (e) return e.dir;
              }
            }
            onSort() {
              if (!this.column.sortable) return;
              const t =
                ((e = this.sortDir),
                this.sortType === jt.single
                  ? e === ce.asc
                    ? ce.desc
                    : ce.asc
                  : e
                  ? e === ce.asc
                    ? ce.desc
                    : void 0
                  : ce.asc);
              var e;
              this.sort.emit({ column: this.column, prevValue: this.sortDir, newValue: t });
            }
            calcSortClass(t) {
              return t === ce.asc
                ? `sort-btn sort-asc ${this.sortAscendingIcon}`
                : t === ce.desc
                ? `sort-btn sort-desc ${this.sortDescendingIcon}`
                : 'sort-btn';
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.i));
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-header-cell']],
              hostAttrs: [1, 'datatable-header-cell'],
              hostVars: 11,
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('contextmenu', function (t) {
                    return e.onContextmenu(t);
                  }),
                  2 & t &&
                    (r.Jb('title', e.name),
                    r.Kb(e.columnCssClasses),
                    r.Jc('min-width', e.minWidth, 'px')('max-width', e.maxWidth, 'px')('width', e.width, 'px')(
                      'height',
                      e.headerHeight,
                      'px'
                    ));
              },
              inputs: {
                allRowsSelected: 'allRowsSelected',
                column: 'column',
                sorts: 'sorts',
                sortType: 'sortType',
                sortAscendingIcon: 'sortAscendingIcon',
                sortDescendingIcon: 'sortDescendingIcon',
                isTarget: 'isTarget',
                targetMarkerTemplate: 'targetMarkerTemplate',
                targetMarkerContext: 'targetMarkerContext',
                selectionType: 'selectionType',
                headerHeight: 'headerHeight',
              },
              outputs: { sort: 'sort', select: 'select', columnContextmenu: 'columnContextmenu' },
              decls: 6,
              vars: 6,
              consts: [
                [1, 'datatable-header-cell-template-wrap'],
                [4, 'ngIf'],
                ['class', 'datatable-checkbox', 4, 'ngIf'],
                ['class', 'datatable-header-cell-wrapper', 4, 'ngIf'],
                [3, 'click'],
                [3, 'ngTemplateOutlet', 'ngTemplateOutletContext'],
                [1, 'datatable-checkbox'],
                ['type', 'checkbox', 3, 'checked', 'change'],
                [1, 'datatable-header-cell-wrapper'],
                [1, 'datatable-header-cell-label', 'draggable', 3, 'innerHTML', 'click'],
              ],
              template: function (t, e) {
                1 & t &&
                  (r.bc(0, 'div', 0),
                  r.Kc(1, O, 1, 2, void 0, 1),
                  r.Kc(2, S, 2, 1, 'label', 2),
                  r.Kc(3, E, 2, 1, 'span', 3),
                  r.Kc(4, I, 1, 2, void 0, 1),
                  r.bc(5, 'span', 4),
                  r.jc('click', function () {
                    return e.onSort();
                  }),
                  r.ac(),
                  r.ac()),
                  2 & t &&
                    (r.Ib(1),
                    r.vc('ngIf', e.isTarget),
                    r.Ib(1),
                    r.vc('ngIf', e.isCheckboxable),
                    r.Ib(1),
                    r.vc('ngIf', !e.column.headerTemplate),
                    r.Ib(1),
                    r.vc('ngIf', e.column.headerTemplate),
                    r.Ib(1),
                    r.Kb(e.sortClass));
              },
              directives: [s.l, s.q],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        de = (() => {
          let t = class {
            constructor() {
              (this.selectedCount = 0), (this.page = new r.p());
            }
            get isVisible() {
              return this.rowCount / this.pageSize > 1;
            }
            get curPage() {
              return this.offset + 1;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-footer']],
              hostAttrs: [1, 'datatable-footer'],
              inputs: {
                selectedCount: 'selectedCount',
                footerHeight: 'footerHeight',
                rowCount: 'rowCount',
                pageSize: 'pageSize',
                offset: 'offset',
                pagerLeftArrowIcon: 'pagerLeftArrowIcon',
                pagerRightArrowIcon: 'pagerRightArrowIcon',
                pagerPreviousIcon: 'pagerPreviousIcon',
                pagerNextIcon: 'pagerNextIcon',
                totalMessage: 'totalMessage',
                footerTemplate: 'footerTemplate',
                selectedMessage: 'selectedMessage',
              },
              outputs: { page: 'page' },
              decls: 4,
              vars: 8,
              consts: [
                [1, 'datatable-footer-inner', 3, 'ngClass'],
                [4, 'ngIf'],
                ['class', 'page-count', 4, 'ngIf'],
                [
                  3,
                  'pagerLeftArrowIcon',
                  'pagerRightArrowIcon',
                  'pagerPreviousIcon',
                  'pagerNextIcon',
                  'page',
                  'size',
                  'count',
                  'hidden',
                  'change',
                  4,
                  'ngIf',
                ],
                [3, 'ngTemplateOutlet', 'ngTemplateOutletContext'],
                [1, 'page-count'],
                [
                  3,
                  'pagerLeftArrowIcon',
                  'pagerRightArrowIcon',
                  'pagerPreviousIcon',
                  'pagerNextIcon',
                  'page',
                  'size',
                  'count',
                  'hidden',
                  'change',
                ],
              ],
              template: function (t, e) {
                1 & t &&
                  (r.bc(0, 'div', 0),
                  r.Kc(1, j, 1, 8, void 0, 1),
                  r.Kc(2, P, 3, 3, 'div', 2),
                  r.Kc(3, M, 1, 8, 'datatable-pager', 3),
                  r.ac()),
                  2 & t &&
                    (r.Jc('height', e.footerHeight, 'px'),
                    r.vc('ngClass', r.xc(6, F, e.selectedMessage)),
                    r.Ib(1),
                    r.vc('ngIf', e.footerTemplate),
                    r.Ib(1),
                    r.vc('ngIf', !e.footerTemplate),
                    r.Ib(1),
                    r.vc('ngIf', !e.footerTemplate));
              },
              directives: function () {
                return [s.i, s.l, s.q, pe];
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        pe = (() => {
          let t = class {
            constructor() {
              (this.change = new r.p()), (this._count = 0), (this._page = 1), (this._size = 0);
            }
            set size(t) {
              (this._size = t), (this.pages = this.calcPages());
            }
            get size() {
              return this._size;
            }
            set count(t) {
              (this._count = t), (this.pages = this.calcPages());
            }
            get count() {
              return this._count;
            }
            set page(t) {
              (this._page = t), (this.pages = this.calcPages());
            }
            get page() {
              return this._page;
            }
            get totalPages() {
              const t = this.size < 1 ? 1 : Math.ceil(this.count / this.size);
              return Math.max(t || 0, 1);
            }
            canPrevious() {
              return this.page > 1;
            }
            canNext() {
              return this.page < this.totalPages;
            }
            prevPage() {
              this.selectPage(this.page - 1);
            }
            nextPage() {
              this.selectPage(this.page + 1);
            }
            selectPage(t) {
              t > 0 && t <= this.totalPages && t !== this.page && ((this.page = t), this.change.emit({ page: t }));
            }
            calcPages(t) {
              const e = [];
              let n = 1,
                i = this.totalPages;
              (t = t || this.page),
                5 < this.totalPages &&
                  ((n = t - Math.floor(2.5)),
                  (i = t + Math.floor(2.5)),
                  n < 1
                    ? ((n = 1), (i = Math.min(n + 5 - 1, this.totalPages)))
                    : i > this.totalPages && ((n = Math.max(this.totalPages - 5 + 1, 1)), (i = this.totalPages)));
              for (let r = n; r <= i; r++) e.push({ number: r, text: r });
              return e;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-pager']],
              hostAttrs: [1, 'datatable-pager'],
              inputs: {
                size: 'size',
                count: 'count',
                page: 'page',
                pagerLeftArrowIcon: 'pagerLeftArrowIcon',
                pagerRightArrowIcon: 'pagerRightArrowIcon',
                pagerPreviousIcon: 'pagerPreviousIcon',
                pagerNextIcon: 'pagerNextIcon',
              },
              outputs: { change: 'change' },
              decls: 14,
              vars: 21,
              consts: [
                [1, 'pager'],
                ['role', 'button', 'aria-label', 'go to first page', 'href', 'javascript:void(0)', 3, 'click'],
                ['role', 'button', 'aria-label', 'go to previous page', 'href', 'javascript:void(0)', 3, 'click'],
                ['role', 'button', 'class', 'pages', 3, 'active', 4, 'ngFor', 'ngForOf'],
                ['role', 'button', 'aria-label', 'go to next page', 'href', 'javascript:void(0)', 3, 'click'],
                ['role', 'button', 'aria-label', 'go to last page', 'href', 'javascript:void(0)', 3, 'click'],
                ['role', 'button', 1, 'pages'],
                ['href', 'javascript:void(0)', 3, 'click'],
              ],
              template: function (t, e) {
                1 & t &&
                  (r.bc(0, 'ul', 0),
                  r.bc(1, 'li'),
                  r.bc(2, 'a', 1),
                  r.jc('click', function () {
                    return e.selectPage(1);
                  }),
                  r.Wb(3, 'i'),
                  r.ac(),
                  r.ac(),
                  r.bc(4, 'li'),
                  r.bc(5, 'a', 2),
                  r.jc('click', function () {
                    return e.prevPage();
                  }),
                  r.Wb(6, 'i'),
                  r.ac(),
                  r.ac(),
                  r.Kc(7, N, 3, 4, 'li', 3),
                  r.bc(8, 'li'),
                  r.bc(9, 'a', 4),
                  r.jc('click', function () {
                    return e.nextPage();
                  }),
                  r.Wb(10, 'i'),
                  r.ac(),
                  r.ac(),
                  r.bc(11, 'li'),
                  r.bc(12, 'a', 5),
                  r.jc('click', function () {
                    return e.selectPage(e.totalPages);
                  }),
                  r.Wb(13, 'i'),
                  r.ac(),
                  r.ac(),
                  r.ac()),
                  2 & t &&
                    (r.Ib(1),
                    r.Mb('disabled', !e.canPrevious()),
                    r.Ib(2),
                    r.Kb(e.pagerPreviousIcon),
                    r.Ib(1),
                    r.Mb('disabled', !e.canPrevious()),
                    r.Ib(2),
                    r.Kb(e.pagerLeftArrowIcon),
                    r.Ib(1),
                    r.vc('ngForOf', e.pages),
                    r.Ib(1),
                    r.Mb('disabled', !e.canNext()),
                    r.Ib(2),
                    r.Kb(e.pagerRightArrowIcon),
                    r.Ib(1),
                    r.Mb('disabled', !e.canNext()),
                    r.Ib(2),
                    r.Kb(e.pagerNextIcon));
              },
              directives: [s.k],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        fe = (() => {
          let t = class {};
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-progress']],
              decls: 3,
              vars: 0,
              consts: [
                ['role', 'progressbar', 1, 'progress-linear'],
                [1, 'container'],
                [1, 'bar'],
              ],
              template: function (t, e) {
                1 & t && (r.bc(0, 'div', 0), r.bc(1, 'div', 1), r.Wb(2, 'div', 2), r.ac(), r.ac());
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      var me = (function (t) {
        return (
          (t[(t.up = 38)] = 'up'),
          (t[(t.down = 40)] = 'down'),
          (t[(t.return = 13)] = 'return'),
          (t[(t.escape = 27)] = 'escape'),
          (t[(t.left = 37)] = 'left'),
          (t[(t.right = 39)] = 'right'),
          t
        );
      })({});
      let ge = (() => {
          let t = class {
            constructor(t, e, n, i) {
              (this.differs = t),
                (this.scrollbarHelper = e),
                (this.cd = n),
                (this.treeStatus = 'collapsed'),
                (this.activate = new r.p()),
                (this.treeAction = new r.p()),
                (this._groupStyles = { left: {}, center: {}, right: {} }),
                (this._element = i.nativeElement),
                (this._rowDiffer = t.find({}).create());
            }
            set columns(t) {
              (this._columns = t), this.recalculateColumns(t), this.buildStylesByGroup();
            }
            get columns() {
              return this._columns;
            }
            set innerWidth(t) {
              if (this._columns) {
                const t = zt(this._columns);
                this._columnGroupWidths = Bt(t, this._columns);
              }
              (this._innerWidth = t), this.recalculateColumns(), this.buildStylesByGroup();
            }
            get innerWidth() {
              return this._innerWidth;
            }
            set offsetX(t) {
              (this._offsetX = t), this.buildStylesByGroup();
            }
            get offsetX() {
              return this._offsetX;
            }
            get cssClass() {
              let t = 'datatable-body-row';
              if (
                (this.isSelected && (t += ' active'),
                this.rowIndex % 2 != 0 && (t += ' datatable-row-odd'),
                this.rowIndex % 2 == 0 && (t += ' datatable-row-even'),
                this.rowClass)
              ) {
                const e = this.rowClass(this.row);
                if ('string' == typeof e) t += ` ${e}`;
                else if ('object' == typeof e) {
                  const n = Object.keys(e);
                  for (const i of n) !0 === e[i] && (t += ` ${i}`);
                }
              }
              return t;
            }
            get columnsTotalWidths() {
              return this._columnGroupWidths.total;
            }
            ngDoCheck() {
              this._rowDiffer.diff(this.row) && this.cd.markForCheck();
            }
            trackByGroups(t, e) {
              return e.type;
            }
            columnTrackingFn(t, e) {
              return e.$$id;
            }
            buildStylesByGroup() {
              (this._groupStyles.left = this.calcStylesByGroup('left')),
                (this._groupStyles.center = this.calcStylesByGroup('center')),
                (this._groupStyles.right = this.calcStylesByGroup('right')),
                this.cd.markForCheck();
            }
            calcStylesByGroup(t) {
              const e = this._columnGroupWidths,
                n = this.offsetX,
                i = { width: `${e[t]}px` };
              if ('left' === t) ne(i, n, 0);
              else if ('right' === t) {
                const t = parseInt(this.innerWidth + '', 0);
                ne(i, -1 * (e.total - t - n + this.scrollbarHelper.width), 0);
              }
              return i;
            }
            onActivate(t, e) {
              (t.cellIndex = e), (t.rowElement = this._element), this.activate.emit(t);
            }
            onKeyDown(t) {
              const e = t.keyCode;
              (e === me.return || e === me.down || e === me.up || e === me.left || e === me.right) &&
                t.target === this._element &&
                (t.preventDefault(),
                t.stopPropagation(),
                this.activate.emit({ type: 'keydown', event: t, row: this.row, rowElement: this._element }));
            }
            onMouseenter(t) {
              this.activate.emit({ type: 'mouseenter', event: t, row: this.row, rowElement: this._element });
            }
            recalculateColumns(t = this.columns) {
              this._columns = t;
              const e = zt(this._columns);
              (this._columnsByPin = Wt(this._columns)), (this._columnGroupWidths = Bt(e, this._columns));
            }
            onTreeAction() {
              this.treeAction.emit();
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.v), r.Vb(at, 4), r.Vb(r.i), r.Vb(r.m));
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-body-row']],
              hostVars: 6,
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('keydown', function (t) {
                    return e.onKeyDown(t);
                  })('mouseenter', function (t) {
                    return e.onMouseenter(t);
                  }),
                  2 & t && (r.Kb(e.cssClass), r.Jc('width', e.columnsTotalWidths, 'px')('height', e.rowHeight, 'px'));
              },
              inputs: {
                treeStatus: 'treeStatus',
                columns: 'columns',
                innerWidth: 'innerWidth',
                offsetX: 'offsetX',
                expanded: 'expanded',
                rowClass: 'rowClass',
                row: 'row',
                group: 'group',
                isSelected: 'isSelected',
                rowIndex: 'rowIndex',
                displayCheck: 'displayCheck',
                rowHeight: 'rowHeight',
              },
              outputs: { activate: 'activate', treeAction: 'treeAction' },
              decls: 1,
              vars: 2,
              consts: [
                [3, 'class', 'ngStyle', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
                [3, 'ngStyle'],
                [
                  'tabindex',
                  '-1',
                  3,
                  'row',
                  'group',
                  'expanded',
                  'isSelected',
                  'rowIndex',
                  'column',
                  'rowHeight',
                  'displayCheck',
                  'treeStatus',
                  'activate',
                  'treeAction',
                  4,
                  'ngFor',
                  'ngForOf',
                  'ngForTrackBy',
                ],
                [
                  'tabindex',
                  '-1',
                  3,
                  'row',
                  'group',
                  'expanded',
                  'isSelected',
                  'rowIndex',
                  'column',
                  'rowHeight',
                  'displayCheck',
                  'treeStatus',
                  'activate',
                  'treeAction',
                ],
              ],
              template: function (t, e) {
                1 & t && r.Kc(0, L, 2, 6, 'div', 0),
                  2 & t && r.vc('ngForOf', e._columnsByPin)('ngForTrackBy', e.trackByGroups);
              },
              directives: function () {
                return [s.k, s.m, _e];
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        be = (() => {
          let t = class {
            constructor(t, e) {
              (this.cd = t),
                (this.differs = e),
                (this.rowContextmenu = new r.p(!1)),
                (this.groupContext = { group: this.row, expanded: this.expanded, rowIndex: this.rowIndex }),
                (this.rowContext = { row: this.row, expanded: this.expanded, rowIndex: this.rowIndex }),
                (this._expanded = !1),
                (this.rowDiffer = e.find({}).create());
            }
            set rowIndex(t) {
              (this._rowIndex = t),
                (this.rowContext.rowIndex = t),
                (this.groupContext.rowIndex = t),
                this.cd.markForCheck();
            }
            get rowIndex() {
              return this._rowIndex;
            }
            set expanded(t) {
              (this._expanded = t),
                (this.groupContext.expanded = t),
                (this.rowContext.expanded = t),
                this.cd.markForCheck();
            }
            get expanded() {
              return this._expanded;
            }
            ngDoCheck() {
              this.rowDiffer.diff(this.row) &&
                ((this.rowContext.row = this.row), (this.groupContext.group = this.row), this.cd.markForCheck());
            }
            onContextmenu(t) {
              this.rowContextmenu.emit({ event: t, row: this.row });
            }
            getGroupHeaderStyle() {
              const t = {};
              return (
                (t.transform = 'translate3d(' + this.offsetX + 'px, 0px, 0px)'),
                (t['backface-visibility'] = 'hidden'),
                (t.width = this.innerWidth),
                t
              );
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.i), r.Vb(r.v));
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-row-wrapper']],
              hostAttrs: [1, 'datatable-row-wrapper'],
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('contextmenu', function (t) {
                    return e.onContextmenu(t);
                  });
              },
              inputs: {
                rowIndex: 'rowIndex',
                expanded: 'expanded',
                innerWidth: 'innerWidth',
                rowDetail: 'rowDetail',
                groupHeader: 'groupHeader',
                offsetX: 'offsetX',
                detailRowHeight: 'detailRowHeight',
                row: 'row',
                groupedRows: 'groupedRows',
              },
              outputs: { rowContextmenu: 'rowContextmenu' },
              ngContentSelectors: u,
              decls: 3,
              vars: 3,
              consts: [
                ['class', 'datatable-group-header', 3, 'ngStyle', 4, 'ngIf'],
                [4, 'ngIf'],
                ['class', 'datatable-row-detail', 3, 'height', 4, 'ngIf'],
                [1, 'datatable-group-header', 3, 'ngStyle'],
                [3, 'ngTemplateOutlet', 'ngTemplateOutletContext'],
                [1, 'datatable-row-detail'],
              ],
              template: function (t, e) {
                1 & t && (r.uc(), r.Kc(0, B, 2, 2, 'div', 0), r.Kc(1, U, 1, 0, void 0, 1), r.Kc(2, q, 2, 3, 'div', 2)),
                  2 & t &&
                    (r.vc('ngIf', e.groupHeader && e.groupHeader.template),
                    r.Ib(1),
                    r.vc(
                      'ngIf',
                      (e.groupHeader && e.groupHeader.template && e.expanded) ||
                        !e.groupHeader ||
                        !e.groupHeader.template
                    ),
                    r.Ib(1),
                    r.vc('ngIf', e.rowDetail && e.rowDetail.template && e.expanded));
              },
              directives: [s.l, s.m, s.q],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        _e = (() => {
          let t = class {
            constructor(t, e) {
              (this.cd = e),
                (this.activate = new r.p()),
                (this.treeAction = new r.p()),
                (this.isFocused = !1),
                (this.onCheckboxChangeFn = this.onCheckboxChange.bind(this)),
                (this.activateFn = this.activate.emit.bind(this.activate)),
                (this.cellContext = {
                  onCheckboxChangeFn: this.onCheckboxChangeFn,
                  activateFn: this.activateFn,
                  row: this.row,
                  group: this.group,
                  value: this.value,
                  column: this.column,
                  rowHeight: this.rowHeight,
                  isSelected: this.isSelected,
                  rowIndex: this.rowIndex,
                  treeStatus: this.treeStatus,
                  onTreeAction: this.onTreeAction.bind(this),
                }),
                (this._element = t.nativeElement);
            }
            set group(t) {
              (this._group = t), (this.cellContext.group = t), this.checkValueUpdates(), this.cd.markForCheck();
            }
            get group() {
              return this._group;
            }
            set rowHeight(t) {
              (this._rowHeight = t), (this.cellContext.rowHeight = t), this.checkValueUpdates(), this.cd.markForCheck();
            }
            get rowHeight() {
              return this._rowHeight;
            }
            set isSelected(t) {
              (this._isSelected = t), (this.cellContext.isSelected = t), this.cd.markForCheck();
            }
            get isSelected() {
              return this._isSelected;
            }
            set expanded(t) {
              (this._expanded = t), (this.cellContext.expanded = t), this.cd.markForCheck();
            }
            get expanded() {
              return this._expanded;
            }
            set rowIndex(t) {
              (this._rowIndex = t), (this.cellContext.rowIndex = t), this.checkValueUpdates(), this.cd.markForCheck();
            }
            get rowIndex() {
              return this._rowIndex;
            }
            set column(t) {
              (this._column = t), (this.cellContext.column = t), this.checkValueUpdates(), this.cd.markForCheck();
            }
            get column() {
              return this._column;
            }
            set row(t) {
              (this._row = t), (this.cellContext.row = t), this.checkValueUpdates(), this.cd.markForCheck();
            }
            get row() {
              return this._row;
            }
            set sorts(t) {
              (this._sorts = t), (this.calcSortDir = this.calcSortDir(t));
            }
            get sorts() {
              return this._sorts;
            }
            set treeStatus(t) {
              (this._treeStatus =
                'collapsed' !== t && 'expanded' !== t && 'loading' !== t && 'disabled' !== t ? 'collapsed' : t),
                (this.cellContext.treeStatus = this._treeStatus),
                this.checkValueUpdates(),
                this.cd.markForCheck();
            }
            get treeStatus() {
              return this._treeStatus;
            }
            get columnCssClasses() {
              let t = 'datatable-body-cell';
              if (this.column.cellClass)
                if ('string' == typeof this.column.cellClass) t += ' ' + this.column.cellClass;
                else if ('function' == typeof this.column.cellClass) {
                  const e = this.column.cellClass({
                    row: this.row,
                    group: this.group,
                    column: this.column,
                    value: this.value,
                    rowHeight: this.rowHeight,
                  });
                  if ('string' == typeof e) t += ' ' + e;
                  else if ('object' == typeof e) {
                    const n = Object.keys(e);
                    for (const i of n) !0 === e[i] && (t += ` ${i}`);
                  }
                }
              return (
                this.sortDir || (t += ' sort-active'),
                this.isFocused && (t += ' active'),
                this.sortDir === ce.asc && (t += ' sort-asc'),
                this.sortDir === ce.desc && (t += ' sort-desc'),
                t
              );
            }
            get width() {
              return this.column.width;
            }
            get minWidth() {
              return this.column.minWidth;
            }
            get maxWidth() {
              return this.column.maxWidth;
            }
            get height() {
              const t = this.rowHeight;
              return isNaN(t) ? t : t + 'px';
            }
            ngDoCheck() {
              this.checkValueUpdates();
            }
            ngOnDestroy() {
              this.cellTemplate && this.cellTemplate.clear();
            }
            checkValueUpdates() {
              let t = '';
              if (this.row && this.column) {
                const e = this.column.$$valueGetter(this.row, this.column.prop),
                  n = this.column.pipe;
                n ? (t = n.transform(e)) : void 0 !== t && (t = e);
              } else t = '';
              this.value !== t &&
                ((this.value = t),
                (this.cellContext.value = t),
                (this.sanitizedValue = null != t ? this.stripHtml(t) : t),
                this.cd.markForCheck());
            }
            onFocus() {
              this.isFocused = !0;
            }
            onBlur() {
              this.isFocused = !1;
            }
            onClick(t) {
              this.activate.emit({
                type: 'click',
                event: t,
                row: this.row,
                group: this.group,
                rowHeight: this.rowHeight,
                column: this.column,
                value: this.value,
                cellElement: this._element,
              });
            }
            onDblClick(t) {
              this.activate.emit({
                type: 'dblclick',
                event: t,
                row: this.row,
                group: this.group,
                rowHeight: this.rowHeight,
                column: this.column,
                value: this.value,
                cellElement: this._element,
              });
            }
            onKeyDown(t) {
              const e = t.keyCode;
              (e === me.return || e === me.down || e === me.up || e === me.left || e === me.right) &&
                t.target === this._element &&
                (t.preventDefault(),
                t.stopPropagation(),
                this.activate.emit({
                  type: 'keydown',
                  event: t,
                  row: this.row,
                  group: this.group,
                  rowHeight: this.rowHeight,
                  column: this.column,
                  value: this.value,
                  cellElement: this._element,
                }));
            }
            onCheckboxChange(t) {
              this.activate.emit({
                type: 'checkbox',
                event: t,
                row: this.row,
                group: this.group,
                rowHeight: this.rowHeight,
                column: this.column,
                value: this.value,
                cellElement: this._element,
                treeStatus: 'collapsed',
              });
            }
            calcSortDir(t) {
              if (!t) return;
              const e = t.find((t) => t.prop === this.column.prop);
              return e ? e.dir : void 0;
            }
            stripHtml(t) {
              return t.replace ? t.replace(/<\/?[^>]+(>|$)/g, '') : t;
            }
            onTreeAction() {
              this.treeAction.emit(this.row);
            }
            calcLeftMargin(t, e) {
              return t.isTreeColumn ? e.level * (null != t.treeLevelIndent ? t.treeLevelIndent : 50) : 0;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m), r.Vb(r.i));
            }),
            (t.ɵcmp = r.Pb({
              type: t,
              selectors: [['datatable-body-cell']],
              viewQuery: function (t, e) {
                var n;
                1 & t && r.Ic(G, !0, r.S), 2 & t && r.Ac((n = r.kc())) && (e.cellTemplate = n.first);
              },
              hostVars: 10,
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('focus', function () {
                    return e.onFocus();
                  })('blur', function () {
                    return e.onBlur();
                  })('click', function (t) {
                    return e.onClick(t);
                  })('dblclick', function (t) {
                    return e.onDblClick(t);
                  })('keydown', function (t) {
                    return e.onKeyDown(t);
                  }),
                  2 & t &&
                    (r.Kb(e.columnCssClasses),
                    r.Jc('width', e.width, 'px')('min-width', e.minWidth, 'px')('max-width', e.maxWidth, 'px')(
                      'height',
                      e.height
                    ));
              },
              inputs: {
                group: 'group',
                rowHeight: 'rowHeight',
                isSelected: 'isSelected',
                expanded: 'expanded',
                rowIndex: 'rowIndex',
                column: 'column',
                row: 'row',
                sorts: 'sorts',
                treeStatus: 'treeStatus',
                displayCheck: 'displayCheck',
              },
              outputs: { activate: 'activate', treeAction: 'treeAction' },
              decls: 5,
              vars: 6,
              consts: [
                [1, 'datatable-body-cell-label'],
                ['class', 'datatable-checkbox', 4, 'ngIf'],
                [4, 'ngIf'],
                [3, 'title', 'innerHTML', 4, 'ngIf'],
                [1, 'datatable-checkbox'],
                ['type', 'checkbox', 3, 'checked', 'click'],
                ['class', 'datatable-tree-button', 3, 'disabled', 'click', 4, 'ngIf'],
                [1, 'datatable-tree-button', 3, 'disabled', 'click'],
                ['class', 'icon datatable-icon-collapse', 4, 'ngIf'],
                ['class', 'icon datatable-icon-up', 4, 'ngIf'],
                ['class', 'icon datatable-icon-down', 4, 'ngIf'],
                [1, 'icon', 'datatable-icon-collapse'],
                [1, 'icon', 'datatable-icon-up'],
                [1, 'icon', 'datatable-icon-down'],
                [3, 'ngTemplateOutlet', 'ngTemplateOutletContext'],
                [3, 'title', 'innerHTML'],
                ['cellTemplate', ''],
              ],
              template: function (t, e) {
                1 & t &&
                  (r.bc(0, 'div', 0),
                  r.Kc(1, X, 2, 1, 'label', 1),
                  r.Kc(2, nt, 3, 2, 'ng-container', 2),
                  r.Kc(3, it, 1, 2, 'span', 3),
                  r.Kc(4, st, 2, 2, void 0, 2),
                  r.ac()),
                  2 & t &&
                    (r.Jc('margin-left', e.calcLeftMargin(e.column, e.row), 'px'),
                    r.Ib(1),
                    r.vc(
                      'ngIf',
                      e.column.checkboxable && (!e.displayCheck || e.displayCheck(e.row, e.column, e.value))
                    ),
                    r.Ib(1),
                    r.vc('ngIf', e.column.isTreeColumn),
                    r.Ib(1),
                    r.vc('ngIf', !e.column.cellTemplate),
                    r.Ib(1),
                    r.vc('ngIf', e.column.cellTemplate));
              },
              directives: [s.l, s.q],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      function ye(t, e, n) {
        const i = n(e, t);
        return i > -1 ? t.splice(i, 1) : t.push(e), t;
      }
      let ve = (() => {
        let t = class {
          constructor() {
            (this.activate = new r.p()), (this.select = new r.p());
          }
          selectRow(t, e, n) {
            if (!this.selectEnabled) return;
            const i = this.selectionType === Dt.checkbox,
              r = this.selectionType === Dt.multiClick;
            let s = [];
            (s =
              this.selectionType === Dt.multi || i || r
                ? t.shiftKey
                  ? (function (t, e, n, i, r) {
                      const s = n < i;
                      for (let o = 0; o < e.length; o++) {
                        const r = e[o],
                          a = o >= i && o <= n,
                          c = o <= i && o >= n;
                        let l = { start: 0, end: 0 };
                        (l = s ? { start: n, end: i } : { start: i, end: n + 1 }),
                          ((s && c) || (!s && a)) && o >= l.start && o <= l.end && t.push(r);
                      }
                      return t;
                    })([], this.rows, e, this.prevIndex, this.getRowSelectedIdx.bind(this))
                  : ye(t.ctrlKey || t.metaKey || r || i ? [...this.selected] : [], n, this.getRowSelectedIdx.bind(this))
                : ye([], n, this.getRowSelectedIdx.bind(this))),
              'function' == typeof this.selectCheck && (s = s.filter(this.selectCheck.bind(this))),
              this.selected.splice(0, this.selected.length),
              this.selected.push(...s),
              (this.prevIndex = e),
              this.select.emit({ selected: s });
          }
          onActivate(t, e) {
            const { type: n, event: i, row: r } = t,
              s = this.selectionType === Dt.checkbox;
            (!s && ('click' === n || 'dblclick' === n)) || (s && 'checkbox' === n)
              ? this.selectRow(i, e, r)
              : 'keydown' === n && (i.keyCode === me.return ? this.selectRow(i, e, r) : this.onKeyboardFocus(t)),
              this.activate.emit(t);
          }
          onKeyboardFocus(t) {
            const { keyCode: e } = t.event;
            if (e === me.up || e === me.down || e === me.right || e === me.left) {
              const n = this.selectionType === Dt.cell;
              t.cellElement && n
                ? n && this.focusCell(t.cellElement, t.rowElement, e, t.cellIndex)
                : this.focusRow(t.rowElement, e);
            }
          }
          focusRow(t, e) {
            const n = this.getPrevNextRow(t, e);
            n && n.focus();
          }
          getPrevNextRow(t, e) {
            const n = t.parentElement;
            if (n) {
              let t;
              if (
                (e === me.up ? (t = n.previousElementSibling) : e === me.down && (t = n.nextElementSibling),
                t && t.children.length)
              )
                return t.children[0];
            }
          }
          focusCell(t, e, n, i) {
            let r;
            if (n === me.left) r = t.previousElementSibling;
            else if (n === me.right) r = t.nextElementSibling;
            else if (n === me.up || n === me.down) {
              const t = this.getPrevNextRow(e, n);
              if (t) {
                const e = t.getElementsByClassName('datatable-body-cell');
                e.length && (r = e[i]);
              }
            }
            r && r.focus();
          }
          getRowSelected(t) {
            return this.getRowSelectedIdx(t, this.selected) > -1;
          }
          getRowSelectedIdx(t, e) {
            if (!e || !e.length) return -1;
            const n = this.rowIdentity(t);
            return e.findIndex((t) => this.rowIdentity(t) === n);
          }
        };
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['datatable-selection']],
            inputs: {
              rows: 'rows',
              selected: 'selected',
              selectEnabled: 'selectEnabled',
              selectionType: 'selectionType',
              rowIdentity: 'rowIdentity',
              selectCheck: 'selectCheck',
            },
            outputs: { activate: 'activate', select: 'select' },
            ngContentSelectors: u,
            decls: 1,
            vars: 0,
            template: function (t, e) {
              1 & t && (r.uc(), r.tc(0));
            },
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      function we(t) {
        const e = t.filter((t) => !!t);
        return e.length ? (e.some((t) => 'number' != typeof t) ? null : e.reduce((t, e) => t + e)) : null;
      }
      function xe(t) {
        return null;
      }
      let Ce = (() => {
        let t = class {
          constructor() {
            this.summaryRow = {};
          }
          ngOnChanges() {
            this.columns && this.rows && (this.updateInternalColumns(), this.updateValues());
          }
          updateInternalColumns() {
            this._internalColumns = this.columns.map((t) =>
              Object.assign(Object.assign({}, t), { cellTemplate: t.summaryTemplate })
            );
          }
          updateValues() {
            (this.summaryRow = {}),
              this.columns
                .filter((t) => !t.summaryTemplate)
                .forEach((t) => {
                  const e = this.rows.map((e) => e[t.prop]),
                    n = this.getSummaryFunction(t);
                  this.summaryRow[t.prop] = t.pipe ? t.pipe.transform(n(e)) : n(e);
                });
          }
          getSummaryFunction(t) {
            return void 0 === t.summaryFunc ? we : null === t.summaryFunc ? xe : t.summaryFunc;
          }
        };
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['datatable-summary-row']],
            hostAttrs: [1, 'datatable-summary-row'],
            inputs: {
              rows: 'rows',
              columns: 'columns',
              rowHeight: 'rowHeight',
              offsetX: 'offsetX',
              innerWidth: 'innerWidth',
            },
            features: [r.Gb],
            decls: 1,
            vars: 1,
            consts: [
              ['tabindex', '-1', 3, 'innerWidth', 'offsetX', 'columns', 'rowHeight', 'row', 'rowIndex', 4, 'ngIf'],
              ['tabindex', '-1', 3, 'innerWidth', 'offsetX', 'columns', 'rowHeight', 'row', 'rowIndex'],
            ],
            template: function (t, e) {
              1 & t && r.Kc(0, ot, 1, 6, 'datatable-body-row', 0),
                2 & t && r.vc('ngIf', e.summaryRow && e._internalColumns);
            },
            directives: [s.l, ge],
            encapsulation: 2,
          })),
          t
        );
      })();
      var ke;
      let Oe = (() => {
        let t = (ke = class {
          static forRoot(t) {
            return { ngModule: ke, providers: [{ provide: 'configuration', useValue: t }] };
          }
        });
        return (
          (t.ɵmod = r.Tb({ type: t })),
          (t.ɵinj = r.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            providers: [at, ct, lt],
            imports: [[s.c]],
          })),
          t
        );
      })();
      'undefined' == typeof document ||
        document.elementsFromPoint ||
        (document.elementsFromPoint = function (t, e) {
          const n = [],
            i = [];
          let r, s, o;
          for (; (r = document.elementFromPoint(t, e)) && -1 === n.indexOf(r) && null != r; )
            n.push(r),
              i.push({
                value: r.style.getPropertyValue('pointer-events'),
                priority: r.style.getPropertyPriority('pointer-events'),
              }),
              r.style.setProperty('pointer-events', 'none', 'important');
          for (s = i.length; (o = i[--s]); )
            n[s].style.setProperty('pointer-events', o.value ? o.value : '', o.priority);
          return n;
        });
    },
    lJxs: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('7o/Q');
      function r(t, e) {
        return function (n) {
          if ('function' != typeof t) throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
          return n.lift(new s(t, e));
        };
      }
      class s {
        constructor(t, e) {
          (this.project = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new o(t, this.project, this.thisArg));
        }
      }
      class o extends i.a {
        constructor(t, e, n) {
          super(t), (this.project = e), (this.count = 0), (this.thisArg = n || this);
        }
        _next(t) {
          let e;
          try {
            e = this.project.call(this.thisArg, t, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(e);
        }
      }
    },
    m4GZ: function (t, e) {
      function n(t) {
        this.message = t;
      }
      ((n.prototype = new Error()).name = 'InvalidCharacterError'),
        (t.exports =
          ('undefined' != typeof window && window.atob && window.atob.bind(window)) ||
          function (t) {
            var e = String(t).replace(/=+$/, '');
            if (e.length % 4 == 1) throw new n("'atob' failed: The string to be decoded is not correctly encoded.");
            for (
              var i, r, s = 0, o = 0, a = '';
              (r = e.charAt(o++));
              ~r && ((i = s % 4 ? 64 * i + r : r), s++ % 4)
                ? (a += String.fromCharCode(255 & (i >> ((-2 * s) & 6))))
                : 0
            )
              r = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.indexOf(r);
            return a;
          });
    },
    mCNh: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      }),
        n.d(e, 'b', function () {
          return s;
        });
      var i = n('SpAZ');
      function r(...t) {
        return s(t);
      }
      function s(t) {
        return 0 === t.length
          ? i.a
          : 1 === t.length
          ? t[0]
          : function (e) {
              return t.reduce((t, e) => e(t), e);
            };
      }
    },
    mrSG: function (t, e, n) {
      'use strict';
      function i(t, e) {
        var n = {};
        for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (n[i] = t[i]);
        if (null != t && 'function' == typeof Object.getOwnPropertySymbols) {
          var r = 0;
          for (i = Object.getOwnPropertySymbols(t); r < i.length; r++)
            e.indexOf(i[r]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[r]) && (n[i[r]] = t[i[r]]);
        }
        return n;
      }
      function r(t, e, n, i) {
        var r,
          s = arguments.length,
          o = s < 3 ? e : null === i ? (i = Object.getOwnPropertyDescriptor(e, n)) : i;
        if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) o = Reflect.decorate(t, e, n, i);
        else
          for (var a = t.length - 1; a >= 0; a--)
            (r = t[a]) && (o = (s < 3 ? r(o) : s > 3 ? r(e, n, o) : r(e, n)) || o);
        return s > 3 && o && Object.defineProperty(e, n, o), o;
      }
      function s(t, e) {
        return function (n, i) {
          e(n, i, t);
        };
      }
      function o(t, e) {
        if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) return Reflect.metadata(t, e);
      }
      function a(t, e, n, i) {
        return new (n || (n = Promise))(function (r, s) {
          function o(t) {
            try {
              c(i.next(t));
            } catch (e) {
              s(e);
            }
          }
          function a(t) {
            try {
              c(i.throw(t));
            } catch (e) {
              s(e);
            }
          }
          function c(t) {
            var e;
            t.done
              ? r(t.value)
              : ((e = t.value),
                e instanceof n
                  ? e
                  : new n(function (t) {
                      t(e);
                    })).then(o, a);
          }
          c((i = i.apply(t, e || [])).next());
        });
      }
      n.d(e, 'e', function () {
        return i;
      }),
        n.d(e, 'b', function () {
          return r;
        }),
        n.d(e, 'd', function () {
          return s;
        }),
        n.d(e, 'c', function () {
          return o;
        }),
        n.d(e, 'a', function () {
          return a;
        });
    },
    mxbh: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return d;
      }),
        n.d(e, 'b', function () {
          return l;
        }),
        n.d(e, 'c', function () {
          return h;
        }),
        n.d(e, 'd', function () {
          return u;
        });
      var i = n('srgo'),
        r = n('7+OI'),
        s = n('LRne'),
        o = n('lJxs'),
        a = (n('fXoL'), n('AcyG'), n('ofXK'), n('Nwf9'));
      n('l5mm'), n('xgIS'), n('vkgz'), Error, Error, Error, Error, Error, Error;
      const c = { cancelUncompleted: !0, insideZone: !1 };
      function l(t = c) {
        return (e, n, a) => {
          Object(i.y)(e, a);
          const c = a.value,
            l = n.toString();
          return (
            (a.value = function (...e) {
              const n = this;
              let a = null;
              const u = i.b.getRepositoryByInstance(n),
                h = u.operations;
              let d = h[l];
              const p = u.stateMeta,
                f = Object(i.r)(c);
              if (!d) {
                const e = Object(i.a)(c),
                  n = Object(i.e)({ statePath: p.path, methodName: l, argumentsNames: e, argumentRegistry: f });
                (d = h[l] = { type: n, options: { cancelUncompleted: t.cancelUncompleted } }),
                  (p.actions[d.type] = [{ type: d.type, options: d.options, fn: d.type }]);
              }
              i.b.ensureMappedState(p).instance[d.type] = () => {
                var l;
                return (
                  t.insideZone
                    ? null === (l = i.c.ngZone) ||
                      void 0 === l ||
                      l.run(() => {
                        a = c.apply(n, e);
                      })
                    : (a = c.apply(n, e)),
                  Object(r.a)(a) ? Object(s.a)(null).pipe(Object(o.a)(() => a)) : a
                );
              };
              const m = i.b.createAction(d, e, f),
                g = i.c.store.dispatch(m);
              return Object(r.a)(a) ? Object(i.h)(g, a) : a;
            }),
            a
          );
        };
      }
      function u() {
        return (t) => {
          const e = Object(i.q)(t);
          if (!e.name) throw new Error(a.c.NGXS_DATA_STATE);
          Object(i.j)(t, e),
            (function (t, e, n) {
              Object.defineProperties(t.prototype, {
                name: { enumerable: !0, configurable: !0, value: e.name },
                initialState: { enumerable: !0, configurable: !0, get: () => Object(i.l)(n) },
                context: Object(i.i)(t),
              });
            })(t, e, Object(i.f)(t)),
            Object(i.k)(t);
        };
      }
      function h(t) {
        return (e, n, r) => {
          const s = t.trim();
          if (!s) throw new Error(a.c.NGXS_INVALID_PAYLOAD_NAME);
          Object(i.o)(e, n).createPayloadType(s, n, r);
        };
      }
      function d() {
        return (t, e, n) => {
          Object(i.z)(t, e);
          const r = n.get;
          return (
            (n.get = function (...t) {
              const e = Object(i.m)(this),
                n = null == e ? void 0 : e.get(r);
              if (null == n ? void 0 : n.isObservable) return n.value;
              if (!n || n.sequenceId !== Object(i.t)()) {
                e.delete(r);
                const n = r.apply(this, t);
                return e.set(r, { value: n, sequenceId: Object(i.t)(), isObservable: Object(i.x)(n) }), n;
              }
              return n.value;
            }),
            n
          );
        };
      }
    },
    n6bG: function (t, e, n) {
      'use strict';
      function i(t) {
        return 'function' == typeof t;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    nLfN: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      }),
        n.d(e, 'b', function () {
          return c;
        }),
        n.d(e, 'c', function () {
          return b;
        }),
        n.d(e, 'd', function () {
          return g;
        }),
        n.d(e, 'e', function () {
          return u;
        }),
        n.d(e, 'f', function () {
          return f;
        }),
        n.d(e, 'g', function () {
          return m;
        });
      var i = n('fXoL'),
        r = n('ofXK');
      let s;
      try {
        s = 'undefined' != typeof Intl && Intl.v8BreakIterator;
      } catch (_) {
        s = !1;
      }
      let o,
        a = (() => {
          class t {
            constructor(t) {
              (this._platformId = t),
                (this.isBrowser = this._platformId
                  ? Object(r.w)(this._platformId)
                  : 'object' == typeof document && !!document),
                (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !s) &&
                  'undefined' != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window)),
                (this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT),
                (this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(i.D, 8));
            }),
            (t.ɵprov = Object(i.Rb)({
              factory: function () {
                return new t(Object(i.fc)(i.D, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        c = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })();
      const l = [
        'color',
        'button',
        'checkbox',
        'date',
        'datetime-local',
        'email',
        'file',
        'hidden',
        'image',
        'month',
        'number',
        'password',
        'radio',
        'range',
        'reset',
        'search',
        'submit',
        'tel',
        'text',
        'time',
        'url',
        'week',
      ];
      function u() {
        if (o) return o;
        if ('object' != typeof document || !document) return (o = new Set(l)), o;
        let t = document.createElement('input');
        return (o = new Set(l.filter((e) => (t.setAttribute('type', e), t.type === e)))), o;
      }
      let h, d, p;
      function f(t) {
        return (function () {
          if (null == h && 'undefined' != typeof window)
            try {
              window.addEventListener('test', null, Object.defineProperty({}, 'passive', { get: () => (h = !0) }));
            } finally {
              h = h || !1;
            }
          return h;
        })()
          ? t
          : !!t.capture;
      }
      function m() {
        return !('object' != typeof document || !('scrollBehavior' in document.documentElement.style));
      }
      function g() {
        if ('object' != typeof document || !document) return 0;
        if (null == d) {
          const t = document.createElement('div'),
            e = t.style;
          (t.dir = 'rtl'),
            (e.height = '1px'),
            (e.width = '1px'),
            (e.overflow = 'auto'),
            (e.visibility = 'hidden'),
            (e.pointerEvents = 'none'),
            (e.position = 'absolute');
          const n = document.createElement('div'),
            i = n.style;
          (i.width = '2px'),
            (i.height = '1px'),
            t.appendChild(n),
            document.body.appendChild(t),
            (d = 0),
            0 === t.scrollLeft && ((t.scrollLeft = 1), (d = 0 === t.scrollLeft ? 1 : 2)),
            t.parentNode.removeChild(t);
        }
        return d;
      }
      function b(t) {
        if (
          (function () {
            if (null == p) {
              const t = 'undefined' != typeof document ? document.head : null;
              p = !(!t || (!t.createShadowRoot && !t.attachShadow));
            }
            return p;
          })()
        ) {
          const e = t.getRootNode ? t.getRootNode() : null;
          if ('undefined' != typeof ShadowRoot && ShadowRoot && e instanceof ShadowRoot) return e;
        }
        return null;
      }
    },
    nWYq: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return y;
      });
      var i = n('0FS3'),
        r = n('fXoL'),
        s = n('ofXK'),
        o = n('iQeY'),
        a = n('NFeN'),
        c = n('f0Cb'),
        l = n('PnYb'),
        u = n('sYmb');
      function h(t, e) {
        if ((1 & t && (r.bc(0, 'app-typography'), r.Mc(1), r.oc(2, 'translate'), r.ac()), 2 & t)) {
          const t = r.nc();
          r.Ib(1), r.Nc(r.pc(2, 1, t.to.label));
        }
      }
      function d(t, e) {
        if ((1 & t && (r.bc(0, 'span', 9), r.Mc(1), r.ac()), 2 & t)) {
          const t = r.nc().index;
          r.Ib(1), r.Oc('\u2116 ', t + 1, '.');
        }
      }
      function p(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'mat-icon', 10),
            r.jc('click', function () {
              r.Dc(t);
              const e = r.nc(),
                n = e.$implicit,
                i = e.index,
                s = r.nc();
              return s.to.deleteClicked ? s.to.deleteClicked(n) : s.remove(i);
            }),
            r.Mc(1, 'clear '),
            r.ac();
        }
      }
      function f(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'app-button', 13),
            r.jc('click', function () {
              r.Dc(t);
              const n = e.$implicit,
                i = r.nc(2).$implicit;
              return n.clicked(i);
            }),
            r.Mc(1),
            r.ac();
        }
        if (2 & t) {
          const t = e.$implicit;
          r.vc('className', t.color), r.Ib(1), r.Oc(' ', t.title, ' ');
        }
      }
      function m(t, e) {
        if (
          (1 & t && (r.bc(0, 'div', 11), r.Wb(1, 'mat-divider'), r.Kc(2, f, 2, 2, 'app-button', 12), r.ac()), 2 & t)
        ) {
          const t = r.nc(2);
          r.Ib(2), r.vc('ngForOf', t.to.actions)('ngForTrackBy', t.trackByFn);
        }
      }
      function g(t, e) {
        if (
          (1 & t &&
            (r.bc(0, 'div', 4),
            r.Kc(1, d, 2, 1, 'span', 5),
            r.Wb(2, 'formly-field', 6),
            r.Kc(3, p, 2, 0, 'mat-icon', 7),
            r.Kc(4, m, 3, 2, 'div', 8),
            r.ac()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = r.nc();
          r.Ib(1),
            r.vc('ngIf', n.to.showIndex),
            r.Ib(1),
            r.vc('field', t),
            r.Ib(1),
            r.vc('ngIf', n.to.showDeleteButton),
            r.Ib(1),
            r.vc('ngIf', n.to.actions);
        }
      }
      function b(t, e) {
        1 & t && (r.bc(0, 'app-button', 14), r.Mc(1), r.oc(2, 'translate'), r.ac()),
          2 & t && (r.Ib(1), r.Nc(r.pc(2, 1, 'FORM.SUBMIT')));
      }
      function _(t, e) {
        if (1 & t) {
          const t = r.cc();
          r.bc(0, 'app-button', 15),
            r.jc('click', function () {
              return r.Dc(t), r.nc().add();
            }),
            r.Mc(1),
            r.oc(2, 'translate'),
            r.ac();
        }
        if (2 & t) {
          const t = r.nc();
          r.Ib(1), r.Nc(r.pc(2, 1, t.to.placeholder));
        }
      }
      let y = (() => {
        class t extends i.b {
          trackByFn(t, e) {
            return t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return v(e || t);
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['app-formly-repeat']],
            features: [r.Fb],
            decls: 4,
            vars: 5,
            consts: [
              [4, 'ngIf'],
              ['class', 'list-item', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
              ['color', 'primary', 'type', 'submit', 4, 'ngIf'],
              ['color', 'secondary', 3, 'click', 4, 'ngIf'],
              [1, 'list-item'],
              ['class', 'index', 4, 'ngIf'],
              [3, 'field'],
              [3, 'click', 4, 'ngIf'],
              ['class', 'actions', 4, 'ngIf'],
              [1, 'index'],
              [3, 'click'],
              [1, 'actions'],
              [3, 'className', 'click', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
              [3, 'className', 'click'],
              ['color', 'primary', 'type', 'submit'],
              ['color', 'secondary', 3, 'click'],
            ],
            template: function (t, e) {
              1 & t &&
                (r.Kc(0, h, 3, 3, 'app-typography', 0),
                r.Kc(1, g, 5, 4, 'div', 1),
                r.Kc(2, b, 3, 3, 'app-button', 2),
                r.Kc(3, _, 3, 3, 'app-button', 3)),
                2 & t &&
                  (r.vc('ngIf', e.to.label),
                  r.Ib(1),
                  r.vc('ngForOf', e.field.fieldGroup)('ngForTrackBy', e.trackByFn),
                  r.Ib(1),
                  r.vc('ngIf', e.to.showSubmitButton),
                  r.Ib(1),
                  r.vc('ngIf', e.to.showAddButton && e.to.limit > e.field.fieldGroup.length));
            },
            directives: [s.l, s.k, o.a, i.g, a.a, c.a, l.a],
            pipes: [u.d],
            styles: [
              '.list-item[_ngcontent-%COMP%]{position:relative;border:1px solid #e3e3e3;border-radius:13px;padding:45px 25px 0;display:flex;align-items:center;flex-wrap:wrap;margin-bottom:15px}.list-item[_ngcontent-%COMP%]   .index[_ngcontent-%COMP%]{padding-bottom:1.34375em;margin-right:15px}.list-item[_ngcontent-%COMP%]   formly-field[_ngcontent-%COMP%]{flex:1}.list-item[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{width:100%}.list-item[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%]{margin-right:15px}.list-item[_ngcontent-%COMP%]   mat-divider[_ngcontent-%COMP%]{margin:15px 0}.list-item[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{position:absolute;top:10px;right:10px;cursor:pointer;opacity:.5;color:#d84140}.list-item[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]:hover{opacity:1}app-button[_ngcontent-%COMP%]{display:inline-block;margin:0 10px 10px 0}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
      const v = r.dc(y);
    },
    nYR2: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('7o/Q'),
        r = n('quSY');
      function s(t) {
        return (e) => e.lift(new o(t));
      }
      class o {
        constructor(t) {
          this.callback = t;
        }
        call(t, e) {
          return e.subscribe(new a(t, this.callback));
        }
      }
      class a extends i.a {
        constructor(t, e) {
          super(t), this.add(new r.a(e));
        }
      }
    },
    ngJS: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (t) => (e) => {
        for (let n = 0, i = t.length; n < i && !e.closed; n++) e.next(t[n]);
        e.complete();
      };
    },
    o80G: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('jETI');
      const r = Object(i.a)({
        GAMES: { path: 'games', fullPath: '//games' },
        GAME: { path: 'games/:id', fullPath: '//games/:id' },
        GAME_PLAY: { path: '', fullPath: '//games/:id' },
        GAME_AUTH: { path: 'auth', fullPath: '//games/:id/auth' },
      });
    },
    ofXK: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return v;
      }),
        n.d(e, 'b', function () {
          return Y;
        }),
        n.d(e, 'c', function () {
          return J;
        }),
        n.d(e, 'd', function () {
          return c;
        }),
        n.d(e, 'e', function () {
          return x;
        }),
        n.d(e, 'f', function () {
          return h;
        }),
        n.d(e, 'g', function () {
          return C;
        }),
        n.d(e, 'h', function () {
          return _;
        }),
        n.d(e, 'i', function () {
          return D;
        }),
        n.d(e, 'j', function () {
          return j;
        }),
        n.d(e, 'k', function () {
          return P;
        }),
        n.d(e, 'l', function () {
          return F;
        }),
        n.d(e, 'm', function () {
          return U;
        }),
        n.d(e, 'n', function () {
          return H;
        }),
        n.d(e, 'o', function () {
          return z;
        }),
        n.d(e, 'p', function () {
          return B;
        }),
        n.d(e, 'q', function () {
          return W;
        }),
        n.d(e, 'r', function () {
          return w;
        }),
        n.d(e, 's', function () {
          return l;
        }),
        n.d(e, 't', function () {
          return Q;
        }),
        n.d(e, 'u', function () {
          return Z;
        }),
        n.d(e, 'v', function () {
          return it;
        }),
        n.d(e, 'w', function () {
          return et;
        }),
        n.d(e, 'x', function () {
          return nt;
        }),
        n.d(e, 'y', function () {
          return a;
        }),
        n.d(e, 'z', function () {
          return tt;
        }),
        n.d(e, 'A', function () {
          return s;
        }),
        n.d(e, 'B', function () {
          return A;
        }),
        n.d(e, 'C', function () {
          return o;
        });
      var i = n('fXoL');
      let r = null;
      function s() {
        return r;
      }
      function o(t) {
        r || (r = t);
      }
      class a {}
      const c = new i.s('DocumentToken');
      let l = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = Object(i.Rb)({ factory: u, token: t, providedIn: 'platform' })),
          t
        );
      })();
      function u() {
        return Object(i.fc)(d);
      }
      const h = new i.s('Location Initialized');
      let d = (() => {
        class t extends l {
          constructor(t) {
            super(), (this._doc = t), this._init();
          }
          _init() {
            (this.location = s().getLocation()), (this._history = s().getHistory());
          }
          getBaseHrefFromDOM() {
            return s().getBaseHref(this._doc);
          }
          onPopState(t) {
            s().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', t, !1);
          }
          onHashChange(t) {
            s().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', t, !1);
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(t) {
            this.location.pathname = t;
          }
          pushState(t, e, n) {
            p() ? this._history.pushState(t, e, n) : (this.location.hash = n);
          }
          replaceState(t, e, n) {
            p() ? this._history.replaceState(t, e, n) : (this.location.hash = n);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(c));
          }),
          (t.ɵprov = Object(i.Rb)({ factory: f, token: t, providedIn: 'platform' })),
          t
        );
      })();
      function p() {
        return !!window.history.pushState;
      }
      function f() {
        return new d(Object(i.fc)(c));
      }
      function m(t, e) {
        if (0 == t.length) return e;
        if (0 == e.length) return t;
        let n = 0;
        return (
          t.endsWith('/') && n++, e.startsWith('/') && n++, 2 == n ? t + e.substring(1) : 1 == n ? t + e : t + '/' + e
        );
      }
      function g(t) {
        const e = t.match(/#|\?|$/),
          n = (e && e.index) || t.length;
        return t.slice(0, n - ('/' === t[n - 1] ? 1 : 0)) + t.slice(n);
      }
      function b(t) {
        return t && '?' !== t[0] ? '?' + t : t;
      }
      let _ = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = Object(i.Rb)({ factory: y, token: t, providedIn: 'root' })),
          t
        );
      })();
      function y(t) {
        const e = Object(i.fc)(c).location;
        return new w(Object(i.fc)(l), (e && e.origin) || '');
      }
      const v = new i.s('appBaseHref');
      let w = (() => {
          class t extends _ {
            constructor(t, e) {
              if (
                (super(),
                (this._platformLocation = t),
                null == e && (e = this._platformLocation.getBaseHrefFromDOM()),
                null == e)
              )
                throw new Error(
                  'No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.'
                );
              this._baseHref = e;
            }
            onPopState(t) {
              this._platformLocation.onPopState(t), this._platformLocation.onHashChange(t);
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(t) {
              return m(this._baseHref, t);
            }
            path(t = !1) {
              const e = this._platformLocation.pathname + b(this._platformLocation.search),
                n = this._platformLocation.hash;
              return n && t ? `${e}${n}` : e;
            }
            pushState(t, e, n, i) {
              const r = this.prepareExternalUrl(n + b(i));
              this._platformLocation.pushState(t, e, r);
            }
            replaceState(t, e, n, i) {
              const r = this.prepareExternalUrl(n + b(i));
              this._platformLocation.replaceState(t, e, r);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(l), i.fc(v, 8));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        x = (() => {
          class t extends _ {
            constructor(t, e) {
              super(), (this._platformLocation = t), (this._baseHref = ''), null != e && (this._baseHref = e);
            }
            onPopState(t) {
              this._platformLocation.onPopState(t), this._platformLocation.onHashChange(t);
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(t = !1) {
              let e = this._platformLocation.hash;
              return null == e && (e = '#'), e.length > 0 ? e.substring(1) : e;
            }
            prepareExternalUrl(t) {
              const e = m(this._baseHref, t);
              return e.length > 0 ? '#' + e : e;
            }
            pushState(t, e, n, i) {
              let r = this.prepareExternalUrl(n + b(i));
              0 == r.length && (r = this._platformLocation.pathname), this._platformLocation.pushState(t, e, r);
            }
            replaceState(t, e, n, i) {
              let r = this.prepareExternalUrl(n + b(i));
              0 == r.length && (r = this._platformLocation.pathname), this._platformLocation.replaceState(t, e, r);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(l), i.fc(v, 8));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        C = (() => {
          class t {
            constructor(t, e) {
              (this._subject = new i.p()), (this._urlChangeListeners = []), (this._platformStrategy = t);
              const n = this._platformStrategy.getBaseHref();
              (this._platformLocation = e),
                (this._baseHref = g(O(n))),
                this._platformStrategy.onPopState((t) => {
                  this._subject.emit({ url: this.path(!0), pop: !0, state: t.state, type: t.type });
                });
            }
            path(t = !1) {
              return this.normalize(this._platformStrategy.path(t));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo(t, e = '') {
              return this.path() == this.normalize(t + b(e));
            }
            normalize(e) {
              return t.stripTrailingSlash(
                (function (t, e) {
                  return t && e.startsWith(t) ? e.substring(t.length) : e;
                })(this._baseHref, O(e))
              );
            }
            prepareExternalUrl(t) {
              return t && '/' !== t[0] && (t = '/' + t), this._platformStrategy.prepareExternalUrl(t);
            }
            go(t, e = '', n = null) {
              this._platformStrategy.pushState(n, '', t, e),
                this._notifyUrlChangeListeners(this.prepareExternalUrl(t + b(e)), n);
            }
            replaceState(t, e = '', n = null) {
              this._platformStrategy.replaceState(n, '', t, e),
                this._notifyUrlChangeListeners(this.prepareExternalUrl(t + b(e)), n);
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            onUrlChange(t) {
              this._urlChangeListeners.push(t),
                this.subscribe((t) => {
                  this._notifyUrlChangeListeners(t.url, t.state);
                });
            }
            _notifyUrlChangeListeners(t = '', e) {
              this._urlChangeListeners.forEach((n) => n(t, e));
            }
            subscribe(t, e, n) {
              return this._subject.subscribe({ next: t, error: e, complete: n });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(_), i.fc(l));
            }),
            (t.normalizeQueryParams = b),
            (t.joinWithSlash = m),
            (t.stripTrailingSlash = g),
            (t.ɵprov = Object(i.Rb)({ factory: k, token: t, providedIn: 'root' })),
            t
          );
        })();
      function k() {
        return new C(Object(i.fc)(_), Object(i.fc)(l));
      }
      function O(t) {
        return t.replace(/\/index.html$/, '');
      }
      const S = (function () {
          var t = { Zero: 0, One: 1, Two: 2, Few: 3, Many: 4, Other: 5 };
          return (
            (t[t.Zero] = 'Zero'),
            (t[t.One] = 'One'),
            (t[t.Two] = 'Two'),
            (t[t.Few] = 'Few'),
            (t[t.Many] = 'Many'),
            (t[t.Other] = 'Other'),
            t
          );
        })(),
        E = i.ub;
      class T {}
      let I = (() => {
        class t extends T {
          constructor(t) {
            super(), (this.locale = t);
          }
          getPluralCategory(t, e) {
            switch (E(e || this.locale)(t)) {
              case S.Zero:
                return 'zero';
              case S.One:
                return 'one';
              case S.Two:
                return 'two';
              case S.Few:
                return 'few';
              case S.Many:
                return 'many';
              default:
                return 'other';
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(i.w));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function A(t, e) {
        e = encodeURIComponent(e);
        for (const n of t.split(';')) {
          const t = n.indexOf('='),
            [i, r] = -1 == t ? [n, ''] : [n.slice(0, t), n.slice(t + 1)];
          if (i.trim() === e) return decodeURIComponent(r);
        }
        return null;
      }
      let D = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._iterableDiffers = t),
                (this._keyValueDiffers = e),
                (this._ngEl = n),
                (this._renderer = i),
                (this._iterableDiffer = null),
                (this._keyValueDiffer = null),
                (this._initialClasses = []),
                (this._rawClass = null);
            }
            set klass(t) {
              this._removeClasses(this._initialClasses),
                (this._initialClasses = 'string' == typeof t ? t.split(/\s+/) : []),
                this._applyClasses(this._initialClasses),
                this._applyClasses(this._rawClass);
            }
            set ngClass(t) {
              this._removeClasses(this._rawClass),
                this._applyClasses(this._initialClasses),
                (this._iterableDiffer = null),
                (this._keyValueDiffer = null),
                (this._rawClass = 'string' == typeof t ? t.split(/\s+/) : t),
                this._rawClass &&
                  (Object(i.xb)(this._rawClass)
                    ? (this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create())
                    : (this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create()));
            }
            ngDoCheck() {
              if (this._iterableDiffer) {
                const t = this._iterableDiffer.diff(this._rawClass);
                t && this._applyIterableChanges(t);
              } else if (this._keyValueDiffer) {
                const t = this._keyValueDiffer.diff(this._rawClass);
                t && this._applyKeyValueChanges(t);
              }
            }
            _applyKeyValueChanges(t) {
              t.forEachAddedItem((t) => this._toggleClass(t.key, t.currentValue)),
                t.forEachChangedItem((t) => this._toggleClass(t.key, t.currentValue)),
                t.forEachRemovedItem((t) => {
                  t.previousValue && this._toggleClass(t.key, !1);
                });
            }
            _applyIterableChanges(t) {
              t.forEachAddedItem((t) => {
                if ('string' != typeof t.item)
                  throw new Error(
                    `NgClass can only toggle CSS classes expressed as strings, got ${Object(i.Db)(t.item)}`
                  );
                this._toggleClass(t.item, !0);
              }),
                t.forEachRemovedItem((t) => this._toggleClass(t.item, !1));
            }
            _applyClasses(t) {
              t &&
                (Array.isArray(t) || t instanceof Set
                  ? t.forEach((t) => this._toggleClass(t, !0))
                  : Object.keys(t).forEach((e) => this._toggleClass(e, !!t[e])));
            }
            _removeClasses(t) {
              t &&
                (Array.isArray(t) || t instanceof Set
                  ? t.forEach((t) => this._toggleClass(t, !1))
                  : Object.keys(t).forEach((t) => this._toggleClass(t, !1)));
            }
            _toggleClass(t, e) {
              (t = t.trim()) &&
                t.split(/\s+/g).forEach((t) => {
                  e
                    ? this._renderer.addClass(this._ngEl.nativeElement, t)
                    : this._renderer.removeClass(this._ngEl.nativeElement, t);
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.u), i.Vb(i.v), i.Vb(i.m), i.Vb(i.G));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngClass', '']],
              inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
            })),
            t
          );
        })(),
        j = (() => {
          class t {
            constructor(t) {
              (this._viewContainerRef = t), (this._componentRef = null), (this._moduleRef = null);
            }
            ngOnChanges(t) {
              if ((this._viewContainerRef.clear(), (this._componentRef = null), this.ngComponentOutlet)) {
                const e = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;
                if (t.ngComponentOutletNgModuleFactory)
                  if ((this._moduleRef && this._moduleRef.destroy(), this.ngComponentOutletNgModuleFactory)) {
                    const t = e.get(i.z);
                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(t.injector);
                  } else this._moduleRef = null;
                const n = (this._moduleRef
                  ? this._moduleRef.componentFactoryResolver
                  : e.get(i.k)
                ).resolveComponentFactory(this.ngComponentOutlet);
                this._componentRef = this._viewContainerRef.createComponent(
                  n,
                  this._viewContainerRef.length,
                  e,
                  this.ngComponentOutletContent
                );
              }
            }
            ngOnDestroy() {
              this._moduleRef && this._moduleRef.destroy();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.S));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngComponentOutlet', '']],
              inputs: {
                ngComponentOutlet: 'ngComponentOutlet',
                ngComponentOutletInjector: 'ngComponentOutletInjector',
                ngComponentOutletContent: 'ngComponentOutletContent',
                ngComponentOutletNgModuleFactory: 'ngComponentOutletNgModuleFactory',
              },
              features: [i.Gb],
            })),
            t
          );
        })();
      class R {
        constructor(t, e, n, i) {
          (this.$implicit = t), (this.ngForOf = e), (this.index = n), (this.count = i);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let P = (() => {
        class t {
          constructor(t, e, n) {
            (this._viewContainer = t),
              (this._template = e),
              (this._differs = n),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(t) {
            (this._ngForOf = t), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(t) {
            Object(i.bb)() &&
              null != t &&
              'function' != typeof t &&
              console &&
              console.warn &&
              console.warn(
                `trackBy must be a function, but received ${JSON.stringify(t)}. ` +
                  'See https://angular.io/api/common/NgForOf#change-propagation for more information.'
              ),
              (this._trackByFn = t);
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(t) {
            t && (this._template = t);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const n = this._ngForOf;
              if (!this._differ && n)
                try {
                  this._differ = this._differs.find(n).create(this.ngForTrackBy);
                } catch (e) {
                  throw new Error(
                    `Cannot find a differ supporting object '${n}' of type '${
                      ((t = n), t.name || typeof t)
                    }'. NgFor only supports binding to Iterables such as Arrays.`
                  );
                }
            }
            var t;
            if (this._differ) {
              const t = this._differ.diff(this._ngForOf);
              t && this._applyChanges(t);
            }
          }
          _applyChanges(t) {
            const e = [];
            t.forEachOperation((t, n, i) => {
              if (null == t.previousIndex) {
                const n = this._viewContainer.createEmbeddedView(
                    this._template,
                    new R(null, this._ngForOf, -1, -1),
                    null === i ? void 0 : i
                  ),
                  r = new M(t, n);
                e.push(r);
              } else if (null == i) this._viewContainer.remove(null === n ? void 0 : n);
              else if (null !== n) {
                const r = this._viewContainer.get(n);
                this._viewContainer.move(r, i);
                const s = new M(t, r);
                e.push(s);
              }
            });
            for (let n = 0; n < e.length; n++) this._perViewChange(e[n].view, e[n].record);
            for (let n = 0, i = this._viewContainer.length; n < i; n++) {
              const t = this._viewContainer.get(n);
              (t.context.index = n), (t.context.count = i), (t.context.ngForOf = this._ngForOf);
            }
            t.forEachIdentityChange((t) => {
              this._viewContainer.get(t.currentIndex).context.$implicit = t.item;
            });
          }
          _perViewChange(t, e) {
            t.context.$implicit = e.item;
          }
          static ngTemplateContextGuard(t, e) {
            return !0;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(i.S), i.Vb(i.O), i.Vb(i.u));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: { ngForOf: 'ngForOf', ngForTrackBy: 'ngForTrackBy', ngForTemplate: 'ngForTemplate' },
          })),
          t
        );
      })();
      class M {
        constructor(t, e) {
          (this.record = t), (this.view = e);
        }
      }
      let F = (() => {
        class t {
          constructor(t, e) {
            (this._viewContainer = t),
              (this._context = new N()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = e);
          }
          set ngIf(t) {
            (this._context.$implicit = this._context.ngIf = t), this._updateView();
          }
          set ngIfThen(t) {
            V('ngIfThen', t), (this._thenTemplateRef = t), (this._thenViewRef = null), this._updateView();
          }
          set ngIfElse(t) {
            V('ngIfElse', t), (this._elseTemplateRef = t), (this._elseViewRef = null), this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context)))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)));
          }
          static ngTemplateContextGuard(t, e) {
            return !0;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(i.S), i.Vb(i.O));
          }),
          (t.ɵdir = i.Qb({
            type: t,
            selectors: [['', 'ngIf', '']],
            inputs: { ngIf: 'ngIf', ngIfThen: 'ngIfThen', ngIfElse: 'ngIfElse' },
          })),
          t
        );
      })();
      class N {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function V(t, e) {
        if (e && !e.createEmbeddedView)
          throw new Error(`${t} must be a TemplateRef, but received '${Object(i.Db)(e)}'.`);
      }
      class L {
        constructor(t, e) {
          (this._viewContainerRef = t), (this._templateRef = e), (this._created = !1);
        }
        create() {
          (this._created = !0), this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created ? this.create() : !t && this._created && this.destroy();
        }
      }
      let H = (() => {
          class t {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(t) {
              (this._ngSwitch = t), 0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(t) {
              this._defaultViews || (this._defaultViews = []), this._defaultViews.push(t);
            }
            _matchCase(t) {
              const e = t == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || e),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                e
              );
            }
            _updateDefaultCases(t) {
              if (this._defaultViews && t !== this._defaultUsed) {
                this._defaultUsed = t;
                for (let e = 0; e < this._defaultViews.length; e++) this._defaultViews[e].enforceState(t);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Qb({ type: t, selectors: [['', 'ngSwitch', '']], inputs: { ngSwitch: 'ngSwitch' } })),
            t
          );
        })(),
        z = (() => {
          class t {
            constructor(t, e, n) {
              (this.ngSwitch = n), n._addCase(), (this._view = new L(t, e));
            }
            ngDoCheck() {
              this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.S), i.Vb(i.O), i.Vb(H, 1));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngSwitchCase', '']],
              inputs: { ngSwitchCase: 'ngSwitchCase' },
            })),
            t
          );
        })(),
        B = (() => {
          class t {
            constructor(t, e, n) {
              n._addDefault(new L(t, e));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.S), i.Vb(i.O), i.Vb(H, 1));
            }),
            (t.ɵdir = i.Qb({ type: t, selectors: [['', 'ngSwitchDefault', '']] })),
            t
          );
        })(),
        U = (() => {
          class t {
            constructor(t, e, n) {
              (this._ngEl = t),
                (this._differs = e),
                (this._renderer = n),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(t) {
              (this._ngStyle = t), !this._differ && t && (this._differ = this._differs.find(t).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const t = this._differ.diff(this._ngStyle);
                t && this._applyChanges(t);
              }
            }
            _setStyle(t, e) {
              const [n, i] = t.split('.');
              null != (e = null != e && i ? `${e}${i}` : e)
                ? this._renderer.setStyle(this._ngEl.nativeElement, n, e)
                : this._renderer.removeStyle(this._ngEl.nativeElement, n);
            }
            _applyChanges(t) {
              t.forEachRemovedItem((t) => this._setStyle(t.key, null)),
                t.forEachAddedItem((t) => this._setStyle(t.key, t.currentValue)),
                t.forEachChangedItem((t) => this._setStyle(t.key, t.currentValue));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(i.v), i.Vb(i.G));
            }),
            (t.ɵdir = i.Qb({ type: t, selectors: [['', 'ngStyle', '']], inputs: { ngStyle: 'ngStyle' } })),
            t
          );
        })(),
        W = (() => {
          class t {
            constructor(t) {
              (this._viewContainerRef = t),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null);
            }
            ngOnChanges(t) {
              if (this._shouldRecreateView(t)) {
                const t = this._viewContainerRef;
                this._viewRef && t.remove(t.indexOf(this._viewRef)),
                  (this._viewRef = this.ngTemplateOutlet
                    ? t.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext)
                    : null);
              } else
                this._viewRef &&
                  this.ngTemplateOutletContext &&
                  this._updateExistingContext(this.ngTemplateOutletContext);
            }
            _shouldRecreateView(t) {
              const e = t.ngTemplateOutletContext;
              return !!t.ngTemplateOutlet || (e && this._hasContextShapeChanged(e));
            }
            _hasContextShapeChanged(t) {
              const e = Object.keys(t.previousValue || {}),
                n = Object.keys(t.currentValue || {});
              if (e.length === n.length) {
                for (let t of n) if (-1 === e.indexOf(t)) return !0;
                return !1;
              }
              return !0;
            }
            _updateExistingContext(t) {
              for (let e of Object.keys(t)) this._viewRef.context[e] = this.ngTemplateOutletContext[e];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.S));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngTemplateOutlet', '']],
              inputs: { ngTemplateOutletContext: 'ngTemplateOutletContext', ngTemplateOutlet: 'ngTemplateOutlet' },
              features: [i.Gb],
            })),
            t
          );
        })();
      function $(t, e) {
        return Error(`InvalidPipeArgument: '${e}' for pipe '${Object(i.Db)(t)}'`);
      }
      class q {
        createSubscription(t, e) {
          return t.subscribe({
            next: e,
            error: (t) => {
              throw t;
            },
          });
        }
        dispose(t) {
          t.unsubscribe();
        }
        onDestroy(t) {
          t.unsubscribe();
        }
      }
      class G {
        createSubscription(t, e) {
          return t.then(e, (t) => {
            throw t;
          });
        }
        dispose(t) {}
        onDestroy(t) {}
      }
      const X = new G(),
        K = new q();
      let Y = (() => {
          class t {
            constructor(t) {
              (this._ref = t),
                (this._latestValue = null),
                (this._latestReturnedValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null);
            }
            ngOnDestroy() {
              this._subscription && this._dispose();
            }
            transform(t) {
              return this._obj
                ? t !== this._obj
                  ? (this._dispose(), this.transform(t))
                  : Object(i.Ab)(this._latestValue, this._latestReturnedValue)
                  ? this._latestReturnedValue
                  : ((this._latestReturnedValue = this._latestValue), i.U.wrap(this._latestValue))
                : (t && this._subscribe(t), (this._latestReturnedValue = this._latestValue), this._latestValue);
            }
            _subscribe(t) {
              (this._obj = t),
                (this._strategy = this._selectStrategy(t)),
                (this._subscription = this._strategy.createSubscription(t, (e) => this._updateLatestValue(t, e)));
            }
            _selectStrategy(e) {
              if (Object(i.zb)(e)) return X;
              if (Object(i.yb)(e)) return K;
              throw $(t, e);
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._latestReturnedValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(t, e) {
              t === this._obj && ((this._latestValue = e), this._ref.markForCheck());
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.hc());
            }),
            (t.ɵpipe = i.Ub({ name: 'async', type: t, pure: !1 })),
            t
          );
        })(),
        Z = (() => {
          class t {
            transform(e) {
              if (!e) return e;
              if ('string' != typeof e) throw $(t, e);
              return e.toUpperCase();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵpipe = i.Ub({ name: 'uppercase', type: t, pure: !0 })),
            t
          );
        })(),
        Q = (() => {
          class t {
            transform(e, n, i) {
              if (null == e) return e;
              if (!this.supports(e)) throw $(t, e);
              return e.slice(n, i);
            }
            supports(t) {
              return 'string' == typeof t || Array.isArray(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵpipe = i.Ub({ name: 'slice', type: t, pure: !1 })),
            t
          );
        })(),
        J = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [{ provide: T, useClass: I }],
            })),
            t
          );
        })();
      const tt = 'browser';
      function et(t) {
        return t === tt;
      }
      function nt(t) {
        return 'server' === t;
      }
      let it = (() => {
        class t {}
        return (
          (t.ɵprov = Object(i.Rb)({
            token: t,
            providedIn: 'root',
            factory: () => new rt(Object(i.fc)(c), window, Object(i.fc)(i.o)),
          })),
          t
        );
      })();
      class rt {
        constructor(t, e, n) {
          (this.document = t), (this.window = e), (this.errorHandler = n), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportScrollRestoration() ? [this.window.scrollX, this.window.scrollY] : [0, 0];
        }
        scrollToPosition(t) {
          this.supportScrollRestoration() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (this.supportScrollRestoration()) {
            t =
              this.window.CSS && this.window.CSS.escape
                ? this.window.CSS.escape(t)
                : t.replace(/(\"|\'\ |:|\.|\[|\]|,|=)/g, '\\$1');
            try {
              const e = this.document.querySelector(`#${t}`);
              if (e) return void this.scrollToElement(e);
              const n = this.document.querySelector(`[name='${t}']`);
              if (n) return void this.scrollToElement(n);
            } catch (e) {
              this.errorHandler.handleError(e);
            }
          }
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            n = e.left + this.window.pageXOffset,
            i = e.top + this.window.pageYOffset,
            r = this.offset();
          this.window.scrollTo(n - r[0], i - r[1]);
        }
        supportScrollRestoration() {
          try {
            return !!this.window && !!this.window.scrollTo;
          } catch (t) {
            return !1;
          }
        }
      }
    },
    pLZG: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('7o/Q');
      function r(t, e) {
        return function (n) {
          return n.lift(new s(t, e));
        };
      }
      class s {
        constructor(t, e) {
          (this.predicate = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new o(t, this.predicate, this.thisArg));
        }
      }
      class o extends i.a {
        constructor(t, e, n) {
          super(t), (this.predicate = e), (this.thisArg = n), (this.count = 0);
        }
        _next(t) {
          let e;
          try {
            e = this.predicate.call(this.thisArg, t, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          e && this.destination.next(t);
        }
      }
    },
    ptKI: function (t, e, n) {
      'use strict';
      n.d(e, 'g', function () {
        return y;
      }),
        n.d(e, 'a', function () {
          return m;
        }),
        n.d(e, 'f', function () {
          return C;
        }),
        n.d(e, 'e', function () {
          return S;
        }),
        n.d(e, 'c', function () {
          return E.a;
        }),
        n.d(e, 'b', function () {
          return _;
        }),
        n.d(e, 'd', function () {
          return f;
        }),
        n.d(e, 'h', function () {
          return T;
        });
      var i = n('mrSG'),
        r = n('AytR'),
        s = n('BOF4');
      const o = (t) => (t ? s(t) : '');
      var a = n('bRMp'),
        c = n('fXoL'),
        l = n('tk/3'),
        u = n('7ZcW'),
        h = n('LvDl');
      const d = r.a.apiUrl + r.a.imagesEndpoint,
        p = (t) => t instanceof u.a;
      let f = (() => {
          class t {
            constructor(t) {
              (this.http = t),
                (this.getImagesRootUrl = () => r.a.apiUrl + r.a.imagesEndpoint),
                (this.getFilePath = (t) =>
                  Object(i.a)(this, void 0, void 0, function* () {
                    return (yield this.http
                      .post(
                        d,
                        (function (t) {
                          const e = new FormData();
                          for (const n of Object.keys(t)) {
                            let i;
                            if (t[n] instanceof u.a)
                              for (const r in t[n].files) t[n].files.hasOwnProperty(r) && e.append(n, t[n].files[r]);
                            else
                              i = t[n] instanceof Date ? t[n] : 'object' == typeof t[n] ? JSON.stringify(t[n]) : t[n];
                            i && e.append(n, i);
                          }
                          return e;
                        })({ files: t })
                      )
                      .toPromise()).data;
                  }));
            }
            parseObject(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                const e = {};
                for (const n in t)
                  if (t.hasOwnProperty(n)) {
                    const i = t[n];
                    e[n] = yield p(i)
                      ? this.getFilePath(i)
                      : Object(h.isArray)(i)
                      ? this.parseArray(i)
                      : Object(h.isObject)(i)
                      ? this.parseObject(i)
                      : i;
                  }
                return e;
              });
            }
            parseArray(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                const e = [];
                for (const n of t) {
                  const t = yield p(n)
                    ? this.getFilePath(n)
                    : Object(h.isArray)(n)
                    ? this.parseArray(n)
                    : Object(h.isObject)(n)
                    ? this.parseObject(n)
                    : n;
                  e.push(t);
                }
                return e;
              });
            }
            parseData(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                return (yield Array.isArray(t)) ? this.parseArray(t) : this.parseObject(t);
              });
            }
            get(t) {
              return this.http.get(r.a.apiUrl + r.a.imagesEndpoint + t).toPromise();
            }
            getPath(t) {
              return r.a.apiUrl + r.a.imagesEndpoint + t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(c.fc(l.b));
            }),
            (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        m = (() => {
          class t {
            constructor(t, e) {
              (this._httpClient = t),
                (this._appImagesService = e),
                (this._url = r.a.apiUrl),
                (this.get = (t, e) => this._httpClient.get(this._url + t, e).toPromise()),
                (this.post = (t, e, n) =>
                  Object(i.a)(this, void 0, void 0, function* () {
                    return this._httpClient
                      .post(this._url + t, yield this._appImagesService.parseData(e), n)
                      .toPromise();
                  })),
                (this.patch = (t, e, n) =>
                  Object(i.a)(this, void 0, void 0, function* () {
                    return this._httpClient
                      .patch(this._url + t, yield this._appImagesService.parseData(e), n)
                      .toPromise();
                  })),
                (this.delete = (t, e) => this._httpClient.delete(this._url + t, e).toPromise());
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(c.fc(l.b), c.fc(f));
            }),
            (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      var g = n('tyNb'),
        b = n('M2ul');
      let _ = (() => {
          class t {
            constructor(t) {
              (this._configsState = t), (this._localStorageItem = 'configs');
              const e = JSON.parse(localStorage.getItem(this._localStorageItem)) || {};
              this._configsState.setState(e);
            }
            set(t, e) {
              const n = this._configsState.set(t, e);
              localStorage.setItem(this._localStorageItem, JSON.stringify(n));
            }
            get(t) {
              return this._configsState.get(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(c.fc(b.c));
            }),
            (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        y = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._apiService = t),
                (this._router = e),
                (this._authState = n),
                (this._appConfigsService = i),
                (this._url = r.a.authEndpoint),
                (this._configName = 'token');
              const s = this._appConfigsService.get(this._configName);
              this.checkToken(s);
            }
            get user$() {
              return this._authState.state$;
            }
            get user() {
              return this._authState.snapshot;
            }
            checkToken(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                const e = yield this.me();
                if (t && e) {
                  const e = o(t);
                  this._authState.login(e);
                }
              });
            }
            me() {
              return Object(i.a)(this, void 0, void 0, function* () {
                try {
                  return (yield this._apiService.get(this._url + 'me')).data;
                } catch (t) {}
              });
            }
            logout() {
              return Object(i.a)(this, void 0, void 0, function* () {
                yield this._apiService.post(this._url + 'logout', {}),
                  this._authState.logout(),
                  this._appConfigsService.set(this._configName, null),
                  this._router.navigateByUrl(a.a.AUTH.fullPath);
              });
            }
            login(t) {
              return Object(i.a)(this, void 0, void 0, function* () {
                const { type: e, data: n } = t,
                  i = yield this._apiService.post(this._url + `company/${e}`, n),
                  { token: r } = i.data,
                  s = o(r);
                this._authState.login(s),
                  this._appConfigsService.set(this._configName, r),
                  this._router.navigateByUrl(a.a.ADMIN.fullPath);
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(c.fc(m), c.fc(g.c), c.fc(b.a), c.fc(_));
            }),
            (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      var v = n('Mjy2'),
        w = n('/bhW'),
        x = n('0IaG');
      let C = (() => {
        class t {
          constructor(t) {
            this._matDialog = t;
          }
          openPopupForm(t) {
            const { type: e = v.b.CREATE, title: n, model: i = {}, translateTitle: r, fields: s, panelClass: o } = t;
            return this.open({ component: w.d, panelClass: o, type: e, title: n || `MODAL.${r}`, model: i, fields: s });
          }
          open(t) {
            const { component: e, panelClass: n } = t,
              r = Object(i.e)(t, ['component', 'panelClass']);
            return this._matDialog.open(e, { panelClass: n, data: r }).afterClosed().toPromise();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(c.fc(x.b));
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      var k = n('5eHb'),
        O = n('sYmb');
      let S = (() => {
        class t {
          constructor(t, e) {
            (this._toastrService = t), (this._translateService = e);
          }
          showSuccess(t, e) {
            const n = this._translateService.instant(`SUCCESS.${t}`),
              i = this._translateService.instant('SUCCESS.STATUS', { status: e });
            this._toastrService.success(n, i);
          }
          showError(t, e) {
            const n = this._translateService.instant(`ERROR.${t}`),
              i = this._translateService.instant('ERROR.STATUS', { status: e });
            this._toastrService.error(n, i);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(c.fc(k.b), c.fc(O.e));
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      var E = n('I5W0');
      const T = [m, y, C, S, E.a, _, f];
    },
    qFsG: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return h;
      }),
        n.d(e, 'b', function () {
          return g;
        }),
        n.d(e, 'c', function () {
          return b;
        });
      var i = n('ihCf'),
        r = n('fXoL'),
        s = n('8LU1'),
        o = n('nLfN'),
        a = n('FKr1'),
        c = n('kmnG'),
        l = n('XNiG'),
        u = n('3Pt+');
      const h = new r.s('MAT_INPUT_VALUE_ACCESSOR'),
        d = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];
      let p = 0;
      class f {
        constructor(t, e, n, i) {
          (this._defaultErrorStateMatcher = t),
            (this._parentForm = e),
            (this._parentFormGroup = n),
            (this.ngControl = i);
        }
      }
      const m = Object(a.y)(f);
      let g = (() => {
          class t extends m {
            constructor(t, e, n, i, r, s, a, c, u) {
              super(s, i, r, n),
                (this._elementRef = t),
                (this._platform = e),
                (this.ngControl = n),
                (this._autofillMonitor = c),
                (this._uid = `mat-input-${p++}`),
                (this.focused = !1),
                (this.stateChanges = new l.a()),
                (this.controlType = 'mat-input'),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._required = !1),
                (this._type = 'text'),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = [
                  'date',
                  'datetime',
                  'datetime-local',
                  'month',
                  'time',
                  'week',
                ].filter((t) => Object(o.e)().has(t)));
              const h = this._elementRef.nativeElement,
                d = h.nodeName.toLowerCase();
              (this._inputValueAccessor = a || h),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                e.IOS &&
                  u.runOutsideAngular(() => {
                    t.nativeElement.addEventListener('keyup', (t) => {
                      let e = t.target;
                      e.value ||
                        e.selectionStart ||
                        e.selectionEnd ||
                        (e.setSelectionRange(1, 1), e.setSelectionRange(0, 0));
                    });
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = 'select' === d),
                (this._isTextarea = 'textarea' === d),
                this._isNativeSelect &&
                  (this.controlType = h.multiple ? 'mat-native-select-multiple' : 'mat-native-select');
            }
            get disabled() {
              return this.ngControl && null !== this.ngControl.disabled ? this.ngControl.disabled : this._disabled;
            }
            set disabled(t) {
              (this._disabled = Object(s.c)(t)), this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(t) {
              this._id = t || this._uid;
            }
            get required() {
              return this._required;
            }
            set required(t) {
              this._required = Object(s.c)(t);
            }
            get type() {
              return this._type;
            }
            set type(t) {
              (this._type = t || 'text'),
                this._validateType(),
                !this._isTextarea &&
                  Object(o.e)().has(this._type) &&
                  (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(t) {
              t !== this.value && ((this._inputValueAccessor.value = t), this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(t) {
              this._readonly = Object(s.c)(t);
            }
            ngOnInit() {
              this._platform.isBrowser &&
                this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((t) => {
                  (this.autofilled = t.isAutofilled), this.stateChanges.next();
                });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser && this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState(), this._dirtyCheckNativeValue();
            }
            focus(t) {
              this._elementRef.nativeElement.focus(t);
            }
            _focusChanged(t) {
              t === this.focused || (this.readonly && t) || ((this.focused = t), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckNativeValue() {
              const t = this._elementRef.nativeElement.value;
              this._previousNativeValue !== t && ((this._previousNativeValue = t), this.stateChanges.next());
            }
            _validateType() {
              if (d.indexOf(this._type) > -1) throw Error(`Input type "${this._type}" isn't supported by matInput.`);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let t = this._elementRef.nativeElement.validity;
              return t && t.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const t = this._elementRef.nativeElement,
                  e = t.options[0];
                return this.focused || t.multiple || !this.empty || !!(t.selectedIndex > -1 && e && e.label);
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(t) {
              this._ariaDescribedby = t.join(' ');
            }
            onContainerClick() {
              this.focused || this.focus();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                r.Vb(r.m),
                r.Vb(o.a),
                r.Vb(u.m, 10),
                r.Vb(u.p, 8),
                r.Vb(u.h, 8),
                r.Vb(a.b),
                r.Vb(h, 10),
                r.Vb(i.a),
                r.Vb(r.B)
              );
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [
                ['input', 'matInput', ''],
                ['textarea', 'matInput', ''],
                ['select', 'matNativeControl', ''],
                ['input', 'matNativeControl', ''],
                ['textarea', 'matNativeControl', ''],
              ],
              hostAttrs: [1, 'mat-input-element', 'mat-form-field-autofill-control'],
              hostVars: 10,
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('focus', function () {
                    return e._focusChanged(!0);
                  })('blur', function () {
                    return e._focusChanged(!1);
                  })('input', function () {
                    return e._onInput();
                  }),
                  2 & t &&
                    (r.ec('disabled', e.disabled)('required', e.required),
                    r.Jb('id', e.id)('placeholder', e.placeholder)(
                      'readonly',
                      (e.readonly && !e._isNativeSelect) || null
                    )('aria-describedby', e._ariaDescribedby || null)('aria-invalid', e.errorState)(
                      'aria-required',
                      e.required.toString()
                    ),
                    r.Mb('mat-input-server', e._isServer));
              },
              inputs: {
                id: 'id',
                disabled: 'disabled',
                required: 'required',
                type: 'type',
                value: 'value',
                readonly: 'readonly',
                placeholder: 'placeholder',
                errorStateMatcher: 'errorStateMatcher',
              },
              exportAs: ['matInput'],
              features: [r.Hb([{ provide: c.e, useExisting: t }]), r.Fb, r.Gb],
            })),
            t
          );
        })(),
        b = (() => {
          class t {}
          return (
            (t.ɵmod = r.Tb({ type: t })),
            (t.ɵinj = r.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [a.b],
              imports: [[i.c, c.f], i.c, c.f],
            })),
            t
          );
        })();
    },
    qkMB: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return p;
      });
      var i = n('fXoL'),
        r = n('5+WD'),
        s = n('MutI'),
        o = n('ofXK'),
        a = n('Wp6s'),
        c = n('tT4Q');
      function l(t, e) {
        1 & t && (i.mc(), i.Wb(0, 'path', 8));
      }
      const u = function (t) {
        return { active: t };
      };
      function h(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'mat-card', 3),
            i.jc('click', function () {
              i.Dc(t);
              const n = e.$implicit;
              return i.nc().onClick(n);
            }),
            i.bc(1, 'div', 4),
            i.bc(2, 'p'),
            i.Mc(3),
            i.ac(),
            i.ac(),
            i.mc(),
            i.bc(4, 'svg', 5),
            i.Kc(5, l, 1, 0, 'path', 6),
            i.Wb(6, 'path', 7),
            i.ac(),
            i.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = i.nc();
          i.vc('ngClass', i.xc(3, u, t.isActive)),
            i.Ib(3),
            i.Nc(t.name || t.data || t.title),
            i.Ib(2),
            i.vc('ngIf', n.showSortButton);
        }
      }
      function d(t, e) {
        if ((1 & t && i.Wb(0, 'app-fab-speed-deal', 9), 2 & t)) {
          const t = i.nc();
          i.vc('trigger', t.fabTrigger);
        }
      }
      let p = (() => {
        class t {
          constructor() {
            (this.clicked = new i.p()),
              (this.sorted = new i.p()),
              (this.enableSort = !0),
              (this.onClick = (t) => this.clicked.emit(t));
          }
          drop(t) {
            Object(r.e)(t.container.data, t.previousIndex, t.currentIndex), this.sorted.emit(t.container.data);
          }
          get showSortButton() {
            return this.enableSort && this.sorted.observers.length;
          }
          trackByFn(t, e) {
            return t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-list']],
            inputs: { items: 'items', items$: 'items$', fabTrigger: 'fabTrigger', enableSort: 'enableSort' },
            outputs: { clicked: 'clicked', sorted: 'sorted' },
            decls: 5,
            vars: 8,
            consts: [
              ['cdkDropList', '', 3, 'cdkDropListData', 'cdkDropListDropped'],
              ['class', 'card', 'cdkDrag', '', 3, 'ngClass', 'click', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
              [3, 'trigger', 4, 'ngIf'],
              ['cdkDrag', '', 1, 'card', 3, 'ngClass', 'click'],
              [1, 'info'],
              ['width', '24px', 'fill', 'currentColor', 'viewBox', '0 0 24 24', 'cdkDragHandle', ''],
              [
                'd',
                'M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z',
                4,
                'ngIf',
              ],
              ['d', 'M0 0h24v24H0z', 'fill', 'none'],
              [
                'd',
                'M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z',
              ],
              [3, 'trigger'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.bc(0, 'mat-list', 0),
                i.jc('cdkDropListDropped', function (t) {
                  return e.drop(t);
                }),
                i.oc(1, 'async'),
                i.Kc(2, h, 7, 5, 'mat-card', 1),
                i.oc(3, 'async'),
                i.ac(),
                i.Kc(4, d, 1, 1, 'app-fab-speed-deal', 2)),
                2 & t &&
                  (i.vc('cdkDropListData', e.items || i.pc(1, 4, e.items$)),
                  i.Ib(2),
                  i.vc('ngForOf', e.items || i.pc(3, 6, e.items$))('ngForTrackBy', e.trackByFn),
                  i.Ib(2),
                  i.vc('ngIf', e.fabTrigger));
            },
            directives: [s.a, r.c, o.k, o.l, a.a, r.a, o.i, r.b, c.a],
            pipes: [o.b],
            styles: [
              'mat-list[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{margin-bottom:15px}mat-list[_ngcontent-%COMP%]   mat-card.active[_ngcontent-%COMP%]{color:#fff;background-color:#01794b}.card[_ngcontent-%COMP%], .cdk-drag-preview[_ngcontent-%COMP%]{justify-content:space-between;padding:20px 10px;border-bottom:1px solid #ccc;color:rgba(0,0,0,.87);margin-bottom:15px}.card[_ngcontent-%COMP%], .card[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%], .cdk-drag-preview[_ngcontent-%COMP%], .cdk-drag-preview[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]{display:flex;align-items:center}.card[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%], .cdk-drag-preview[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.card[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%], .cdk-drag-preview[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:50%;border:1px solid #000;margin-right:15px}.card[_ngcontent-%COMP%]   mat-chip-list[_ngcontent-%COMP%], .cdk-drag-preview[_ngcontent-%COMP%]   mat-chip-list[_ngcontent-%COMP%]{margin-right:50px}.card[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%], .cdk-drag-preview[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{color:#ccc;cursor:move;width:24px;height:24px}.cdk-drag-preview[_ngcontent-%COMP%]{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:0}.cdk-drag-animating[_ngcontent-%COMP%], .list.cdk-drop-list-dragging[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    quSY: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('DH7j'),
        r = n('XoHu'),
        s = n('n6bG');
      const o = (() => {
        function t(t) {
          return (
            Error.call(this),
            (this.message = t
              ? `${t.length} errors occurred during unsubscription:\n${t
                  .map((t, e) => `${e + 1}) ${t.toString()}`)
                  .join('\n  ')}`
              : ''),
            (this.name = 'UnsubscriptionError'),
            (this.errors = t),
            this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      let a = (() => {
        class t {
          constructor(t) {
            (this.closed = !1),
              (this._parentOrParents = null),
              (this._subscriptions = null),
              t && (this._unsubscribe = t);
          }
          unsubscribe() {
            let e;
            if (this.closed) return;
            let { _parentOrParents: n, _unsubscribe: a, _subscriptions: l } = this;
            if (((this.closed = !0), (this._parentOrParents = null), (this._subscriptions = null), n instanceof t))
              n.remove(this);
            else if (null !== n) for (let t = 0; t < n.length; ++t) n[t].remove(this);
            if (Object(s.a)(a))
              try {
                a.call(this);
              } catch (u) {
                e = u instanceof o ? c(u.errors) : [u];
              }
            if (Object(i.a)(l)) {
              let t = -1,
                n = l.length;
              for (; ++t < n; ) {
                const n = l[t];
                if (Object(r.a)(n))
                  try {
                    n.unsubscribe();
                  } catch (u) {
                    (e = e || []), u instanceof o ? (e = e.concat(c(u.errors))) : e.push(u);
                  }
              }
            }
            if (e) throw new o(e);
          }
          add(e) {
            let n = e;
            if (!e) return t.EMPTY;
            switch (typeof e) {
              case 'function':
                n = new t(e);
              case 'object':
                if (n === this || n.closed || 'function' != typeof n.unsubscribe) return n;
                if (this.closed) return n.unsubscribe(), n;
                if (!(n instanceof t)) {
                  const e = n;
                  (n = new t()), (n._subscriptions = [e]);
                }
                break;
              default:
                throw new Error('unrecognized teardown ' + e + ' added to Subscription.');
            }
            let { _parentOrParents: i } = n;
            if (null === i) n._parentOrParents = this;
            else if (i instanceof t) {
              if (i === this) return n;
              n._parentOrParents = [i, this];
            } else {
              if (-1 !== i.indexOf(this)) return n;
              i.push(this);
            }
            const r = this._subscriptions;
            return null === r ? (this._subscriptions = [n]) : r.push(n), n;
          }
          remove(t) {
            const e = this._subscriptions;
            if (e) {
              const n = e.indexOf(t);
              -1 !== n && e.splice(n, 1);
            }
          }
        }
        var e;
        return (t.EMPTY = (((e = new t()).closed = !0), e)), t;
      })();
      function c(t) {
        return t.reduce((t, e) => t.concat(e instanceof o ? e.errors : e), []);
      }
    },
    r3oX: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return ut;
      }),
        n.d(e, 'b', function () {
          return Mt;
        }),
        n.d(e, 'c', function () {
          return dt;
        });
      var i = n('fXoL'),
        r = n('ofXK'),
        s = n('XNiG'),
        o = n('2Vo4'),
        a = n('VRyK'),
        c = n('UXun'),
        l = n('1G5W'),
        u = n('pLZG'),
        h = (n('vkgz'), n('lJxs'), n('/uUt'), n('R0Ic')),
        d = n('ExVU'),
        p = n('3Pt+');
      function f(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'ngx-material-timepicker-24-hours-face', 17),
            i.jc('hourChange', function (e) {
              return i.Dc(t), i.nc(2).onHourChange(e);
            })('hourSelected', function (e) {
              return i.Dc(t), i.nc(2).onHourSelected(e);
            }),
            i.oc(1, 'async'),
            i.ac();
        }
        if (2 & t) {
          const t = i.nc(2);
          i.vc('selectedHour', i.pc(1, 4, t.selectedHour))('minTime', t.minTime)('maxTime', t.maxTime)(
            'format',
            t.format
          );
        }
      }
      function m(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'ngx-material-timepicker-12-hours-face', 18),
            i.jc('hourChange', function (e) {
              return i.Dc(t), i.nc(2).onHourChange(e);
            })('hourSelected', function (e) {
              return i.Dc(t), i.nc(2).onHourSelected(e);
            }),
            i.oc(1, 'async'),
            i.oc(2, 'async'),
            i.ac();
        }
        if (2 & t) {
          const t = i.nc(2);
          i.vc('selectedHour', i.pc(1, 4, t.selectedHour))('period', i.pc(2, 6, t.selectedPeriod))(
            'minTime',
            t.minTime
          )('maxTime', t.maxTime);
        }
      }
      function g(t, e) {
        if (
          (1 & t &&
            (i.bc(0, 'div'),
            i.Kc(1, f, 2, 6, 'ngx-material-timepicker-24-hours-face', 15),
            i.Kc(2, m, 3, 8, 'ng-template', null, 16, i.Lc),
            i.ac()),
          2 & t)
        ) {
          const t = i.Bc(3),
            e = i.nc();
          i.Ib(1), i.vc('ngIf', 24 === e.format)('ngIfElse', t);
        }
      }
      function b(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'ngx-material-timepicker-minutes-face', 19),
            i.jc('minuteChange', function (e) {
              return i.Dc(t), i.nc().onMinuteChange(e);
            }),
            i.oc(1, 'async'),
            i.oc(2, 'async'),
            i.oc(3, 'async'),
            i.ac();
        }
        if (2 & t) {
          const t = i.nc();
          var n;
          const e = null == (n = i.pc(2, 9, t.selectedHour)) ? null : n.time;
          i.vc('selectedMinute', i.pc(1, 7, t.selectedMinute))('selectedHour', e)('minTime', t.minTime)(
            'maxTime',
            t.maxTime
          )('format', t.format)('period', i.pc(3, 11, t.selectedPeriod))('minutesGap', t.minutesGap);
        }
      }
      function _(t, e) {
        1 & t && i.Xb(0);
      }
      function y(t, e) {
        1 & t && i.Xb(0);
      }
      function v(t, e) {
        1 & t && (i.bc(0, 'ngx-material-timepicker-button'), i.Mc(1, 'Cancel'), i.ac());
      }
      function w(t, e) {
        1 & t && (i.bc(0, 'ngx-material-timepicker-button'), i.Mc(1, 'Ok'), i.ac());
      }
      const x = function (t) {
          return { 'timepicker-backdrop-overlay--transparent': t };
        },
        C = ['clockFace'],
        k = ['clockHand'],
        O = function (t) {
          return { transform: t };
        },
        S = function (t, e) {
          return { active: t, disabled: e };
        };
      function E(t, e) {
        if (
          (1 & t &&
            (i.bc(0, 'div', 9),
            i.bc(1, 'span', 10),
            i.oc(2, 'activeHour'),
            i.Mc(3),
            i.oc(4, 'timeLocalizer'),
            i.ac(),
            i.ac()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = i.nc(2);
          i.vc('ngStyle', i.xc(11, O, 'rotateZ(' + t.angle + 'deg) translateX(-50%)')),
            i.Ib(1),
            i.vc('ngStyle', i.xc(13, O, 'rotateZ(-' + t.angle + 'deg)'))(
              'ngClass',
              i.yc(15, S, i.rc(2, 4, t.time, n.selectedTime.time, n.isClockFaceDisabled), t.disabled)
            ),
            i.Ib(2),
            i.Oc(' ', i.qc(4, 8, t.time, n.timeUnit.HOUR), ' ');
        }
      }
      function T(t, e) {
        if (
          (1 & t &&
            (i.bc(0, 'div', 13),
            i.bc(1, 'span', 10),
            i.oc(2, 'activeHour'),
            i.Mc(3),
            i.oc(4, 'timeLocalizer'),
            i.ac(),
            i.ac()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = i.nc(3);
          i.Jc('height', n.innerClockFaceSize, 'px'),
            i.vc('ngStyle', i.xc(13, O, 'rotateZ(' + t.angle + 'deg) translateX(-50%)')),
            i.Ib(1),
            i.vc('ngStyle', i.xc(15, O, 'rotateZ(-' + t.angle + 'deg)'))(
              'ngClass',
              i.yc(
                17,
                S,
                i.rc(2, 6, t.time, null == n.selectedTime ? null : n.selectedTime.time, n.isClockFaceDisabled),
                t.disabled
              )
            ),
            i.Ib(2),
            i.Oc(' ', i.qc(4, 10, t.time, n.timeUnit.HOUR), '');
        }
      }
      function I(t, e) {
        if ((1 & t && (i.bc(0, 'div', 11), i.Kc(1, T, 5, 20, 'div', 12), i.oc(2, 'slice'), i.ac()), 2 & t)) {
          const t = i.nc(2);
          i.Jc('top', 'calc(50% - ' + t.innerClockFaceSize + 'px)'),
            i.Ib(1),
            i.vc('ngForOf', i.rc(2, 4, t.faceTime, 12, 24))('ngForTrackBy', t.trackByTime);
        }
      }
      function A(t, e) {
        if (
          (1 & t &&
            (i.bc(0, 'div', 6), i.Kc(1, E, 5, 18, 'div', 7), i.oc(2, 'slice'), i.Kc(3, I, 3, 8, 'div', 8), i.ac()),
          2 & t)
        ) {
          const t = i.nc();
          i.Ib(1),
            i.vc('ngForOf', i.rc(2, 3, t.faceTime, 0, 12))('ngForTrackBy', t.trackByTime),
            i.Ib(2),
            i.vc('ngIf', t.faceTime.length > 12);
        }
      }
      function D(t, e) {
        if (
          (1 & t &&
            (i.bc(0, 'div', 9),
            i.bc(1, 'span', 10),
            i.oc(2, 'activeMinute'),
            i.Mc(3),
            i.oc(4, 'timeLocalizer'),
            i.oc(5, 'minutesFormatter'),
            i.ac(),
            i.ac()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = i.nc(2);
          i.vc('ngStyle', i.xc(15, O, 'rotateZ(' + t.angle + 'deg) translateX(-50%)')),
            i.Ib(1),
            i.vc('ngStyle', i.xc(17, O, 'rotateZ(-' + t.angle + 'deg)'))(
              'ngClass',
              i.yc(
                19,
                S,
                i.sc(
                  2,
                  4,
                  t.time,
                  null == n.selectedTime ? null : n.selectedTime.time,
                  n.minutesGap,
                  n.isClockFaceDisabled
                ),
                t.disabled
              )
            ),
            i.Ib(2),
            i.Oc(' ', i.qc(4, 9, i.qc(5, 12, t.time, n.minutesGap), n.timeUnit.MINUTE), '');
        }
      }
      function j(t, e) {
        if ((1 & t && (i.bc(0, 'div', 6), i.Kc(1, D, 6, 22, 'div', 7), i.ac()), 2 & t)) {
          const t = i.nc();
          i.Ib(1), i.vc('ngForOf', t.faceTime)('ngForTrackBy', t.trackByTime);
        }
      }
      const R = function (t) {
          return { 'clock-face__clock-hand_minute': t };
        },
        P = ['*'];
      function M(t, e) {
        1 & t && i.Xb(0);
      }
      function F(t, e) {
        1 & t &&
          (i.bc(0, 'small', 10),
          i.Mc(1, ' * use arrows ('),
          i.bc(2, 'span'),
          i.Mc(3, '\u21c5'),
          i.ac(),
          i.Mc(4, ') to change the time'),
          i.ac());
      }
      const N = function (t) {
        return { 'timepicker-dial__hint-container--hidden': t };
      };
      function V(t, e) {
        if (
          (1 & t &&
            (i.bc(0, 'div', 7),
            i.Kc(1, M, 1, 0, 'ng-container', 8),
            i.Kc(2, F, 5, 0, 'ng-template', null, 9, i.Lc),
            i.ac()),
          2 & t)
        ) {
          const t = i.Bc(3),
            e = i.nc();
          i.vc('ngClass', i.xc(2, N, !e.isHintVisible)),
            i.Ib(1),
            i.vc('ngTemplateOutlet', e.editableHintTmpl ? e.editableHintTmpl : t);
        }
      }
      const L = function (t) {
          return { 'timepicker-dial__period--hidden': t };
        },
        H = function (t) {
          return { 'timepicker-dial__item_active': t };
        };
      function z(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'input', 2),
            i.jc('ngModelChange', function (e) {
              return i.Dc(t), (i.nc().time = e);
            })('input', function () {
              return i.Dc(t), i.nc().updateTime();
            })('focus', function (e) {
              i.Dc(t);
              const n = i.nc();
              return n.saveTimeAndChangeTimeUnit(e, n.timeUnit);
            }),
            i.oc(1, 'timeLocalizer'),
            i.ac();
        }
        if (2 & t) {
          const t = i.nc();
          i.vc('ngClass', i.xc(7, H, t.isActive))('ngModel', i.qc(1, 4, t.time, t.timeUnit))('disabled', t.disabled)(
            'timepickerAutofocus',
            t.isActive
          );
        }
      }
      function B(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'input', 3),
            i.jc('ngModelChange', function (e) {
              return i.Dc(t), i.nc().onModelChange(e);
            })('input', function () {
              return i.Dc(t), i.nc().updateTime();
            })('focus', function (e) {
              i.Dc(t);
              const n = i.nc();
              return n.saveTimeAndChangeTimeUnit(e, n.timeUnit);
            })('keydown', function (e) {
              return i.Dc(t), i.nc().onKeydown(e);
            })('keypress', function (e) {
              return i.Dc(t), i.nc().changeTimeByKeyboard(e);
            }),
            i.oc(1, 'timeLocalizer'),
            i.oc(2, 'timeParser'),
            i.ac();
        }
        if (2 & t) {
          const t = i.nc();
          i.vc('ngClass', i.xc(11, H, t.isActive))(
            'ngModel',
            i.rc(1, 4, i.qc(2, 8, t.time, t.timeUnit), t.timeUnit, !0)
          )('disabled', t.disabled)('timepickerAutofocus', t.isActive);
        }
      }
      function U(t, e) {
        if (1 & t) {
          const t = i.cc();
          i.bc(0, 'div', 3),
            i.jc('@scaleInOut.done', function () {
              return i.Dc(t), i.nc().animationDone();
            }),
            i.bc(1, 'p'),
            i.Mc(2, 'Current time would be invalid in this period.'),
            i.ac(),
            i.ac();
        }
        2 & t && i.vc('@scaleInOut', void 0);
      }
      function W(t, e) {
        1 & t && i.Xb(0);
      }
      function $(t, e) {
        if ((1 & t && (i.bc(0, 'div', 3), i.Kc(1, W, 1, 0, 'ng-container', 4), i.ac()), 2 & t)) {
          const t = i.nc(),
            e = i.Bc(4);
          i.vc('ngxAppendToInput', t.inputElement), i.Ib(1), i.vc('ngTemplateOutlet', e);
        }
      }
      function q(t, e) {
        1 & t && i.Xb(0);
      }
      function G(t, e) {
        if ((1 & t && i.Kc(0, q, 1, 0, 'ng-container', 4), 2 & t)) {
          i.nc();
          const t = i.Bc(4);
          i.vc('ngTemplateOutlet', t);
        }
      }
      function X(t, e) {
        1 & t && i.tc(0);
      }
      let K = (() => {
          let t = class {
            constructor() {
              (this.backdropClickSubject = new s.a()), (this.keydownEventSubject = new s.a());
            }
            get backdropClick() {
              return this.backdropClickSubject.asObservable().pipe(Object(c.a)({ bufferSize: 1, refCount: !0 }));
            }
            get keydownEvent() {
              return this.keydownEventSubject.asObservable().pipe(Object(c.a)({ bufferSize: 1, refCount: !0 }));
            }
            dispatchEvent(t) {
              switch (t.type) {
                case 'click':
                  this.backdropClickSubject.next(t);
                  break;
                case 'keydown':
                  this.keydownEventSubject.next(t);
                  break;
                default:
                  throw new Error('no such event type');
              }
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            (t.ngInjectableDef = Object(i.Rb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Y = (() => {
          let t = class {
            constructor(t, e, n, i) {
              (this.cfr = t), (this.appRef = e), (this.injector = n), (this.document = i);
            }
            appendTimepickerToBody(t, e) {
              (this.componentRef = this.cfr.resolveComponentFactory(t).create(this.injector)),
                Object.keys(e).forEach((t) => (this.componentRef.instance[t] = e[t])),
                this.appRef.attachView(this.componentRef.hostView),
                this.document.body.appendChild(this.componentRef.hostView.rootNodes[0]);
            }
            destroyTimepicker() {
              this.componentRef.destroy(), this.appRef.detachView(this.componentRef.hostView);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(i.k), i.fc(i.g), i.fc(i.t), i.fc(r.d, 8));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            (t.ngInjectableDef = Object(i.Rb)({
              factory: function () {
                return new t(Object(i.fc)(i.k), Object(i.fc)(i.g), Object(i.fc)(i.q), Object(i.fc)(r.d, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      var Z = (function (t) {
          return (t[(t.HOUR = 0)] = 'HOUR'), (t[(t.MINUTE = 1)] = 'MINUTE'), t;
        })({}),
        Q = (function (t) {
          return (t.AM = 'AM'), (t.PM = 'PM'), t;
        })({}),
        J = (function (t) {
          return (
            (t.TWELVE = 'hh:mm a'),
            (t.TWELVE_SHORT = 'h:m a'),
            (t.TWENTY_FOUR = 'HH:mm'),
            (t.TWENTY_FOUR_SHORT = 'H:m'),
            t
          );
        })({});
      function tt(t, e, n = 'minutes') {
        return 'hours' === n
          ? t.hour >= e.hour
          : 'minutes' === n
          ? t.hasSame(e, n) || t.valueOf() > e.valueOf()
          : void 0;
      }
      function et(t, e, n = 'minutes') {
        return 'hours' === n
          ? t.hour <= e.hour
          : 'minutes' === n
          ? t.hasSame(e, n) || t.valueOf() <= e.valueOf()
          : void 0;
      }
      let nt = (() => {
        class t {
          static parseTime(e, n) {
            const { numberingSystem: i, locale: r } = t.getLocaleOptionsByTime(e, n),
              s = 2 === e.split(' ').length;
            return d.DateTime.fromFormat(e, s ? J.TWELVE_SHORT : J.TWENTY_FOUR_SHORT, {
              numberingSystem: i,
              locale: r,
            });
          }
          static formatTime(e, n) {
            if (!e) return 'Invalid Time';
            const { format: i } = n,
              r = t.parseTime(e, n).setLocale(t.DEFAULT_LOCALE);
            return 24 !== i
              ? r
                  .toLocaleString(
                    Object.assign({}, d.DateTime.TIME_SIMPLE, {
                      hour12: 24 !== i,
                      numberingSystem: t.DEFAULT_NUMBERING_SYSTEM,
                    })
                  )
                  .replace(/\u200E/g, '')
              : r
                  .toISOTime({ includeOffset: !1, suppressMilliseconds: !0, suppressSeconds: !0 })
                  .replace(/\u200E/g, '');
          }
          static toLocaleTimeString(e, n = {}) {
            const { format: i = t.DEFAULT_FORMAT, locale: r = t.DEFAULT_LOCALE } = n,
              s = Object.assign({}, d.DateTime.TIME_SIMPLE, { hourCycle: 24 === i ? 'h23' : 'h12' });
            return d.DateTime.fromFormat(e, 24 === i ? J.TWENTY_FOUR_SHORT : J.TWELVE_SHORT)
              .setLocale(r)
              .toLocaleString(s);
          }
          static isTimeAvailable(t, e, n, i, r, s) {
            if (!t) return;
            const o = this.parseTime(t, { format: s }),
              a = o.minute;
            if (r && a == a && a % r != 0) throw new Error(`Your minutes - ${a} doesn't match your minutesGap - ${r}`);
            const c = e && !n && tt(o, e, i),
              l = n && !e && et(o, n, i),
              u =
                e &&
                n &&
                (function (t, e, n, i = 'minutes') {
                  return 'hours' === i ? et(t, n, i) && tt(t, e, i) : 'minutes' === i ? et(t, n) && tt(t, e) : void 0;
                })(o, e, n, i);
            return c || l || u || (!e && !n);
          }
          static formatHour(t, e, n) {
            if (24 === e) return t;
            const i = n === Q.AM ? t : t + 12;
            return n === Q.AM && 12 === i ? 0 : n === Q.PM && 24 === i ? 12 : i;
          }
          static fromDateTimeToString(e, n) {
            const i = 24 === n ? J.TWENTY_FOUR : J.TWELVE;
            return e.reconfigure({ numberingSystem: t.DEFAULT_NUMBERING_SYSTEM, locale: t.DEFAULT_LOCALE }).toFormat(i);
          }
          static getLocaleOptionsByTime(e, n) {
            const { numberingSystem: i, locale: r } = d.DateTime.local().setLocale(n.locale).resolvedLocaleOpts(),
              s = { numberingSystem: i, locale: r },
              o = { numberingSystem: t.DEFAULT_NUMBERING_SYSTEM, locale: t.DEFAULT_LOCALE };
            return isNaN(parseInt(e, 10)) ? s : o;
          }
        }
        return (t.DEFAULT_FORMAT = 12), (t.DEFAULT_LOCALE = 'en-US'), (t.DEFAULT_NUMBERING_SYSTEM = 'latn'), t;
      })();
      const it = { time: 12, angle: 360 },
        rt = { time: 0, angle: 360 };
      let st = (() => {
        let t = class {
          constructor() {
            (this.hourSubject = new o.a(it)), (this.minuteSubject = new o.a(rt)), (this.periodSubject = new o.a(Q.AM));
          }
          set hour(t) {
            this.hourSubject.next(t);
          }
          get selectedHour() {
            return this.hourSubject.asObservable();
          }
          set minute(t) {
            this.minuteSubject.next(t);
          }
          get selectedMinute() {
            return this.minuteSubject.asObservable();
          }
          set period(t) {
            (t === Q.AM || t === Q.PM) && this.periodSubject.next(t);
          }
          get selectedPeriod() {
            return this.periodSubject.asObservable();
          }
          setDefaultTimeIfAvailable(t, e, n, i, r) {
            try {
              nt.isTimeAvailable(t, e, n, 'minutes', r) && this.setDefaultTime(t, i);
            } catch (s) {
              console.error(s);
            }
          }
          getFullTime(t) {
            const e = this.hourSubject.getValue().time,
              n = this.minuteSubject.getValue().time,
              i = `${null != e ? e : it.time}:${null != n ? n : rt.time} ${
                12 === t ? this.periodSubject.getValue() : ''
              }`.trim();
            return nt.formatTime(i, { format: t });
          }
          setDefaultTime(t, e) {
            const n = nt.parseTime(t, { format: e }).toJSDate();
            if (d.DateTime.fromJSDate(n).isValid) {
              const e = t.substr(t.length - 2).toUpperCase(),
                i = n.getHours();
              (this.hour = Object.assign({}, it, { time: ot(i, e) })),
                (this.minute = Object.assign({}, rt, { time: n.getMinutes() })),
                (this.period = e);
            } else this.resetTime();
          }
          resetTime() {
            (this.hour = Object.assign({}, it)), (this.minute = Object.assign({}, rt)), (this.period = Q.AM);
          }
        };
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          (t.ngInjectableDef = Object(i.Rb)({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function ot(t, e) {
        switch (e) {
          case Q.AM:
            return 0 === t ? 12 : t;
          case Q.PM:
            return 12 === t ? 12 : t - 12;
          default:
            return t;
        }
      }
      const at = new i.s('TimeLocale', { providedIn: 'root', factory: () => nt.DEFAULT_LOCALE });
      var ct = (function (t) {
        return (t.ENTER = 'enter'), (t.LEAVE = 'leave'), t;
      })({});
      let lt = (() => {
          let t = class {
            constructor(t, e, n) {
              (this.timepickerService = t),
                (this.eventService = e),
                (this.locale = n),
                (this.timeUnit = Z),
                (this.activeTimeUnit = Z.HOUR),
                (this.unsubscribe = new s.a());
            }
            set defaultTime(t) {
              (this._defaultTime = t), this.setDefaultTime(t);
            }
            get defaultTime() {
              return this._defaultTime;
            }
            onKeydown(t) {
              this.eventService.dispatchEvent(t), t.stopPropagation();
            }
            ngOnInit() {
              (this.animationState = !this.disableAnimation && ct.ENTER),
                this.defineTime(),
                (this.selectedHour = this.timepickerService.selectedHour.pipe(
                  Object(c.a)({ bufferSize: 1, refCount: !0 })
                )),
                (this.selectedMinute = this.timepickerService.selectedMinute.pipe(
                  Object(c.a)({ bufferSize: 1, refCount: !0 })
                )),
                (this.selectedPeriod = this.timepickerService.selectedPeriod.pipe(
                  Object(c.a)({ bufferSize: 1, refCount: !0 })
                )),
                this.timepickerBaseRef.timeUpdated
                  .pipe(Object(l.a)(this.unsubscribe))
                  .subscribe(this.setDefaultTime.bind(this));
            }
            onHourChange(t) {
              (this.timepickerService.hour = t), this.onTimeChange();
            }
            onHourSelected(t) {
              this.hoursOnly || this.changeTimeUnit(Z.MINUTE), this.timepickerBaseRef.hourSelected.next(t);
            }
            onMinuteChange(t) {
              (this.timepickerService.minute = t), this.onTimeChange();
            }
            changePeriod(t) {
              (this.timepickerService.period = t), this.onTimeChange();
            }
            changeTimeUnit(t) {
              this.activeTimeUnit = t;
            }
            setTime() {
              this.timepickerBaseRef.timeSet.next(this.timepickerService.getFullTime(this.format)), this.close();
            }
            close() {
              this.disableAnimation ? this.timepickerBaseRef.close() : (this.animationState = ct.LEAVE);
            }
            animationDone(t) {
              'done' === t.phaseName && t.toState === ct.LEAVE && this.timepickerBaseRef.close();
            }
            ngOnDestroy() {
              this.unsubscribe.next(), this.unsubscribe.complete();
            }
            setDefaultTime(t) {
              this.timepickerService.setDefaultTimeIfAvailable(
                t,
                this.minTime,
                this.maxTime,
                this.format,
                this.minutesGap
              );
            }
            defineTime() {
              const t = this.minTime;
              if (t && !this.time && !this.defaultTime) {
                const e = nt.fromDateTimeToString(t, this.format);
                this.setDefaultTime(e);
              }
            }
            onTimeChange() {
              const t = nt.toLocaleTimeString(this.timepickerService.getFullTime(this.format), {
                locale: this.locale,
                format: this.format,
              });
              this.timepickerBaseRef.timeChanged.emit(t);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(st), i.Vb(K), i.Vb(at));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-container']],
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('keydown', function (t) {
                    return e.onKeydown(t);
                  });
              },
              inputs: { defaultTime: 'defaultTime' },
              features: [i.Hb([st])],
              decls: 22,
              vars: 31,
              consts: [
                [1, 'timepicker-backdrop-overlay', 3, 'overlay', 'ngClass'],
                [1, 'timepicker-overlay'],
                [3, 'appendToInput', 'inputElement', 'ngxMaterialTimepickerTheme'],
                [1, 'timepicker', 3, 'ngClass'],
                [1, 'timepicker__header'],
                [
                  3,
                  'format',
                  'hour',
                  'minute',
                  'period',
                  'activeTimeUnit',
                  'minTime',
                  'maxTime',
                  'isEditable',
                  'editableHintTmpl',
                  'minutesGap',
                  'hoursOnly',
                  'periodChanged',
                  'timeUnitChanged',
                  'hourChanged',
                  'minuteChanged',
                ],
                [1, 'timepicker__main-content'],
                [1, 'timepicker__body', 3, 'ngSwitch'],
                [4, 'ngSwitchCase'],
                [
                  3,
                  'selectedMinute',
                  'selectedHour',
                  'minTime',
                  'maxTime',
                  'format',
                  'period',
                  'minutesGap',
                  'minuteChange',
                  4,
                  'ngSwitchCase',
                ],
                [1, 'timepicker__actions'],
                [3, 'click'],
                [4, 'ngTemplateOutlet'],
                ['cancelBtnDefault', ''],
                ['confirmBtnDefault', ''],
                [
                  3,
                  'selectedHour',
                  'minTime',
                  'maxTime',
                  'format',
                  'hourChange',
                  'hourSelected',
                  4,
                  'ngIf',
                  'ngIfElse',
                ],
                ['ampmHours', ''],
                [3, 'selectedHour', 'minTime', 'maxTime', 'format', 'hourChange', 'hourSelected'],
                [3, 'selectedHour', 'period', 'minTime', 'maxTime', 'hourChange', 'hourSelected'],
                [
                  3,
                  'selectedMinute',
                  'selectedHour',
                  'minTime',
                  'maxTime',
                  'format',
                  'period',
                  'minutesGap',
                  'minuteChange',
                ],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (i.Wb(0, 'div', 0),
                    i.bc(1, 'div', 1),
                    i.bc(2, 'ngx-material-timepicker-content', 2),
                    i.bc(3, 'div', 3),
                    i.jc('@timepicker.done', function (t) {
                      return e.animationDone(t);
                    }),
                    i.bc(4, 'header', 4),
                    i.bc(5, 'ngx-material-timepicker-dial', 5),
                    i.jc('periodChanged', function (t) {
                      return e.changePeriod(t);
                    })('timeUnitChanged', function (t) {
                      return e.changeTimeUnit(t);
                    })('hourChanged', function (t) {
                      return e.onHourChange(t);
                    })('minuteChanged', function (t) {
                      return e.onMinuteChange(t);
                    }),
                    i.oc(6, 'async'),
                    i.oc(7, 'async'),
                    i.oc(8, 'async'),
                    i.ac(),
                    i.ac(),
                    i.bc(9, 'div', 6),
                    i.bc(10, 'div', 7),
                    i.Kc(11, g, 4, 2, 'div', 8),
                    i.Kc(12, b, 4, 13, 'ngx-material-timepicker-minutes-face', 9),
                    i.ac(),
                    i.bc(13, 'div', 10),
                    i.bc(14, 'div', 11),
                    i.jc('click', function () {
                      return e.close();
                    }),
                    i.Kc(15, _, 1, 0, 'ng-container', 12),
                    i.ac(),
                    i.bc(16, 'div', 11),
                    i.jc('click', function () {
                      return e.setTime();
                    }),
                    i.Kc(17, y, 1, 0, 'ng-container', 12),
                    i.ac(),
                    i.ac(),
                    i.ac(),
                    i.ac(),
                    i.ac(),
                    i.ac(),
                    i.Kc(18, v, 2, 0, 'ng-template', null, 13, i.Lc),
                    i.Kc(20, w, 2, 0, 'ng-template', null, 14, i.Lc)),
                  2 & t)
                ) {
                  const t = i.Bc(19),
                    s = i.Bc(21);
                  var n;
                  const o = null == (n = i.pc(6, 23, e.selectedHour)) ? null : n.time;
                  var r;
                  const a = null == (r = i.pc(7, 25, e.selectedMinute)) ? null : r.time;
                  i.vc('overlay', e.preventOverlayClick)('ngClass', i.xc(29, x, e.appendToInput)),
                    i.Ib(2),
                    i.vc('appendToInput', e.appendToInput)('inputElement', e.inputElement)(
                      'ngxMaterialTimepickerTheme',
                      e.theme
                    ),
                    i.Ib(1),
                    i.vc('@timepicker', e.animationState)('ngClass', e.timepickerClass),
                    i.Ib(2),
                    i.vc('format', e.format)('hour', o)('minute', a)('period', i.pc(8, 27, e.selectedPeriod))(
                      'activeTimeUnit',
                      e.activeTimeUnit
                    )('minTime', e.minTime)('maxTime', e.maxTime)('isEditable', e.enableKeyboardInput)(
                      'editableHintTmpl',
                      e.editableHintTmpl
                    )('minutesGap', e.minutesGap)('hoursOnly', e.hoursOnly),
                    i.Ib(5),
                    i.vc('ngSwitch', e.activeTimeUnit),
                    i.Ib(1),
                    i.vc('ngSwitchCase', e.timeUnit.HOUR),
                    i.Ib(1),
                    i.vc('ngSwitchCase', e.timeUnit.MINUTE),
                    i.Ib(3),
                    i.vc('ngTemplateOutlet', e.cancelBtnTmpl ? e.cancelBtnTmpl : t),
                    i.Ib(2),
                    i.vc('ngTemplateOutlet', e.confirmBtnTmpl ? e.confirmBtnTmpl : s);
                }
              },
              directives: function () {
                return [St, r.i, jt, pt, wt, r.n, r.o, r.q, r.l, gt, bt, _t, vt];
              },
              pipes: function () {
                return [r.b];
              },
              styles: [
                "[_nghost-%COMP%]{--body-background-color:#fff;--primary-font-family:'Roboto',sans-serif;--button-color:deepskyblue;--dial-active-color:#fff;--dial-inactive-color:rgba(255, 255, 255, .5);--dial-background-color:deepskyblue;--dial-editable-active-color:deepskyblue;--dial-editable-background-color:#fff;--clock-face-time-active-color:#fff;--clock-face-time-inactive-color:#6c6c6c;--clock-face-inner-time-inactive-color:#929292;--clock-face-time-disabled-color:#c5c5c5;--clock-face-background-color:#f0f0f0;--clock-hand-color:deepskyblue}.timepicker-backdrop-overlay[_ngcontent-%COMP%]{position:fixed;top:0;bottom:0;right:0;left:0;background-color:rgba(0,0,0,.3);z-index:999;pointer-events:auto}.timepicker-backdrop-overlay--transparent[_ngcontent-%COMP%]{background-color:transparent}.timepicker-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;display:flex;justify-content:center;align-items:center;z-index:999;pointer-events:none}.timepicker[_ngcontent-%COMP%]{width:300px;border-radius:2px;box-shadow:rgba(0,0,0,.25) 0 14px 45px,rgba(0,0,0,.22) 0 10px 18px;outline:0;position:static;z-index:999;pointer-events:auto}.timepicker__header[_ngcontent-%COMP%]{padding:15px 30px;background-color:#00bfff}@supports (background-color:var(--dial-background-color)){.timepicker__header[_ngcontent-%COMP%]{background-color:var(--dial-background-color)}}.timepicker__body[_ngcontent-%COMP%]{padding:15px 5px;display:flex;justify-content:center;align-items:center;background-color:#fff}@supports (background-color:var(--body-background-color)){.timepicker__body[_ngcontent-%COMP%]{background-color:var(--body-background-color)}}.timepicker__actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;padding:15px;background-color:#fff}@supports (background-color:var(--body-background-color)){.timepicker__actions[_ngcontent-%COMP%]{background-color:var(--body-background-color)}}@media (max-device-width:1023px) and (orientation:landscape){.timepicker[_ngcontent-%COMP%]{display:flex;width:515px}.timepicker__header[_ngcontent-%COMP%]{display:flex;align-items:center}.timepicker__main-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%}.timepicker__actions[_ngcontent-%COMP%]{padding:5px;margin-top:-1px}}",
              ],
              data: {
                animation: [
                  Object(h.m)('timepicker', [
                    Object(h.l)(`* => ${ct.ENTER}`, [
                      Object(h.k)({ transform: 'translateY(-30%)' }),
                      Object(h.e)('0.2s ease-out', Object(h.k)({ transform: 'translateY(0)' })),
                    ]),
                    Object(h.l)(`${ct.ENTER} => ${ct.LEAVE}`, [
                      Object(h.k)({ transform: 'translateY(0)', opacity: 1 }),
                      Object(h.e)('0.2s ease-out', Object(h.k)({ transform: 'translateY(-30%)', opacity: 0 })),
                    ]),
                  ]),
                ],
              },
            })),
            t
          );
        })(),
        ut = (() => {
          let t = class {
            constructor(t, e) {
              (this.eventService = t),
                (this.domService = e),
                (this.timeUpdated = new s.a()),
                (this.isEsc = !0),
                (this.hoursOnly = !1),
                (this.timeSet = new i.p()),
                (this.opened = new i.p()),
                (this.closed = new i.p()),
                (this.hourSelected = new i.p()),
                (this.timeChanged = new i.p()),
                (this.unsubscribe = new s.a());
            }
            set ngxMaterialTimepickerTheme(t) {
              console.warn("'ngxMaterialTimepickerTheme' is deprecated. Use 'theme' instead"),
                (this._ngxMaterialTimepickerTheme = t);
            }
            set format(t) {
              this._format = 24 === t ? 24 : 12;
            }
            get format() {
              return this.timepickerInput ? this.timepickerInput.format : this._format;
            }
            set minutesGap(t) {
              null != t && ((t = Math.floor(t)), (this._minutesGap = t <= 59 ? t : 1));
            }
            get minutesGap() {
              return this._minutesGap;
            }
            get minTime() {
              return this.timepickerInput ? this.timepickerInput.min : this.min;
            }
            get maxTime() {
              return this.timepickerInput ? this.timepickerInput.max : this.max;
            }
            get disabled() {
              return this.timepickerInput && this.timepickerInput.disabled;
            }
            get time() {
              return this.timepickerInput && this.timepickerInput.value;
            }
            get inputElement() {
              return this.timepickerInput && this.timepickerInput.element;
            }
            registerInput(t) {
              if (this.timepickerInput) throw Error('A Timepicker can only be associated with a single input.');
              this.timepickerInput = t;
            }
            open() {
              this.domService.appendTimepickerToBody(lt, {
                timepickerBaseRef: this,
                time: this.time,
                defaultTime: this.defaultTime,
                maxTime: this.maxTime,
                minTime: this.minTime,
                format: this.format,
                minutesGap: this.minutesGap,
                disableAnimation: this.disableAnimation,
                cancelBtnTmpl: this.cancelBtnTmpl,
                confirmBtnTmpl: this.confirmBtnTmpl,
                editableHintTmpl: this.editableHintTmpl,
                disabled: this.disabled,
                enableKeyboardInput: this.enableKeyboardInput,
                preventOverlayClick: this.preventOverlayClick,
                appendToInput: this.appendToInput,
                hoursOnly: this.hoursOnly,
                theme: this.theme || this._ngxMaterialTimepickerTheme,
                timepickerClass: this.timepickerClass,
                inputElement: this.inputElement,
              }),
                this.opened.next(),
                this.subscribeToEvents();
            }
            close() {
              this.domService.destroyTimepicker(), this.closed.next(), this.unsubscribeFromEvents();
            }
            updateTime(t) {
              this.timeUpdated.next(t);
            }
            subscribeToEvents() {
              Object(a.a)(
                this.eventService.backdropClick,
                this.eventService.keydownEvent.pipe(Object(u.a)((t) => 27 === t.keyCode && this.isEsc))
              )
                .pipe(Object(l.a)(this.unsubscribe))
                .subscribe(() => this.close());
            }
            unsubscribeFromEvents() {
              this.unsubscribe.next(), this.unsubscribe.complete();
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(K), i.Vb(Y));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker']],
              inputs: {
                isEsc: ['ESC', 'isEsc'],
                hoursOnly: 'hoursOnly',
                ngxMaterialTimepickerTheme: 'ngxMaterialTimepickerTheme',
                format: 'format',
                minutesGap: 'minutesGap',
                cancelBtnTmpl: 'cancelBtnTmpl',
                editableHintTmpl: 'editableHintTmpl',
                confirmBtnTmpl: 'confirmBtnTmpl',
                enableKeyboardInput: 'enableKeyboardInput',
                preventOverlayClick: 'preventOverlayClick',
                disableAnimation: 'disableAnimation',
                appendToInput: 'appendToInput',
                defaultTime: 'defaultTime',
                timepickerClass: 'timepickerClass',
                theme: 'theme',
                min: 'min',
                max: 'max',
              },
              outputs: {
                timeSet: 'timeSet',
                opened: 'opened',
                closed: 'closed',
                hourSelected: 'hourSelected',
                timeChanged: 'timeChanged',
              },
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              encapsulation: 2,
            })),
            t
          );
        })();
      var ht;
      let dt = (() => {
          let t = (ht = class {
            constructor(t, e) {
              (this.elementRef = t),
                (this.locale = e),
                (this._format = 12),
                (this._value = ''),
                (this.timepickerSubscriptions = []),
                (this.onTouched = () => {}),
                (this.onChange = () => {});
            }
            set format(t) {
              (this._format = 24 === t ? 24 : 12),
                t &&
                  this.previousFormat &&
                  this.previousFormat !== this._format &&
                  ((this.value = this._value), this._timepicker.updateTime(this._value)),
                (this.previousFormat = this._format);
            }
            get format() {
              return this._format;
            }
            set min(t) {
              this._min = 'string' != typeof t ? t : nt.parseTime(t, { locale: this.locale, format: this.format });
            }
            get min() {
              return this._min;
            }
            set max(t) {
              this._max = 'string' != typeof t ? t : nt.parseTime(t, { locale: this.locale, format: this.format });
            }
            get max() {
              return this._max;
            }
            set timepicker(t) {
              this.registerTimepicker(t);
            }
            set value(t) {
              if (!t) return (this._value = ''), void this.updateInputValue();
              const e = nt.formatTime(t, { locale: this.locale, format: this.format });
              if (nt.isTimeAvailable(e, this._min, this._max, 'minutes', this._timepicker.minutesGap, this._format))
                return (this._value = e), void this.updateInputValue();
              console.warn("Selected time doesn't match min or max value");
            }
            get value() {
              return this._value
                ? nt.toLocaleTimeString(this._value, { format: this.format, locale: this.locale })
                : '';
            }
            get element() {
              return this.elementRef && this.elementRef.nativeElement;
            }
            set defaultTime(t) {
              this._timepicker.defaultTime = nt.formatTime(t, { locale: this.locale, format: this.format });
            }
            updateValue(t) {
              (this.value = t), this.onChange(t);
            }
            ngOnChanges(t) {
              t.value && t.value.currentValue && (this.defaultTime = t.value.currentValue);
            }
            onClick(t) {
              this.disableClick || (this._timepicker.open(), t.stopPropagation());
            }
            writeValue(t) {
              (this.value = t), t && (this.defaultTime = t);
            }
            registerOnChange(t) {
              this.onChange = t;
            }
            registerOnTouched(t) {
              this.onTouched = t;
            }
            setDisabledState(t) {
              this.disabled = t;
            }
            ngOnDestroy() {
              this.timepickerSubscriptions.forEach((t) => t.unsubscribe());
            }
            registerTimepicker(t) {
              if (!t)
                throw new Error(
                  'NgxMaterialTimepickerComponent is not defined. Please make sure you passed the timepicker to ngxTimepicker directive'
                );
              (this._timepicker = t),
                this._timepicker.registerInput(this),
                this.timepickerSubscriptions.push(
                  this._timepicker.timeSet.subscribe((t) => {
                    (this.value = t), this.onChange(this.value), this.onTouched(), (this.defaultTime = this._value);
                  })
                );
            }
            updateInputValue() {
              this.elementRef.nativeElement.value = this.value;
            }
          });
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(at));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngxTimepicker', '']],
              hostVars: 1,
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('change', function (t) {
                    return e.updateValue(t.target.value);
                  })('blur', function () {
                    return e.onTouched();
                  })('click', function (t) {
                    return e.onClick(t);
                  }),
                  2 & t && i.ec('disabled', e.disabled);
              },
              inputs: {
                format: 'format',
                value: 'value',
                min: 'min',
                max: 'max',
                timepicker: ['ngxTimepicker', 'timepicker'],
                disabled: 'disabled',
                disableClick: 'disableClick',
              },
              features: [i.Hb([{ provide: p.l, useExisting: ht, multi: !0 }]), i.Gb],
            })),
            t
          );
        })(),
        pt = (() => {
          let t = class {
            constructor(t) {
              this.element = t.nativeElement;
            }
            ngAfterViewInit() {
              this.theme && this.setTheme(this.theme);
            }
            setTheme(t) {
              for (const n in t)
                if (t.hasOwnProperty(n)) {
                  if ('string' == typeof t[n]) {
                    for (const n in t)
                      t.hasOwnProperty(n) &&
                        this.element.style.setProperty(
                          `--${((e = n), e.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase())}`,
                          t[n]
                        );
                    return;
                  }
                  this.setTheme(t[n]);
                }
              var e;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngxMaterialTimepickerTheme', '']],
              inputs: { theme: ['ngxMaterialTimepickerTheme', 'theme'] },
            })),
            t
          );
        })();
      class ft {
        static getHours(t) {
          return Array(t)
            .fill(1)
            .map((t, e) => {
              const n = t + e;
              return { time: 24 === n ? 0 : n, angle: 30 * n };
            });
        }
        static disableHours(t, e) {
          return e.min || e.max
            ? t.map((t) => {
                const n = 24 === e.format ? t.time : nt.formatHour(t.time, e.format, e.period),
                  i = d.DateTime.fromObject({ hour: n }).toFormat(J.TWELVE);
                return Object.assign({}, t, { disabled: !nt.isTimeAvailable(i, e.min, e.max, 'hours') });
              })
            : t;
        }
        static getMinutes(t = 1) {
          const e = [];
          for (let n = 0; n < 60; n++) {
            const i = 6 * n;
            n % t == 0 && e.push({ time: n, angle: 0 !== i ? i : 360 });
          }
          return e;
        }
        static disableMinutes(t, e, n) {
          if (n.min || n.max) {
            const i = nt.formatHour(e, n.format, n.period);
            return t.map((t) => {
              const e = d.DateTime.fromObject({ hour: i, minute: t.time }).toFormat(J.TWELVE);
              return Object.assign({}, t, { disabled: !nt.isTimeAvailable(e, n.min, n.max, 'minutes') });
            });
          }
          return t;
        }
      }
      let mt = (() => {
          class t {
            constructor(t) {
              (this.hourChange = new i.p()),
                (this.hourSelected = new i.p()),
                (this.hoursList = []),
                (this.hoursList = ft.getHours(t));
            }
            onTimeSelected(t) {
              this.hourSelected.next(t);
            }
          }
          return (
            (t.ɵfac = function (t) {
              i.ic();
            }),
            (t.ɵdir = i.Qb({
              type: t,
              inputs: { selectedHour: 'selectedHour', minTime: 'minTime', maxTime: 'maxTime', format: 'format' },
              outputs: { hourChange: 'hourChange', hourSelected: 'hourSelected' },
            })),
            t
          );
        })(),
        gt = (() => {
          let t = class extends mt {
            constructor() {
              super(24);
            }
            ngAfterContentInit() {
              this.hoursList = ft.disableHours(this.hoursList, {
                min: this.minTime,
                max: this.maxTime,
                format: this.format,
              });
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-24-hours-face']],
              features: [i.Fb],
              decls: 1,
              vars: 3,
              consts: [[3, 'selectedTime', 'faceTime', 'format', 'timeChange', 'timeSelected']],
              template: function (t, e) {
                1 & t &&
                  (i.bc(0, 'ngx-material-timepicker-face', 0),
                  i.jc('timeChange', function (t) {
                    return e.hourChange.next(t);
                  })('timeSelected', function (t) {
                    return e.onTimeSelected(t);
                  }),
                  i.ac()),
                  2 & t && i.vc('selectedTime', e.selectedHour)('faceTime', e.hoursList)('format', e.format);
              },
              directives: function () {
                return [yt];
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        bt = (() => {
          let t = class extends mt {
            constructor() {
              super(12);
            }
            ngOnChanges(t) {
              t.period &&
                t.period.currentValue &&
                (this.hoursList = ft.disableHours(this.hoursList, {
                  min: this.minTime,
                  max: this.maxTime,
                  format: this.format,
                  period: this.period,
                }));
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-12-hours-face']],
              inputs: { period: 'period' },
              features: [i.Fb, i.Gb],
              decls: 1,
              vars: 2,
              consts: [[3, 'selectedTime', 'faceTime', 'timeChange', 'timeSelected']],
              template: function (t, e) {
                1 & t &&
                  (i.bc(0, 'ngx-material-timepicker-face', 0),
                  i.jc('timeChange', function (t) {
                    return e.hourChange.next(t);
                  })('timeSelected', function (t) {
                    return e.onTimeSelected(t);
                  }),
                  i.ac()),
                  2 & t && i.vc('selectedTime', e.selectedHour)('faceTime', e.hoursList);
              },
              directives: function () {
                return [yt];
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        _t = (() => {
          let t = class {
            constructor() {
              (this.minutesList = []), (this.timeUnit = Z), (this.minuteChange = new i.p());
            }
            ngOnChanges(t) {
              if (t.period && t.period.currentValue) {
                const t = ft.getMinutes(this.minutesGap);
                this.minutesList = ft.disableMinutes(t, this.selectedHour, {
                  min: this.minTime,
                  max: this.maxTime,
                  format: this.format,
                  period: this.period,
                });
              }
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-minutes-face']],
              inputs: {
                selectedMinute: 'selectedMinute',
                selectedHour: 'selectedHour',
                period: 'period',
                minTime: 'minTime',
                maxTime: 'maxTime',
                format: 'format',
                minutesGap: 'minutesGap',
              },
              outputs: { minuteChange: 'minuteChange' },
              features: [i.Gb],
              decls: 1,
              vars: 4,
              consts: [[3, 'faceTime', 'selectedTime', 'minutesGap', 'unit', 'timeChange']],
              template: function (t, e) {
                1 & t &&
                  (i.bc(0, 'ngx-material-timepicker-face', 0),
                  i.jc('timeChange', function (t) {
                    return e.minuteChange.next(t);
                  }),
                  i.ac()),
                  2 & t &&
                    i.vc('faceTime', e.minutesList)('selectedTime', e.selectedMinute)('minutesGap', e.minutesGap)(
                      'unit',
                      e.timeUnit.MINUTE
                    );
              },
              directives: function () {
                return [yt];
              },
              encapsulation: 2,
            })),
            t
          );
        })();
      let yt = (() => {
          let t = class {
            constructor() {
              (this.timeUnit = Z),
                (this.innerClockFaceSize = 85),
                (this.timeChange = new i.p()),
                (this.timeSelected = new i.p());
            }
            ngAfterViewInit() {
              this.setClockHandPosition(), this.addTouchEvents();
            }
            ngOnChanges(t) {
              const e = t.faceTime,
                n = t.selectedTime;
              e &&
                e.currentValue &&
                n &&
                n.currentValue &&
                (this.selectedTime = this.faceTime.find((t) => t.time === this.selectedTime.time)),
                n && n.currentValue && this.setClockHandPosition(),
                e && e.currentValue && setTimeout(() => this.selectAvailableTime());
            }
            trackByTime(t, e) {
              return e.time;
            }
            onMousedown(t) {
              t.preventDefault(), (this.isStarted = !0);
            }
            selectTime(t) {
              if (!this.isStarted && t instanceof MouseEvent && 'click' !== t.type) return;
              const e = this.clockFace.nativeElement.getBoundingClientRect(),
                n = e.left + e.width / 2,
                i = e.top + e.height / 2,
                r = (180 * Math.atan(Math.abs(t.clientX - n) / Math.abs(t.clientY - i))) / Math.PI,
                s =
                  ((o = n),
                  (c = t.clientX),
                  (u = r),
                  (l = t.clientY) > (a = i) && c >= o
                    ? 180 - u
                    : l > a && c < o
                    ? 180 + u
                    : l < a && c < o
                    ? 360 - u
                    : u);
              var o, a, c, l, u;
              const h = this.format && this.isInnerClockFace(n, i, t.clientX, t.clientY),
                d =
                  ((function (t, e) {
                    return Math.round(t / e) * e;
                  })(s, this.unit === Z.MINUTE ? 6 * (this.minutesGap || 1) : 30) || 360) + (h ? 360 : 0),
                p = this.faceTime.find((t) => t.angle === d);
              p && !p.disabled && (this.timeChange.next(p), this.isStarted || this.timeSelected.next(p.time));
            }
            onMouseup(t) {
              t.preventDefault(), (this.isStarted = !1);
            }
            ngOnDestroy() {
              this.removeTouchEvents();
            }
            addTouchEvents() {
              (this.touchStartHandler = this.onMousedown.bind(this)),
                (this.touchEndHandler = this.onMouseup.bind(this)),
                this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler),
                this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);
            }
            removeTouchEvents() {
              this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler),
                this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);
            }
            setClockHandPosition() {
              24 === this.format &&
                (this.selectedTime.time > 12 || 0 === this.selectedTime.time
                  ? this.decreaseClockHand()
                  : this.increaseClockHand()),
                (this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`);
            }
            selectAvailableTime() {
              const t = this.faceTime.find((t) => this.selectedTime.time === t.time);
              if (
                ((this.isClockFaceDisabled = this.faceTime.every((t) => t.disabled)),
                t && t.disabled && !this.isClockFaceDisabled)
              ) {
                const t = this.faceTime.find((t) => !t.disabled);
                this.timeChange.next(t);
              }
            }
            isInnerClockFace(t, e, n, i) {
              return Math.sqrt(Math.pow(n - t, 2) + Math.pow(i - e, 2)) < this.innerClockFaceSize;
            }
            decreaseClockHand() {
              (this.clockHand.nativeElement.style.height = '75px'),
                (this.clockHand.nativeElement.style.top = 'calc(50% - 75px)');
            }
            increaseClockHand() {
              (this.clockHand.nativeElement.style.height = '103px'),
                (this.clockHand.nativeElement.style.top = 'calc(50% - 103px)');
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-face']],
              viewQuery: function (t, e) {
                var n;
                1 & t && (i.Ic(C, !0), i.Ic(k, !0)),
                  2 & t &&
                    (i.Ac((n = i.kc())) && (e.clockFace = n.first), i.Ac((n = i.kc())) && (e.clockHand = n.first));
              },
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('mousedown', function (t) {
                    return e.onMousedown(t);
                  })('click', function (t) {
                    return e.selectTime(t);
                  })('touchmove', function (t) {
                    return e.selectTime(t.changedTouches[0]);
                  })('touchend', function (t) {
                    return e.selectTime(t.changedTouches[0]);
                  })('mousemove', function (t) {
                    return e.selectTime(t);
                  })('mouseup', function (t) {
                    return e.onMouseup(t);
                  });
              },
              inputs: {
                selectedTime: 'selectedTime',
                faceTime: 'faceTime',
                unit: 'unit',
                format: 'format',
                minutesGap: 'minutesGap',
              },
              outputs: { timeChange: 'timeChange', timeSelected: 'timeSelected' },
              features: [i.Gb],
              decls: 7,
              vars: 6,
              consts: [
                [1, 'clock-face'],
                ['clockFace', ''],
                ['class', 'clock-face__container', 4, 'ngIf', 'ngIfElse'],
                [1, 'clock-face__clock-hand', 3, 'ngClass', 'hidden'],
                ['clockHand', ''],
                ['minutesFace', ''],
                [1, 'clock-face__container'],
                [
                  'class',
                  'clock-face__number clock-face__number--outer',
                  3,
                  'ngStyle',
                  4,
                  'ngFor',
                  'ngForOf',
                  'ngForTrackBy',
                ],
                ['class', 'clock-face__inner', 3, 'top', 4, 'ngIf'],
                [1, 'clock-face__number', 'clock-face__number--outer', 3, 'ngStyle'],
                [3, 'ngStyle', 'ngClass'],
                [1, 'clock-face__inner'],
                [
                  'class',
                  'clock-face__number clock-face__number--inner',
                  3,
                  'ngStyle',
                  'height',
                  4,
                  'ngFor',
                  'ngForOf',
                  'ngForTrackBy',
                ],
                [1, 'clock-face__number', 'clock-face__number--inner', 3, 'ngStyle'],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (i.bc(0, 'div', 0, 1),
                    i.Kc(2, A, 4, 7, 'div', 2),
                    i.Wb(3, 'span', 3, 4),
                    i.ac(),
                    i.Kc(5, j, 2, 2, 'ng-template', null, 5, i.Lc)),
                  2 & t)
                ) {
                  const t = i.Bc(6);
                  i.Ib(2),
                    i.vc('ngIf', e.unit !== e.timeUnit.MINUTE)('ngIfElse', t),
                    i.Ib(1),
                    i.vc('ngClass', i.xc(4, R, e.unit === e.timeUnit.MINUTE))('hidden', e.isClockFaceDisabled);
                }
              },
              directives: function () {
                return [r.l, r.i, r.k, r.m];
              },
              pipes: function () {
                return [r.t, At, It, Dt, Et];
              },
              styles: [
                ".clock-face[_ngcontent-%COMP%]{width:290px;height:290px;border-radius:50%;position:relative;display:flex;justify-content:center;padding:20px;box-sizing:border-box;background-color:#f0f0f0}@supports (background-color:var(--clock-face-background-color)){.clock-face[_ngcontent-%COMP%]{background-color:var(--clock-face-background-color)}}.clock-face__inner[_ngcontent-%COMP%]{position:absolute}.clock-face__container[_ngcontent-%COMP%]{margin-left:-2px}.clock-face__number[_ngcontent-%COMP%]{position:absolute;transform-origin:0 100%;width:50px;text-align:center;z-index:2}.clock-face__number--outer[_ngcontent-%COMP%]{height:calc(290px / 2 - 20px)}.clock-face__number--outer[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-size:16px;color:#6c6c6c}@supports (color:var(--clock-face-time-inactive-color)){.clock-face__number--outer[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{color:var(--clock-face-time-inactive-color)}}.clock-face__number--inner[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-size:14px;color:#929292}@supports (color:var(--clock-face-inner-time-inactive-color)){.clock-face__number--inner[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{color:var(--clock-face-inner-time-inactive-color)}}.clock-face__number[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:30px;height:30px;display:flex;justify-content:center;align-items:center;margin:auto;border-radius:50%;font-weight:500;font-family:Roboto,sans-serif}@supports (font-family:var(--primary-font-family)){.clock-face__number[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-family:var(--primary-font-family)}}.clock-face__number[_ngcontent-%COMP%] > span.active[_ngcontent-%COMP%]{background-color:#00bfff;color:#fff}@supports (background-color:var(--clock-hand-color)){.clock-face__number[_ngcontent-%COMP%] > span.active[_ngcontent-%COMP%]{background-color:var(--clock-hand-color);color:var(--clock-face-time-active-color)}}.clock-face__number[_ngcontent-%COMP%] > span.disabled[_ngcontent-%COMP%]{color:#c5c5c5}@supports (color:var(--clock-face-time-disabled-color)){.clock-face__number[_ngcontent-%COMP%] > span.disabled[_ngcontent-%COMP%]{color:var(--clock-face-time-disabled-color)}}.clock-face__clock-hand[_ngcontent-%COMP%]{height:103px;width:2px;transform-origin:0 100%;position:absolute;top:calc(50% - 103px);z-index:1;background-color:#00bfff}@supports (background-color:var(--clock-hand-color)){.clock-face__clock-hand[_ngcontent-%COMP%]{background-color:var(--clock-hand-color)}}.clock-face__clock-hand[_ngcontent-%COMP%]:after{content:'';width:7px;height:7px;border-radius:50%;background-color:inherit;position:absolute;bottom:-3px;left:-3.5px}.clock-face__clock-hand_minute[_ngcontent-%COMP%]:before{content:'';width:7px;height:7px;background-color:#fff;border-radius:50%;position:absolute;top:-8px;left:calc(50% - 8px);box-sizing:content-box;border:4px solid #00bfff}@supports (border-color:var(--clock-hand-color)){.clock-face__clock-hand_minute[_ngcontent-%COMP%]:before{border-color:var(--clock-hand-color)}}@media (max-device-width:1023px) and (orientation:landscape){.clock-face[_ngcontent-%COMP%]{width:225px;height:225px;padding:5px}.clock-face__number--outer[_ngcontent-%COMP%]{height:calc(225px / 2 - 5px)}.clock-face__clock-hand_minute[_ngcontent-%COMP%]:before{top:0}}",
              ],
              changeDetection: 0,
            })),
            t
          );
        })(),
        vt = (() => {
          let t = class {};
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-button']],
              ngContentSelectors: P,
              decls: 3,
              vars: 0,
              consts: [['type', 'button', 1, 'timepicker-button']],
              template: function (t, e) {
                1 & t && (i.uc(), i.bc(0, 'button', 0), i.bc(1, 'span'), i.tc(2), i.ac(), i.ac());
              },
              styles: [
                '.timepicker-button[_ngcontent-%COMP%]{display:inline-block;height:36px;min-width:88px;line-height:36px;border:12px;border-radius:2px;background-color:transparent;text-align:center;transition:450ms cubic-bezier(.23,1,.32,1);overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;cursor:pointer;outline:0;color:#00bfff}@supports (color:var(--button-color)){.timepicker-button[_ngcontent-%COMP%]{color:var(--button-color)}}.timepicker-button[_ngcontent-%COMP%]:focus, .timepicker-button[_ngcontent-%COMP%]:hover{background-color:rgba(153,153,153,.2)}.timepicker-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-size:14px;text-transform:uppercase;font-weight:600;padding-left:16px;padding-right:16px;font-family:Roboto,sans-serif}@supports (font-family:var(--primary-font-family)){.timepicker-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-family:var(--primary-font-family)}}',
              ],
            })),
            t
          );
        })(),
        wt = (() => {
          let t = class {
            constructor(t) {
              (this.locale = t),
                (this.timeUnit = Z),
                (this.meridiems = d.Info.meridiems({ locale: this.locale })),
                (this.periodChanged = new i.p()),
                (this.timeUnitChanged = new i.p()),
                (this.hourChanged = new i.p()),
                (this.minuteChanged = new i.p());
            }
            ngOnChanges(t) {
              if ((t.period && t.period.currentValue) || (t.format && t.format.currentValue)) {
                const t = ft.getHours(this.format);
                this.hours = ft.disableHours(t, {
                  min: this.minTime,
                  max: this.maxTime,
                  format: this.format,
                  period: this.period,
                });
              }
              if ((t.period && t.period.currentValue) || (t.hour && t.hour.currentValue)) {
                const t = ft.getMinutes(this.minutesGap);
                this.minutes = ft.disableMinutes(t, +this.hour, {
                  min: this.minTime,
                  max: this.maxTime,
                  format: this.format,
                  period: this.period,
                });
              }
            }
            changeTimeUnit(t) {
              this.timeUnitChanged.next(t);
            }
            changePeriod(t) {
              this.periodChanged.next(t);
            }
            changeHour(t) {
              this.hourChanged.next(t);
            }
            changeMinute(t) {
              this.minuteChanged.next(t);
            }
            showHint() {
              this.isHintVisible = !0;
            }
            hideHint() {
              this.isHintVisible = !1;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(at));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-dial']],
              inputs: {
                editableHintTmpl: 'editableHintTmpl',
                hour: 'hour',
                minute: 'minute',
                format: 'format',
                period: 'period',
                activeTimeUnit: 'activeTimeUnit',
                minTime: 'minTime',
                maxTime: 'maxTime',
                isEditable: 'isEditable',
                minutesGap: 'minutesGap',
                hoursOnly: 'hoursOnly',
              },
              outputs: {
                periodChanged: 'periodChanged',
                timeUnitChanged: 'timeUnitChanged',
                hourChanged: 'hourChanged',
                minuteChanged: 'minuteChanged',
              },
              features: [i.Gb],
              decls: 9,
              vars: 25,
              consts: [
                [1, 'timepicker-dial'],
                [1, 'timepicker-dial__container'],
                [1, 'timepicker-dial__time'],
                [
                  3,
                  'timeList',
                  'time',
                  'timeUnit',
                  'isActive',
                  'isEditable',
                  'timeUnitChanged',
                  'timeChanged',
                  'focused',
                  'unfocused',
                ],
                [
                  3,
                  'timeList',
                  'time',
                  'timeUnit',
                  'isActive',
                  'isEditable',
                  'minutesGap',
                  'disabled',
                  'timeUnitChanged',
                  'timeChanged',
                  'focused',
                  'unfocused',
                ],
                [
                  1,
                  'timepicker-dial__period',
                  3,
                  'ngClass',
                  'selectedPeriod',
                  'activeTimeUnit',
                  'maxTime',
                  'minTime',
                  'format',
                  'hours',
                  'minutes',
                  'selectedHour',
                  'meridiems',
                  'periodChanged',
                ],
                [3, 'ngClass', 4, 'ngIf'],
                [3, 'ngClass'],
                [4, 'ngTemplateOutlet'],
                ['editableHintDefault', ''],
                [1, 'timepicker-dial__hint'],
              ],
              template: function (t, e) {
                1 & t &&
                  (i.bc(0, 'div', 0),
                  i.bc(1, 'div', 1),
                  i.bc(2, 'div', 2),
                  i.bc(3, 'ngx-material-timepicker-dial-control', 3),
                  i.jc('timeUnitChanged', function (t) {
                    return e.changeTimeUnit(t);
                  })('timeChanged', function (t) {
                    return e.changeHour(t);
                  })('focused', function () {
                    return e.showHint();
                  })('unfocused', function () {
                    return e.hideHint();
                  }),
                  i.ac(),
                  i.bc(4, 'span'),
                  i.Mc(5, ':'),
                  i.ac(),
                  i.bc(6, 'ngx-material-timepicker-dial-control', 4),
                  i.jc('timeUnitChanged', function (t) {
                    return e.changeTimeUnit(t);
                  })('timeChanged', function (t) {
                    return e.changeMinute(t);
                  })('focused', function () {
                    return e.showHint();
                  })('unfocused', function () {
                    return e.hideHint();
                  }),
                  i.ac(),
                  i.ac(),
                  i.bc(7, 'ngx-material-timepicker-period', 5),
                  i.jc('periodChanged', function (t) {
                    return e.changePeriod(t);
                  }),
                  i.ac(),
                  i.ac(),
                  i.Kc(8, V, 4, 4, 'div', 6),
                  i.ac()),
                  2 & t &&
                    (i.Ib(3),
                    i.vc('timeList', e.hours)('time', e.hour)('timeUnit', e.timeUnit.HOUR)(
                      'isActive',
                      e.activeTimeUnit === e.timeUnit.HOUR
                    )('isEditable', e.isEditable),
                    i.Ib(3),
                    i.vc('timeList', e.minutes)('time', e.minute)('timeUnit', e.timeUnit.MINUTE)(
                      'isActive',
                      e.activeTimeUnit === e.timeUnit.MINUTE
                    )('isEditable', e.isEditable)('minutesGap', e.minutesGap)('disabled', e.hoursOnly),
                    i.Ib(1),
                    i.vc('ngClass', i.xc(23, L, 24 === e.format))('selectedPeriod', e.period)(
                      'activeTimeUnit',
                      e.activeTimeUnit
                    )('maxTime', e.maxTime)('minTime', e.minTime)('format', e.format)('hours', e.hours)(
                      'minutes',
                      e.minutes
                    )('selectedHour', e.hour)('meridiems', e.meridiems),
                    i.Ib(1),
                    i.vc('ngIf', e.isEditable || e.editableHintTmpl));
              },
              directives: function () {
                return [Ct, Ot, r.i, r.l, r.q];
              },
              styles: [
                '.timepicker-dial[_ngcontent-%COMP%]{text-align:right}.timepicker-dial__container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end;-webkit-tap-highlight-color:transparent}.timepicker-dial__time[_ngcontent-%COMP%]{display:flex;align-items:baseline;line-height:normal;font-size:50px;color:rgba(255,255,255,.5);font-family:Roboto,sans-serif}@supports (font-family:var(--primary-font-family)){.timepicker-dial__time[_ngcontent-%COMP%]{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__period[_ngcontent-%COMP%]{display:block;margin-left:10px}.timepicker-dial__hint-container--hidden[_ngcontent-%COMP%], .timepicker-dial__period--hidden[_ngcontent-%COMP%]{visibility:hidden}.timepicker-dial__hint[_ngcontent-%COMP%]{display:inline-block;font-size:10px;color:#fff}@supports (color:var(--dial-active-color)){.timepicker-dial__hint[_ngcontent-%COMP%]{color:var(--dial-active-color)}}.timepicker-dial__hint[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px}@media (max-device-width:1023px) and (orientation:landscape){.timepicker-dial__container[_ngcontent-%COMP%]{flex-direction:column}.timepicker-dial__period[_ngcontent-%COMP%]{margin-left:0}}',
              ],
              changeDetection: 0,
            })),
            t
          );
        })(),
        xt = (() => {
          let t = class {
            constructor(t) {
              (this.locale = t),
                (this.numberingSystem = d.DateTime.local().setLocale(this.locale).resolvedLocaleOpts().numberingSystem);
            }
            transform(t, e = Z.HOUR) {
              return null == t || '' === t
                ? ''
                : isNaN(+t)
                ? e === Z.MINUTE
                  ? this.parseTime(t, 'm', 'minute')
                  : this.parseTime(t, 'H', 'hour')
                : t;
            }
            parseTime(t, e, n) {
              const i = d.DateTime.fromFormat(String(t), e, { numberingSystem: this.numberingSystem })[n];
              if (!isNaN(i)) return i;
              throw new Error(`Cannot parse time - ${t}`);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(at));
            }),
            (t.ɵpipe = i.Ub({ name: 'timeParser', type: t, pure: !0 })),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Ct = (() => {
          let t = class {
            constructor(t) {
              (this.timeParserPipe = t),
                (this.timeUnitChanged = new i.p()),
                (this.timeChanged = new i.p()),
                (this.focused = new i.p()),
                (this.unfocused = new i.p());
            }
            get selectedTime() {
              if (this.time) return this.timeList.find((t) => t.time === +this.time);
            }
            saveTimeAndChangeTimeUnit(t, e) {
              t.preventDefault(), (this.previousTime = this.time), this.timeUnitChanged.next(e), this.focused.next();
            }
            updateTime() {
              const t = this.selectedTime;
              t && (this.timeChanged.next(t), (this.previousTime = t.time));
            }
            changeTimeByKeyboard(t) {
              const e = String.fromCharCode(t.keyCode);
              (function (t, e, n) {
                if (/\d/.test(e)) return kt(t + e, n);
              })(this.time, e, this.timeList) && t.preventDefault();
            }
            onKeydown(t) {
              !(function (t) {
                return (
                  !!(
                    [46, 8, 9, 27, 13].some((e) => e === t.keyCode) ||
                    (65 == t.keyCode && (!0 === t.ctrlKey || !0 === t.metaKey)) ||
                    (67 == t.keyCode && (!0 === t.ctrlKey || !0 === t.metaKey)) ||
                    (88 == t.keyCode && (!0 === t.ctrlKey || !0 === t.metaKey)) ||
                    (t.keyCode >= 35 && t.keyCode <= 40)
                  ) || !((t.keyCode < 48 || t.keyCode > 57) && (t.keyCode < 96 || t.keyCode > 105))
                );
              })(t)
                ? t.preventDefault()
                : this.changeTimeByArrow(t.keyCode);
            }
            onModelChange(t) {
              this.time = this.timeParserPipe.transform(t, this.timeUnit).toString();
            }
            changeTimeByArrow(t) {
              let e;
              38 === t
                ? (e = String(+this.time + (this.minutesGap || 1)))
                : 40 === t && (e = String(+this.time - (this.minutesGap || 1))),
                kt(e, this.timeList) || ((this.time = e), this.updateTime());
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(xt));
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-dial-control']],
              inputs: {
                time: 'time',
                timeList: 'timeList',
                timeUnit: 'timeUnit',
                isActive: 'isActive',
                isEditable: 'isEditable',
                minutesGap: 'minutesGap',
                disabled: 'disabled',
              },
              outputs: {
                timeUnitChanged: 'timeUnitChanged',
                timeChanged: 'timeChanged',
                focused: 'focused',
                unfocused: 'unfocused',
              },
              features: [i.Hb([xt])],
              decls: 3,
              vars: 2,
              consts: [
                [
                  'class',
                  'timepicker-dial__control timepicker-dial__item',
                  'readonly',
                  '',
                  3,
                  'ngClass',
                  'ngModel',
                  'disabled',
                  'timepickerAutofocus',
                  'ngModelChange',
                  'input',
                  'focus',
                  4,
                  'ngIf',
                  'ngIfElse',
                ],
                ['editableTemplate', ''],
                [
                  'readonly',
                  '',
                  1,
                  'timepicker-dial__control',
                  'timepicker-dial__item',
                  3,
                  'ngClass',
                  'ngModel',
                  'disabled',
                  'timepickerAutofocus',
                  'ngModelChange',
                  'input',
                  'focus',
                ],
                [
                  1,
                  'timepicker-dial__control',
                  'timepicker-dial__item',
                  'timepicker-dial__control_editable',
                  3,
                  'ngClass',
                  'ngModel',
                  'disabled',
                  'timepickerAutofocus',
                  'ngModelChange',
                  'input',
                  'focus',
                  'keydown',
                  'keypress',
                ],
              ],
              template: function (t, e) {
                if ((1 & t && (i.Kc(0, z, 2, 9, 'input', 0), i.Kc(1, B, 3, 13, 'ng-template', null, 1, i.Lc)), 2 & t)) {
                  const t = i.Bc(2);
                  i.vc('ngIf', !e.isEditable)('ngIfElse', t);
                }
              },
              directives: function () {
                return [r.l, p.c, r.i, p.n, p.q, Tt];
              },
              pipes: function () {
                return [It, xt];
              },
              styles: [
                '.timepicker-dial__item[_ngcontent-%COMP%]{cursor:pointer;color:rgba(255,255,255,.5);font-family:Roboto,sans-serif}@supports (font-family:var(--primary-font-family)){.timepicker-dial__item[_ngcontent-%COMP%]{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__item_active[_ngcontent-%COMP%]{color:#fff}@supports (color:var(--dial-active-color)){.timepicker-dial__item_active[_ngcontent-%COMP%]{color:var(--dial-active-color)}}.timepicker-dial__control[_ngcontent-%COMP%]{border:none;background-color:transparent;font-size:50px;width:60px;padding:0;border-radius:3px;text-align:right}.timepicker-dial__control_editable[_ngcontent-%COMP%]:focus{color:#00bfff;background-color:#fff;outline:#00bfff}@supports (color:var(--dial-editable-active-color)){.timepicker-dial__control_editable[_ngcontent-%COMP%]:focus{color:var(--dial-editable-active-color)}}@supports (background-color:var(--dial-editable-background-color)){.timepicker-dial__control_editable[_ngcontent-%COMP%]:focus{background-color:var(--dial-editable-background-color)}}@supports (outline:var(--dial-editable-active-color)){.timepicker-dial__control_editable[_ngcontent-%COMP%]:focus{outline:var(--dial-editable-active-color)}}.timepicker-dial__control[_ngcontent-%COMP%]:disabled{cursor:default}',
              ],
            })),
            t
          );
        })();
      function kt(t, e) {
        const n = e.find((e) => e.time === +t);
        return !n || (n && n.disabled);
      }
      let Ot = (() => {
          let t = class {
            constructor() {
              (this.timePeriod = Q), (this.isPeriodAvailable = !0), (this.periodChanged = new i.p());
            }
            changePeriod(t) {
              (this.isPeriodAvailable = this.isSwitchPeriodAvailable(t)),
                this.isPeriodAvailable && this.periodChanged.next(t);
            }
            animationDone() {
              this.isPeriodAvailable = !0;
            }
            isSwitchPeriodAvailable(t) {
              return !this.getDisabledTimeByPeriod(t).every((t) => t.disabled);
            }
            getDisabledTimeByPeriod(t) {
              switch (this.activeTimeUnit) {
                case Z.HOUR:
                  return ft.disableHours(this.hours, {
                    min: this.minTime,
                    max: this.maxTime,
                    format: this.format,
                    period: t,
                  });
                case Z.MINUTE:
                  return ft.disableMinutes(this.minutes, +this.selectedHour, {
                    min: this.minTime,
                    max: this.maxTime,
                    format: this.format,
                    period: t,
                  });
                default:
                  throw new Error('no such TimeUnit');
              }
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-period']],
              inputs: {
                selectedPeriod: 'selectedPeriod',
                format: 'format',
                activeTimeUnit: 'activeTimeUnit',
                hours: 'hours',
                minutes: 'minutes',
                minTime: 'minTime',
                maxTime: 'maxTime',
                selectedHour: 'selectedHour',
                meridiems: 'meridiems',
              },
              outputs: { periodChanged: 'periodChanged' },
              decls: 6,
              vars: 9,
              consts: [
                [1, 'timepicker-period'],
                ['type', 'button', 1, 'timepicker-dial__item', 'timepicker-period__btn', 3, 'ngClass', 'click'],
                ['class', 'timepicker-period__warning', 4, 'ngIf'],
                [1, 'timepicker-period__warning'],
              ],
              template: function (t, e) {
                1 & t &&
                  (i.bc(0, 'div', 0),
                  i.bc(1, 'button', 1),
                  i.jc('click', function () {
                    return e.changePeriod(e.timePeriod.AM);
                  }),
                  i.Mc(2),
                  i.ac(),
                  i.bc(3, 'button', 1),
                  i.jc('click', function () {
                    return e.changePeriod(e.timePeriod.PM);
                  }),
                  i.Mc(4),
                  i.ac(),
                  i.Kc(5, U, 3, 1, 'div', 2),
                  i.ac()),
                  2 & t &&
                    (i.Ib(1),
                    i.vc('ngClass', i.xc(5, H, e.selectedPeriod === e.timePeriod.AM)),
                    i.Ib(1),
                    i.Nc(e.meridiems[0]),
                    i.Ib(1),
                    i.vc('ngClass', i.xc(7, H, e.selectedPeriod === e.timePeriod.PM)),
                    i.Ib(1),
                    i.Nc(e.meridiems[1]),
                    i.Ib(1),
                    i.vc('ngIf', !e.isPeriodAvailable));
              },
              directives: [r.i, r.l],
              styles: [
                '.timepicker-dial__item[_ngcontent-%COMP%]{cursor:pointer;color:rgba(255,255,255,.5);font-family:Roboto,sans-serif}@supports (font-family:var(--primary-font-family)){.timepicker-dial__item[_ngcontent-%COMP%]{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__item_active[_ngcontent-%COMP%]{color:#fff}@supports (color:var(--dial-active-color)){.timepicker-dial__item_active[_ngcontent-%COMP%]{color:var(--dial-active-color)}}.timepicker-period[_ngcontent-%COMP%]{display:flex;flex-direction:column;position:relative}.timepicker-period__btn[_ngcontent-%COMP%]{padding:1px 3px;border:0;background-color:transparent;font-size:18px;font-weight:500;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:0;border-radius:3px;transition:background-color .5s;font-family:Roboto,sans-serif}.timepicker-period__btn[_ngcontent-%COMP%]:focus{background-color:rgba(0,0,0,.07)}.timepicker-period__warning[_ngcontent-%COMP%]{padding:5px 10px;border-radius:3px;background-color:rgba(0,0,0,.55);color:#fff;position:absolute;width:200px;left:-20px;top:40px}.timepicker-period__warning[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{margin:0;font-size:12px;font-family:Roboto,sans-serif}@supports (font-family:var(--primary-font-family)){.timepicker-period__btn[_ngcontent-%COMP%], .timepicker-period__warning[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{font-family:var(--primary-font-family)}}',
              ],
              data: {
                animation: [
                  Object(h.m)('scaleInOut', [
                    Object(h.l)(':enter', [
                      Object(h.k)({ transform: 'scale(0)' }),
                      Object(h.e)('.2s', Object(h.k)({ transform: 'scale(1)' })),
                      Object(h.i)([
                        Object(h.e)('3s', Object(h.k)({ opacity: 1 })),
                        Object(h.e)('.3s', Object(h.k)({ opacity: 0 })),
                      ]),
                    ]),
                  ]),
                ],
              },
            })),
            t
          );
        })(),
        St = (() => {
          let t = class {
            constructor(t) {
              this.eventService = t;
            }
            onClick(t) {
              this.preventClick || this.eventService.dispatchEvent(t), t.preventDefault();
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(K));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'overlay', '']],
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc('click', function (t) {
                    return e.onClick(t);
                  });
              },
              inputs: { preventClick: ['overlay', 'preventClick'] },
            })),
            t
          );
        })(),
        Et = (() => {
          let t = class {
            transform(t, e = 5) {
              return t ? (t % e == 0 ? t : '') : t;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵpipe = i.Ub({ name: 'minutesFormatter', type: t, pure: !0 })),
            t
          );
        })(),
        Tt = (() => {
          let t = class {
            constructor(t, e) {
              (this.element = t), (this.document = e), (this.activeElement = this.document.activeElement);
            }
            ngOnChanges() {
              this.isFocusActive && setTimeout(() => this.element.nativeElement.focus({ preventScroll: !0 }));
            }
            ngOnDestroy() {
              setTimeout(() => this.activeElement.focus({ preventScroll: !0 }));
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(r.d, 8));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'timepickerAutofocus', '']],
              inputs: { isFocusActive: ['timepickerAutofocus', 'isFocusActive'] },
              features: [i.Gb],
            })),
            t
          );
        })(),
        It = (() => {
          let t = class {
            constructor(t) {
              this.locale = t;
            }
            transform(t, e, n = !1) {
              if (null == t || '' === t) return '';
              switch (e) {
                case Z.HOUR:
                  return this.formatTime('hour', t, 0 === t || n ? 'HH' : 'H');
                case Z.MINUTE:
                  return this.formatTime('minute', t, 'mm');
                default:
                  throw new Error(`There is no Time Unit with type ${e}`);
              }
            }
            formatTime(t, e, n) {
              try {
                return d.DateTime.fromObject({ [t]: +e })
                  .setLocale(this.locale)
                  .toFormat(n);
              } catch (i) {
                throw new Error(`Cannot format provided time - ${e} to locale - ${this.locale}`);
              }
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(at));
            }),
            (t.ɵpipe = i.Ub({ name: 'timeLocalizer', type: t, pure: !0 })),
            t
          );
        })(),
        At = (() => {
          let t = class {
            transform(t, e, n) {
              return null != t && !n && t === e;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵpipe = i.Ub({ name: 'activeHour', type: t, pure: !0 })),
            t
          );
        })(),
        Dt = (() => {
          let t = class {
            transform(t, e, n, i) {
              return null != t && !i && e === t && t % (n || 5) == 0;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵpipe = i.Ub({ name: 'activeMinute', type: t, pure: !0 })),
            t
          );
        })(),
        jt = (() => {
          let t = class {};
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = i.Pb({
              type: t,
              selectors: [['ngx-material-timepicker-content']],
              inputs: { appendToInput: 'appendToInput', inputElement: 'inputElement' },
              ngContentSelectors: P,
              decls: 5,
              vars: 2,
              consts: [
                [3, 'ngxAppendToInput', 4, 'ngIf', 'ngIfElse'],
                ['timepickerModal', ''],
                ['timepickerOutlet', ''],
                [3, 'ngxAppendToInput'],
                [4, 'ngTemplateOutlet'],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (i.uc(),
                    i.Kc(0, $, 2, 2, 'div', 0),
                    i.Kc(1, G, 1, 1, 'ng-template', null, 1, i.Lc),
                    i.Kc(3, X, 1, 0, 'ng-template', null, 2, i.Lc)),
                  2 & t)
                ) {
                  const t = i.Bc(2);
                  i.vc('ngIf', e.appendToInput)('ngIfElse', t);
                }
              },
              directives: function () {
                return [r.l, Rt, r.q];
              },
              encapsulation: 2,
            })),
            t
          );
        })(),
        Rt = (() => {
          let t = class {
            constructor(t, e) {
              (this.renderer = e), (this.element = t.nativeElement);
            }
            get inputCords() {
              return this.inputElement.getBoundingClientRect();
            }
            get direction() {
              const t = this.element.offsetHeight,
                { bottom: e, top: n } = this._inputCords,
                i = (window && window.innerHeight) - e < t;
              return i && n > t ? 'top' : i && n < t ? 'center' : 'bottom';
            }
            ngAfterViewInit() {
              (this._inputCords = this.inputCords), (this._direction = this.direction), this.append();
            }
            changePosition() {
              const { bottom: t, top: e } = this.inputCords,
                n = this.defineElementYByDirection(e, t);
              this.setStyle('top', `${n}px`);
            }
            append() {
              const { left: t, bottom: e, top: n } = this._inputCords,
                i = this.defineElementYByDirection(n, e);
              this.setStyle('position', 'fixed'), this.setStyle('left', `${t}px`), this.setStyle('top', `${i}px`);
            }
            setStyle(t, e) {
              this.renderer.setStyle(this.element, t, e);
            }
            defineElementYByDirection(t, e) {
              return 'top' === this._direction
                ? t - this.element.offsetHeight
                : 'center' === this._direction
                ? t - this.element.offsetHeight / 2
                : e;
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(i.G));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [['', 'ngxAppendToInput', '']],
              hostBindings: function (t, e) {
                1 & t &&
                  i.jc(
                    'scroll',
                    function () {
                      return e.changePosition();
                    },
                    !1,
                    i.Cc
                  );
              },
              inputs: { inputElement: ['ngxAppendToInput', 'inputElement'] },
            })),
            t
          );
        })();
      var Pt;
      let Mt = (() => {
        let t = (Pt = class {
          static setLocale(t) {
            return { ngModule: Pt, providers: [{ provide: at, useValue: t }] };
          }
        });
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [[r.c, p.i]],
          })),
          t
        );
      })();
    },
    r8II: function (t, e, n) {
      'use strict';
      (e.decode = e.parse = n('YcCt')), (e.encode = e.stringify = n('6MUB'));
    },
    rDax: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return $;
      }),
        n.d(e, 'b', function () {
          return W;
        }),
        n.d(e, 'c', function () {
          return z;
        }),
        n.d(e, 'd', function () {
          return k;
        }),
        n.d(e, 'e', function () {
          return D;
        }),
        n.d(e, 'f', function () {
          return G;
        });
      var i = n('vxfF'),
        r = n('fXoL'),
        s = n('nLfN'),
        o = n('cH1L'),
        a = n('ofXK'),
        c = n('8LU1'),
        l = n('+rOU'),
        u = n('XNiG'),
        h = n('quSY'),
        d = n('VRyK'),
        p = n('IzEk'),
        f = n('1G5W'),
        m = n('FtGj');
      class g {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ''),
              (this._previousHTMLStyles.top = t.style.top || ''),
              (t.style.left = Object(c.d)(-this._previousScrollPosition.left)),
              (t.style.top = Object(c.d)(-this._previousScrollPosition.top)),
              t.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              e = t.style,
              n = this._document.body.style,
              i = e.scrollBehavior || '',
              r = n.scrollBehavior || '';
            (this._isEnabled = !1),
              (e.left = this._previousHTMLStyles.left),
              (e.top = this._previousHTMLStyles.top),
              t.classList.remove('cdk-global-scrollblock'),
              (e.scrollBehavior = n.scrollBehavior = 'auto'),
              window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top),
              (e.scrollBehavior = i),
              (n.scrollBehavior = r);
          }
        }
        _canBeEnabled() {
          if (this._document.documentElement.classList.contains('cdk-global-scrollblock') || this._isEnabled) return !1;
          const t = this._document.body,
            e = this._viewportRuler.getViewportSize();
          return t.scrollHeight > e.height || t.scrollWidth > e.width;
        }
      }
      function b() {
        return Error('Scroll strategy has already been attached.');
      }
      class _ {
        constructor(t, e, n, i) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = n),
            (this._config = i),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(), this._overlayRef.hasAttached() && this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          if (this._overlayRef) throw b();
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const t = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(t - this._initialScrollPosition) > this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription && (this._scrollSubscription.unsubscribe(), (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class y {
        enable() {}
        disable() {}
        attach() {}
      }
      function v(t, e) {
        return e.some((e) => t.bottom < e.top || t.top > e.bottom || t.right < e.left || t.left > e.right);
      }
      function w(t, e) {
        return e.some((e) => t.top < e.top || t.bottom > e.bottom || t.left < e.left || t.right > e.right);
      }
      class x {
        constructor(t, e, n, i) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = n),
            (this._config = i),
            (this._scrollSubscription = null);
        }
        attach(t) {
          if (this._overlayRef) throw b();
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if ((this._overlayRef.updatePosition(), this._config && this._config.autoClose)) {
                  const t = this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: e, height: n } = this._viewportRuler.getViewportSize();
                  v(t, [{ width: e, height: n, bottom: n, right: e, top: 0, left: 0 }]) &&
                    (this.disable(), this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription && (this._scrollSubscription.unsubscribe(), (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let C = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._scrollDispatcher = t),
              (this._viewportRuler = e),
              (this._ngZone = n),
              (this.noop = () => new y()),
              (this.close = (t) => new _(this._scrollDispatcher, this._ngZone, this._viewportRuler, t)),
              (this.block = () => new g(this._viewportRuler, this._document)),
              (this.reposition = (t) => new x(this._scrollDispatcher, this._viewportRuler, this._ngZone, t)),
              (this._document = i);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(i.c), r.fc(i.e), r.fc(r.B), r.fc(a.d));
          }),
          (t.ɵprov = Object(r.Rb)({
            factory: function () {
              return new t(Object(r.fc)(i.c), Object(r.fc)(i.e), Object(r.fc)(r.B), Object(r.fc)(a.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class k {
        constructor(t) {
          if (
            ((this.scrollStrategy = new y()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const n of e) void 0 !== t[n] && (this[n] = t[n]);
          }
        }
      }
      class O {
        constructor(t, e, n, i, r) {
          (this.offsetX = n),
            (this.offsetY = i),
            (this.panelClass = r),
            (this.originX = t.originX),
            (this.originY = t.originY),
            (this.overlayX = e.overlayX),
            (this.overlayY = e.overlayY);
        }
      }
      class S {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      function E(t, e) {
        if ('top' !== e && 'bottom' !== e && 'center' !== e)
          throw Error(`ConnectedPosition: Invalid ${t} "${e}". ` + 'Expected "top", "bottom" or "center".');
      }
      function T(t, e) {
        if ('start' !== e && 'end' !== e && 'center' !== e)
          throw Error(`ConnectedPosition: Invalid ${t} "${e}". ` + 'Expected "start", "end" or "center".');
      }
      let I = (() => {
        class t {
          constructor(t) {
            (this._attachedOverlays = []),
              (this._keydownListener = (t) => {
                const e = this._attachedOverlays;
                for (let n = e.length - 1; n > -1; n--)
                  if (e[n]._keydownEvents.observers.length > 0) {
                    e[n]._keydownEvents.next(t);
                    break;
                  }
              }),
              (this._document = t);
          }
          ngOnDestroy() {
            this._detach();
          }
          add(t) {
            this.remove(t),
              this._isAttached ||
                (this._document.body.addEventListener('keydown', this._keydownListener), (this._isAttached = !0)),
              this._attachedOverlays.push(t);
          }
          remove(t) {
            const e = this._attachedOverlays.indexOf(t);
            e > -1 && this._attachedOverlays.splice(e, 1), 0 === this._attachedOverlays.length && this._detach();
          }
          _detach() {
            this._isAttached &&
              (this._document.body.removeEventListener('keydown', this._keydownListener), (this._isAttached = !1));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(a.d));
          }),
          (t.ɵprov = Object(r.Rb)({
            factory: function () {
              return new t(Object(r.fc)(a.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const A = !('undefined' == typeof window || !window || (!window.__karma__ && !window.jasmine));
      let D = (() => {
        class t {
          constructor(t, e) {
            (this._platform = e), (this._document = t);
          }
          ngOnDestroy() {
            const t = this._containerElement;
            t && t.parentNode && t.parentNode.removeChild(t);
          }
          getContainerElement() {
            return this._containerElement || this._createContainer(), this._containerElement;
          }
          _createContainer() {
            const t = this._platform ? this._platform.isBrowser : 'undefined' != typeof window;
            if (t || A) {
              const t = this._document.querySelectorAll(
                '.cdk-overlay-container[platform="server"], .cdk-overlay-container[platform="test"]'
              );
              for (let e = 0; e < t.length; e++) t[e].parentNode.removeChild(t[e]);
            }
            const e = this._document.createElement('div');
            e.classList.add('cdk-overlay-container'),
              A ? e.setAttribute('platform', 'test') : t || e.setAttribute('platform', 'server'),
              this._document.body.appendChild(e),
              (this._containerElement = e);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(a.d), r.fc(s.a));
          }),
          (t.ɵprov = Object(r.Rb)({
            factory: function () {
              return new t(Object(r.fc)(a.d), Object(r.fc)(s.a));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class j {
        constructor(t, e, n, i, r, s, o, a) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = n),
            (this._config = i),
            (this._ngZone = r),
            (this._keyboardDispatcher = s),
            (this._document = o),
            (this._location = a),
            (this._backdropElement = null),
            (this._backdropClick = new u.a()),
            (this._attachments = new u.a()),
            (this._detachments = new u.a()),
            (this._locationChanges = h.a.EMPTY),
            (this._backdropClickHandler = (t) => this._backdropClick.next(t)),
            (this._keydownEvents = new u.a()),
            i.scrollStrategy && ((this._scrollStrategy = i.scrollStrategy), this._scrollStrategy.attach(this)),
            (this._positionStrategy = i.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          let e = this._portalOutlet.attach(t);
          return (
            !this._host.parentElement && this._previousHostParent && this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable
              .asObservable()
              .pipe(Object(p.a)(1))
              .subscribe(() => {
                this.hasAttached() && this.updatePosition();
              }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              this._location &&
              (this._locationChanges = this._location.subscribe(() => this.dispose())),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy && this._positionStrategy.detach && this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this.detachBackdrop(),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._host && this._host.parentNode && (this._host.parentNode.removeChild(this._host), (this._host = null)),
            (this._previousHostParent = this._pane = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick.asObservable();
        }
        attachments() {
          return this._attachments.asObservable();
        }
        detachments() {
          return this._detachments.asObservable();
        }
        keydownEvents() {
          return this._keydownEvents.asObservable();
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = Object.assign(Object.assign({}, this._config), t)), this._updateElementSize();
        }
        setDirection(t) {
          (this._config = Object.assign(Object.assign({}, this._config), { direction: t })),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ('string' == typeof t ? t : t.value) : 'ltr';
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = Object(c.d)(this._config.width)),
            (t.height = Object(c.d)(this._config.height)),
            (t.minWidth = Object(c.d)(this._config.minWidth)),
            (t.minHeight = Object(c.d)(this._config.minHeight)),
            (t.maxWidth = Object(c.d)(this._config.maxWidth)),
            (t.maxHeight = Object(c.d)(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? 'auto' : 'none';
        }
        _attachBackdrop() {
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._config.backdropClass && this._toggleClasses(this._backdropElement, this._config.backdropClass, !0),
            this._host.parentElement.insertBefore(this._backdropElement, this._host),
            this._backdropElement.addEventListener('click', this._backdropClickHandler),
            'undefined' != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement && this._backdropElement.classList.add('cdk-overlay-backdrop-showing');
                  });
                })
              : this._backdropElement.classList.add('cdk-overlay-backdrop-showing');
        }
        _updateStackingOrder() {
          this._host.nextSibling && this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          let t,
            e = this._backdropElement;
          if (!e) return;
          let n = () => {
            e &&
              (e.removeEventListener('click', this._backdropClickHandler),
              e.removeEventListener('transitionend', n),
              e.parentNode && e.parentNode.removeChild(e)),
              this._backdropElement == e && (this._backdropElement = null),
              this._config.backdropClass && this._toggleClasses(e, this._config.backdropClass, !1),
              clearTimeout(t);
          };
          e.classList.remove('cdk-overlay-backdrop-showing'),
            this._ngZone.runOutsideAngular(() => {
              e.addEventListener('transitionend', n);
            }),
            (e.style.pointerEvents = 'none'),
            (t = this._ngZone.runOutsideAngular(() => setTimeout(n, 500)));
        }
        _toggleClasses(t, e, n) {
          const i = t.classList;
          Object(c.b)(e).forEach((t) => {
            t && (n ? i.add(t) : i.remove(t));
          });
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .asObservable()
              .pipe(Object(f.a)(Object(d.a)(this._attachments, this._detachments)))
              .subscribe(() => {
                (this._pane && this._host && 0 !== this._pane.children.length) ||
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(this._pane, this._config.panelClass, !1),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._previousHostParent.removeChild(this._host)),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
      }
      const R = /([A-Za-z%]+)$/;
      class P {
        constructor(t, e, n, i, r) {
          (this._viewportRuler = e),
            (this._document = n),
            (this._platform = i),
            (this._overlayContainer = r),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new u.a()),
            (this._resizeSubscription = h.a.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges.asObservable()),
            this.setOrigin(t);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          if (this._overlayRef && t !== this._overlayRef)
            throw Error('This position strategy is already attached to an overlay');
          this._validatePositions(),
            t.hostElement.classList.add('cdk-overlay-connected-position-bounding-box'),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler.change().subscribe(() => {
              (this._isInitialRender = !0), this.apply();
            }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (!this._isInitialRender && this._positionLocked && this._lastPosition)
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            n = this._viewportRect,
            i = [];
          let r;
          for (let s of this._preferredPositions) {
            let o = this._getOriginPoint(t, s),
              a = this._getOverlayPoint(o, e, s),
              c = this._getOverlayFit(a, e, n, s);
            if (c.isCompletelyWithinViewport) return (this._isPushed = !1), void this._applyPosition(s, o);
            this._canFitWithFlexibleDimensions(c, a, n)
              ? i.push({
                  position: s,
                  origin: o,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(o, s),
                })
              : (!r || r.overlayFit.visibleArea < c.visibleArea) &&
                (r = { overlayFit: c, overlayPoint: a, originPoint: o, position: s, overlayRect: e });
          }
          if (i.length) {
            let t = null,
              e = -1;
            for (const n of i) {
              const i = n.boundingBoxRect.width * n.boundingBoxRect.height * (n.position.weight || 1);
              i > e && ((e = i), (t = n));
            }
            return (this._isPushed = !1), void this._applyPosition(t.position, t.origin);
          }
          if (this._canPush) return (this._isPushed = !0), void this._applyPosition(r.position, r.originPoint);
          this._applyPosition(r.position, r.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              M(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove('cdk-overlay-connected-position-bounding-box'),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect());
            const t = this._lastPosition || this._preferredPositions[0],
              e = this._getOriginPoint(this._originRect, t);
            this._applyPosition(t, e);
          }
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e) {
          let n, i;
          if ('center' == e.originX) n = t.left + t.width / 2;
          else {
            const i = this._isRtl() ? t.right : t.left,
              r = this._isRtl() ? t.left : t.right;
            n = 'start' == e.originX ? i : r;
          }
          return (
            (i = 'center' == e.originY ? t.top + t.height / 2 : 'top' == e.originY ? t.top : t.bottom), { x: n, y: i }
          );
        }
        _getOverlayPoint(t, e, n) {
          let i, r;
          return (
            (i =
              'center' == n.overlayX
                ? -e.width / 2
                : 'start' === n.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (r = 'center' == n.overlayY ? -e.height / 2 : 'top' == n.overlayY ? 0 : -e.height),
            { x: t.x + i, y: t.y + r }
          );
        }
        _getOverlayFit(t, e, n, i) {
          let { x: r, y: s } = t,
            o = this._getOffset(i, 'x'),
            a = this._getOffset(i, 'y');
          o && (r += o), a && (s += a);
          let c = 0 - s,
            l = s + e.height - n.height,
            u = this._subtractOverflows(e.width, 0 - r, r + e.width - n.width),
            h = this._subtractOverflows(e.height, c, l),
            d = u * h;
          return {
            visibleArea: d,
            isCompletelyWithinViewport: e.width * e.height === d,
            fitsInViewportVertically: h === e.height,
            fitsInViewportHorizontally: u == e.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, n) {
          if (this._hasFlexibleDimensions) {
            const i = n.bottom - e.y,
              r = n.right - e.x,
              s = F(this._overlayRef.getConfig().minHeight),
              o = F(this._overlayRef.getConfig().minWidth),
              a = t.fitsInViewportHorizontally || (null != o && o <= r);
            return (t.fitsInViewportVertically || (null != s && s <= i)) && a;
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, n) {
          if (this._previousPushAmount && this._positionLocked)
            return { x: t.x + this._previousPushAmount.x, y: t.y + this._previousPushAmount.y };
          const i = this._viewportRect,
            r = Math.max(t.x + e.width - i.right, 0),
            s = Math.max(t.y + e.height - i.bottom, 0),
            o = Math.max(i.top - n.top - t.y, 0),
            a = Math.max(i.left - n.left - t.x, 0);
          let c = 0,
            l = 0;
          return (
            (c = e.width <= i.width ? a || -r : t.x < this._viewportMargin ? i.left - n.left - t.x : 0),
            (l = e.height <= i.height ? o || -s : t.y < this._viewportMargin ? i.top - n.top - t.y : 0),
            (this._previousPushAmount = { x: c, y: l }),
            { x: t.x + c, y: t.y + l }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const e = this._getScrollVisibility(),
              n = new S(t, e);
            this._positionChanges.next(n);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(this._transformOriginSelector);
          let n,
            i = t.overlayY;
          n =
            'center' === t.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === t.overlayX
                ? 'right'
                : 'left'
              : 'start' === t.overlayX
              ? 'left'
              : 'right';
          for (let r = 0; r < e.length; r++) e[r].style.transformOrigin = `${n} ${i}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const n = this._viewportRect,
            i = this._isRtl();
          let r, s, o, a, c, l;
          if ('top' === e.overlayY) (s = t.y), (r = n.height - s + this._viewportMargin);
          else if ('bottom' === e.overlayY)
            (o = n.height - t.y + 2 * this._viewportMargin), (r = n.height - o + this._viewportMargin);
          else {
            const e = Math.min(n.bottom - t.y + n.top, t.y),
              i = this._lastBoundingBoxSize.height;
            (r = 2 * e), (s = t.y - e), r > i && !this._isInitialRender && !this._growAfterOpen && (s = t.y - i / 2);
          }
          if (('end' === e.overlayX && !i) || ('start' === e.overlayX && i))
            (l = n.width - t.x + this._viewportMargin), (a = t.x - this._viewportMargin);
          else if (('start' === e.overlayX && !i) || ('end' === e.overlayX && i)) (c = t.x), (a = n.right - t.x);
          else {
            const e = Math.min(n.right - t.x + n.left, t.x),
              i = this._lastBoundingBoxSize.width;
            (a = 2 * e), (c = t.x - e), a > i && !this._isInitialRender && !this._growAfterOpen && (c = t.x - i / 2);
          }
          return { top: s, left: c, bottom: o, right: l, width: a, height: r };
        }
        _setBoundingBoxStyles(t, e) {
          const n = this._calculateBoundingBoxRect(t, e);
          this._isInitialRender ||
            this._growAfterOpen ||
            ((n.height = Math.min(n.height, this._lastBoundingBoxSize.height)),
            (n.width = Math.min(n.width, this._lastBoundingBoxSize.width)));
          const i = {};
          if (this._hasExactPosition())
            (i.top = i.left = '0'), (i.bottom = i.right = i.maxHeight = i.maxWidth = ''), (i.width = i.height = '100%');
          else {
            const t = this._overlayRef.getConfig().maxHeight,
              r = this._overlayRef.getConfig().maxWidth;
            (i.height = Object(c.d)(n.height)),
              (i.top = Object(c.d)(n.top)),
              (i.bottom = Object(c.d)(n.bottom)),
              (i.width = Object(c.d)(n.width)),
              (i.left = Object(c.d)(n.left)),
              (i.right = Object(c.d)(n.right)),
              (i.alignItems = 'center' === e.overlayX ? 'center' : 'end' === e.overlayX ? 'flex-end' : 'flex-start'),
              (i.justifyContent =
                'center' === e.overlayY ? 'center' : 'bottom' === e.overlayY ? 'flex-end' : 'flex-start'),
              t && (i.maxHeight = Object(c.d)(t)),
              r && (i.maxWidth = Object(c.d)(r));
          }
          (this._lastBoundingBoxSize = n), M(this._boundingBox.style, i);
        }
        _resetBoundingBoxStyles() {
          M(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          M(this._pane.style, { top: '', left: '', bottom: '', right: '', position: '', transform: '' });
        }
        _setOverlayElementStyles(t, e) {
          const n = {},
            i = this._hasExactPosition(),
            r = this._hasFlexibleDimensions,
            s = this._overlayRef.getConfig();
          if (i) {
            const i = this._viewportRuler.getViewportScrollPosition();
            M(n, this._getExactOverlayY(e, t, i)), M(n, this._getExactOverlayX(e, t, i));
          } else n.position = 'static';
          let o = '',
            a = this._getOffset(e, 'x'),
            l = this._getOffset(e, 'y');
          a && (o += `translateX(${a}px) `),
            l && (o += `translateY(${l}px)`),
            (n.transform = o.trim()),
            s.maxHeight && (i ? (n.maxHeight = Object(c.d)(s.maxHeight)) : r && (n.maxHeight = '')),
            s.maxWidth && (i ? (n.maxWidth = Object(c.d)(s.maxWidth)) : r && (n.maxWidth = '')),
            M(this._pane.style, n);
        }
        _getExactOverlayY(t, e, n) {
          let i = { top: '', bottom: '' },
            r = this._getOverlayPoint(e, this._overlayRect, t);
          this._isPushed && (r = this._pushOverlayOnScreen(r, this._overlayRect, n));
          let s = this._overlayContainer.getContainerElement().getBoundingClientRect().top;
          return (
            (r.y -= s),
            'bottom' === t.overlayY
              ? (i.bottom = `${this._document.documentElement.clientHeight - (r.y + this._overlayRect.height)}px`)
              : (i.top = Object(c.d)(r.y)),
            i
          );
        }
        _getExactOverlayX(t, e, n) {
          let i,
            r = { left: '', right: '' },
            s = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed && (s = this._pushOverlayOnScreen(s, this._overlayRect, n)),
            (i = this._isRtl() ? ('end' === t.overlayX ? 'left' : 'right') : 'end' === t.overlayX ? 'right' : 'left'),
            'right' === i
              ? (r.right = `${this._document.documentElement.clientWidth - (s.x + this._overlayRect.width)}px`)
              : (r.left = Object(c.d)(s.x)),
            r
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            n = this._scrollables.map((t) => t.getElementRef().nativeElement.getBoundingClientRect());
          return {
            isOriginClipped: w(t, n),
            isOriginOutsideView: v(t, n),
            isOverlayClipped: w(e, n),
            isOverlayOutsideView: v(e, n),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((t, e) => t - Math.max(e, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            n = this._viewportRuler.getViewportScrollPosition();
          return {
            top: n.top + this._viewportMargin,
            left: n.left + this._viewportMargin,
            right: n.left + t - this._viewportMargin,
            bottom: n.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return 'x' === e
            ? null == t.offsetX
              ? this._offsetX
              : t.offsetX
            : null == t.offsetY
            ? this._offsetY
            : t.offsetY;
        }
        _validatePositions() {
          if (!this._preferredPositions.length)
            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');
          this._preferredPositions.forEach((t) => {
            T('originX', t.originX), E('originY', t.originY), T('overlayX', t.overlayX), E('overlayY', t.overlayY);
          });
        }
        _addPanelClasses(t) {
          this._pane &&
            Object(c.b)(t).forEach((t) => {
              '' !== t &&
                -1 === this._appliedPanelClasses.indexOf(t) &&
                (this._appliedPanelClasses.push(t), this._pane.classList.add(t));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof r.m) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            n = t.height || 0;
          return { top: t.y, bottom: t.y + n, left: t.x, right: t.x + e, height: n, width: e };
        }
      }
      function M(t, e) {
        for (let n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
        return t;
      }
      function F(t) {
        if ('number' != typeof t && null != t) {
          const [e, n] = t.split(R);
          return n && 'px' !== n ? null : parseFloat(e);
        }
        return t || null;
      }
      class N {
        constructor(t, e, n, i, r, s, o) {
          (this._preferredPositions = []),
            (this._positionStrategy = new P(n, i, r, s, o)
              .withFlexibleDimensions(!1)
              .withPush(!1)
              .withViewportMargin(0)),
            this.withFallbackPosition(t, e);
        }
        get _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        get onPositionChange() {
          return this._positionStrategy.positionChanges;
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          (this._overlayRef = t),
            this._positionStrategy.attach(t),
            this._direction && (t.setDirection(this._direction), (this._direction = null));
        }
        dispose() {
          this._positionStrategy.dispose();
        }
        detach() {
          this._positionStrategy.detach();
        }
        apply() {
          this._positionStrategy.apply();
        }
        recalculateLastPosition() {
          this._positionStrategy.reapplyLastPosition();
        }
        withScrollableContainers(t) {
          this._positionStrategy.withScrollableContainers(t);
        }
        withFallbackPosition(t, e, n, i) {
          const r = new O(t, e, n, i);
          return this._preferredPositions.push(r), this._positionStrategy.withPositions(this._preferredPositions), this;
        }
        withDirection(t) {
          return this._overlayRef ? this._overlayRef.setDirection(t) : (this._direction = t), this;
        }
        withOffsetX(t) {
          return this._positionStrategy.withDefaultOffsetX(t), this;
        }
        withOffsetY(t) {
          return this._positionStrategy.withDefaultOffsetY(t), this;
        }
        withLockedPosition(t) {
          return this._positionStrategy.withLockedPosition(t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t.slice()), this._positionStrategy.withPositions(this._preferredPositions), this
          );
        }
        setOrigin(t) {
          return this._positionStrategy.setOrigin(t), this;
        }
      }
      class V {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._leftOffset = ''),
            (this._rightOffset = ''),
            (this._alignItems = ''),
            (this._justifyContent = ''),
            (this._width = ''),
            (this._height = '');
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add('cdk-global-overlay-wrapper'),
            (this._isDisposed = !1);
        }
        top(t = '') {
          return (this._bottomOffset = ''), (this._topOffset = t), (this._alignItems = 'flex-start'), this;
        }
        left(t = '') {
          return (this._rightOffset = ''), (this._leftOffset = t), (this._justifyContent = 'flex-start'), this;
        }
        bottom(t = '') {
          return (this._topOffset = ''), (this._bottomOffset = t), (this._alignItems = 'flex-end'), this;
        }
        right(t = '') {
          return (this._leftOffset = ''), (this._rightOffset = t), (this._justifyContent = 'flex-end'), this;
        }
        width(t = '') {
          return this._overlayRef ? this._overlayRef.updateSize({ width: t }) : (this._width = t), this;
        }
        height(t = '') {
          return this._overlayRef ? this._overlayRef.updateSize({ height: t }) : (this._height = t), this;
        }
        centerHorizontally(t = '') {
          return this.left(t), (this._justifyContent = 'center'), this;
        }
        centerVertically(t = '') {
          return this.top(t), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            n = this._overlayRef.getConfig(),
            { width: i, height: r, maxWidth: s, maxHeight: o } = n,
            a = !(('100%' !== i && '100vw' !== i) || (s && '100%' !== s && '100vw' !== s)),
            c = !(('100%' !== r && '100vh' !== r) || (o && '100%' !== o && '100vh' !== o));
          (t.position = this._cssPosition),
            (t.marginLeft = a ? '0' : this._leftOffset),
            (t.marginTop = c ? '0' : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = this._rightOffset),
            a
              ? (e.justifyContent = 'flex-start')
              : 'center' === this._justifyContent
              ? (e.justifyContent = 'center')
              : 'rtl' === this._overlayRef.getConfig().direction
              ? 'flex-start' === this._justifyContent
                ? (e.justifyContent = 'flex-end')
                : 'flex-end' === this._justifyContent && (e.justifyContent = 'flex-start')
              : (e.justifyContent = this._justifyContent),
            (e.alignItems = c ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            n = e.style;
          e.classList.remove('cdk-global-overlay-wrapper'),
            (n.justifyContent = n.alignItems = t.marginTop = t.marginBottom = t.marginLeft = t.marginRight = t.position =
              ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let L = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._viewportRuler = t), (this._document = e), (this._platform = n), (this._overlayContainer = i);
            }
            global() {
              return new V();
            }
            connectedTo(t, e, n) {
              return new N(e, n, t, this._viewportRuler, this._document, this._platform, this._overlayContainer);
            }
            flexibleConnectedTo(t) {
              return new P(t, this._viewportRuler, this._document, this._platform, this._overlayContainer);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(i.e), r.fc(a.d), r.fc(s.a), r.fc(D));
            }),
            (t.ɵprov = Object(r.Rb)({
              factory: function () {
                return new t(Object(r.fc)(i.e), Object(r.fc)(a.d), Object(r.fc)(s.a), Object(r.fc)(D));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        H = 0,
        z = (() => {
          class t {
            constructor(t, e, n, i, r, s, o, a, c, l) {
              (this.scrollStrategies = t),
                (this._overlayContainer = e),
                (this._componentFactoryResolver = n),
                (this._positionBuilder = i),
                (this._keyboardDispatcher = r),
                (this._injector = s),
                (this._ngZone = o),
                (this._document = a),
                (this._directionality = c),
                (this._location = l);
            }
            create(t) {
              const e = this._createHostElement(),
                n = this._createPaneElement(e),
                i = this._createPortalOutlet(n),
                r = new k(t);
              return (
                (r.direction = r.direction || this._directionality.value),
                new j(i, e, n, r, this._ngZone, this._keyboardDispatcher, this._document, this._location)
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(t) {
              const e = this._document.createElement('div');
              return (e.id = `cdk-overlay-${H++}`), e.classList.add('cdk-overlay-pane'), t.appendChild(e), e;
            }
            _createHostElement() {
              const t = this._document.createElement('div');
              return this._overlayContainer.getContainerElement().appendChild(t), t;
            }
            _createPortalOutlet(t) {
              return (
                this._appRef || (this._appRef = this._injector.get(r.g)),
                new l.e(t, this._componentFactoryResolver, this._appRef, this._injector, this._document)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                r.fc(C),
                r.fc(D),
                r.fc(r.k),
                r.fc(L),
                r.fc(I),
                r.fc(r.t),
                r.fc(r.B),
                r.fc(a.d),
                r.fc(o.b),
                r.fc(a.g, 8)
              );
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const B = [
          { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },
          { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },
          { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },
          { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },
        ],
        U = new r.s('cdk-connected-overlay-scroll-strategy');
      let W = (() => {
          class t {
            constructor(t) {
              this.elementRef = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [
                ['', 'cdk-overlay-origin', ''],
                ['', 'overlay-origin', ''],
                ['', 'cdkOverlayOrigin', ''],
              ],
              exportAs: ['cdkOverlayOrigin'],
            })),
            t
          );
        })(),
        $ = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this._overlay = t),
                (this._dir = s),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = h.a.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.backdropClick = new r.p()),
                (this.positionChange = new r.p()),
                (this.attach = new r.p()),
                (this.detach = new r.p()),
                (this.overlayKeydown = new r.p()),
                (this._templatePortal = new l.h(e, n)),
                (this._scrollStrategyFactory = i),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(t) {
              (this._offsetX = t), this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(t) {
              (this._offsetY = t), this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(t) {
              this._hasBackdrop = Object(c.c)(t);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(t) {
              this._lockPosition = Object(c.c)(t);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(t) {
              this._flexibleDimensions = Object(c.c)(t);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(t) {
              this._growAfterOpen = Object(c.c)(t);
            }
            get push() {
              return this._push;
            }
            set push(t) {
              this._push = Object(c.c)(t);
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : 'ltr';
            }
            ngOnDestroy() {
              this._overlayRef && this._overlayRef.dispose(), this._backdropSubscription.unsubscribe();
            }
            ngOnChanges(t) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                t.origin && this.open && this._position.apply()),
                t.open && (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (this.positions && this.positions.length) || (this.positions = B),
                (this._overlayRef = this._overlay.create(this._buildConfig())),
                this._overlayRef.keydownEvents().subscribe((t) => {
                  this.overlayKeydown.next(t),
                    t.keyCode !== m.g || Object(m.s)(t) || (t.preventDefault(), this._detachOverlay());
                });
            }
            _buildConfig() {
              const t = (this._position = this.positionStrategy || this._createPositionStrategy()),
                e = new k({
                  direction: this._dir,
                  positionStrategy: t,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (e.width = this.width),
                (this.height || 0 === this.height) && (e.height = this.height),
                (this.minWidth || 0 === this.minWidth) && (e.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) && (e.minHeight = this.minHeight),
                this.backdropClass && (e.backdropClass = this.backdropClass),
                this.panelClass && (e.panelClass = this.panelClass),
                e
              );
            }
            _updatePositionStrategy(t) {
              const e = this.positions.map((t) => ({
                originX: t.originX,
                originY: t.originY,
                overlayX: t.overlayX,
                overlayY: t.overlayY,
                offsetX: t.offsetX || this.offsetX,
                offsetY: t.offsetY || this.offsetY,
                panelClass: t.panelClass || void 0,
              }));
              return t
                .setOrigin(this.origin.elementRef)
                .withPositions(e)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const t = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);
              return (
                this._updatePositionStrategy(t), t.positionChanges.subscribe((t) => this.positionChange.emit(t)), t
              );
            }
            _attachOverlay() {
              this._overlayRef ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop) : this._createOverlay(),
                this._overlayRef.hasAttached() || (this._overlayRef.attach(this._templatePortal), this.attach.emit()),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef.backdropClick().subscribe((t) => {
                      this.backdropClick.emit(t);
                    }))
                  : this._backdropSubscription.unsubscribe();
            }
            _detachOverlay() {
              this._overlayRef && (this._overlayRef.detach(), this.detach.emit()),
                this._backdropSubscription.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(z), r.Vb(r.O), r.Vb(r.S), r.Vb(U), r.Vb(o.b, 8));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [
                ['', 'cdk-connected-overlay', ''],
                ['', 'connected-overlay', ''],
                ['', 'cdkConnectedOverlay', ''],
              ],
              inputs: {
                viewportMargin: ['cdkConnectedOverlayViewportMargin', 'viewportMargin'],
                open: ['cdkConnectedOverlayOpen', 'open'],
                scrollStrategy: ['cdkConnectedOverlayScrollStrategy', 'scrollStrategy'],
                offsetX: ['cdkConnectedOverlayOffsetX', 'offsetX'],
                offsetY: ['cdkConnectedOverlayOffsetY', 'offsetY'],
                hasBackdrop: ['cdkConnectedOverlayHasBackdrop', 'hasBackdrop'],
                lockPosition: ['cdkConnectedOverlayLockPosition', 'lockPosition'],
                flexibleDimensions: ['cdkConnectedOverlayFlexibleDimensions', 'flexibleDimensions'],
                growAfterOpen: ['cdkConnectedOverlayGrowAfterOpen', 'growAfterOpen'],
                push: ['cdkConnectedOverlayPush', 'push'],
                positions: ['cdkConnectedOverlayPositions', 'positions'],
                origin: ['cdkConnectedOverlayOrigin', 'origin'],
                positionStrategy: ['cdkConnectedOverlayPositionStrategy', 'positionStrategy'],
                width: ['cdkConnectedOverlayWidth', 'width'],
                height: ['cdkConnectedOverlayHeight', 'height'],
                minWidth: ['cdkConnectedOverlayMinWidth', 'minWidth'],
                minHeight: ['cdkConnectedOverlayMinHeight', 'minHeight'],
                backdropClass: ['cdkConnectedOverlayBackdropClass', 'backdropClass'],
                panelClass: ['cdkConnectedOverlayPanelClass', 'panelClass'],
                transformOriginSelector: ['cdkConnectedOverlayTransformOriginOn', 'transformOriginSelector'],
              },
              outputs: {
                backdropClick: 'backdropClick',
                positionChange: 'positionChange',
                attach: 'attach',
                detach: 'detach',
                overlayKeydown: 'overlayKeydown',
              },
              exportAs: ['cdkConnectedOverlay'],
              features: [r.Gb],
            })),
            t
          );
        })();
      const q = {
        provide: U,
        deps: [z],
        useFactory: function (t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let G = (() => {
        class t {}
        return (
          (t.ɵmod = r.Tb({ type: t })),
          (t.ɵinj = r.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            providers: [z, q],
            imports: [[o.a, l.g, i.d], i.d],
          })),
          t
        );
      })();
    },
    rWzI: function (t, e, n) {
      (function (t) {
        var i;
        !(function (r) {
          'object' == typeof global && global;
          var s,
            o = 2147483647,
            a = /^xn--/,
            c = /[^\x20-\x7E]/,
            l = /[\x2E\u3002\uFF0E\uFF61]/g,
            u = {
              overflow: 'Overflow: input needs wider integers to process',
              'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
              'invalid-input': 'Invalid input',
            },
            h = Math.floor,
            d = String.fromCharCode;
          function p(t) {
            throw RangeError(u[t]);
          }
          function f(t, e) {
            for (var n = t.length, i = []; n--; ) i[n] = e(t[n]);
            return i;
          }
          function m(t, e) {
            var n = t.split('@'),
              i = '';
            return (
              n.length > 1 && ((i = n[0] + '@'), (t = n[1])), i + f((t = t.replace(l, '.')).split('.'), e).join('.')
            );
          }
          function g(t) {
            for (var e, n, i = [], r = 0, s = t.length; r < s; )
              (e = t.charCodeAt(r++)) >= 55296 && e <= 56319 && r < s
                ? 56320 == (64512 & (n = t.charCodeAt(r++)))
                  ? i.push(((1023 & e) << 10) + (1023 & n) + 65536)
                  : (i.push(e), r--)
                : i.push(e);
            return i;
          }
          function b(t) {
            return f(t, function (t) {
              var e = '';
              return (
                t > 65535 && ((e += d((((t -= 65536) >>> 10) & 1023) | 55296)), (t = 56320 | (1023 & t))), e + d(t)
              );
            }).join('');
          }
          function _(t, e) {
            return t + 22 + 75 * (t < 26) - ((0 != e) << 5);
          }
          function y(t, e, n) {
            var i = 0;
            for (t = n ? h(t / 700) : t >> 1, t += h(t / e); t > 455; i += 36) t = h(t / 35);
            return h(i + (36 * t) / (t + 38));
          }
          function v(t) {
            var e,
              n,
              i,
              r,
              s,
              a,
              c,
              l,
              u,
              d,
              f,
              m = [],
              g = t.length,
              _ = 0,
              v = 128,
              w = 72;
            for ((n = t.lastIndexOf('-')) < 0 && (n = 0), i = 0; i < n; ++i)
              t.charCodeAt(i) >= 128 && p('not-basic'), m.push(t.charCodeAt(i));
            for (r = n > 0 ? n + 1 : 0; r < g; ) {
              for (
                s = _, a = 1, c = 36;
                r >= g && p('invalid-input'),
                  ((l =
                    (f = t.charCodeAt(r++)) - 48 < 10 ? f - 22 : f - 65 < 26 ? f - 65 : f - 97 < 26 ? f - 97 : 36) >=
                    36 ||
                    l > h((o - _) / a)) &&
                    p('overflow'),
                  (_ += l * a),
                  !(l < (u = c <= w ? 1 : c >= w + 26 ? 26 : c - w));
                c += 36
              )
                a > h(o / (d = 36 - u)) && p('overflow'), (a *= d);
              (w = y(_ - s, (e = m.length + 1), 0 == s)),
                h(_ / e) > o - v && p('overflow'),
                (v += h(_ / e)),
                (_ %= e),
                m.splice(_++, 0, v);
            }
            return b(m);
          }
          function w(t) {
            var e,
              n,
              i,
              r,
              s,
              a,
              c,
              l,
              u,
              f,
              m,
              b,
              v,
              w,
              x,
              C = [];
            for (b = (t = g(t)).length, e = 128, n = 0, s = 72, a = 0; a < b; ++a) (m = t[a]) < 128 && C.push(d(m));
            for (i = r = C.length, r && C.push('-'); i < b; ) {
              for (c = o, a = 0; a < b; ++a) (m = t[a]) >= e && m < c && (c = m);
              for (c - e > h((o - n) / (v = i + 1)) && p('overflow'), n += (c - e) * v, e = c, a = 0; a < b; ++a)
                if (((m = t[a]) < e && ++n > o && p('overflow'), m == e)) {
                  for (l = n, u = 36; !(l < (f = u <= s ? 1 : u >= s + 26 ? 26 : u - s)); u += 36)
                    C.push(d(_(f + ((x = l - f) % (w = 36 - f)), 0))), (l = h(x / w));
                  C.push(d(_(l, 0))), (s = y(n, v, i == r)), (n = 0), ++i;
                }
              ++n, ++e;
            }
            return C.join('');
          }
          (s = {
            version: '1.3.2',
            ucs2: { decode: g, encode: b },
            decode: v,
            encode: w,
            toASCII: function (t) {
              return m(t, function (t) {
                return c.test(t) ? 'xn--' + w(t) : t;
              });
            },
            toUnicode: function (t) {
              return m(t, function (t) {
                return a.test(t) ? v(t.slice(4).toLowerCase()) : t;
              });
            },
          }),
            void 0 ===
              (i = function () {
                return s;
              }.call(e, n, e, t)) || (t.exports = i);
        })();
      }.call(this, n('YuTi')(t)));
    },
    'sT+k': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('0IaG'),
        r = n('fXoL'),
        s = n('ofXK');
      function o(t, e) {
        if ((1 & t && r.Wb(0, 'img', 3), 2 & t)) {
          const t = r.nc();
          r.vc('src', t.media, r.Fc);
        }
      }
      function a(t, e) {
        if (
          (1 & t &&
            (r.bc(0, 'video', 4),
            r.Wb(1, 'source', 5),
            r.Mc(2, ' Your browser does not support the video tag.\n'),
            r.ac()),
          2 & t)
        ) {
          const t = r.nc();
          r.Ib(1), r.vc('src', t.media, r.Fc);
        }
      }
      function c(t, e) {
        if (
          (1 & t &&
            (r.bc(0, 'audio', 6),
            r.Wb(1, 'source', 7),
            r.Mc(2, ' Your browser does not support the audio tag.\n'),
            r.ac()),
          2 & t)
        ) {
          const t = r.nc();
          r.Ib(1), r.vc('src', t.media, r.Fc);
        }
      }
      let l = (() => {
        class t {
          constructor(t, e) {
            (this._dialogRef = t),
              (this.data = e),
              (this.isPhoto = () => this.media.match(/\.(jpg|jpeg|png)$/)),
              (this.isVideo = () => this.media.match(/\.(mp4)$/)),
              (this.isAudio = () => this.media.match(/\.(mp3)$/)),
              (this.closePopup = (t) => this._dialogRef.close(t));
          }
          get media() {
            return this.data ? this.data.media : '';
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.Vb(i.d), r.Vb(i.a));
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['app-popup-media']],
            decls: 3,
            vars: 3,
            consts: [
              ['alt', '', 3, 'src', 4, 'ngIf'],
              ['controls', '', 'autoplay', '', 4, 'ngIf'],
              ['controls', '', 4, 'ngIf'],
              ['alt', '', 3, 'src'],
              ['controls', '', 'autoplay', ''],
              ['type', 'video/mp4', 3, 'src'],
              ['controls', ''],
              ['type', 'audio/mp3', 3, 'src'],
            ],
            template: function (t, e) {
              1 & t && (r.Kc(0, o, 1, 1, 'img', 0), r.Kc(1, a, 3, 1, 'video', 1), r.Kc(2, c, 3, 1, 'audio', 2)),
                2 & t &&
                  (r.vc('ngIf', e.isPhoto()), r.Ib(1), r.vc('ngIf', e.isVideo()), r.Ib(1), r.vc('ngIf', e.isAudio()));
            },
            directives: [s.l],
            styles: ['video[_ngcontent-%COMP%]{width:100%;height:100%}'],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    sYmb: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return P;
      }),
        n.d(e, 'b', function () {
          return f;
        }),
        n.d(e, 'c', function () {
          return F;
        }),
        n.d(e, 'd', function () {
          return M;
        }),
        n.d(e, 'e', function () {
          return R;
        });
      var i = n('fXoL'),
        r = n('LRne'),
        s = n('7+OI'),
        o = n('cp0P'),
        a = n('GyhO'),
        c = n('NXyV'),
        l = n('IzEk'),
        u = n('UXun'),
        h = n('lJxs'),
        d = n('bOdf'),
        p = n('eIep');
      class f {}
      let m = (() => {
        class t extends f {
          getTranslation(t) {
            return Object(r.a)({});
          }
        }
        return (
          (t.ɵfac = function (e) {
            return g(e || t);
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const g = i.dc(m);
      class b {}
      let _ = (() => {
        class t {
          handle(t) {
            return t.key;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function y(t, e) {
        if (t === e) return !0;
        if (null === t || null === e) return !1;
        if (t != t && e != e) return !0;
        let n,
          i,
          r,
          s = typeof t;
        if (s == typeof e && 'object' == s) {
          if (!Array.isArray(t)) {
            if (Array.isArray(e)) return !1;
            for (i in ((r = Object.create(null)), t)) {
              if (!y(t[i], e[i])) return !1;
              r[i] = !0;
            }
            for (i in e) if (!(i in r) && void 0 !== e[i]) return !1;
            return !0;
          }
          if (!Array.isArray(e)) return !1;
          if ((n = t.length) == e.length) {
            for (i = 0; i < n; i++) if (!y(t[i], e[i])) return !1;
            return !0;
          }
        }
        return !1;
      }
      function v(t) {
        return null != t;
      }
      function w(t) {
        return t && 'object' == typeof t && !Array.isArray(t);
      }
      class x {}
      let C = (() => {
        class t extends x {
          constructor() {
            super(...arguments), (this.templateMatcher = /{{\s?([^{}\s]*)\s?}}/g);
          }
          interpolate(t, e) {
            let n;
            return (
              (n =
                'string' == typeof t
                  ? this.interpolateString(t, e)
                  : 'function' == typeof t
                  ? this.interpolateFunction(t, e)
                  : t),
              n
            );
          }
          getValue(t, e) {
            let n = 'string' == typeof e ? e.split('.') : [e];
            e = '';
            do {
              (e += n.shift()),
                !v(t) || !v(t[e]) || ('object' != typeof t[e] && n.length)
                  ? n.length
                    ? (e += '.')
                    : (t = void 0)
                  : ((t = t[e]), (e = ''));
            } while (n.length);
            return t;
          }
          interpolateFunction(t, e) {
            return t(e);
          }
          interpolateString(t, e) {
            return e
              ? t.replace(this.templateMatcher, (t, n) => {
                  let i = this.getValue(e, n);
                  return v(i) ? i : t;
                })
              : t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return k(e || t);
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const k = i.dc(C);
      class O {}
      let S = (() => {
        class t extends O {
          compile(t, e) {
            return t;
          }
          compileTranslations(t, e) {
            return t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return E(e || t);
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const E = i.dc(S);
      class T {
        constructor() {
          (this.currentLang = this.defaultLang),
            (this.translations = {}),
            (this.langs = []),
            (this.onTranslationChange = new i.p()),
            (this.onLangChange = new i.p()),
            (this.onDefaultLangChange = new i.p());
        }
      }
      const I = new i.s('USE_STORE'),
        A = new i.s('USE_DEFAULT_LANG'),
        D = new i.s('DEFAULT_LANGUAGE'),
        j = new i.s('USE_EXTEND');
      let R = (() => {
          class t {
            constructor(t, e, n, r, s, o = !0, a = !1, c = !1, l) {
              (this.store = t),
                (this.currentLoader = e),
                (this.compiler = n),
                (this.parser = r),
                (this.missingTranslationHandler = s),
                (this.useDefaultLang = o),
                (this.isolate = a),
                (this.extend = c),
                (this.pending = !1),
                (this._onTranslationChange = new i.p()),
                (this._onLangChange = new i.p()),
                (this._onDefaultLangChange = new i.p()),
                (this._langs = []),
                (this._translations = {}),
                (this._translationRequests = {}),
                l && this.setDefaultLang(l);
            }
            get onTranslationChange() {
              return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;
            }
            get onLangChange() {
              return this.isolate ? this._onLangChange : this.store.onLangChange;
            }
            get onDefaultLangChange() {
              return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;
            }
            get defaultLang() {
              return this.isolate ? this._defaultLang : this.store.defaultLang;
            }
            set defaultLang(t) {
              this.isolate ? (this._defaultLang = t) : (this.store.defaultLang = t);
            }
            get currentLang() {
              return this.isolate ? this._currentLang : this.store.currentLang;
            }
            set currentLang(t) {
              this.isolate ? (this._currentLang = t) : (this.store.currentLang = t);
            }
            get langs() {
              return this.isolate ? this._langs : this.store.langs;
            }
            set langs(t) {
              this.isolate ? (this._langs = t) : (this.store.langs = t);
            }
            get translations() {
              return this.isolate ? this._translations : this.store.translations;
            }
            set translations(t) {
              this.isolate ? (this._translations = t) : (this.store.translations = t);
            }
            setDefaultLang(t) {
              if (t === this.defaultLang) return;
              let e = this.retrieveTranslations(t);
              void 0 !== e
                ? (null == this.defaultLang && (this.defaultLang = t),
                  e.pipe(Object(l.a)(1)).subscribe((e) => {
                    this.changeDefaultLang(t);
                  }))
                : this.changeDefaultLang(t);
            }
            getDefaultLang() {
              return this.defaultLang;
            }
            use(t) {
              if (t === this.currentLang) return Object(r.a)(this.translations[t]);
              let e = this.retrieveTranslations(t);
              return void 0 !== e
                ? (this.currentLang || (this.currentLang = t),
                  e.pipe(Object(l.a)(1)).subscribe((e) => {
                    this.changeLang(t);
                  }),
                  e)
                : (this.changeLang(t), Object(r.a)(this.translations[t]));
            }
            retrieveTranslations(t) {
              let e;
              return (
                (void 0 === this.translations[t] || this.extend) &&
                  ((this._translationRequests[t] = this._translationRequests[t] || this.getTranslation(t)),
                  (e = this._translationRequests[t])),
                e
              );
            }
            getTranslation(t) {
              this.pending = !0;
              const e = this.currentLoader.getTranslation(t).pipe(Object(u.a)(1), Object(l.a)(1));
              return (
                (this.loadingTranslations = e.pipe(
                  Object(h.a)((e) => this.compiler.compileTranslations(e, t)),
                  Object(u.a)(1),
                  Object(l.a)(1)
                )),
                this.loadingTranslations.subscribe({
                  next: (e) => {
                    (this.translations[t] =
                      this.extend && this.translations[t]
                        ? Object.assign(Object.assign({}, e), this.translations[t])
                        : e),
                      this.updateLangs(),
                      (this.pending = !1);
                  },
                  error: (t) => {
                    this.pending = !1;
                  },
                }),
                e
              );
            }
            setTranslation(t, e, n = !1) {
              (e = this.compiler.compileTranslations(e, t)),
                (this.translations[t] =
                  (n || this.extend) && this.translations[t]
                    ? (function t(e, n) {
                        let i = Object.assign({}, e);
                        return (
                          w(e) &&
                            w(n) &&
                            Object.keys(n).forEach((r) => {
                              w(n[r])
                                ? r in e
                                  ? (i[r] = t(e[r], n[r]))
                                  : Object.assign(i, { [r]: n[r] })
                                : Object.assign(i, { [r]: n[r] });
                            }),
                          i
                        );
                      })(this.translations[t], e)
                    : e),
                this.updateLangs(),
                this.onTranslationChange.emit({ lang: t, translations: this.translations[t] });
            }
            getLangs() {
              return this.langs;
            }
            addLangs(t) {
              t.forEach((t) => {
                -1 === this.langs.indexOf(t) && this.langs.push(t);
              });
            }
            updateLangs() {
              this.addLangs(Object.keys(this.translations));
            }
            getParsedResult(t, e, n) {
              let i;
              if (e instanceof Array) {
                let i = {},
                  a = !1;
                for (let r of e) (i[r] = this.getParsedResult(t, r, n)), Object(s.a)(i[r]) && (a = !0);
                if (a) {
                  const t = e.map((t) => (Object(s.a)(i[t]) ? i[t] : Object(r.a)(i[t])));
                  return Object(o.a)(t).pipe(
                    Object(h.a)((t) => {
                      let n = {};
                      return (
                        t.forEach((t, i) => {
                          n[e[i]] = t;
                        }),
                        n
                      );
                    })
                  );
                }
                return i;
              }
              if (
                (t && (i = this.parser.interpolate(this.parser.getValue(t, e), n)),
                void 0 === i &&
                  null != this.defaultLang &&
                  this.defaultLang !== this.currentLang &&
                  this.useDefaultLang &&
                  (i = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], e), n)),
                void 0 === i)
              ) {
                let t = { key: e, translateService: this };
                void 0 !== n && (t.interpolateParams = n), (i = this.missingTranslationHandler.handle(t));
              }
              return void 0 !== i ? i : e;
            }
            get(t, e) {
              if (!v(t) || !t.length) throw new Error('Parameter "key" required');
              if (this.pending)
                return this.loadingTranslations.pipe(
                  Object(d.a)((n) => ((n = this.getParsedResult(n, t, e)), Object(s.a)(n) ? n : Object(r.a)(n)))
                );
              {
                let n = this.getParsedResult(this.translations[this.currentLang], t, e);
                return Object(s.a)(n) ? n : Object(r.a)(n);
              }
            }
            getStreamOnTranslationChange(t, e) {
              if (!v(t) || !t.length) throw new Error('Parameter "key" required');
              return Object(a.a)(
                Object(c.a)(() => this.get(t, e)),
                this.onTranslationChange.pipe(
                  Object(p.a)((n) => {
                    const i = this.getParsedResult(n.translations, t, e);
                    return 'function' == typeof i.subscribe ? i : Object(r.a)(i);
                  })
                )
              );
            }
            stream(t, e) {
              if (!v(t) || !t.length) throw new Error('Parameter "key" required');
              return Object(a.a)(
                Object(c.a)(() => this.get(t, e)),
                this.onLangChange.pipe(
                  Object(p.a)((n) => {
                    const i = this.getParsedResult(n.translations, t, e);
                    return Object(s.a)(i) ? i : Object(r.a)(i);
                  })
                )
              );
            }
            instant(t, e) {
              if (!v(t) || !t.length) throw new Error('Parameter "key" required');
              let n = this.getParsedResult(this.translations[this.currentLang], t, e);
              if (Object(s.a)(n)) {
                if (t instanceof Array) {
                  let e = {};
                  return (
                    t.forEach((n, i) => {
                      e[t[i]] = t[i];
                    }),
                    e
                  );
                }
                return t;
              }
              return n;
            }
            set(t, e, n = this.currentLang) {
              (this.translations[n][t] = this.compiler.compile(e, n)),
                this.updateLangs(),
                this.onTranslationChange.emit({ lang: n, translations: this.translations[n] });
            }
            changeLang(t) {
              (this.currentLang = t),
                this.onLangChange.emit({ lang: t, translations: this.translations[t] }),
                null == this.defaultLang && this.changeDefaultLang(t);
            }
            changeDefaultLang(t) {
              (this.defaultLang = t), this.onDefaultLangChange.emit({ lang: t, translations: this.translations[t] });
            }
            reloadLang(t) {
              return this.resetLang(t), this.getTranslation(t);
            }
            resetLang(t) {
              (this._translationRequests[t] = void 0), (this.translations[t] = void 0);
            }
            getBrowserLang() {
              if ('undefined' == typeof window || void 0 === window.navigator) return;
              let t = window.navigator.languages ? window.navigator.languages[0] : null;
              return (
                (t =
                  t || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage),
                void 0 !== t
                  ? (-1 !== t.indexOf('-') && (t = t.split('-')[0]), -1 !== t.indexOf('_') && (t = t.split('_')[0]), t)
                  : void 0
              );
            }
            getBrowserCultureLang() {
              if ('undefined' == typeof window || void 0 === window.navigator) return;
              let t = window.navigator.languages ? window.navigator.languages[0] : null;
              return (
                (t =
                  t || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage),
                t
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(T), i.fc(f), i.fc(O), i.fc(x), i.fc(b), i.fc(A), i.fc(I), i.fc(j), i.fc(D));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        P = (() => {
          class t {
            constructor(t, e, n) {
              (this.translateService = t),
                (this.element = e),
                (this._ref = n),
                this.onTranslationChangeSub ||
                  (this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((t) => {
                    t.lang === this.translateService.currentLang && this.checkNodes(!0, t.translations);
                  })),
                this.onLangChangeSub ||
                  (this.onLangChangeSub = this.translateService.onLangChange.subscribe((t) => {
                    this.checkNodes(!0, t.translations);
                  })),
                this.onDefaultLangChangeSub ||
                  (this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((t) => {
                    this.checkNodes(!0);
                  }));
            }
            set translate(t) {
              t && ((this.key = t), this.checkNodes());
            }
            set translateParams(t) {
              y(this.currentParams, t) || ((this.currentParams = t), this.checkNodes(!0));
            }
            ngAfterViewChecked() {
              this.checkNodes();
            }
            checkNodes(t = !1, e) {
              let n = this.element.nativeElement.childNodes;
              n.length ||
                (this.setContent(this.element.nativeElement, this.key), (n = this.element.nativeElement.childNodes));
              for (let i = 0; i < n.length; ++i) {
                let r = n[i];
                if (3 === r.nodeType) {
                  let n;
                  if ((t && (r.lastKey = null), v(r.lookupKey))) n = r.lookupKey;
                  else if (this.key) n = this.key;
                  else {
                    let t = this.getContent(r),
                      e = t.trim();
                    e.length &&
                      ((r.lookupKey = e),
                      t !== r.currentValue
                        ? ((n = e), (r.originalContent = t || r.originalContent))
                        : r.originalContent
                        ? (n = r.originalContent.trim())
                        : t !== r.currentValue && ((n = e), (r.originalContent = t || r.originalContent)));
                  }
                  this.updateValue(n, r, e);
                }
              }
            }
            updateValue(t, e, n) {
              if (t) {
                if (e.lastKey === t && this.lastParams === this.currentParams) return;
                this.lastParams = this.currentParams;
                let i = (n) => {
                  n !== t && (e.lastKey = t),
                    e.originalContent || (e.originalContent = this.getContent(e)),
                    (e.currentValue = v(n) ? n : e.originalContent || t),
                    this.setContent(e, this.key ? e.currentValue : e.originalContent.replace(t, e.currentValue)),
                    this._ref.markForCheck();
                };
                if (v(n)) {
                  let e = this.translateService.getParsedResult(n, t, this.currentParams);
                  Object(s.a)(e) ? e.subscribe(i) : i(e);
                } else this.translateService.get(t, this.currentParams).subscribe(i);
              }
            }
            getContent(t) {
              return v(t.textContent) ? t.textContent : t.data;
            }
            setContent(t, e) {
              v(t.textContent) ? (t.textContent = e) : (t.data = e);
            }
            ngOnDestroy() {
              this.onLangChangeSub && this.onLangChangeSub.unsubscribe(),
                this.onDefaultLangChangeSub && this.onDefaultLangChangeSub.unsubscribe(),
                this.onTranslationChangeSub && this.onTranslationChangeSub.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(R), i.Vb(i.m), i.Vb(i.i));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'translate', ''],
                ['', 'ngx-translate', ''],
              ],
              inputs: { translate: 'translate', translateParams: 'translateParams' },
            })),
            t
          );
        })(),
        M = (() => {
          class t {
            constructor(t, e) {
              (this.translate = t), (this._ref = e), (this.value = '');
            }
            updateValue(t, e, n) {
              let i = (e) => {
                (this.value = void 0 !== e ? e : t), (this.lastKey = t), this._ref.markForCheck();
              };
              if (n) {
                let r = this.translate.getParsedResult(n, t, e);
                Object(s.a)(r.subscribe) ? r.subscribe(i) : i(r);
              }
              this.translate.get(t, e).subscribe(i);
            }
            transform(t, ...e) {
              if (!t || !t.length) return t;
              if (y(t, this.lastKey) && y(e, this.lastParams)) return this.value;
              let n;
              if (v(e[0]) && e.length)
                if ('string' == typeof e[0] && e[0].length) {
                  let t = e[0]
                    .replace(/(\')?([a-zA-Z0-9_]+)(\')?(\s)?:/g, '"$2":')
                    .replace(/:(\s)?(\')(.*?)(\')/g, ':"$3"');
                  try {
                    n = JSON.parse(t);
                  } catch (i) {
                    throw new SyntaxError(
                      `Wrong parameter in TranslatePipe. Expected a valid Object, received: ${e[0]}`
                    );
                  }
                } else 'object' != typeof e[0] || Array.isArray(e[0]) || (n = e[0]);
              return (
                (this.lastKey = t),
                (this.lastParams = e),
                this.updateValue(t, n),
                this._dispose(),
                this.onTranslationChange ||
                  (this.onTranslationChange = this.translate.onTranslationChange.subscribe((e) => {
                    this.lastKey &&
                      e.lang === this.translate.currentLang &&
                      ((this.lastKey = null), this.updateValue(t, n, e.translations));
                  })),
                this.onLangChange ||
                  (this.onLangChange = this.translate.onLangChange.subscribe((e) => {
                    this.lastKey && ((this.lastKey = null), this.updateValue(t, n, e.translations));
                  })),
                this.onDefaultLangChange ||
                  (this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {
                    this.lastKey && ((this.lastKey = null), this.updateValue(t, n));
                  })),
                this.value
              );
            }
            _dispose() {
              void 0 !== this.onTranslationChange &&
                (this.onTranslationChange.unsubscribe(), (this.onTranslationChange = void 0)),
                void 0 !== this.onLangChange && (this.onLangChange.unsubscribe(), (this.onLangChange = void 0)),
                void 0 !== this.onDefaultLangChange &&
                  (this.onDefaultLangChange.unsubscribe(), (this.onDefaultLangChange = void 0));
            }
            ngOnDestroy() {
              this._dispose();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(R), i.hc());
            }),
            (t.ɵpipe = i.Ub({ name: 'translate', type: t, pure: !1 })),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        F = (() => {
          class t {
            static forRoot(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.loader || { provide: f, useClass: m },
                  e.compiler || { provide: O, useClass: S },
                  e.parser || { provide: x, useClass: C },
                  e.missingTranslationHandler || { provide: b, useClass: _ },
                  T,
                  { provide: I, useValue: e.isolate },
                  { provide: A, useValue: e.useDefaultLang },
                  { provide: j, useValue: e.extend },
                  { provide: D, useValue: e.defaultLanguage },
                  R,
                ],
              };
            }
            static forChild(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.loader || { provide: f, useClass: m },
                  e.compiler || { provide: O, useClass: S },
                  e.parser || { provide: x, useClass: C },
                  e.missingTranslationHandler || { provide: b, useClass: _ },
                  { provide: I, useValue: e.isolate },
                  { provide: A, useValue: e.useDefaultLang },
                  { provide: j, useValue: e.extend },
                  { provide: D, useValue: e.defaultLanguage },
                  R,
                ],
              };
            }
          }
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })();
    },
    srgo: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return v;
      }),
        n.d(e, 'b', function () {
          return S;
        }),
        n.d(e, 'c', function () {
          return O;
        }),
        n.d(e, 'd', function () {
          return k;
        }),
        n.d(e, 'e', function () {
          return y;
        }),
        n.d(e, 'f', function () {
          return _;
        }),
        n.d(e, 'g', function () {
          return D;
        }),
        n.d(e, 'h', function () {
          return j;
        }),
        n.d(e, 'i', function () {
          return E;
        }),
        n.d(e, 'j', function () {
          return T;
        }),
        n.d(e, 'k', function () {
          return I;
        }),
        n.d(e, 'l', function () {
          return f;
        }),
        n.d(e, 'm', function () {
          return z;
        }),
        n.d(e, 'n', function () {
          return V;
        }),
        n.d(e, 'o', function () {
          return F;
        }),
        n.d(e, 'p', function () {
          return B;
        }),
        n.d(e, 'q', function () {
          return w;
        }),
        n.d(e, 'r', function () {
          return M;
        }),
        n.d(e, 's', function () {
          return x;
        }),
        n.d(e, 't', function () {
          return U;
        }),
        n.d(e, 'u', function () {
          return d;
        }),
        n.d(e, 'v', function () {
          return p;
        }),
        n.d(e, 'w', function () {
          return m;
        }),
        n.d(e, 'x', function () {
          return W;
        }),
        n.d(e, 'y', function () {
          return A;
        }),
        n.d(e, 'z', function () {
          return N;
        });
      var i = n('Nwf9'),
        r = n('fXoL'),
        s = n('AcyG'),
        o = n('z5Zb'),
        a = n('2Vo4'),
        c = n('cp0P'),
        l = n('7+OI'),
        u = n('lJxs'),
        h = n('UXun');
      function d(t) {
        return 'undefined' !== t && null != t;
      }
      function p(t) {
        return !d(t);
      }
      function f(t) {
        return JSON.parse(JSON.stringify(void 0 === t ? {} : t));
      }
      function m(t) {
        return 'object' == typeof t && !Array.isArray(t) && null !== t;
      }
      function g(t) {
        return t.NGXS_OPTIONS_META || {};
      }
      class b extends Error {
        constructor(t) {
          super(
            `${i.c.NGXS_DATA_CHILDREN_CONVERT}. Cannot convert ${
              t && t.constructor ? t.constructor.name : t
            } to PlainObject`
          );
        }
      }
      function _(t) {
        const e = g(t),
          n = e.children || [],
          r = f(e.defaults);
        if (n.length) {
          if (m(r))
            return (function (t, e) {
              return e.reduce((t, e) => {
                const n = g(e);
                if (!n.name) throw new Error(i.c.NGXS_DATA_STATE_NAME_NOT_FOUND);
                return (t[n.name.toString()] = _(e)), t;
              }, t);
            })(r, n);
          throw new b(r);
        }
        return r;
      }
      function y(t) {
        const { statePath: e, argumentsNames: n, methodName: i, argumentRegistry: r } = t;
        let s = '';
        for (let o = 0; o < n.length; o++)
          (null == r ? void 0 : r.getArgumentNameByIndex(o))
            ? (s += null == r ? void 0 : r.getArgumentNameByIndex(o))
            : (null == r ? void 0 : r.getPayloadTypeByIndex(o))
            ? (s += null == r ? void 0 : r.getPayloadTypeByIndex(o))
            : (s += `$arg${o}`),
            o !== n.length - 1 && (s += ', ');
        return `@${e.replace(/\./g, '/')}.${i}(${s})`;
      }
      function v(t) {
        return (t + '')
          .replace(/[/][/].*$/gm, '')
          .replace(/\s+/g, '')
          .replace(/[/][*][^/*]*[*][/]/g, '')
          .split('){', 1)[0]
          .replace(/^[^(]*[(]/, '')
          .replace(/=[^,]+/g, '')
          .split(',')
          .filter(Boolean);
      }
      function w(t) {
        if (!t.hasOwnProperty(i.f)) {
          const e = {
            name: null,
            actions: {},
            defaults: {},
            path: null,
            makeRootSelector: (t) => t.getStateGetter(e.name),
            children: [],
          };
          Object.defineProperty(t, i.f, { value: e });
        }
        return (function (t) {
          return t[i.f];
        })(t);
      }
      function x(t) {
        return t[i.d];
      }
      const C = (t) => {
        const e = t instanceof Date;
        if ('object' != typeof t || null === t || e) return t;
        Object.freeze(t);
        const n = 'function' == typeof t,
          i = Object.prototype.hasOwnProperty;
        return (
          Object.getOwnPropertyNames(t).forEach((e) => {
            !i.call(t, e) ||
              (n && ('caller' === e || 'callee' === e || 'arguments' === e)) ||
              null === t[e] ||
              ('object' != typeof t[e] && 'function' != typeof t[e]) ||
              Object.isFrozen(t[e]) ||
              C(t[e]);
          }),
          t
        );
      };
      let k = (() => {
          class t {
            constructor(t) {
              (this.sequence$ = new a.a(0)),
                (this.subscription = null),
                t && (this.subscription = t.subscribe(() => this.updateSequence()));
            }
            get sequenceValue() {
              return this.sequence$.getValue();
            }
            ngOnDestroy() {
              var t;
              this.sequence$.next(0), null === (t = this.subscription) || void 0 === t || t.unsubscribe();
            }
            updateSequence() {
              this.sequence$.next(this.sequenceValue + 1);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(s.e, 8));
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        O = (() => {
          class t {
            constructor(e, n, i) {
              (t.store = e.get(s.e)),
                (t.ngZone = e.get(r.B)),
                (t.factory = n),
                (t.context = i),
                (t.computed = e.get(k));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(r.t), r.fc(o.d), r.fc(o.c));
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            (t.store = null),
            (t.computed = null),
            (t.context = null),
            (t.factory = null),
            (t.ngZone = null),
            t
          );
        })(),
        S = (() => {
          class t {
            constructor() {
              t.statesCachedMeta.clear();
            }
            static createStateContext(t) {
              return O.context.createStateContext(t);
            }
            static ensureMappedState(e) {
              if (!O.factory || !e) throw new Error(i.c.NGXS_DATA_MODULE_EXCEPTION);
              return (e.name ? t.statesCachedMeta.get(e.name) : null) || t.ensureMeta(e);
            }
            static getRepositoryByInstance(e) {
              const n = x(t.getStateClassByInstance(e)) || null;
              if (!n) throw new Error(i.c.NGXS_DATA_STATE_DECORATOR);
              return n;
            }
            static getStateClassByInstance(t) {
              return (t || {}).constructor;
            }
            static clearMetaByInstance(e) {
              const n = t.getRepositoryByInstance(e);
              (n.stateMeta.actions = {}), (n.operations = {});
            }
            static createPayload(t, e) {
              const n = {},
                i = Array.from(t);
              for (let r = 0; r < i.length; r++)
                (null == e ? void 0 : e.getPayloadTypeByIndex(r)) &&
                  (n[null == e ? void 0 : e.getPayloadTypeByIndex(r)] = i[r]);
              return Object.keys(n).length > 0 ? n : null;
            }
            static createAction(e, n, i) {
              const r = t.createPayload(n, i);
              var s;
              return new ((s = e.type),
              class {
                constructor(t) {
                  t &&
                    Object.keys(t).forEach((e) => {
                      this[e] = t[e];
                    });
                }
                static get type() {
                  return s;
                }
              })(r);
            }
            static ensureMeta(e) {
              var n;
              const i = e.name
                ? null === (n = O.factory.states) || void 0 === n
                  ? void 0
                  : n.find((t) => t.name === e.name)
                : null;
              return i && e.name && t.statesCachedMeta.set(e.name, i), i;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            (t.statesCachedMeta = new Map()),
            t
          );
        })();
      function E(t) {
        return {
          enumerable: !0,
          configurable: !0,
          get() {
            const e = x(t),
              n = S.ensureMappedState(e.stateMeta);
            return S.createStateContext(n);
          },
        };
      }
      function T(t, e) {
        (function (t) {
          var e;
          const n = null !== (e = x(t)) && void 0 !== e ? e : null;
          return (
            (!n || (null == n ? void 0 : n.stateClass) !== t) &&
              (function (t) {
                Object.defineProperty(t, i.d, {
                  writable: !0,
                  configurable: !0,
                  enumerable: !0,
                  value: { stateMeta: null, operations: {}, stateClass: t },
                });
              })(t),
            x(t)
          );
        })(t).stateMeta = e;
      }
      function I(t) {
        const e = x(t),
          n = (e.stateMeta && e.stateMeta.name) || null;
        if (n) {
          const e = `__${n}__selector`;
          Object.defineProperties(t.prototype, {
            [e]: { writable: !0, enumerable: !1, configurable: !0 },
            state$: {
              enumerable: !0,
              configurable: !0,
              get() {
                if (this[e]) return this[e];
                if (!O.store) throw new Error(i.c.NGXS_DATA_MODULE_EXCEPTION);
                return (
                  (this[e] = O.store.select(t).pipe(
                    Object(u.a)((t) => (Object(r.bb)() ? C(t) : t)),
                    Object(h.a)({ refCount: !0, bufferSize: 1 })
                  )),
                  this[e]
                );
              },
            },
          });
        }
      }
      function A(t, e) {
        if (t.hasOwnProperty('prototype')) throw new Error(i.c.NGXS_DATA_STATIC_ACTION);
        if (void 0 === e) throw new Error(i.c.NGXS_DATA_ACTION);
      }
      function D() {
        if (!O.ngZone) throw new Error(i.c.NGXS_DATA_MODULE_EXCEPTION);
      }
      function j(t, e) {
        return Object(c.a)([t, e]).pipe(Object(u.a)((t) => t.pop()));
      }
      class R extends Error {
        constructor(t, e) {
          super(`An argument with the name '${t}' already exists in the method '${e}'`);
        }
      }
      class P {
        constructor() {
          (this.payloadMap = new Map()), (this.argumentMap = new Map());
        }
        getPayloadTypeByIndex(t) {
          var e;
          return null !== (e = this.payloadMap.get(t)) && void 0 !== e ? e : null;
        }
        getArgumentNameByIndex(t) {
          var e;
          return null !== (e = this.argumentMap.get(t)) && void 0 !== e ? e : null;
        }
        createPayloadType(t, e, n) {
          this.checkDuplicateName(t, e), this.payloadMap.set(n, t), this.payloadMap.set(t, t);
        }
        createArgumentName(t, e, n) {
          this.checkDuplicateName(t, e), this.argumentMap.set(n, t), this.argumentMap.set(t, t);
        }
        checkDuplicateName(t, e) {
          if (this.argumentMap.has(t) || this.payloadMap.has(t)) throw new R(t, e);
        }
      }
      function M(t) {
        return t[i.a];
      }
      function F(t, e) {
        const n = t[e];
        return (
          M(n) || Object.defineProperties(n, { [i.a]: { enumerable: !0, configurable: !0, value: new P() } }), M(n)
        );
      }
      function N(t, e) {
        var n;
        if (!(null === (n = Object.getOwnPropertyDescriptor(t, e)) || void 0 === n ? void 0 : n.get))
          throw new Error(i.c.NGXS_COMPUTED_DECORATOR + `\nExample: \n@Computed() get ${e.toString()}() { \n\t .. \n}`);
      }
      function V(t) {
        if (!t) throw new Error(i.c.NGXS_DATA_STATE_DECORATOR);
        return Object.assign(Object.assign({}, t), {
          getState: () => (Object(r.bb)() ? C(t.getState()) : t.getState()),
          setState(e) {
            t.setState(e);
          },
          patchState(e) {
            t.patchState(e);
          },
        });
      }
      function L() {
        return `__${i.b}__`;
      }
      function H(t) {
        var e;
        return null !== (e = t[L()]) && void 0 !== e ? e : null;
      }
      function z(t) {
        return (
          H(t) || Object.defineProperties(t, { [L()]: { enumerable: !0, configurable: !0, value: new WeakMap() } }),
          H(t)
        );
      }
      function B(t) {
        return Object(r.bb)() ? C(t) : t;
      }
      function U() {
        var t, e;
        return null !==
          (e = null === (t = null == O ? void 0 : O.computed) || void 0 === t ? void 0 : t.sequenceValue) &&
          void 0 !== e
          ? e
          : 0;
      }
      function W(t) {
        let e = !1;
        return Object(l.a)(t) && (e = !0), e;
      }
    },
    tT4Q: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('fXoL'),
        r = n('JbvS'),
        s = n('bTqV'),
        o = n('NFeN'),
        a = n('ofXK');
      function c(t, e) {
        if (
          (1 & t &&
            (i.bc(0, 'button', 6),
            i.jc('click', function () {
              return e.$implicit.func();
            }),
            i.bc(1, 'mat-icon'),
            i.Mc(2),
            i.ac(),
            i.ac()),
          2 & t)
        ) {
          const t = e.$implicit;
          i.Ib(2), i.Nc(t.icon);
        }
      }
      let l = (() => {
        class t {
          constructor() {
            (this._fixed = !1),
              (this.open = !1),
              (this.spin = !1),
              (this.direction = 'up'),
              (this.animationMode = 'fling');
          }
          get fixed() {
            return this._fixed;
          }
          set fixed(t) {
            (this._fixed = t), this._fixed && (this.open = !0);
          }
          trackByFn(t, e) {
            return t;
          }
          ngOnInit() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-fab-speed-deal']],
            inputs: { items: 'items', trigger: 'trigger' },
            decls: 8,
            vars: 7,
            consts: [
              [3, 'direction', 'animationMode', 'fixed'],
              ['myFab', ''],
              [3, 'spin'],
              ['mat-fab', '', 3, 'click'],
              [1, 'spin360'],
              ['mat-mini-fab', '', 3, 'click', 4, 'ngFor', 'ngForOf', 'ngForTrackBy'],
              ['mat-mini-fab', '', 3, 'click'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.bc(0, 'eco-fab-speed-dial', 0, 1),
                i.bc(2, 'eco-fab-speed-dial-trigger', 2),
                i.bc(3, 'button', 3),
                i.jc('click', function () {
                  return e.trigger.func();
                }),
                i.bc(4, 'mat-icon', 4),
                i.Mc(5),
                i.ac(),
                i.ac(),
                i.ac(),
                i.bc(6, 'eco-fab-speed-dial-actions'),
                i.Kc(7, c, 3, 1, 'button', 5),
                i.ac(),
                i.ac()),
                2 & t &&
                  (i.vc('direction', e.direction)('animationMode', e.animationMode)('fixed', e.fixed),
                  i.Ib(2),
                  i.vc('spin', e.spin),
                  i.Ib(3),
                  i.Nc(e.trigger.icon),
                  i.Ib(2),
                  i.vc('ngForOf', e.items)('ngForTrackBy', e.trackByFn));
            },
            directives: [r.b, r.d, s.a, o.a, r.a, a.k],
            styles: [
              'eco-fab-speed-dial[_ngcontent-%COMP%]{position:fixed;bottom:30px;right:30px}eco-fab-speed-dial[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#fff}eco-fab-speed-dial[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:#000}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    'tk/3': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return T;
      }),
        n.d(e, 'b', function () {
          return S;
        }),
        n.d(e, 'c', function () {
          return z;
        }),
        n.d(e, 'd', function () {
          return C;
        });
      var i = n('fXoL'),
        r = n('LRne'),
        s = n('HDdC'),
        o = n('bOdf'),
        a = n('pLZG'),
        c = n('lJxs'),
        l = n('ofXK');
      class u {}
      class h {}
      class d {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  'string' == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split('\n').forEach((t) => {
                            const e = t.indexOf(':');
                            if (e > 0) {
                              const n = t.slice(0, e),
                                i = n.toLowerCase(),
                                r = t.slice(e + 1).trim();
                              this.maybeSetNormalizedName(n, i),
                                this.headers.has(i) ? this.headers.get(i).push(r) : this.headers.set(i, [r]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let n = t[e];
                            const i = e.toLowerCase();
                            'string' == typeof n && (n = [n]),
                              n.length > 0 && (this.headers.set(i, n), this.maybeSetNormalizedName(e, i));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: 'a' });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: 's' });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: 'd' });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof d ? this.copyFrom(this.lazyInit) : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate && (this.lazyUpdate.forEach((t) => this.applyUpdate(t)), (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)), this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new d();
          return (
            (e.lazyInit = this.lazyInit && this.lazyInit instanceof d ? this.lazyInit : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case 'a':
            case 's':
              let n = t.value;
              if (('string' == typeof n && (n = [n]), 0 === n.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const i = ('a' === t.op ? this.headers.get(e) : void 0) || [];
              i.push(...n), this.headers.set(e, i);
              break;
            case 'd':
              const r = t.value;
              if (r) {
                let t = this.headers.get(e);
                if (!t) return;
                (t = t.filter((t) => -1 === r.indexOf(t))),
                  0 === t.length ? (this.headers.delete(e), this.normalizedNames.delete(e)) : this.headers.set(e, t);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) => t(this.normalizedNames.get(e), this.headers.get(e)));
        }
      }
      class p {
        encodeKey(t) {
          return f(t);
        }
        encodeValue(t) {
          return f(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      function f(t) {
        return encodeURIComponent(t)
          .replace(/%40/gi, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/gi, '$')
          .replace(/%2C/gi, ',')
          .replace(/%3B/gi, ';')
          .replace(/%2B/gi, '+')
          .replace(/%3D/gi, '=')
          .replace(/%3F/gi, '?')
          .replace(/%2F/gi, '/');
      }
      class m {
        constructor(t = {}) {
          if (((this.updates = null), (this.cloneFrom = null), (this.encoder = t.encoder || new p()), t.fromString)) {
            if (t.fromObject) throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function (t, e) {
              const n = new Map();
              return (
                t.length > 0 &&
                  t.split('&').forEach((t) => {
                    const i = t.indexOf('='),
                      [r, s] =
                        -1 == i ? [e.decodeKey(t), ''] : [e.decodeKey(t.slice(0, i)), e.decodeValue(t.slice(i + 1))],
                      o = n.get(r) || [];
                    o.push(s), n.set(r, o);
                  }),
                n
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const n = t.fromObject[e];
                  this.map.set(e, Array.isArray(n) ? n : [n]);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: 'a' });
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: 's' });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((t) => e + '=' + this.encoder.encodeValue(t))
                  .join('&');
              })
              .filter((t) => '' !== t)
              .join('&')
          );
        }
        clone(t) {
          const e = new m({ encoder: this.encoder });
          return (e.cloneFrom = this.cloneFrom || this), (e.updates = (this.updates || []).concat([t])), e;
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom.keys().forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case 'a':
                  case 's':
                    const e = ('a' === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(t.value), this.map.set(t.param, e);
                    break;
                  case 'd':
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let e = this.map.get(t.param) || [];
                      const n = e.indexOf(t.value);
                      -1 !== n && e.splice(n, 1), e.length > 0 ? this.map.set(t.param, e) : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      function g(t) {
        return 'undefined' != typeof ArrayBuffer && t instanceof ArrayBuffer;
      }
      function b(t) {
        return 'undefined' != typeof Blob && t instanceof Blob;
      }
      function _(t) {
        return 'undefined' != typeof FormData && t instanceof FormData;
      }
      class y {
        constructor(t, e, n, i) {
          let r;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = t.toUpperCase()),
            (function (t) {
              switch (t) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || i
              ? ((this.body = void 0 !== n ? n : null), (r = i))
              : (r = n),
            r &&
              ((this.reportProgress = !!r.reportProgress),
              (this.withCredentials = !!r.withCredentials),
              r.responseType && (this.responseType = r.responseType),
              r.headers && (this.headers = r.headers),
              r.params && (this.params = r.params)),
            this.headers || (this.headers = new d()),
            this.params)
          ) {
            const t = this.params.toString();
            if (0 === t.length) this.urlWithParams = e;
            else {
              const n = e.indexOf('?');
              this.urlWithParams = e + (-1 === n ? '?' : n < e.length - 1 ? '&' : '') + t;
            }
          } else (this.params = new m()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : g(this.body) || b(this.body) || _(this.body) || 'string' == typeof this.body
            ? this.body
            : this.body instanceof m
            ? this.body.toString()
            : 'object' == typeof this.body || 'boolean' == typeof this.body || Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || _(this.body)
            ? null
            : b(this.body)
            ? this.body.type || null
            : g(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof m
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body || 'number' == typeof this.body || Array.isArray(this.body)
            ? 'application/json'
            : null;
        }
        clone(t = {}) {
          const e = t.method || this.method,
            n = t.url || this.url,
            i = t.responseType || this.responseType,
            r = void 0 !== t.body ? t.body : this.body,
            s = void 0 !== t.withCredentials ? t.withCredentials : this.withCredentials,
            o = void 0 !== t.reportProgress ? t.reportProgress : this.reportProgress;
          let a = t.headers || this.headers,
            c = t.params || this.params;
          return (
            void 0 !== t.setHeaders && (a = Object.keys(t.setHeaders).reduce((e, n) => e.set(n, t.setHeaders[n]), a)),
            t.setParams && (c = Object.keys(t.setParams).reduce((e, n) => e.set(n, t.setParams[n]), c)),
            new y(e, n, r, { params: c, headers: a, reportProgress: o, responseType: i, withCredentials: s })
          );
        }
      }
      const v = (function () {
        var t = { Sent: 0, UploadProgress: 1, ResponseHeader: 2, DownloadProgress: 3, Response: 4, User: 5 };
        return (
          (t[t.Sent] = 'Sent'),
          (t[t.UploadProgress] = 'UploadProgress'),
          (t[t.ResponseHeader] = 'ResponseHeader'),
          (t[t.DownloadProgress] = 'DownloadProgress'),
          (t[t.Response] = 'Response'),
          (t[t.User] = 'User'),
          t
        );
      })();
      class w {
        constructor(t, e = 200, n = 'OK') {
          (this.headers = t.headers || new d()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || n),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class x extends w {
        constructor(t = {}) {
          super(t), (this.type = v.ResponseHeader);
        }
        clone(t = {}) {
          return new x({
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class C extends w {
        constructor(t = {}) {
          super(t), (this.type = v.Response), (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new C({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class k extends w {
        constructor(t) {
          super(t, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${t.url || '(unknown url)'}`
                : `Http failure response for ${t.url || '(unknown url)'}: ${t.status} ${t.statusText}`),
            (this.error = t.error || null);
        }
      }
      function O(t, e) {
        return {
          body: e,
          headers: t.headers,
          observe: t.observe,
          params: t.params,
          reportProgress: t.reportProgress,
          responseType: t.responseType,
          withCredentials: t.withCredentials,
        };
      }
      let S = (() => {
        class t {
          constructor(t) {
            this.handler = t;
          }
          request(t, e, n = {}) {
            let i;
            if (t instanceof y) i = t;
            else {
              let r = void 0;
              r = n.headers instanceof d ? n.headers : new d(n.headers);
              let s = void 0;
              n.params && (s = n.params instanceof m ? n.params : new m({ fromObject: n.params })),
                (i = new y(t, e, void 0 !== n.body ? n.body : null, {
                  headers: r,
                  params: s,
                  reportProgress: n.reportProgress,
                  responseType: n.responseType || 'json',
                  withCredentials: n.withCredentials,
                }));
            }
            const s = Object(r.a)(i).pipe(Object(o.a)((t) => this.handler.handle(t)));
            if (t instanceof y || 'events' === n.observe) return s;
            const l = s.pipe(Object(a.a)((t) => t instanceof C));
            switch (n.observe || 'body') {
              case 'body':
                switch (i.responseType) {
                  case 'arraybuffer':
                    return l.pipe(
                      Object(c.a)((t) => {
                        if (null !== t.body && !(t.body instanceof ArrayBuffer))
                          throw new Error('Response is not an ArrayBuffer.');
                        return t.body;
                      })
                    );
                  case 'blob':
                    return l.pipe(
                      Object(c.a)((t) => {
                        if (null !== t.body && !(t.body instanceof Blob)) throw new Error('Response is not a Blob.');
                        return t.body;
                      })
                    );
                  case 'text':
                    return l.pipe(
                      Object(c.a)((t) => {
                        if (null !== t.body && 'string' != typeof t.body) throw new Error('Response is not a string.');
                        return t.body;
                      })
                    );
                  case 'json':
                  default:
                    return l.pipe(Object(c.a)((t) => t.body));
                }
              case 'response':
                return l;
              default:
                throw new Error(`Unreachable: unhandled observe type ${n.observe}}`);
            }
          }
          delete(t, e = {}) {
            return this.request('DELETE', t, e);
          }
          get(t, e = {}) {
            return this.request('GET', t, e);
          }
          head(t, e = {}) {
            return this.request('HEAD', t, e);
          }
          jsonp(t, e) {
            return this.request('JSONP', t, {
              params: new m().append(e, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(t, e = {}) {
            return this.request('OPTIONS', t, e);
          }
          patch(t, e, n = {}) {
            return this.request('PATCH', t, O(n, e));
          }
          post(t, e, n = {}) {
            return this.request('POST', t, O(n, e));
          }
          put(t, e, n = {}) {
            return this.request('PUT', t, O(n, e));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(u));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class E {
        constructor(t, e) {
          (this.next = t), (this.interceptor = e);
        }
        handle(t) {
          return this.interceptor.intercept(t, this.next);
        }
      }
      const T = new i.s('HTTP_INTERCEPTORS');
      let I = (() => {
        class t {
          intercept(t, e) {
            return e.handle(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const A = /^\)\]\}',?\n/;
      class D {}
      let j = (() => {
          class t {
            constructor() {}
            build() {
              return new XMLHttpRequest();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        R = (() => {
          class t {
            constructor(t) {
              this.xhrFactory = t;
            }
            handle(t) {
              if ('JSONP' === t.method)
                throw new Error('Attempted to construct Jsonp request without JsonpClientModule installed.');
              return new s.a((e) => {
                const n = this.xhrFactory.build();
                if (
                  (n.open(t.method, t.urlWithParams),
                  t.withCredentials && (n.withCredentials = !0),
                  t.headers.forEach((t, e) => n.setRequestHeader(t, e.join(','))),
                  t.headers.has('Accept') || n.setRequestHeader('Accept', 'application/json, text/plain, */*'),
                  !t.headers.has('Content-Type'))
                ) {
                  const e = t.detectContentTypeHeader();
                  null !== e && n.setRequestHeader('Content-Type', e);
                }
                if (t.responseType) {
                  const e = t.responseType.toLowerCase();
                  n.responseType = 'json' !== e ? e : 'text';
                }
                const i = t.serializeBody();
                let r = null;
                const s = () => {
                    if (null !== r) return r;
                    const e = 1223 === n.status ? 204 : n.status,
                      i = n.statusText || 'OK',
                      s = new d(n.getAllResponseHeaders()),
                      o =
                        (function (t) {
                          return 'responseURL' in t && t.responseURL
                            ? t.responseURL
                            : /^X-Request-URL:/m.test(t.getAllResponseHeaders())
                            ? t.getResponseHeader('X-Request-URL')
                            : null;
                        })(n) || t.url;
                    return (r = new x({ headers: s, status: e, statusText: i, url: o })), r;
                  },
                  o = () => {
                    let { headers: i, status: r, statusText: o, url: a } = s(),
                      c = null;
                    204 !== r && (c = void 0 === n.response ? n.responseText : n.response),
                      0 === r && (r = c ? 200 : 0);
                    let l = r >= 200 && r < 300;
                    if ('json' === t.responseType && 'string' == typeof c) {
                      const t = c;
                      c = c.replace(A, '');
                      try {
                        c = '' !== c ? JSON.parse(c) : null;
                      } catch (u) {
                        (c = t), l && ((l = !1), (c = { error: u, text: c }));
                      }
                    }
                    l
                      ? (e.next(new C({ body: c, headers: i, status: r, statusText: o, url: a || void 0 })),
                        e.complete())
                      : e.error(new k({ error: c, headers: i, status: r, statusText: o, url: a || void 0 }));
                  },
                  a = (t) => {
                    const { url: i } = s(),
                      r = new k({
                        error: t,
                        status: n.status || 0,
                        statusText: n.statusText || 'Unknown Error',
                        url: i || void 0,
                      });
                    e.error(r);
                  };
                let c = !1;
                const l = (i) => {
                    c || (e.next(s()), (c = !0));
                    let r = { type: v.DownloadProgress, loaded: i.loaded };
                    i.lengthComputable && (r.total = i.total),
                      'text' === t.responseType && n.responseText && (r.partialText = n.responseText),
                      e.next(r);
                  },
                  u = (t) => {
                    let n = { type: v.UploadProgress, loaded: t.loaded };
                    t.lengthComputable && (n.total = t.total), e.next(n);
                  };
                return (
                  n.addEventListener('load', o),
                  n.addEventListener('error', a),
                  t.reportProgress &&
                    (n.addEventListener('progress', l),
                    null !== i && n.upload && n.upload.addEventListener('progress', u)),
                  n.send(i),
                  e.next({ type: v.Sent }),
                  () => {
                    n.removeEventListener('error', a),
                      n.removeEventListener('load', o),
                      t.reportProgress &&
                        (n.removeEventListener('progress', l),
                        null !== i && n.upload && n.upload.removeEventListener('progress', u)),
                      n.abort();
                  }
                );
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(D));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const P = new i.s('XSRF_COOKIE_NAME'),
        M = new i.s('XSRF_HEADER_NAME');
      class F {}
      let N = (() => {
          class t {
            constructor(t, e, n) {
              (this.doc = t),
                (this.platform = e),
                (this.cookieName = n),
                (this.lastCookieString = ''),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ('server' === this.platform) return null;
              const t = this.doc.cookie || '';
              return (
                t !== this.lastCookieString &&
                  (this.parseCount++, (this.lastToken = Object(l.B)(t, this.cookieName)), (this.lastCookieString = t)),
                this.lastToken
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(l.d), i.fc(i.D), i.fc(P));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        V = (() => {
          class t {
            constructor(t, e) {
              (this.tokenService = t), (this.headerName = e);
            }
            intercept(t, e) {
              const n = t.url.toLowerCase();
              if ('GET' === t.method || 'HEAD' === t.method || n.startsWith('http://') || n.startsWith('https://'))
                return e.handle(t);
              const i = this.tokenService.getToken();
              return (
                null === i ||
                  t.headers.has(this.headerName) ||
                  (t = t.clone({ headers: t.headers.set(this.headerName, i) })),
                e.handle(t)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(F), i.fc(M));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        L = (() => {
          class t {
            constructor(t, e) {
              (this.backend = t), (this.injector = e), (this.chain = null);
            }
            handle(t) {
              if (null === this.chain) {
                const t = this.injector.get(T, []);
                this.chain = t.reduceRight((t, e) => new E(t, e), this.backend);
              }
              return this.chain.handle(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(h), i.fc(i.t));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        H = (() => {
          class t {
            static disable() {
              return { ngModule: t, providers: [{ provide: V, useClass: I }] };
            }
            static withOptions(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.cookieName ? { provide: P, useValue: e.cookieName } : [],
                  e.headerName ? { provide: M, useValue: e.headerName } : [],
                ],
              };
            }
          }
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [
                V,
                { provide: T, useExisting: V, multi: !0 },
                { provide: F, useClass: N },
                { provide: P, useValue: 'XSRF-TOKEN' },
                { provide: M, useValue: 'X-XSRF-TOKEN' },
              ],
            })),
            t
          );
        })(),
        z = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [
                S,
                { provide: u, useClass: L },
                R,
                { provide: h, useExisting: R },
                j,
                { provide: D, useExisting: j },
              ],
              imports: [[H.withOptions({ cookieName: 'XSRF-TOKEN', headerName: 'X-XSRF-TOKEN' })]],
            })),
            t
          );
        })();
    },
    tmyf: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return d;
      });
      var i = n('36jV'),
        r = n('Ll0r'),
        s = n('tnIR'),
        o = n('3x0Y'),
        a = n('nWYq'),
        c = n('0AZg'),
        l = n('alHb'),
        u = n('F454'),
        h = n('81e5');
      n.d(e, 'b', function () {
        return r.a;
      }),
        n.d(e, 'c', function () {
          return s.a;
        }),
        n.d(e, 'd', function () {
          return o.a;
        }),
        n.d(e, 'i', function () {
          return a.a;
        }),
        n.d(e, 'j', function () {
          return c.a;
        }),
        n.d(e, 'h', function () {
          return l.a;
        }),
        n.d(e, 'g', function () {
          return u.a;
        }),
        n.d(e, 'e', function () {
          return i.a;
        }),
        n.d(e, 'f', function () {
          return h.a;
        });
      const d = [r.a, s.a, o.a, a.a, c.a, l.a, u.a, i.a, h.a];
    },
    tnIR: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      });
      var i = n('0FS3'),
        r = n('fXoL'),
        s = n('qFsG'),
        o = n('iadO'),
        a = n('3Pt+');
      let c = (() => {
        class t extends i.c {}
        return (
          (t.ɵfac = function (e) {
            return l(e || t);
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['app-formly-date-picker']],
            features: [r.Fb],
            decls: 3,
            vars: 3,
            consts: [
              ['matInput', '', 'readonly', '', 3, 'matDatepicker', 'formControl', 'formlyAttributes', 'click'],
              ['datePicker', ''],
            ],
            template: function (t, e) {
              if (1 & t) {
                const t = r.cc();
                r.bc(0, 'input', 0),
                  r.jc('click', function () {
                    return r.Dc(t), r.Bc(2).open();
                  }),
                  r.ac(),
                  r.Wb(1, 'mat-datepicker', null, 1);
              }
              if (2 & t) {
                const t = r.Bc(2);
                r.vc('matDatepicker', t)('formControl', e.formControl)('formlyAttributes', e.field);
              }
            },
            directives: [s.b, o.b, a.c, a.n, a.f, i.e, o.a],
            styles: [''],
          })),
          t
        );
      })();
      const l = r.dc(c);
    },
    tyNb: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return Qt;
      }),
        n.d(e, 'b', function () {
          return bn;
        }),
        n.d(e, 'c', function () {
          return an;
        }),
        n.d(e, 'd', function () {
          return hn;
        }),
        n.d(e, 'e', function () {
          return ln;
        }),
        n.d(e, 'f', function () {
          return On;
        }),
        n.d(e, 'g', function () {
          return fn;
        });
      var i = n('ofXK'),
        r = n('fXoL'),
        s = n('LRne'),
        o = n('Cfvw'),
        a = n('2Vo4'),
        c = n('HDdC');
      const l = (() => {
        function t() {
          return Error.call(this), (this.message = 'no elements in sequence'), (this.name = 'EmptyError'), this;
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      var u = n('itXk'),
        h = n('NXyV'),
        d = n('XNiG'),
        p = n('EY2u'),
        f = n('lJxs'),
        m = n('0EUg'),
        g = n('pLZG'),
        b = n('7o/Q'),
        _ = n('4I5i');
      function y(t) {
        return function (e) {
          return 0 === t ? Object(p.b)() : e.lift(new v(t));
        };
      }
      class v {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new _.a();
        }
        call(t, e) {
          return e.subscribe(new w(t, this.total));
        }
      }
      class w extends b.a {
        constructor(t, e) {
          super(t), (this.total = e), (this.ring = new Array()), (this.count = 0);
        }
        _next(t) {
          const e = this.ring,
            n = this.total,
            i = this.count++;
          e.length < n ? e.push(t) : (e[i % n] = t);
        }
        _complete() {
          const t = this.destination;
          let e = this.count;
          if (e > 0) {
            const n = this.count >= this.total ? this.total : this.count,
              i = this.ring;
            for (let r = 0; r < n; r++) {
              const r = e++ % n;
              t.next(i[r]);
            }
          }
          t.complete();
        }
      }
      function x(t = O) {
        return (e) => e.lift(new C(t));
      }
      class C {
        constructor(t) {
          this.errorFactory = t;
        }
        call(t, e) {
          return e.subscribe(new k(t, this.errorFactory));
        }
      }
      class k extends b.a {
        constructor(t, e) {
          super(t), (this.errorFactory = e), (this.hasValue = !1);
        }
        _next(t) {
          (this.hasValue = !0), this.destination.next(t);
        }
        _complete() {
          if (this.hasValue) return this.destination.complete();
          {
            let e;
            try {
              e = this.errorFactory();
            } catch (t) {
              e = t;
            }
            this.destination.error(e);
          }
        }
      }
      function O() {
        return new l();
      }
      var S = n('xbPD'),
        E = n('SpAZ');
      function T(t, e) {
        const n = arguments.length >= 2;
        return (i) => i.pipe(t ? Object(g.a)((e, n) => t(e, n, i)) : E.a, y(1), n ? Object(S.a)(e) : x(() => new l()));
      }
      var I = n('JIr8'),
        A = n('IzEk');
      function D(t, e) {
        const n = arguments.length >= 2;
        return (i) =>
          i.pipe(t ? Object(g.a)((e, n) => t(e, n, i)) : E.a, Object(A.a)(1), n ? Object(S.a)(e) : x(() => new l()));
      }
      var j = n('5+tZ');
      class R {
        constructor(t, e, n) {
          (this.predicate = t), (this.thisArg = e), (this.source = n);
        }
        call(t, e) {
          return e.subscribe(new P(t, this.predicate, this.thisArg, this.source));
        }
      }
      class P extends b.a {
        constructor(t, e, n, i) {
          super(t),
            (this.predicate = e),
            (this.thisArg = n),
            (this.source = i),
            (this.index = 0),
            (this.thisArg = n || this);
        }
        notifyComplete(t) {
          this.destination.next(t), this.destination.complete();
        }
        _next(t) {
          let e = !1;
          try {
            e = this.predicate.call(this.thisArg, t, this.index++, this.source);
          } catch (n) {
            return void this.destination.error(n);
          }
          e || this.notifyComplete(!1);
        }
        _complete() {
          this.notifyComplete(!0);
        }
      }
      var M = n('eIep'),
        F = n('JX91');
      function N(t, e) {
        let n = !1;
        return (
          arguments.length >= 2 && (n = !0),
          function (i) {
            return i.lift(new V(t, e, n));
          }
        );
      }
      class V {
        constructor(t, e, n = !1) {
          (this.accumulator = t), (this.seed = e), (this.hasSeed = n);
        }
        call(t, e) {
          return e.subscribe(new L(t, this.accumulator, this.seed, this.hasSeed));
        }
      }
      class L extends b.a {
        constructor(t, e, n, i) {
          super(t), (this.accumulator = e), (this._seed = n), (this.hasSeed = i), (this.index = 0);
        }
        get seed() {
          return this._seed;
        }
        set seed(t) {
          (this.hasSeed = !0), (this._seed = t);
        }
        _next(t) {
          if (this.hasSeed) return this._tryNext(t);
          (this.seed = t), this.destination.next(t);
        }
        _tryNext(t) {
          const e = this.index++;
          let n;
          try {
            n = this.accumulator(this.seed, t, e);
          } catch (i) {
            this.destination.error(i);
          }
          (this.seed = n), this.destination.next(n);
        }
      }
      var H = n('bOdf'),
        z = n('mCNh'),
        B = n('vkgz'),
        U = n('nYR2'),
        W = n('bHdf');
      class $ {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class q extends $ {
        constructor(t, e, n = 'imperative', i = null) {
          super(t, e), (this.navigationTrigger = n), (this.restoredState = i);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class G extends $ {
        constructor(t, e, n) {
          super(t, e), (this.urlAfterRedirects = n);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class X extends $ {
        constructor(t, e, n) {
          super(t, e), (this.reason = n);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class K extends $ {
        constructor(t, e, n) {
          super(t, e), (this.error = n);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class Y extends $ {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Z extends $ {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Q extends $ {
        constructor(t, e, n, i, r) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i), (this.shouldActivate = r);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class J extends $ {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class tt extends $ {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class et {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class nt {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class it {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class rt {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class st {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class ot {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class at {
        constructor(t, e, n) {
          (this.routerEvent = t), (this.position = e), (this.anchor = n);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let ct = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = r.Pb({
            type: t,
            selectors: [['ng-component']],
            decls: 1,
            vars: 0,
            template: function (t, e) {
              1 & t && r.Wb(0, 'router-outlet');
            },
            directives: function () {
              return [fn];
            },
            encapsulation: 2,
          })),
          t
        );
      })();
      class lt {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return this.params.hasOwnProperty(t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ut(t) {
        return new lt(t);
      }
      function ht(t) {
        const e = Error('NavigationCancelingError: ' + t);
        return (e.ngNavigationCancelingError = !0), e;
      }
      function dt(t, e, n) {
        const i = n.path.split('/');
        if (i.length > t.length) return null;
        if ('full' === n.pathMatch && (e.hasChildren() || i.length < t.length)) return null;
        const r = {};
        for (let s = 0; s < i.length; s++) {
          const e = i[s],
            n = t[s];
          if (e.startsWith(':')) r[e.substring(1)] = n;
          else if (e !== n.path) return null;
        }
        return { consumed: t.slice(0, i.length), posParams: r };
      }
      class pt {
        constructor(t, e) {
          (this.routes = t), (this.module = e);
        }
      }
      function ft(t, e = '') {
        for (let n = 0; n < t.length; n++) {
          const i = t[n];
          mt(i, gt(e, i));
        }
      }
      function mt(t, e) {
        if (!t)
          throw new Error(
            `\n      Invalid configuration of route '${e}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `
          );
        if (Array.isArray(t)) throw new Error(`Invalid configuration of route '${e}': Array cannot be specified`);
        if (!t.component && !t.children && !t.loadChildren && t.outlet && 'primary' !== t.outlet)
          throw new Error(
            `Invalid configuration of route '${e}': a componentless route without children or loadChildren cannot have a named outlet set`
          );
        if (t.redirectTo && t.children)
          throw new Error(`Invalid configuration of route '${e}': redirectTo and children cannot be used together`);
        if (t.redirectTo && t.loadChildren)
          throw new Error(`Invalid configuration of route '${e}': redirectTo and loadChildren cannot be used together`);
        if (t.children && t.loadChildren)
          throw new Error(`Invalid configuration of route '${e}': children and loadChildren cannot be used together`);
        if (t.redirectTo && t.component)
          throw new Error(`Invalid configuration of route '${e}': redirectTo and component cannot be used together`);
        if (t.path && t.matcher)
          throw new Error(`Invalid configuration of route '${e}': path and matcher cannot be used together`);
        if (void 0 === t.redirectTo && !t.component && !t.children && !t.loadChildren)
          throw new Error(
            `Invalid configuration of route '${e}'. One of the following must be provided: component, redirectTo, children or loadChildren`
          );
        if (void 0 === t.path && void 0 === t.matcher)
          throw new Error(
            `Invalid configuration of route '${e}': routes must have either a path or a matcher specified`
          );
        if ('string' == typeof t.path && '/' === t.path.charAt(0))
          throw new Error(`Invalid configuration of route '${e}': path cannot start with a slash`);
        if ('' === t.path && void 0 !== t.redirectTo && void 0 === t.pathMatch)
          throw new Error(
            `Invalid configuration of route '{path: "${e}", redirectTo: "${t.redirectTo}"}': please provide 'pathMatch'. The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`
          );
        if (void 0 !== t.pathMatch && 'full' !== t.pathMatch && 'prefix' !== t.pathMatch)
          throw new Error(`Invalid configuration of route '${e}': pathMatch can only be set to 'prefix' or 'full'`);
        t.children && ft(t.children, e);
      }
      function gt(t, e) {
        return e ? (t || e.path ? (t && !e.path ? `${t}/` : !t && e.path ? e.path : `${t}/${e.path}`) : '') : t;
      }
      function bt(t) {
        const e = t.children && t.children.map(bt),
          n = e ? Object.assign(Object.assign({}, t), { children: e }) : Object.assign({}, t);
        return !n.component && (e || n.loadChildren) && n.outlet && 'primary' !== n.outlet && (n.component = ct), n;
      }
      function _t(t, e) {
        const n = Object.keys(t),
          i = Object.keys(e);
        if (!n || !i || n.length != i.length) return !1;
        let r;
        for (let s = 0; s < n.length; s++) if (((r = n[s]), !yt(t[r], e[r]))) return !1;
        return !0;
      }
      function yt(t, e) {
        return Array.isArray(t) && Array.isArray(e)
          ? t.length == e.length && t.every((t) => e.indexOf(t) > -1)
          : t === e;
      }
      function vt(t) {
        return Array.prototype.concat.apply([], t);
      }
      function wt(t) {
        return t.length > 0 ? t[t.length - 1] : null;
      }
      function xt(t, e) {
        for (const n in t) t.hasOwnProperty(n) && e(t[n], n);
      }
      function Ct(t) {
        return Object(r.yb)(t) ? t : Object(r.zb)(t) ? Object(o.a)(Promise.resolve(t)) : Object(s.a)(t);
      }
      function kt(t, e, n) {
        return n
          ? (function (t, e) {
              return _t(t, e);
            })(t.queryParams, e.queryParams) &&
              (function t(e, n) {
                if (!Tt(e.segments, n.segments)) return !1;
                if (e.numberOfChildren !== n.numberOfChildren) return !1;
                for (const i in n.children) {
                  if (!e.children[i]) return !1;
                  if (!t(e.children[i], n.children[i])) return !1;
                }
                return !0;
              })(t.root, e.root)
          : (function (t, e) {
              return Object.keys(e).length <= Object.keys(t).length && Object.keys(e).every((n) => yt(t[n], e[n]));
            })(t.queryParams, e.queryParams) &&
              (function t(e, n) {
                return (function e(n, i, r) {
                  if (n.segments.length > r.length) return !!Tt(n.segments.slice(0, r.length), r) && !i.hasChildren();
                  if (n.segments.length === r.length) {
                    if (!Tt(n.segments, r)) return !1;
                    for (const e in i.children) {
                      if (!n.children[e]) return !1;
                      if (!t(n.children[e], i.children[e])) return !1;
                    }
                    return !0;
                  }
                  {
                    const t = r.slice(0, n.segments.length),
                      s = r.slice(n.segments.length);
                    return !!Tt(n.segments, t) && !!n.children.primary && e(n.children.primary, i, s);
                  }
                })(e, n, n.segments);
              })(t.root, e.root);
      }
      class Ot {
        constructor(t, e, n) {
          (this.root = t), (this.queryParams = e), (this.fragment = n);
        }
        get queryParamMap() {
          return this._queryParamMap || (this._queryParamMap = ut(this.queryParams)), this._queryParamMap;
        }
        toString() {
          return jt.serialize(this);
        }
      }
      class St {
        constructor(t, e) {
          (this.segments = t), (this.children = e), (this.parent = null), xt(e, (t, e) => (t.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Rt(this);
        }
      }
      class Et {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return this._parameterMap || (this._parameterMap = ut(this.parameters)), this._parameterMap;
        }
        toString() {
          return Lt(this);
        }
      }
      function Tt(t, e) {
        return t.length === e.length && t.every((t, n) => t.path === e[n].path);
      }
      function It(t, e) {
        let n = [];
        return (
          xt(t.children, (t, i) => {
            'primary' === i && (n = n.concat(e(t, i)));
          }),
          xt(t.children, (t, i) => {
            'primary' !== i && (n = n.concat(e(t, i)));
          }),
          n
        );
      }
      class At {}
      class Dt {
        parse(t) {
          const e = new Wt(t);
          return new Ot(e.parseRootSegment(), e.parseQueryParams(), e.parseFragment());
        }
        serialize(t) {
          var e;
          return `${`/${(function t(e, n) {
            if (!e.hasChildren()) return Rt(e);
            if (n) {
              const n = e.children.primary ? t(e.children.primary, !1) : '',
                i = [];
              return (
                xt(e.children, (e, n) => {
                  'primary' !== n && i.push(`${n}:${t(e, !1)}`);
                }),
                i.length > 0 ? `${n}(${i.join('//')})` : n
              );
            }
            {
              const n = It(e, (n, i) => ('primary' === i ? [t(e.children.primary, !1)] : [`${i}:${t(n, !1)}`]));
              return `${Rt(e)}/(${n.join('//')})`;
            }
          })(t.root, !0)}`}${(function (t) {
            const e = Object.keys(t).map((e) => {
              const n = t[e];
              return Array.isArray(n) ? n.map((t) => `${Mt(e)}=${Mt(t)}`).join('&') : `${Mt(e)}=${Mt(n)}`;
            });
            return e.length ? `?${e.join('&')}` : '';
          })(t.queryParams)}${'string' == typeof t.fragment ? `#${((e = t.fragment), encodeURI(e))}` : ''}`;
        }
      }
      const jt = new Dt();
      function Rt(t) {
        return t.segments.map((t) => Lt(t)).join('/');
      }
      function Pt(t) {
        return encodeURIComponent(t)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function Mt(t) {
        return Pt(t).replace(/%3B/gi, ';');
      }
      function Ft(t) {
        return Pt(t).replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/%26/gi, '&');
      }
      function Nt(t) {
        return decodeURIComponent(t);
      }
      function Vt(t) {
        return Nt(t.replace(/\+/g, '%20'));
      }
      function Lt(t) {
        return `${Ft(t.path)}${
          ((e = t.parameters),
          Object.keys(e)
            .map((t) => `;${Ft(t)}=${Ft(e[t])}`)
            .join(''))
        }`;
        var e;
      }
      const Ht = /^[^\/()?;=#]+/;
      function zt(t) {
        const e = t.match(Ht);
        return e ? e[0] : '';
      }
      const Bt = /^[^=?&#]+/,
        Ut = /^[^?&#]+/;
      class Wt {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining || this.peekStartsWith('?') || this.peekStartsWith('#')
              ? new St([], {})
              : new St([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional('&'));
          return t;
        }
        parseFragment() {
          return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const t = [];
          for (
            this.peekStartsWith('(') || t.push(this.parseSegment());
            this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(');

          )
            this.capture('/'), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith('/(') && (this.capture('/'), (e = this.parseParens(!0)));
          let n = {};
          return (
            this.peekStartsWith('(') && (n = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) && (n.primary = new St(t, e)),
            n
          );
        }
        parseSegment() {
          const t = zt(this.remaining);
          if ('' === t && this.peekStartsWith(';'))
            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);
          return this.capture(t), new Et(Nt(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(';'); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = zt(this.remaining);
          if (!e) return;
          this.capture(e);
          let n = '';
          if (this.consumeOptional('=')) {
            const t = zt(this.remaining);
            t && ((n = t), this.capture(n));
          }
          t[Nt(e)] = Nt(n);
        }
        parseQueryParam(t) {
          const e = (function (t) {
            const e = t.match(Bt);
            return e ? e[0] : '';
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let n = '';
          if (this.consumeOptional('=')) {
            const t = (function (t) {
              const e = t.match(Ut);
              return e ? e[0] : '';
            })(this.remaining);
            t && ((n = t), this.capture(n));
          }
          const i = Vt(e),
            r = Vt(n);
          if (t.hasOwnProperty(i)) {
            let e = t[i];
            Array.isArray(e) || ((e = [e]), (t[i] = e)), e.push(r);
          } else t[i] = r;
        }
        parseParens(t) {
          const e = {};
          for (this.capture('('); !this.consumeOptional(')') && this.remaining.length > 0; ) {
            const n = zt(this.remaining),
              i = this.remaining[n.length];
            if ('/' !== i && ')' !== i && ';' !== i) throw new Error(`Cannot parse url '${this.url}'`);
            let r = void 0;
            n.indexOf(':') > -1
              ? ((r = n.substr(0, n.indexOf(':'))), this.capture(r), this.capture(':'))
              : t && (r = 'primary');
            const s = this.parseChildren();
            (e[r] = 1 === Object.keys(s).length ? s.primary : new St([], s)), this.consumeOptional('//');
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return !!this.peekStartsWith(t) && ((this.remaining = this.remaining.substring(t.length)), !0);
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new Error(`Expected "${t}".`);
        }
      }
      class $t {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = qt(t, this._root);
          return e ? e.children.map((t) => t.value) : [];
        }
        firstChild(t) {
          const e = qt(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = Gt(t, this._root);
          return e.length < 2 ? [] : e[e.length - 2].children.map((t) => t.value).filter((e) => e !== t);
        }
        pathFromRoot(t) {
          return Gt(t, this._root).map((t) => t.value);
        }
      }
      function qt(t, e) {
        if (t === e.value) return e;
        for (const n of e.children) {
          const e = qt(t, n);
          if (e) return e;
        }
        return null;
      }
      function Gt(t, e) {
        if (t === e.value) return [e];
        for (const n of e.children) {
          const i = Gt(t, n);
          if (i.length) return i.unshift(e), i;
        }
        return [];
      }
      class Xt {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Kt(t) {
        const e = {};
        return t && t.children.forEach((t) => (e[t.value.outlet] = t)), e;
      }
      class Yt extends $t {
        constructor(t, e) {
          super(t), (this.snapshot = e), ne(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function Zt(t, e) {
        const n = (function (t, e) {
            const n = new te([], {}, {}, '', {}, 'primary', e, null, t.root, -1, {});
            return new ee('', new Xt(n, []));
          })(t, e),
          i = new a.a([new Et('', {})]),
          r = new a.a({}),
          s = new a.a({}),
          o = new a.a({}),
          c = new a.a(''),
          l = new Qt(i, r, o, c, s, 'primary', e, n.root);
        return (l.snapshot = n.root), new Yt(new Xt(l, []), n);
      }
      class Qt {
        constructor(t, e, n, i, r, s, o, a) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = n),
            (this.fragment = i),
            (this.data = r),
            (this.outlet = s),
            (this.component = o),
            (this._futureSnapshot = a);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return this._paramMap || (this._paramMap = this.params.pipe(Object(f.a)((t) => ut(t)))), this._paramMap;
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(Object(f.a)((t) => ut(t)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;
        }
      }
      function Jt(t, e = 'emptyOnly') {
        const n = t.pathFromRoot;
        let i = 0;
        if ('always' !== e)
          for (i = n.length - 1; i >= 1; ) {
            const t = n[i],
              e = n[i - 1];
            if (t.routeConfig && '' === t.routeConfig.path) i--;
            else {
              if (e.component) break;
              i--;
            }
          }
        return (function (t) {
          return t.reduce(
            (t, e) => ({
              params: Object.assign(Object.assign({}, t.params), e.params),
              data: Object.assign(Object.assign({}, t.data), e.data),
              resolve: Object.assign(Object.assign({}, t.resolve), e._resolvedData),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(n.slice(i));
      }
      class te {
        constructor(t, e, n, i, r, s, o, a, c, l, u) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = n),
            (this.fragment = i),
            (this.data = r),
            (this.outlet = s),
            (this.component = o),
            (this.routeConfig = a),
            (this._urlSegment = c),
            (this._lastPathIndex = l),
            (this._resolve = u);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return this._paramMap || (this._paramMap = ut(this.params)), this._paramMap;
        }
        get queryParamMap() {
          return this._queryParamMap || (this._queryParamMap = ut(this.queryParams)), this._queryParamMap;
        }
        toString() {
          return `Route(url:'${this.url.map((t) => t.toString()).join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class ee extends $t {
        constructor(t, e) {
          super(e), (this.url = t), ne(this, e);
        }
        toString() {
          return ie(this._root);
        }
      }
      function ne(t, e) {
        (e.value._routerState = t), e.children.forEach((e) => ne(t, e));
      }
      function ie(t) {
        const e = t.children.length > 0 ? ` { ${t.children.map(ie).join(', ')} } ` : '';
        return `${t.value}${e}`;
      }
      function re(t) {
        if (t.snapshot) {
          const e = t.snapshot,
            n = t._futureSnapshot;
          (t.snapshot = n),
            _t(e.queryParams, n.queryParams) || t.queryParams.next(n.queryParams),
            e.fragment !== n.fragment && t.fragment.next(n.fragment),
            _t(e.params, n.params) || t.params.next(n.params),
            (function (t, e) {
              if (t.length !== e.length) return !1;
              for (let n = 0; n < t.length; ++n) if (!_t(t[n], e[n])) return !1;
              return !0;
            })(e.url, n.url) || t.url.next(n.url),
            _t(e.data, n.data) || t.data.next(n.data);
        } else (t.snapshot = t._futureSnapshot), t.data.next(t._futureSnapshot.data);
      }
      function se(t, e) {
        var n, i;
        return (
          _t(t.params, e.params) &&
          Tt((n = t.url), (i = e.url)) &&
          n.every((t, e) => _t(t.parameters, i[e].parameters)) &&
          !(!t.parent != !e.parent) &&
          (!t.parent || se(t.parent, e.parent))
        );
      }
      function oe(t) {
        return 'object' == typeof t && null != t && !t.outlets && !t.segmentPath;
      }
      function ae(t, e, n, i, r) {
        let s = {};
        return (
          i &&
            xt(i, (t, e) => {
              s[e] = Array.isArray(t) ? t.map((t) => `${t}`) : `${t}`;
            }),
          new Ot(
            n.root === t
              ? e
              : (function t(e, n, i) {
                  const r = {};
                  return (
                    xt(e.children, (e, s) => {
                      r[s] = e === n ? i : t(e, n, i);
                    }),
                    new St(e.segments, r)
                  );
                })(n.root, t, e),
            s,
            r
          )
        );
      }
      class ce {
        constructor(t, e, n) {
          if (
            ((this.isAbsolute = t), (this.numberOfDoubleDots = e), (this.commands = n), t && n.length > 0 && oe(n[0]))
          )
            throw new Error('Root segment cannot have matrix parameters');
          const i = n.find((t) => 'object' == typeof t && null != t && t.outlets);
          if (i && i !== wt(n)) throw new Error('{outlets:{}} has to be the last command');
        }
        toRoot() {
          return this.isAbsolute && 1 === this.commands.length && '/' == this.commands[0];
        }
      }
      class le {
        constructor(t, e, n) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = n);
        }
      }
      function ue(t) {
        return 'object' == typeof t && null != t && t.outlets ? t.outlets.primary : `${t}`;
      }
      function he(t, e, n) {
        if ((t || (t = new St([], {})), 0 === t.segments.length && t.hasChildren())) return de(t, e, n);
        const i = (function (t, e, n) {
            let i = 0,
              r = e;
            const s = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < t.segments.length; ) {
              if (i >= n.length) return s;
              const e = t.segments[r],
                o = ue(n[i]),
                a = i < n.length - 1 ? n[i + 1] : null;
              if (r > 0 && void 0 === o) break;
              if (o && a && 'object' == typeof a && void 0 === a.outlets) {
                if (!ge(o, a, e)) return s;
                i += 2;
              } else {
                if (!ge(o, {}, e)) return s;
                i++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: i };
          })(t, e, n),
          r = n.slice(i.commandIndex);
        if (i.match && i.pathIndex < t.segments.length) {
          const e = new St(t.segments.slice(0, i.pathIndex), {});
          return (e.children.primary = new St(t.segments.slice(i.pathIndex), t.children)), de(e, 0, r);
        }
        return i.match && 0 === r.length
          ? new St(t.segments, {})
          : i.match && !t.hasChildren()
          ? pe(t, e, n)
          : i.match
          ? de(t, 0, r)
          : pe(t, e, n);
      }
      function de(t, e, n) {
        if (0 === n.length) return new St(t.segments, {});
        {
          const i = (function (t) {
              return 'object' != typeof t[0] || void 0 === t[0].outlets ? { primary: t } : t[0].outlets;
            })(n),
            r = {};
          return (
            xt(i, (n, i) => {
              null !== n && (r[i] = he(t.children[i], e, n));
            }),
            xt(t.children, (t, e) => {
              void 0 === i[e] && (r[e] = t);
            }),
            new St(t.segments, r)
          );
        }
      }
      function pe(t, e, n) {
        const i = t.segments.slice(0, e);
        let r = 0;
        for (; r < n.length; ) {
          if ('object' == typeof n[r] && void 0 !== n[r].outlets) {
            const t = fe(n[r].outlets);
            return new St(i, t);
          }
          if (0 === r && oe(n[0])) {
            i.push(new Et(t.segments[e].path, n[0])), r++;
            continue;
          }
          const s = ue(n[r]),
            o = r < n.length - 1 ? n[r + 1] : null;
          s && o && oe(o) ? (i.push(new Et(s, me(o))), (r += 2)) : (i.push(new Et(s, {})), r++);
        }
        return new St(i, {});
      }
      function fe(t) {
        const e = {};
        return (
          xt(t, (t, n) => {
            null !== t && (e[n] = pe(new St([], {}), 0, t));
          }),
          e
        );
      }
      function me(t) {
        const e = {};
        return xt(t, (t, n) => (e[n] = `${t}`)), e;
      }
      function ge(t, e, n) {
        return t == n.path && _t(e, n.parameters);
      }
      class be {
        constructor(t, e, n, i) {
          (this.routeReuseStrategy = t), (this.futureState = e), (this.currState = n), (this.forwardEvent = i);
        }
        activate(t) {
          const e = this.futureState._root,
            n = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, n, t), re(this.futureState.root), this.activateChildRoutes(e, n, t);
        }
        deactivateChildRoutes(t, e, n) {
          const i = Kt(e);
          t.children.forEach((t) => {
            const e = t.value.outlet;
            this.deactivateRoutes(t, i[e], n), delete i[e];
          }),
            xt(i, (t, e) => {
              this.deactivateRouteAndItsChildren(t, n);
            });
        }
        deactivateRoutes(t, e, n) {
          const i = t.value,
            r = e ? e.value : null;
          if (i === r)
            if (i.component) {
              const r = n.getContext(i.outlet);
              r && this.deactivateChildRoutes(t, e, r.children);
            } else this.deactivateChildRoutes(t, e, n);
          else r && this.deactivateRouteAndItsChildren(e, n);
        }
        deactivateRouteAndItsChildren(t, e) {
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const n = e.getContext(t.value.outlet);
          if (n && n.outlet) {
            const e = n.outlet.detach(),
              i = n.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, { componentRef: e, route: t, contexts: i });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const n = e.getContext(t.value.outlet);
          if (n) {
            const i = Kt(t),
              r = t.value.component ? n.children : e;
            xt(i, (t, e) => this.deactivateRouteAndItsChildren(t, r)),
              n.outlet && (n.outlet.deactivate(), n.children.onOutletDeactivated());
          }
        }
        activateChildRoutes(t, e, n) {
          const i = Kt(e);
          t.children.forEach((t) => {
            this.activateRoutes(t, i[t.value.outlet], n), this.forwardEvent(new ot(t.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new rt(t.value.snapshot));
        }
        activateRoutes(t, e, n) {
          const i = t.value,
            r = e ? e.value : null;
          if ((re(i), i === r))
            if (i.component) {
              const r = n.getOrCreateContext(i.outlet);
              this.activateChildRoutes(t, e, r.children);
            } else this.activateChildRoutes(t, e, n);
          else if (i.component) {
            const e = n.getOrCreateContext(i.outlet);
            if (this.routeReuseStrategy.shouldAttach(i.snapshot)) {
              const t = this.routeReuseStrategy.retrieve(i.snapshot);
              this.routeReuseStrategy.store(i.snapshot, null),
                e.children.onOutletReAttached(t.contexts),
                (e.attachRef = t.componentRef),
                (e.route = t.route.value),
                e.outlet && e.outlet.attach(t.componentRef, t.route.value),
                _e(t.route);
            } else {
              const n = (function (t) {
                  for (let e = t.parent; e; e = e.parent) {
                    const t = e.routeConfig;
                    if (t && t._loadedConfig) return t._loadedConfig;
                    if (t && t.component) return null;
                  }
                  return null;
                })(i.snapshot),
                r = n ? n.module.componentFactoryResolver : null;
              (e.attachRef = null),
                (e.route = i),
                (e.resolver = r),
                e.outlet && e.outlet.activateWith(i, r),
                this.activateChildRoutes(t, null, e.children);
            }
          } else this.activateChildRoutes(t, null, n);
        }
      }
      function _e(t) {
        re(t.value), t.children.forEach(_e);
      }
      function ye(t) {
        return 'function' == typeof t;
      }
      function ve(t) {
        return t instanceof Ot;
      }
      class we {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class xe {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function Ce(t) {
        return new c.a((e) => e.error(new we(t)));
      }
      function ke(t) {
        return new c.a((e) => e.error(new xe(t)));
      }
      function Oe(t) {
        return new c.a((e) => e.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${t}'`)));
      }
      class Se {
        constructor(t, e, n, i, s) {
          (this.configLoader = e),
            (this.urlSerializer = n),
            (this.urlTree = i),
            (this.config = s),
            (this.allowRedirects = !0),
            (this.ngModule = t.get(r.z));
        }
        apply() {
          return this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, 'primary')
            .pipe(Object(f.a)((t) => this.createUrlTree(t, this.urlTree.queryParams, this.urlTree.fragment)))
            .pipe(
              Object(I.a)((t) => {
                if (t instanceof xe) return (this.allowRedirects = !1), this.match(t.urlTree);
                if (t instanceof we) throw this.noMatchError(t);
                throw t;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.ngModule, this.config, t.root, 'primary')
            .pipe(Object(f.a)((e) => this.createUrlTree(e, t.queryParams, t.fragment)))
            .pipe(
              Object(I.a)((t) => {
                if (t instanceof we) throw this.noMatchError(t);
                throw t;
              })
            );
        }
        noMatchError(t) {
          return new Error(`Cannot match any routes. URL Segment: '${t.segmentGroup}'`);
        }
        createUrlTree(t, e, n) {
          const i = t.segments.length > 0 ? new St([], { primary: t }) : t;
          return new Ot(i, e, n);
        }
        expandSegmentGroup(t, e, n, i) {
          return 0 === n.segments.length && n.hasChildren()
            ? this.expandChildren(t, e, n).pipe(Object(f.a)((t) => new St([], t)))
            : this.expandSegment(t, n, e, n.segments, i, !0);
        }
        expandChildren(t, e, n) {
          return (function (t, e) {
            if (0 === Object.keys(t).length) return Object(s.a)({});
            const n = [],
              i = [],
              r = {};
            return (
              xt(t, (t, s) => {
                const o = e(s, t).pipe(Object(f.a)((t) => (r[s] = t)));
                'primary' === s ? n.push(o) : i.push(o);
              }),
              s.a.apply(null, n.concat(i)).pipe(
                Object(m.a)(),
                T(),
                Object(f.a)(() => r)
              )
            );
          })(n.children, (n, i) => this.expandSegmentGroup(t, e, i, n));
        }
        expandSegment(t, e, n, i, r, o) {
          return Object(s.a)(...n).pipe(
            Object(f.a)((a) =>
              this.expandSegmentAgainstRoute(t, e, n, a, i, r, o).pipe(
                Object(I.a)((t) => {
                  if (t instanceof we) return Object(s.a)(null);
                  throw t;
                })
              )
            ),
            Object(m.a)(),
            D((t) => !!t),
            Object(I.a)((t, n) => {
              if (t instanceof l || 'EmptyError' === t.name) {
                if (this.noLeftoversInUrl(e, i, r)) return Object(s.a)(new St([], {}));
                throw new we(e);
              }
              throw t;
            })
          );
        }
        noLeftoversInUrl(t, e, n) {
          return 0 === e.length && !t.children[n];
        }
        expandSegmentAgainstRoute(t, e, n, i, r, s, o) {
          return Ae(i) !== s
            ? Ce(e)
            : void 0 === i.redirectTo
            ? this.matchSegmentAgainstRoute(t, e, i, r)
            : o && this.allowRedirects
            ? this.expandSegmentAgainstRouteUsingRedirect(t, e, n, i, r, s)
            : Ce(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, n, i, r, s) {
          return '**' === i.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, n, i, s)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(t, e, n, i, r, s);
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, n, i) {
          const r = this.applyRedirectCommands([], n.redirectTo, {});
          return n.redirectTo.startsWith('/')
            ? ke(r)
            : this.lineralizeSegments(n, r).pipe(
                Object(j.a)((n) => {
                  const r = new St(n, {});
                  return this.expandSegment(t, r, e, n, i, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, n, i, r, s) {
          const { matched: o, consumedSegments: a, lastChild: c, positionalParamSegments: l } = Ee(e, i, r);
          if (!o) return Ce(e);
          const u = this.applyRedirectCommands(a, i.redirectTo, l);
          return i.redirectTo.startsWith('/')
            ? ke(u)
            : this.lineralizeSegments(i, u).pipe(
                Object(j.a)((i) => this.expandSegment(t, e, n, i.concat(r.slice(c)), s, !1))
              );
        }
        matchSegmentAgainstRoute(t, e, n, i) {
          if ('**' === n.path)
            return n.loadChildren
              ? this.configLoader.load(t.injector, n).pipe(Object(f.a)((t) => ((n._loadedConfig = t), new St(i, {}))))
              : Object(s.a)(new St(i, {}));
          const { matched: r, consumedSegments: o, lastChild: a } = Ee(e, n, i);
          if (!r) return Ce(e);
          const c = i.slice(a);
          return this.getChildConfig(t, n, i).pipe(
            Object(j.a)((t) => {
              const n = t.module,
                i = t.routes,
                { segmentGroup: r, slicedSegments: a } = (function (t, e, n, i) {
                  return n.length > 0 &&
                    (function (t, e, n) {
                      return n.some((n) => Ie(t, e, n) && 'primary' !== Ae(n));
                    })(t, n, i)
                    ? {
                        segmentGroup: Te(
                          new St(
                            e,
                            (function (t, e) {
                              const n = {};
                              n.primary = e;
                              for (const i of t) '' === i.path && 'primary' !== Ae(i) && (n[Ae(i)] = new St([], {}));
                              return n;
                            })(i, new St(n, t.children))
                          )
                        ),
                        slicedSegments: [],
                      }
                    : 0 === n.length &&
                      (function (t, e, n) {
                        return n.some((n) => Ie(t, e, n));
                      })(t, n, i)
                    ? {
                        segmentGroup: Te(
                          new St(
                            t.segments,
                            (function (t, e, n, i) {
                              const r = {};
                              for (const s of n) Ie(t, e, s) && !i[Ae(s)] && (r[Ae(s)] = new St([], {}));
                              return Object.assign(Object.assign({}, i), r);
                            })(t, n, i, t.children)
                          )
                        ),
                        slicedSegments: n,
                      }
                    : { segmentGroup: t, slicedSegments: n };
                })(e, o, c, i);
              return 0 === a.length && r.hasChildren()
                ? this.expandChildren(n, i, r).pipe(Object(f.a)((t) => new St(o, t)))
                : 0 === i.length && 0 === a.length
                ? Object(s.a)(new St(o, {}))
                : this.expandSegment(n, r, i, a, 'primary', !0).pipe(
                    Object(f.a)((t) => new St(o.concat(t.segments), t.children))
                  );
            })
          );
        }
        getChildConfig(t, e, n) {
          return e.children
            ? Object(s.a)(new pt(e.children, t))
            : e.loadChildren
            ? void 0 !== e._loadedConfig
              ? Object(s.a)(e._loadedConfig)
              : (function (t, e, n) {
                  const i = e.canLoad;
                  return i && 0 !== i.length
                    ? Object(o.a)(i)
                        .pipe(
                          Object(f.a)((i) => {
                            const r = t.get(i);
                            let s;
                            if (
                              (function (t) {
                                return t && ye(t.canLoad);
                              })(r)
                            )
                              s = r.canLoad(e, n);
                            else {
                              if (!ye(r)) throw new Error('Invalid CanLoad guard');
                              s = r(e, n);
                            }
                            return Ct(s);
                          })
                        )
                        .pipe(Object(m.a)(), ((r = (t) => !0 === t), (t) => t.lift(new R(r, void 0, t))))
                    : Object(s.a)(!0);
                  var r;
                })(t.injector, e, n).pipe(
                  Object(j.a)((n) =>
                    n
                      ? this.configLoader.load(t.injector, e).pipe(Object(f.a)((t) => ((e._loadedConfig = t), t)))
                      : (function (t) {
                          return new c.a((e) =>
                            e.error(
                              ht(
                                `Cannot load children because the guard of the route "path: '${t.path}'" returned false`
                              )
                            )
                          );
                        })(e)
                  )
                )
            : Object(s.a)(new pt([], t));
        }
        lineralizeSegments(t, e) {
          let n = [],
            i = e.root;
          for (;;) {
            if (((n = n.concat(i.segments)), 0 === i.numberOfChildren)) return Object(s.a)(n);
            if (i.numberOfChildren > 1 || !i.children.primary) return Oe(t.redirectTo);
            i = i.children.primary;
          }
        }
        applyRedirectCommands(t, e, n) {
          return this.applyRedirectCreatreUrlTree(e, this.urlSerializer.parse(e), t, n);
        }
        applyRedirectCreatreUrlTree(t, e, n, i) {
          const r = this.createSegmentGroup(t, e.root, n, i);
          return new Ot(r, this.createQueryParams(e.queryParams, this.urlTree.queryParams), e.fragment);
        }
        createQueryParams(t, e) {
          const n = {};
          return (
            xt(t, (t, i) => {
              if ('string' == typeof t && t.startsWith(':')) {
                const r = t.substring(1);
                n[i] = e[r];
              } else n[i] = t;
            }),
            n
          );
        }
        createSegmentGroup(t, e, n, i) {
          const r = this.createSegments(t, e.segments, n, i);
          let s = {};
          return (
            xt(e.children, (e, r) => {
              s[r] = this.createSegmentGroup(t, e, n, i);
            }),
            new St(r, s)
          );
        }
        createSegments(t, e, n, i) {
          return e.map((e) => (e.path.startsWith(':') ? this.findPosParam(t, e, i) : this.findOrReturn(e, n)));
        }
        findPosParam(t, e, n) {
          const i = n[e.path.substring(1)];
          if (!i) throw new Error(`Cannot redirect to '${t}'. Cannot find '${e.path}'.`);
          return i;
        }
        findOrReturn(t, e) {
          let n = 0;
          for (const i of e) {
            if (i.path === t.path) return e.splice(n), i;
            n++;
          }
          return t;
        }
      }
      function Ee(t, e, n) {
        if ('' === e.path)
          return 'full' === e.pathMatch && (t.hasChildren() || n.length > 0)
            ? { matched: !1, consumedSegments: [], lastChild: 0, positionalParamSegments: {} }
            : { matched: !0, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };
        const i = (e.matcher || dt)(n, t, e);
        return i
          ? {
              matched: !0,
              consumedSegments: i.consumed,
              lastChild: i.consumed.length,
              positionalParamSegments: i.posParams,
            }
          : { matched: !1, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };
      }
      function Te(t) {
        if (1 === t.numberOfChildren && t.children.primary) {
          const e = t.children.primary;
          return new St(t.segments.concat(e.segments), e.children);
        }
        return t;
      }
      function Ie(t, e, n) {
        return (
          (!(t.hasChildren() || e.length > 0) || 'full' !== n.pathMatch) && '' === n.path && void 0 !== n.redirectTo
        );
      }
      function Ae(t) {
        return t.outlet || 'primary';
      }
      class De {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class je {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function Re(t, e, n) {
        const i = t._root;
        return (function t(e, n, i, r, s = { canDeactivateChecks: [], canActivateChecks: [] }) {
          const o = Kt(n);
          return (
            e.children.forEach((e) => {
              !(function (e, n, i, r, s = { canDeactivateChecks: [], canActivateChecks: [] }) {
                const o = e.value,
                  a = n ? n.value : null,
                  c = i ? i.getContext(e.value.outlet) : null;
                if (a && o.routeConfig === a.routeConfig) {
                  const l = (function (t, e, n) {
                    if ('function' == typeof n) return n(t, e);
                    switch (n) {
                      case 'pathParamsChange':
                        return !Tt(t.url, e.url);
                      case 'pathParamsOrQueryParamsChange':
                        return !Tt(t.url, e.url) || !_t(t.queryParams, e.queryParams);
                      case 'always':
                        return !0;
                      case 'paramsOrQueryParamsChange':
                        return !se(t, e) || !_t(t.queryParams, e.queryParams);
                      case 'paramsChange':
                      default:
                        return !se(t, e);
                    }
                  })(a, o, o.routeConfig.runGuardsAndResolvers);
                  l ? s.canActivateChecks.push(new De(r)) : ((o.data = a.data), (o._resolvedData = a._resolvedData)),
                    t(e, n, o.component ? (c ? c.children : null) : i, r, s),
                    l && s.canDeactivateChecks.push(new je((c && c.outlet && c.outlet.component) || null, a));
                } else
                  a && Me(n, c, s),
                    s.canActivateChecks.push(new De(r)),
                    t(e, null, o.component ? (c ? c.children : null) : i, r, s);
              })(e, o[e.value.outlet], i, r.concat([e.value]), s),
                delete o[e.value.outlet];
            }),
            xt(o, (t, e) => Me(t, i.getContext(e), s)),
            s
          );
        })(i, e ? e._root : null, n, [i.value]);
      }
      function Pe(t, e, n) {
        const i = (function (t) {
          if (!t) return null;
          for (let e = t.parent; e; e = e.parent) {
            const t = e.routeConfig;
            if (t && t._loadedConfig) return t._loadedConfig;
          }
          return null;
        })(e);
        return (i ? i.module.injector : n).get(t);
      }
      function Me(t, e, n) {
        const i = Kt(t),
          r = t.value;
        xt(i, (t, i) => {
          Me(t, r.component ? (e ? e.children.getContext(i) : null) : e, n);
        }),
          n.canDeactivateChecks.push(
            new je(r.component && e && e.outlet && e.outlet.isActivated ? e.outlet.component : null, r)
          );
      }
      const Fe = Symbol('INITIAL_VALUE');
      function Ne() {
        return Object(M.a)((t) =>
          Object(u.a)(...t.map((t) => t.pipe(Object(A.a)(1), Object(F.a)(Fe)))).pipe(
            N((t, e) => {
              let n = !1;
              return e.reduce((t, i, r) => {
                if (t !== Fe) return t;
                if ((i === Fe && (n = !0), !n)) {
                  if (!1 === i) return i;
                  if (r === e.length - 1 || ve(i)) return i;
                }
                return t;
              }, t);
            }, Fe),
            Object(g.a)((t) => t !== Fe),
            Object(f.a)((t) => (ve(t) ? t : !0 === t)),
            Object(A.a)(1)
          )
        );
      }
      function Ve(t, e) {
        return null !== t && e && e(new st(t)), Object(s.a)(!0);
      }
      function Le(t, e) {
        return null !== t && e && e(new it(t)), Object(s.a)(!0);
      }
      function He(t, e, n) {
        const i = e.routeConfig ? e.routeConfig.canActivate : null;
        if (!i || 0 === i.length) return Object(s.a)(!0);
        const r = i.map((i) =>
          Object(h.a)(() => {
            const r = Pe(i, e, n);
            let s;
            if (
              (function (t) {
                return t && ye(t.canActivate);
              })(r)
            )
              s = Ct(r.canActivate(e, t));
            else {
              if (!ye(r)) throw new Error('Invalid CanActivate guard');
              s = Ct(r(e, t));
            }
            return s.pipe(D());
          })
        );
        return Object(s.a)(r).pipe(Ne());
      }
      function ze(t, e, n) {
        const i = e[e.length - 1],
          r = e
            .slice(0, e.length - 1)
            .reverse()
            .map((t) =>
              (function (t) {
                const e = t.routeConfig ? t.routeConfig.canActivateChild : null;
                return e && 0 !== e.length ? { node: t, guards: e } : null;
              })(t)
            )
            .filter((t) => null !== t)
            .map((e) =>
              Object(h.a)(() => {
                const r = e.guards.map((r) => {
                  const s = Pe(r, e.node, n);
                  let o;
                  if (
                    (function (t) {
                      return t && ye(t.canActivateChild);
                    })(s)
                  )
                    o = Ct(s.canActivateChild(i, t));
                  else {
                    if (!ye(s)) throw new Error('Invalid CanActivateChild guard');
                    o = Ct(s(i, t));
                  }
                  return o.pipe(D());
                });
                return Object(s.a)(r).pipe(Ne());
              })
            );
        return Object(s.a)(r).pipe(Ne());
      }
      class Be {}
      class Ue {
        constructor(t, e, n, i, r, s) {
          (this.rootComponentType = t),
            (this.config = e),
            (this.urlTree = n),
            (this.url = i),
            (this.paramsInheritanceStrategy = r),
            (this.relativeLinkResolution = s);
        }
        recognize() {
          try {
            const t = qe(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup,
              e = this.processSegmentGroup(this.config, t, 'primary'),
              n = new te(
                [],
                Object.freeze({}),
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                {},
                'primary',
                this.rootComponentType,
                null,
                this.urlTree.root,
                -1,
                {}
              ),
              i = new Xt(n, e),
              r = new ee(this.url, i);
            return this.inheritParamsAndData(r._root), Object(s.a)(r);
          } catch (t) {
            return new c.a((e) => e.error(t));
          }
        }
        inheritParamsAndData(t) {
          const e = t.value,
            n = Jt(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(n.params)),
            (e.data = Object.freeze(n.data)),
            t.children.forEach((t) => this.inheritParamsAndData(t));
        }
        processSegmentGroup(t, e, n) {
          return 0 === e.segments.length && e.hasChildren()
            ? this.processChildren(t, e)
            : this.processSegment(t, e, e.segments, n);
        }
        processChildren(t, e) {
          const n = It(e, (e, n) => this.processSegmentGroup(t, e, n));
          return (
            (function (t) {
              const e = {};
              t.forEach((t) => {
                const n = e[t.value.outlet];
                if (n) {
                  const e = n.url.map((t) => t.toString()).join('/'),
                    i = t.value.url.map((t) => t.toString()).join('/');
                  throw new Error(`Two segments cannot have the same outlet name: '${e}' and '${i}'.`);
                }
                e[t.value.outlet] = t.value;
              });
            })(n),
            n.sort((t, e) =>
              'primary' === t.value.outlet
                ? -1
                : 'primary' === e.value.outlet
                ? 1
                : t.value.outlet.localeCompare(e.value.outlet)
            ),
            n
          );
        }
        processSegment(t, e, n, i) {
          for (const s of t)
            try {
              return this.processSegmentAgainstRoute(s, e, n, i);
            } catch (r) {
              if (!(r instanceof Be)) throw r;
            }
          if (this.noLeftoversInUrl(e, n, i)) return [];
          throw new Be();
        }
        noLeftoversInUrl(t, e, n) {
          return 0 === e.length && !t.children[n];
        }
        processSegmentAgainstRoute(t, e, n, i) {
          if (t.redirectTo) throw new Be();
          if ((t.outlet || 'primary') !== i) throw new Be();
          let r,
            s = [],
            o = [];
          if ('**' === t.path) {
            const s = n.length > 0 ? wt(n).parameters : {};
            r = new te(
              n,
              s,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              Ke(t),
              i,
              t.component,
              t,
              We(e),
              $e(e) + n.length,
              Ye(t)
            );
          } else {
            const a = (function (t, e, n) {
              if ('' === e.path) {
                if ('full' === e.pathMatch && (t.hasChildren() || n.length > 0)) throw new Be();
                return { consumedSegments: [], lastChild: 0, parameters: {} };
              }
              const i = (e.matcher || dt)(n, t, e);
              if (!i) throw new Be();
              const r = {};
              xt(i.posParams, (t, e) => {
                r[e] = t.path;
              });
              const s =
                i.consumed.length > 0
                  ? Object.assign(Object.assign({}, r), i.consumed[i.consumed.length - 1].parameters)
                  : r;
              return { consumedSegments: i.consumed, lastChild: i.consumed.length, parameters: s };
            })(e, t, n);
            (s = a.consumedSegments),
              (o = n.slice(a.lastChild)),
              (r = new te(
                s,
                a.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                Ke(t),
                i,
                t.component,
                t,
                We(e),
                $e(e) + s.length,
                Ye(t)
              ));
          }
          const a = (function (t) {
              return t.children ? t.children : t.loadChildren ? t._loadedConfig.routes : [];
            })(t),
            { segmentGroup: c, slicedSegments: l } = qe(e, s, o, a, this.relativeLinkResolution);
          if (0 === l.length && c.hasChildren()) {
            const t = this.processChildren(a, c);
            return [new Xt(r, t)];
          }
          if (0 === a.length && 0 === l.length) return [new Xt(r, [])];
          const u = this.processSegment(a, c, l, 'primary');
          return [new Xt(r, u)];
        }
      }
      function We(t) {
        let e = t;
        for (; e._sourceSegment; ) e = e._sourceSegment;
        return e;
      }
      function $e(t) {
        let e = t,
          n = e._segmentIndexShift ? e._segmentIndexShift : 0;
        for (; e._sourceSegment; ) (e = e._sourceSegment), (n += e._segmentIndexShift ? e._segmentIndexShift : 0);
        return n - 1;
      }
      function qe(t, e, n, i, r) {
        if (
          n.length > 0 &&
          (function (t, e, n) {
            return n.some((n) => Ge(t, e, n) && 'primary' !== Xe(n));
          })(t, n, i)
        ) {
          const r = new St(
            e,
            (function (t, e, n, i) {
              const r = {};
              (r.primary = i), (i._sourceSegment = t), (i._segmentIndexShift = e.length);
              for (const s of n)
                if ('' === s.path && 'primary' !== Xe(s)) {
                  const n = new St([], {});
                  (n._sourceSegment = t), (n._segmentIndexShift = e.length), (r[Xe(s)] = n);
                }
              return r;
            })(t, e, i, new St(n, t.children))
          );
          return (r._sourceSegment = t), (r._segmentIndexShift = e.length), { segmentGroup: r, slicedSegments: [] };
        }
        if (
          0 === n.length &&
          (function (t, e, n) {
            return n.some((n) => Ge(t, e, n));
          })(t, n, i)
        ) {
          const s = new St(
            t.segments,
            (function (t, e, n, i, r, s) {
              const o = {};
              for (const a of i)
                if (Ge(t, n, a) && !r[Xe(a)]) {
                  const n = new St([], {});
                  (n._sourceSegment = t),
                    (n._segmentIndexShift = 'legacy' === s ? t.segments.length : e.length),
                    (o[Xe(a)] = n);
                }
              return Object.assign(Object.assign({}, r), o);
            })(t, e, n, i, t.children, r)
          );
          return (s._sourceSegment = t), (s._segmentIndexShift = e.length), { segmentGroup: s, slicedSegments: n };
        }
        const s = new St(t.segments, t.children);
        return (s._sourceSegment = t), (s._segmentIndexShift = e.length), { segmentGroup: s, slicedSegments: n };
      }
      function Ge(t, e, n) {
        return (
          (!(t.hasChildren() || e.length > 0) || 'full' !== n.pathMatch) && '' === n.path && void 0 === n.redirectTo
        );
      }
      function Xe(t) {
        return t.outlet || 'primary';
      }
      function Ke(t) {
        return t.data || {};
      }
      function Ye(t) {
        return t.resolve || {};
      }
      function Ze(t, e, n, i) {
        const r = Pe(t, e, i);
        return Ct(r.resolve ? r.resolve(e, n) : r(e, n));
      }
      function Qe(t) {
        return function (e) {
          return e.pipe(
            Object(M.a)((e) => {
              const n = t(e);
              return n ? Object(o.a)(n).pipe(Object(f.a)(() => e)) : Object(o.a)([e]);
            })
          );
        };
      }
      class Je {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      }
      const tn = new r.s('ROUTES');
      class en {
        constructor(t, e, n, i) {
          (this.loader = t), (this.compiler = e), (this.onLoadStartListener = n), (this.onLoadEndListener = i);
        }
        load(t, e) {
          return (
            this.onLoadStartListener && this.onLoadStartListener(e),
            this.loadModuleFactory(e.loadChildren).pipe(
              Object(f.a)((n) => {
                this.onLoadEndListener && this.onLoadEndListener(e);
                const i = n.create(t);
                return new pt(vt(i.injector.get(tn)).map(bt), i);
              })
            )
          );
        }
        loadModuleFactory(t) {
          return 'string' == typeof t
            ? Object(o.a)(this.loader.load(t))
            : Ct(t()).pipe(
                Object(j.a)((t) =>
                  t instanceof r.x ? Object(s.a)(t) : Object(o.a)(this.compiler.compileModuleAsync(t))
                )
              );
        }
      }
      class nn {
        shouldProcessUrl(t) {
          return !0;
        }
        extract(t) {
          return t;
        }
        merge(t, e) {
          return t;
        }
      }
      function rn(t) {
        throw t;
      }
      function sn(t, e, n) {
        return e.parse('/');
      }
      function on(t, e) {
        return Object(s.a)(null);
      }
      let an = (() => {
          class t {
            constructor(t, e, n, i, s, o, c, l) {
              (this.rootComponentType = t),
                (this.urlSerializer = e),
                (this.rootContexts = n),
                (this.location = i),
                (this.config = l),
                (this.lastSuccessfulNavigation = null),
                (this.currentNavigation = null),
                (this.navigationId = 0),
                (this.isNgZoneEnabled = !1),
                (this.events = new d.a()),
                (this.errorHandler = rn),
                (this.malformedUriErrorHandler = sn),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.hooks = { beforePreactivation: on, afterPreactivation: on }),
                (this.urlHandlingStrategy = new nn()),
                (this.routeReuseStrategy = new Je()),
                (this.onSameUrlNavigation = 'ignore'),
                (this.paramsInheritanceStrategy = 'emptyOnly'),
                (this.urlUpdateStrategy = 'deferred'),
                (this.relativeLinkResolution = 'legacy'),
                (this.ngModule = s.get(r.z)),
                (this.console = s.get(r.eb));
              const u = s.get(r.B);
              (this.isNgZoneEnabled = u instanceof r.B),
                this.resetConfig(l),
                (this.currentUrlTree = new Ot(new St([], {}), {}, null)),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.configLoader = new en(
                  o,
                  c,
                  (t) => this.triggerEvent(new et(t)),
                  (t) => this.triggerEvent(new nt(t))
                )),
                (this.routerState = Zt(this.currentUrlTree, this.rootComponentType)),
                (this.transitions = new a.a({
                  id: 0,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
                  urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
                  rawUrl: this.currentUrlTree,
                  extras: {},
                  resolve: null,
                  reject: null,
                  promise: Promise.resolve(!0),
                  source: 'imperative',
                  restoredState: null,
                  currentSnapshot: this.routerState.snapshot,
                  targetSnapshot: null,
                  currentRouterState: this.routerState,
                  targetRouterState: null,
                  guards: { canActivateChecks: [], canDeactivateChecks: [] },
                  guardsResult: null,
                })),
                (this.navigations = this.setupNavigations(this.transitions)),
                this.processNavigations();
            }
            setupNavigations(t) {
              const e = this.events;
              return t.pipe(
                Object(g.a)((t) => 0 !== t.id),
                Object(f.a)((t) =>
                  Object.assign(Object.assign({}, t), { extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl) })
                ),
                Object(M.a)((t) => {
                  let n = !1,
                    i = !1;
                  return Object(s.a)(t).pipe(
                    Object(B.a)((t) => {
                      this.currentNavigation = {
                        id: t.id,
                        initialUrl: t.currentRawUrl,
                        extractedUrl: t.extractedUrl,
                        trigger: t.source,
                        extras: t.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? Object.assign(Object.assign({}, this.lastSuccessfulNavigation), {
                              previousNavigation: null,
                            })
                          : null,
                      };
                    }),
                    Object(M.a)((t) => {
                      const n = !this.navigated || t.extractedUrl.toString() !== this.browserUrlTree.toString();
                      if (
                        ('reload' === this.onSameUrlNavigation || n) &&
                        this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)
                      )
                        return Object(s.a)(t).pipe(
                          Object(M.a)((t) => {
                            const n = this.transitions.getValue();
                            return (
                              e.next(new q(t.id, this.serializeUrl(t.extractedUrl), t.source, t.restoredState)),
                              n !== this.transitions.getValue() ? p.a : [t]
                            );
                          }),
                          Object(M.a)((t) => Promise.resolve(t)),
                          ((i = this.ngModule.injector),
                          (r = this.configLoader),
                          (o = this.urlSerializer),
                          (a = this.config),
                          function (t) {
                            return t.pipe(
                              Object(M.a)((t) =>
                                (function (t, e, n, i, r) {
                                  return new Se(t, e, n, i, r).apply();
                                })(i, r, o, t.extractedUrl, a).pipe(
                                  Object(f.a)((e) => Object.assign(Object.assign({}, t), { urlAfterRedirects: e }))
                                )
                              )
                            );
                          }),
                          Object(B.a)((t) => {
                            this.currentNavigation = Object.assign(Object.assign({}, this.currentNavigation), {
                              finalUrl: t.urlAfterRedirects,
                            });
                          }),
                          (function (t, e, n, i, r) {
                            return function (s) {
                              return s.pipe(
                                Object(j.a)((s) =>
                                  (function (t, e, n, i, r = 'emptyOnly', s = 'legacy') {
                                    return new Ue(t, e, n, i, r, s).recognize();
                                  })(t, e, s.urlAfterRedirects, n(s.urlAfterRedirects), i, r).pipe(
                                    Object(f.a)((t) => Object.assign(Object.assign({}, s), { targetSnapshot: t }))
                                  )
                                )
                              );
                            };
                          })(
                            this.rootComponentType,
                            this.config,
                            (t) => this.serializeUrl(t),
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          Object(B.a)((t) => {
                            'eager' === this.urlUpdateStrategy &&
                              (t.extras.skipLocationChange ||
                                this.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state),
                              (this.browserUrlTree = t.urlAfterRedirects));
                          }),
                          Object(B.a)((t) => {
                            const n = new Y(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            e.next(n);
                          })
                        );
                      var i, r, o, a;
                      if (n && this.rawUrlTree && this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {
                        const { id: n, extractedUrl: i, source: r, restoredState: o, extras: a } = t,
                          c = new q(n, this.serializeUrl(i), r, o);
                        e.next(c);
                        const l = Zt(i, this.rootComponentType).snapshot;
                        return Object(s.a)(
                          Object.assign(Object.assign({}, t), {
                            targetSnapshot: l,
                            urlAfterRedirects: i,
                            extras: Object.assign(Object.assign({}, a), { skipLocationChange: !1, replaceUrl: !1 }),
                          })
                        );
                      }
                      return (
                        (this.rawUrlTree = t.rawUrl), (this.browserUrlTree = t.urlAfterRedirects), t.resolve(null), p.a
                      );
                    }),
                    Qe((t) => {
                      const {
                        targetSnapshot: e,
                        id: n,
                        extractedUrl: i,
                        rawUrl: r,
                        extras: { skipLocationChange: s, replaceUrl: o },
                      } = t;
                      return this.hooks.beforePreactivation(e, {
                        navigationId: n,
                        appliedUrlTree: i,
                        rawUrlTree: r,
                        skipLocationChange: !!s,
                        replaceUrl: !!o,
                      });
                    }),
                    Object(B.a)((t) => {
                      const e = new Z(
                        t.id,
                        this.serializeUrl(t.extractedUrl),
                        this.serializeUrl(t.urlAfterRedirects),
                        t.targetSnapshot
                      );
                      this.triggerEvent(e);
                    }),
                    Object(f.a)((t) =>
                      Object.assign(Object.assign({}, t), {
                        guards: Re(t.targetSnapshot, t.currentSnapshot, this.rootContexts),
                      })
                    ),
                    (function (t, e) {
                      return function (n) {
                        return n.pipe(
                          Object(j.a)((n) => {
                            const {
                              targetSnapshot: i,
                              currentSnapshot: r,
                              guards: { canActivateChecks: a, canDeactivateChecks: c },
                            } = n;
                            return 0 === c.length && 0 === a.length
                              ? Object(s.a)(Object.assign(Object.assign({}, n), { guardsResult: !0 }))
                              : (function (t, e, n, i) {
                                  return Object(o.a)(t).pipe(
                                    Object(j.a)((t) =>
                                      (function (t, e, n, i, r) {
                                        const o = e && e.routeConfig ? e.routeConfig.canDeactivate : null;
                                        if (!o || 0 === o.length) return Object(s.a)(!0);
                                        const a = o.map((s) => {
                                          const o = Pe(s, e, r);
                                          let a;
                                          if (
                                            (function (t) {
                                              return t && ye(t.canDeactivate);
                                            })(o)
                                          )
                                            a = Ct(o.canDeactivate(t, e, n, i));
                                          else {
                                            if (!ye(o)) throw new Error('Invalid CanDeactivate guard');
                                            a = Ct(o(t, e, n, i));
                                          }
                                          return a.pipe(D());
                                        });
                                        return Object(s.a)(a).pipe(Ne());
                                      })(t.component, t.route, n, e, i)
                                    ),
                                    D((t) => !0 !== t, !0)
                                  );
                                })(c, i, r, t).pipe(
                                  Object(j.a)((n) =>
                                    n && 'boolean' == typeof n
                                      ? (function (t, e, n, i) {
                                          return Object(o.a)(e).pipe(
                                            Object(H.a)((e) =>
                                              Object(o.a)([
                                                Le(e.route.parent, i),
                                                Ve(e.route, i),
                                                ze(t, e.path, n),
                                                He(t, e.route, n),
                                              ]).pipe(
                                                Object(m.a)(),
                                                D((t) => !0 !== t, !0)
                                              )
                                            ),
                                            D((t) => !0 !== t, !0)
                                          );
                                        })(i, a, t, e)
                                      : Object(s.a)(n)
                                  ),
                                  Object(f.a)((t) => Object.assign(Object.assign({}, n), { guardsResult: t }))
                                );
                          })
                        );
                      };
                    })(this.ngModule.injector, (t) => this.triggerEvent(t)),
                    Object(B.a)((t) => {
                      if (ve(t.guardsResult)) {
                        const e = ht(`Redirecting to "${this.serializeUrl(t.guardsResult)}"`);
                        throw ((e.url = t.guardsResult), e);
                      }
                    }),
                    Object(B.a)((t) => {
                      const e = new Q(
                        t.id,
                        this.serializeUrl(t.extractedUrl),
                        this.serializeUrl(t.urlAfterRedirects),
                        t.targetSnapshot,
                        !!t.guardsResult
                      );
                      this.triggerEvent(e);
                    }),
                    Object(g.a)((t) => {
                      if (!t.guardsResult) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new X(t.id, this.serializeUrl(t.extractedUrl), '');
                        return e.next(n), t.resolve(!1), !1;
                      }
                      return !0;
                    }),
                    Qe((t) => {
                      if (t.guards.canActivateChecks.length)
                        return Object(s.a)(t).pipe(
                          Object(B.a)((t) => {
                            const e = new J(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            this.triggerEvent(e);
                          }),
                          ((e = this.paramsInheritanceStrategy),
                          (n = this.ngModule.injector),
                          function (t) {
                            return t.pipe(
                              Object(j.a)((t) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: r },
                                } = t;
                                return r.length
                                  ? Object(o.a)(r).pipe(
                                      Object(H.a)((t) =>
                                        (function (t, e, n, i) {
                                          return (function (t, e, n, i) {
                                            const r = Object.keys(t);
                                            if (0 === r.length) return Object(s.a)({});
                                            if (1 === r.length) {
                                              const s = r[0];
                                              return Ze(t[s], e, n, i).pipe(Object(f.a)((t) => ({ [s]: t })));
                                            }
                                            const a = {};
                                            return Object(o.a)(r)
                                              .pipe(
                                                Object(j.a)((r) =>
                                                  Ze(t[r], e, n, i).pipe(Object(f.a)((t) => ((a[r] = t), t)))
                                                )
                                              )
                                              .pipe(
                                                T(),
                                                Object(f.a)(() => a)
                                              );
                                          })(t._resolve, t, e, i).pipe(
                                            Object(f.a)(
                                              (e) => (
                                                (t._resolvedData = e),
                                                (t.data = Object.assign(Object.assign({}, t.data), Jt(t, n).resolve)),
                                                null
                                              )
                                            )
                                          );
                                        })(t.route, i, e, n)
                                      ),
                                      (function (t, e) {
                                        return arguments.length >= 2
                                          ? function (n) {
                                              return Object(z.a)(N(t, e), y(1), Object(S.a)(e))(n);
                                            }
                                          : function (e) {
                                              return Object(z.a)(
                                                N((e, n, i) => t(e, n, i + 1)),
                                                y(1)
                                              )(e);
                                            };
                                      })((t, e) => t),
                                      Object(f.a)((e) => t)
                                    )
                                  : Object(s.a)(t);
                              })
                            );
                          }),
                          Object(B.a)((t) => {
                            const e = new tt(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            this.triggerEvent(e);
                          })
                        );
                      var e, n;
                    }),
                    Qe((t) => {
                      const {
                        targetSnapshot: e,
                        id: n,
                        extractedUrl: i,
                        rawUrl: r,
                        extras: { skipLocationChange: s, replaceUrl: o },
                      } = t;
                      return this.hooks.afterPreactivation(e, {
                        navigationId: n,
                        appliedUrlTree: i,
                        rawUrlTree: r,
                        skipLocationChange: !!s,
                        replaceUrl: !!o,
                      });
                    }),
                    Object(f.a)((t) => {
                      const e = (function (t, e, n) {
                        const i = (function t(e, n, i) {
                          if (i && e.shouldReuseRoute(n.value, i.value.snapshot)) {
                            const r = i.value;
                            r._futureSnapshot = n.value;
                            const s = (function (e, n, i) {
                              return n.children.map((n) => {
                                for (const r of i.children)
                                  if (e.shouldReuseRoute(r.value.snapshot, n.value)) return t(e, n, r);
                                return t(e, n);
                              });
                            })(e, n, i);
                            return new Xt(r, s);
                          }
                          {
                            const i = e.retrieve(n.value);
                            if (i) {
                              const t = i.route;
                              return (
                                (function t(e, n) {
                                  if (e.value.routeConfig !== n.value.routeConfig)
                                    throw new Error(
                                      'Cannot reattach ActivatedRouteSnapshot created from a different route'
                                    );
                                  if (e.children.length !== n.children.length)
                                    throw new Error(
                                      'Cannot reattach ActivatedRouteSnapshot with a different number of children'
                                    );
                                  n.value._futureSnapshot = e.value;
                                  for (let i = 0; i < e.children.length; ++i) t(e.children[i], n.children[i]);
                                })(n, t),
                                t
                              );
                            }
                            {
                              const i = new Qt(
                                  new a.a((r = n.value).url),
                                  new a.a(r.params),
                                  new a.a(r.queryParams),
                                  new a.a(r.fragment),
                                  new a.a(r.data),
                                  r.outlet,
                                  r.component,
                                  r
                                ),
                                s = n.children.map((n) => t(e, n));
                              return new Xt(i, s);
                            }
                          }
                          var r;
                        })(t, e._root, n ? n._root : void 0);
                        return new Yt(i, e);
                      })(this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);
                      return Object.assign(Object.assign({}, t), { targetRouterState: e });
                    }),
                    Object(B.a)((t) => {
                      (this.currentUrlTree = t.urlAfterRedirects),
                        (this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, t.rawUrl)),
                        (this.routerState = t.targetRouterState),
                        'deferred' === this.urlUpdateStrategy &&
                          (t.extras.skipLocationChange ||
                            this.setBrowserUrl(this.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state),
                          (this.browserUrlTree = t.urlAfterRedirects));
                    }),
                    ((r = this.rootContexts),
                    (c = this.routeReuseStrategy),
                    (l = (t) => this.triggerEvent(t)),
                    Object(f.a)((t) => (new be(c, t.targetRouterState, t.currentRouterState, l).activate(r), t))),
                    Object(B.a)({
                      next() {
                        n = !0;
                      },
                      complete() {
                        n = !0;
                      },
                    }),
                    Object(U.a)(() => {
                      if (!n && !i) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new X(
                          t.id,
                          this.serializeUrl(t.extractedUrl),
                          `Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`
                        );
                        e.next(n), t.resolve(!1);
                      }
                      this.currentNavigation = null;
                    }),
                    Object(I.a)((n) => {
                      if (((i = !0), (r = n) && r.ngNavigationCancelingError)) {
                        const i = ve(n.url);
                        i ||
                          ((this.navigated = !0),
                          this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl));
                        const r = new X(t.id, this.serializeUrl(t.extractedUrl), n.message);
                        e.next(r),
                          i
                            ? setTimeout(() => {
                                const e = this.urlHandlingStrategy.merge(n.url, this.rawUrlTree);
                                return this.scheduleNavigation(
                                  e,
                                  'imperative',
                                  null,
                                  {
                                    skipLocationChange: t.extras.skipLocationChange,
                                    replaceUrl: 'eager' === this.urlUpdateStrategy,
                                  },
                                  { resolve: t.resolve, reject: t.reject, promise: t.promise }
                                );
                              }, 0)
                            : t.resolve(!1);
                      } else {
                        this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);
                        const i = new K(t.id, this.serializeUrl(t.extractedUrl), n);
                        e.next(i);
                        try {
                          t.resolve(this.errorHandler(n));
                        } catch (s) {
                          t.reject(s);
                        }
                      }
                      var r;
                      return p.a;
                    })
                  );
                  var r, c, l;
                })
              );
            }
            resetRootComponentType(t) {
              (this.rootComponentType = t), (this.routerState.root.component = this.rootComponentType);
            }
            getTransition() {
              const t = this.transitions.value;
              return (t.urlAfterRedirects = this.browserUrlTree), t;
            }
            setTransition(t) {
              this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), t));
            }
            initialNavigation() {
              this.setUpLocationChangeListener(),
                0 === this.navigationId && this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe((t) => {
                  let e = this.parseUrl(t.url);
                  const n = 'popstate' === t.type ? 'popstate' : 'hashchange',
                    i = t.state && t.state.navigationId ? t.state : null;
                  setTimeout(() => {
                    this.scheduleNavigation(e, n, i, { replaceUrl: !0 });
                  }, 0);
                }));
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.currentNavigation;
            }
            triggerEvent(t) {
              this.events.next(t);
            }
            resetConfig(t) {
              ft(t), (this.config = t.map(bt)), (this.navigated = !1), (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(), (this.locationSubscription = null));
            }
            createUrlTree(t, e = {}) {
              const {
                relativeTo: n,
                queryParams: i,
                fragment: s,
                preserveQueryParams: o,
                queryParamsHandling: a,
                preserveFragment: c,
              } = e;
              Object(r.bb)() &&
                o &&
                console &&
                console.warn &&
                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');
              const l = n || this.routerState.root,
                u = c ? this.currentUrlTree.fragment : s;
              let h = null;
              if (a)
                switch (a) {
                  case 'merge':
                    h = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), i);
                    break;
                  case 'preserve':
                    h = this.currentUrlTree.queryParams;
                    break;
                  default:
                    h = i || null;
                }
              else h = o ? this.currentUrlTree.queryParams : i || null;
              return (
                null !== h && (h = this.removeEmptyProps(h)),
                (function (t, e, n, i, r) {
                  if (0 === n.length) return ae(e.root, e.root, e, i, r);
                  const s = (function (t) {
                    if ('string' == typeof t[0] && 1 === t.length && '/' === t[0]) return new ce(!0, 0, t);
                    let e = 0,
                      n = !1;
                    const i = t.reduce((t, i, r) => {
                      if ('object' == typeof i && null != i) {
                        if (i.outlets) {
                          const e = {};
                          return (
                            xt(i.outlets, (t, n) => {
                              e[n] = 'string' == typeof t ? t.split('/') : t;
                            }),
                            [...t, { outlets: e }]
                          );
                        }
                        if (i.segmentPath) return [...t, i.segmentPath];
                      }
                      return 'string' != typeof i
                        ? [...t, i]
                        : 0 === r
                        ? (i.split('/').forEach((i, r) => {
                            (0 == r && '.' === i) ||
                              (0 == r && '' === i ? (n = !0) : '..' === i ? e++ : '' != i && t.push(i));
                          }),
                          t)
                        : [...t, i];
                    }, []);
                    return new ce(n, e, i);
                  })(n);
                  if (s.toRoot()) return ae(e.root, new St([], {}), e, i, r);
                  const o = (function (t, e, n) {
                      if (t.isAbsolute) return new le(e.root, !0, 0);
                      if (-1 === n.snapshot._lastPathIndex) return new le(n.snapshot._urlSegment, !0, 0);
                      const i = oe(t.commands[0]) ? 0 : 1;
                      return (function (t, e, n) {
                        let i = t,
                          r = e,
                          s = n;
                        for (; s > r; ) {
                          if (((s -= r), (i = i.parent), !i)) throw new Error("Invalid number of '../'");
                          r = i.segments.length;
                        }
                        return new le(i, !1, r - s);
                      })(n.snapshot._urlSegment, n.snapshot._lastPathIndex + i, t.numberOfDoubleDots);
                    })(s, e, t),
                    a = o.processChildren
                      ? de(o.segmentGroup, o.index, s.commands)
                      : he(o.segmentGroup, o.index, s.commands);
                  return ae(o.segmentGroup, a, e, i, r);
                })(l, this.currentUrlTree, t, h, u)
              );
            }
            navigateByUrl(t, e = { skipLocationChange: !1 }) {
              Object(r.bb)() &&
                this.isNgZoneEnabled &&
                !r.B.isInAngularZone() &&
                this.console.warn("Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?");
              const n = ve(t) ? t : this.parseUrl(t),
                i = this.urlHandlingStrategy.merge(n, this.rawUrlTree);
              return this.scheduleNavigation(i, 'imperative', null, e);
            }
            navigate(t, e = { skipLocationChange: !1 }) {
              return (
                (function (t) {
                  for (let e = 0; e < t.length; e++) {
                    const n = t[e];
                    if (null == n) throw new Error(`The requested path contains ${n} segment at index ${e}`);
                  }
                })(t),
                this.navigateByUrl(this.createUrlTree(t, e), e)
              );
            }
            serializeUrl(t) {
              return this.urlSerializer.serialize(t);
            }
            parseUrl(t) {
              let e;
              try {
                e = this.urlSerializer.parse(t);
              } catch (n) {
                e = this.malformedUriErrorHandler(n, this.urlSerializer, t);
              }
              return e;
            }
            isActive(t, e) {
              if (ve(t)) return kt(this.currentUrlTree, t, e);
              const n = this.parseUrl(t);
              return kt(this.currentUrlTree, n, e);
            }
            removeEmptyProps(t) {
              return Object.keys(t).reduce((e, n) => {
                const i = t[n];
                return null != i && (e[n] = i), e;
              }, {});
            }
            processNavigations() {
              this.navigations.subscribe(
                (t) => {
                  (this.navigated = !0),
                    (this.lastSuccessfulId = t.id),
                    this.events.next(
                      new G(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(this.currentUrlTree))
                    ),
                    (this.lastSuccessfulNavigation = this.currentNavigation),
                    (this.currentNavigation = null),
                    t.resolve(!0);
                },
                (t) => {
                  this.console.warn('Unhandled Navigation Error: ');
                }
              );
            }
            scheduleNavigation(t, e, n, i, r) {
              const s = this.getTransition();
              if (s && 'imperative' !== e && 'imperative' === s.source && s.rawUrl.toString() === t.toString())
                return Promise.resolve(!0);
              if (s && 'hashchange' == e && 'popstate' === s.source && s.rawUrl.toString() === t.toString())
                return Promise.resolve(!0);
              if (s && 'popstate' == e && 'hashchange' === s.source && s.rawUrl.toString() === t.toString())
                return Promise.resolve(!0);
              let o, a, c;
              r
                ? ((o = r.resolve), (a = r.reject), (c = r.promise))
                : (c = new Promise((t, e) => {
                    (o = t), (a = e);
                  }));
              const l = ++this.navigationId;
              return (
                this.setTransition({
                  id: l,
                  source: e,
                  restoredState: n,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.rawUrlTree,
                  rawUrl: t,
                  extras: i,
                  resolve: o,
                  reject: a,
                  promise: c,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                c.catch((t) => Promise.reject(t))
              );
            }
            setBrowserUrl(t, e, n, i) {
              const r = this.urlSerializer.serialize(t);
              (i = i || {}),
                this.location.isCurrentPathEqualTo(r) || e
                  ? this.location.replaceState(r, '', Object.assign(Object.assign({}, i), { navigationId: n }))
                  : this.location.go(r, '', Object.assign(Object.assign({}, i), { navigationId: n }));
            }
            resetStateAndUrl(t, e, n) {
              (this.routerState = t),
                (this.currentUrlTree = e),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, n)),
                this.resetUrlToCurrentUrlTree();
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', {
                navigationId: this.lastSuccessfulId,
              });
            }
          }
          return (
            (t.ɵfac = function (t) {
              r.ic();
            }),
            (t.ɵdir = r.Qb({ type: t })),
            t
          );
        })(),
        cn = (() => {
          class t {
            constructor(t, e, n, i, r) {
              (this.router = t),
                (this.route = e),
                (this.commands = []),
                null == n && i.setAttribute(r.nativeElement, 'tabindex', '0');
            }
            set routerLink(t) {
              this.commands = null != t ? (Array.isArray(t) ? t : [t]) : [];
            }
            set preserveQueryParams(t) {
              Object(r.bb)() &&
                console &&
                console.warn &&
                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.'),
                (this.preserve = t);
            }
            onClick() {
              const t = {
                skipLocationChange: un(this.skipLocationChange),
                replaceUrl: un(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, t), !0;
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                preserveQueryParams: un(this.preserve),
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: un(this.preserveFragment),
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(an), r.Vb(Qt), r.gc('tabindex'), r.Vb(r.G), r.Vb(r.m));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'routerLink', '', 5, 'a', 5, 'area']],
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('click', function () {
                    return e.onClick();
                  });
              },
              inputs: {
                routerLink: 'routerLink',
                preserveQueryParams: 'preserveQueryParams',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                state: 'state',
              },
            })),
            t
          );
        })(),
        ln = (() => {
          class t {
            constructor(t, e, n) {
              (this.router = t),
                (this.route = e),
                (this.locationStrategy = n),
                (this.commands = []),
                (this.subscription = t.events.subscribe((t) => {
                  t instanceof G && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(t) {
              this.commands = null != t ? (Array.isArray(t) ? t : [t]) : [];
            }
            set preserveQueryParams(t) {
              Object(r.bb)() &&
                console &&
                console.warn &&
                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.'),
                (this.preserve = t);
            }
            ngOnChanges(t) {
              this.updateTargetUrlAndHref();
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(t, e, n, i) {
              if (0 !== t || e || n || i) return !0;
              if ('string' == typeof this.target && '_self' != this.target) return !0;
              const r = {
                skipLocationChange: un(this.skipLocationChange),
                replaceUrl: un(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, r), !1;
            }
            updateTargetUrlAndHref() {
              this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                preserveQueryParams: un(this.preserve),
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: un(this.preserveFragment),
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(an), r.Vb(Qt), r.Vb(i.h));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [
                ['a', 'routerLink', ''],
                ['area', 'routerLink', ''],
              ],
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  r.jc('click', function (t) {
                    return e.onClick(t.button, t.ctrlKey, t.metaKey, t.shiftKey);
                  }),
                  2 & t && (r.ec('href', e.href, r.Fc), r.Jb('target', e.target));
              },
              inputs: {
                routerLink: 'routerLink',
                preserveQueryParams: 'preserveQueryParams',
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                state: 'state',
              },
              features: [r.Gb],
            })),
            t
          );
        })();
      function un(t) {
        return '' === t || !!t;
      }
      let hn = (() => {
        class t {
          constructor(t, e, n, i, r) {
            (this.router = t),
              (this.element = e),
              (this.renderer = n),
              (this.link = i),
              (this.linkWithHref = r),
              (this.classes = []),
              (this.isActive = !1),
              (this.routerLinkActiveOptions = { exact: !1 }),
              (this.subscription = t.events.subscribe((t) => {
                t instanceof G && this.update();
              }));
          }
          ngAfterContentInit() {
            this.links.changes.subscribe((t) => this.update()),
              this.linksWithHrefs.changes.subscribe((t) => this.update()),
              this.update();
          }
          set routerLinkActive(t) {
            const e = Array.isArray(t) ? t : t.split(' ');
            this.classes = e.filter((t) => !!t);
          }
          ngOnChanges(t) {
            this.update();
          }
          ngOnDestroy() {
            this.subscription.unsubscribe();
          }
          update() {
            this.links &&
              this.linksWithHrefs &&
              this.router.navigated &&
              Promise.resolve().then(() => {
                const t = this.hasActiveLinks();
                this.isActive !== t &&
                  ((this.isActive = t),
                  this.classes.forEach((e) => {
                    t
                      ? this.renderer.addClass(this.element.nativeElement, e)
                      : this.renderer.removeClass(this.element.nativeElement, e);
                  }));
              });
          }
          isLinkActive(t) {
            return (e) => t.isActive(e.urlTree, this.routerLinkActiveOptions.exact);
          }
          hasActiveLinks() {
            const t = this.isLinkActive(this.router);
            return (
              (this.link && t(this.link)) ||
              (this.linkWithHref && t(this.linkWithHref)) ||
              this.links.some(t) ||
              this.linksWithHrefs.some(t)
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.Vb(an), r.Vb(r.m), r.Vb(r.G), r.Vb(cn, 8), r.Vb(ln, 8));
          }),
          (t.ɵdir = r.Qb({
            type: t,
            selectors: [['', 'routerLinkActive', '']],
            contentQueries: function (t, e, n) {
              var i;
              1 & t && (r.Ob(n, cn, !0), r.Ob(n, ln, !0)),
                2 & t && (r.Ac((i = r.kc())) && (e.links = i), r.Ac((i = r.kc())) && (e.linksWithHrefs = i));
            },
            inputs: { routerLinkActiveOptions: 'routerLinkActiveOptions', routerLinkActive: 'routerLinkActive' },
            exportAs: ['routerLinkActive'],
            features: [r.Gb],
          })),
          t
        );
      })();
      class dn {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new pn()),
            (this.attachRef = null);
        }
      }
      class pn {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(t, e) {
          const n = this.getOrCreateContext(t);
          (n.outlet = e), this.contexts.set(t, n);
        }
        onChildOutletDestroyed(t) {
          const e = this.getContext(t);
          e && (e.outlet = null);
        }
        onOutletDeactivated() {
          const t = this.contexts;
          return (this.contexts = new Map()), t;
        }
        onOutletReAttached(t) {
          this.contexts = t;
        }
        getOrCreateContext(t) {
          let e = this.getContext(t);
          return e || ((e = new dn()), this.contexts.set(t, e)), e;
        }
        getContext(t) {
          return this.contexts.get(t) || null;
        }
      }
      let fn = (() => {
        class t {
          constructor(t, e, n, i, s) {
            (this.parentContexts = t),
              (this.location = e),
              (this.resolver = n),
              (this.changeDetector = s),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new r.p()),
              (this.deactivateEvents = new r.p()),
              (this.name = i || 'primary'),
              t.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const t = this.parentContexts.getContext(this.name);
              t &&
                t.route &&
                (t.attachRef ? this.attach(t.attachRef, t.route) : this.activateWith(t.route, t.resolver || null));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new Error('Outlet is not activated');
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new Error('Outlet is not activated');
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute ? this._activatedRoute.snapshot.data : {};
          }
          detach() {
            if (!this.activated) throw new Error('Outlet is not activated');
            this.location.detach();
            const t = this.activated;
            return (this.activated = null), (this._activatedRoute = null), t;
          }
          attach(t, e) {
            (this.activated = t), (this._activatedRoute = e), this.location.insert(t.hostView);
          }
          deactivate() {
            if (this.activated) {
              const t = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(t);
            }
          }
          activateWith(t, e) {
            if (this.isActivated) throw new Error('Cannot activate an already activated outlet');
            this._activatedRoute = t;
            const n = (e = e || this.resolver).resolveComponentFactory(t._futureSnapshot.routeConfig.component),
              i = this.parentContexts.getOrCreateContext(this.name).children,
              r = new mn(t, i, this.location.injector);
            (this.activated = this.location.createComponent(n, this.location.length, r)),
              this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.Vb(pn), r.Vb(r.S), r.Vb(r.k), r.gc('name'), r.Vb(r.i));
          }),
          (t.ɵdir = r.Qb({
            type: t,
            selectors: [['router-outlet']],
            outputs: { activateEvents: 'activate', deactivateEvents: 'deactivate' },
            exportAs: ['outlet'],
          })),
          t
        );
      })();
      class mn {
        constructor(t, e, n) {
          (this.route = t), (this.childContexts = e), (this.parent = n);
        }
        get(t, e) {
          return t === Qt ? this.route : t === pn ? this.childContexts : this.parent.get(t, e);
        }
      }
      class gn {}
      class bn {
        preload(t, e) {
          return e().pipe(Object(I.a)(() => Object(s.a)(null)));
        }
      }
      class _n {
        preload(t, e) {
          return Object(s.a)(null);
        }
      }
      let yn = (() => {
          class t {
            constructor(t, e, n, i, r) {
              (this.router = t),
                (this.injector = i),
                (this.preloadingStrategy = r),
                (this.loader = new en(
                  e,
                  n,
                  (e) => t.triggerEvent(new et(e)),
                  (e) => t.triggerEvent(new nt(e))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  Object(g.a)((t) => t instanceof G),
                  Object(H.a)(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const t = this.injector.get(r.z);
              return this.processRoutes(t, this.router.config);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            processRoutes(t, e) {
              const n = [];
              for (const i of e)
                if (i.loadChildren && !i.canLoad && i._loadedConfig) {
                  const t = i._loadedConfig;
                  n.push(this.processRoutes(t.module, t.routes));
                } else
                  i.loadChildren && !i.canLoad
                    ? n.push(this.preloadConfig(t, i))
                    : i.children && n.push(this.processRoutes(t, i.children));
              return Object(o.a)(n).pipe(
                Object(W.a)(),
                Object(f.a)((t) => {})
              );
            }
            preloadConfig(t, e) {
              return this.preloadingStrategy.preload(e, () =>
                this.loader
                  .load(t.injector, e)
                  .pipe(Object(j.a)((t) => ((e._loadedConfig = t), this.processRoutes(t.module, t.routes))))
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(an), r.fc(r.y), r.fc(r.j), r.fc(r.t), r.fc(gn));
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        vn = (() => {
          class t {
            constructor(t, e, n = {}) {
              (this.router = t),
                (this.viewportScroller = e),
                (this.options = n),
                (this.lastId = 0),
                (this.lastSource = 'imperative'),
                (this.restoredId = 0),
                (this.store = {}),
                (n.scrollPositionRestoration = n.scrollPositionRestoration || 'disabled'),
                (n.anchorScrolling = n.anchorScrolling || 'disabled');
            }
            init() {
              'disabled' !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration('manual'),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((t) => {
                t instanceof q
                  ? ((this.store[this.lastId] = this.viewportScroller.getScrollPosition()),
                    (this.lastSource = t.navigationTrigger),
                    (this.restoredId = t.restoredState ? t.restoredState.navigationId : 0))
                  : t instanceof G &&
                    ((this.lastId = t.id),
                    this.scheduleScrollEvent(t, this.router.parseUrl(t.urlAfterRedirects).fragment));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((t) => {
                t instanceof at &&
                  (t.position
                    ? 'top' === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : 'enabled' === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(t.position)
                    : t.anchor && 'enabled' === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(t.anchor)
                    : 'disabled' !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(t, e) {
              this.router.triggerEvent(
                new at(t, 'popstate' === this.lastSource ? this.store[this.restoredId] : null, e)
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription && this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription && this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (t) {
              r.ic();
            }),
            (t.ɵdir = r.Qb({ type: t })),
            t
          );
        })();
      const wn = new r.s('ROUTER_CONFIGURATION'),
        xn = new r.s('ROUTER_FORROOT_GUARD'),
        Cn = [
          i.g,
          { provide: At, useClass: Dt },
          {
            provide: an,
            useFactory: function (t, e, n, r, s, o, a, c = {}, l, u) {
              const h = new an(null, t, e, n, r, s, o, vt(a));
              if (
                (l && (h.urlHandlingStrategy = l),
                u && (h.routeReuseStrategy = u),
                c.errorHandler && (h.errorHandler = c.errorHandler),
                c.malformedUriErrorHandler && (h.malformedUriErrorHandler = c.malformedUriErrorHandler),
                c.enableTracing)
              ) {
                const t = Object(i.A)();
                h.events.subscribe((e) => {
                  t.logGroup(`Router Event: ${e.constructor.name}`), t.log(e.toString()), t.log(e), t.logGroupEnd();
                });
              }
              return (
                c.onSameUrlNavigation && (h.onSameUrlNavigation = c.onSameUrlNavigation),
                c.paramsInheritanceStrategy && (h.paramsInheritanceStrategy = c.paramsInheritanceStrategy),
                c.urlUpdateStrategy && (h.urlUpdateStrategy = c.urlUpdateStrategy),
                c.relativeLinkResolution && (h.relativeLinkResolution = c.relativeLinkResolution),
                h
              );
            },
            deps: [At, pn, i.g, r.t, r.y, r.j, tn, wn, [class {}, new r.C()], [class {}, new r.C()]],
          },
          pn,
          {
            provide: Qt,
            useFactory: function (t) {
              return t.routerState.root;
            },
            deps: [an],
          },
          { provide: r.y, useClass: r.N },
          yn,
          _n,
          bn,
          { provide: wn, useValue: { enableTracing: !1 } },
        ];
      function kn() {
        return new r.A('Router', an);
      }
      let On = (() => {
        class t {
          constructor(t, e) {}
          static forRoot(e, n) {
            return {
              ngModule: t,
              providers: [
                Cn,
                In(e),
                { provide: xn, useFactory: Tn, deps: [[an, new r.C(), new r.M()]] },
                { provide: wn, useValue: n || {} },
                { provide: i.h, useFactory: En, deps: [i.s, [new r.r(i.a), new r.C()], wn] },
                { provide: vn, useFactory: Sn, deps: [an, i.v, wn] },
                { provide: gn, useExisting: n && n.preloadingStrategy ? n.preloadingStrategy : _n },
                { provide: r.A, multi: !0, useFactory: kn },
                [
                  An,
                  { provide: r.d, multi: !0, useFactory: Dn, deps: [An] },
                  { provide: Rn, useFactory: jn, deps: [An] },
                  { provide: r.b, multi: !0, useExisting: Rn },
                ],
              ],
            };
          }
          static forChild(e) {
            return { ngModule: t, providers: [In(e)] };
          }
        }
        return (
          (t.ɵmod = r.Tb({ type: t })),
          (t.ɵinj = r.Sb({
            factory: function (e) {
              return new (e || t)(r.fc(xn, 8), r.fc(an, 8));
            },
          })),
          t
        );
      })();
      function Sn(t, e, n) {
        return n.scrollOffset && e.setOffset(n.scrollOffset), new vn(t, e, n);
      }
      function En(t, e, n = {}) {
        return n.useHash ? new i.e(t, e) : new i.r(t, e);
      }
      function Tn(t) {
        if (t)
          throw new Error(
            'RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.'
          );
        return 'guarded';
      }
      function In(t) {
        return [
          { provide: r.a, multi: !0, useValue: t },
          { provide: tn, multi: !0, useValue: t },
        ];
      }
      let An = (() => {
        class t {
          constructor(t) {
            (this.injector = t), (this.initNavigation = !1), (this.resultOfPreactivationDone = new d.a());
          }
          appInitializer() {
            return this.injector.get(i.f, Promise.resolve(null)).then(() => {
              let t = null;
              const e = new Promise((e) => (t = e)),
                n = this.injector.get(an),
                i = this.injector.get(wn);
              if (this.isLegacyDisabled(i) || this.isLegacyEnabled(i)) t(!0);
              else if ('disabled' === i.initialNavigation) n.setUpLocationChangeListener(), t(!0);
              else {
                if ('enabled' !== i.initialNavigation)
                  throw new Error(`Invalid initialNavigation options: '${i.initialNavigation}'`);
                (n.hooks.afterPreactivation = () =>
                  this.initNavigation
                    ? Object(s.a)(null)
                    : ((this.initNavigation = !0), t(!0), this.resultOfPreactivationDone)),
                  n.initialNavigation();
              }
              return e;
            });
          }
          bootstrapListener(t) {
            const e = this.injector.get(wn),
              n = this.injector.get(yn),
              i = this.injector.get(vn),
              s = this.injector.get(an),
              o = this.injector.get(r.g);
            t === o.components[0] &&
              (this.isLegacyEnabled(e)
                ? s.initialNavigation()
                : this.isLegacyDisabled(e) && s.setUpLocationChangeListener(),
              n.setUpPreloading(),
              i.init(),
              s.resetRootComponentType(o.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
          isLegacyEnabled(t) {
            return (
              'legacy_enabled' === t.initialNavigation || !0 === t.initialNavigation || void 0 === t.initialNavigation
            );
          }
          isLegacyDisabled(t) {
            return 'legacy_disabled' === t.initialNavigation || !1 === t.initialNavigation;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(r.t));
          }),
          (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function Dn(t) {
        return t.appInitializer.bind(t);
      }
      function jn(t) {
        return t.bootstrapListener.bind(t);
      }
      const Rn = new r.s('Router Initializer');
    },
    u47x: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return N;
      }),
        n.d(e, 'b', function () {
          return _;
        }),
        n.d(e, 'c', function () {
          return I;
        }),
        n.d(e, 'd', function () {
          return M;
        }),
        n.d(e, 'e', function () {
          return O;
        }),
        n.d(e, 'f', function () {
          return y;
        }),
        n.d(e, 'g', function () {
          return R;
        }),
        n.d(e, 'h', function () {
          return k;
        }),
        n.d(e, 'i', function () {
          return F;
        }),
        n.d(e, 'j', function () {
          return T;
        }),
        n.d(e, 'k', function () {
          return A;
        });
      var i = n('ofXK'),
        r = n('fXoL'),
        s = n('XNiG'),
        o = n('quSY'),
        a = n('LRne'),
        c = n('FtGj'),
        l = n('vkgz'),
        u = n('Kj3r'),
        h = n('pLZG'),
        d = n('lJxs'),
        p = n('IzEk'),
        f = n('8LU1'),
        m = n('nLfN'),
        g = n('GU7r');
      class b {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new s.a()),
            (this._typeaheadSubscription = o.a.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._skipPredicateFn = (t) => t.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new s.a()),
            (this.change = new s.a()),
            t instanceof r.F &&
              t.changes.subscribe((t) => {
                if (this._activeItem) {
                  const e = t.toArray().indexOf(this._activeItem);
                  e > -1 && e !== this._activeItemIndex && (this._activeItemIndex = e);
                }
              });
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          if (this._items.length && this._items.some((t) => 'function' != typeof t.getLabel))
            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                Object(l.a)((t) => this._pressedLetters.push(t)),
                Object(u.a)(t),
                Object(h.a)(() => this._pressedLetters.length > 0),
                Object(d.a)(() => this._pressedLetters.join(''))
              )
              .subscribe((t) => {
                const e = this._getItemsArray();
                for (let n = 1; n < e.length + 1; n++) {
                  const i = (this._activeItemIndex + n) % e.length,
                    r = e[i];
                  if (!this._skipPredicateFn(r) && 0 === r.getLabel().toUpperCase().trim().indexOf(t)) {
                    this.setActiveItem(i);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        setActiveItem(t) {
          const e = this._activeItemIndex;
          this.updateActiveItem(t), this._activeItemIndex !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            n = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              (e) => !t[e] || this._allowedModifierKeys.indexOf(e) > -1
            );
          switch (e) {
            case c.o:
              return void this.tabOut.next();
            case c.d:
              if (this._vertical && n) {
                this.setNextItemActive();
                break;
              }
              return;
            case c.p:
              if (this._vertical && n) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case c.m:
              if (this._horizontal && n) {
                'rtl' === this._horizontal ? this.setPreviousItemActive() : this.setNextItemActive();
                break;
              }
              return;
            case c.i:
              if (this._horizontal && n) {
                'rtl' === this._horizontal ? this.setNextItemActive() : this.setPreviousItemActive();
                break;
              }
              return;
            default:
              return void (
                (n || Object(c.s)(t, 'shiftKey')) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= c.a && e <= c.q) || (e >= c.r && e <= c.j)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            n = 'number' == typeof t ? t : e.indexOf(t),
            i = e[n];
          (this._activeItem = null == i ? null : i), (this._activeItemIndex = n);
        }
        _setActiveItemByDelta(t) {
          this._wrap ? this._setActiveInWrapMode(t) : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let n = 1; n <= e.length; n++) {
            const i = (this._activeItemIndex + t * n + e.length) % e.length;
            if (!this._skipPredicateFn(e[i])) return void this.setActiveItem(i);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const n = this._getItemsArray();
          if (n[t]) {
            for (; this._skipPredicateFn(n[t]); ) if (!n[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof r.F ? this._items.toArray() : this._items;
        }
      }
      class _ extends b {
        setActiveItem(t) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(t),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class y extends b {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(t) {
          return (this._origin = t), this;
        }
        setActiveItem(t) {
          super.setActiveItem(t), this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let v = (() => {
        class t {
          constructor(t) {
            this._platform = t;
          }
          isDisabled(t) {
            return t.hasAttribute('disabled');
          }
          isVisible(t) {
            return (
              (function (t) {
                return !!(
                  t.offsetWidth ||
                  t.offsetHeight ||
                  ('function' == typeof t.getClientRects && t.getClientRects().length)
                );
              })(t) && 'visible' === getComputedStyle(t).visibility
            );
          }
          isTabbable(t) {
            if (!this._platform.isBrowser) return !1;
            const e = (function (t) {
              try {
                return t.frameElement;
              } catch (e) {
                return null;
              }
            })(((n = t).ownerDocument && n.ownerDocument.defaultView) || window);
            var n;
            if (e) {
              const t = e && e.nodeName.toLowerCase();
              if (-1 === x(e)) return !1;
              if ((this._platform.BLINK || this._platform.WEBKIT) && 'object' === t) return !1;
              if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(e)) return !1;
            }
            let i = t.nodeName.toLowerCase(),
              r = x(t);
            if (t.hasAttribute('contenteditable')) return -1 !== r;
            if ('iframe' === i) return !1;
            if ('audio' === i) {
              if (!t.hasAttribute('controls')) return !1;
              if (this._platform.BLINK) return !0;
            }
            if ('video' === i) {
              if (!t.hasAttribute('controls') && this._platform.TRIDENT) return !1;
              if (this._platform.BLINK || this._platform.FIREFOX) return !0;
            }
            return (
              ('object' !== i || (!this._platform.BLINK && !this._platform.WEBKIT)) &&
              !(
                this._platform.WEBKIT &&
                this._platform.IOS &&
                !(function (t) {
                  let e = t.nodeName.toLowerCase(),
                    n = 'input' === e && t.type;
                  return 'text' === n || 'password' === n || 'select' === e || 'textarea' === e;
                })(t)
              ) &&
              t.tabIndex >= 0
            );
          }
          isFocusable(t) {
            return (
              (function (t) {
                return (
                  !(function (t) {
                    return (
                      (function (t) {
                        return 'input' == t.nodeName.toLowerCase();
                      })(t) && 'hidden' == t.type
                    );
                  })(t) &&
                  ((function (t) {
                    let e = t.nodeName.toLowerCase();
                    return 'input' === e || 'select' === e || 'button' === e || 'textarea' === e;
                  })(t) ||
                    (function (t) {
                      return (
                        (function (t) {
                          return 'a' == t.nodeName.toLowerCase();
                        })(t) && t.hasAttribute('href')
                      );
                    })(t) ||
                    t.hasAttribute('contenteditable') ||
                    w(t))
                );
              })(t) &&
              !this.isDisabled(t) &&
              this.isVisible(t)
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(m.a));
          }),
          (t.ɵprov = Object(r.Rb)({
            factory: function () {
              return new t(Object(r.fc)(m.a));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function w(t) {
        if (!t.hasAttribute('tabindex') || void 0 === t.tabIndex) return !1;
        let e = t.getAttribute('tabindex');
        return '-32768' != e && !(!e || isNaN(parseInt(e, 10)));
      }
      function x(t) {
        if (!w(t)) return null;
        const e = parseInt(t.getAttribute('tabindex') || '', 10);
        return isNaN(e) ? -1 : e;
      }
      class C {
        constructor(t, e, n, i, r = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = n),
            (this._document = i),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            r || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor), this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t && (t.removeEventListener('focus', this.startAnchorListener), t.parentNode && t.parentNode.removeChild(t)),
            e && (e.removeEventListener('focus', this.endAnchorListener), e.parentNode && e.parentNode.removeChild(e)),
            (this._startAnchor = this._endAnchor = null);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener('focus', this.startAnchorListener)),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener('focus', this.endAnchorListener));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(this._startAnchor, this._element),
              this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusInitialElement()));
          });
        }
        focusFirstTabbableElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusFirstTabbableElement()));
          });
        }
        focusLastTabbableElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusLastTabbableElement()));
          });
        }
        _getRegionBoundary(t) {
          let e = this._element.querySelectorAll(
            `[cdk-focus-region-${t}], ` + `[cdkFocusRegion${t}], ` + `[cdk-focus-${t}]`
          );
          for (let n = 0; n < e.length; n++)
            e[n].hasAttribute(`cdk-focus-${t}`)
              ? console.warn(
                  `Found use of deprecated attribute 'cdk-focus-${t}', ` +
                    `use 'cdkFocusRegion${t}' instead. The deprecated ` +
                    'attribute will be removed in 8.0.0.',
                  e[n]
                )
              : e[n].hasAttribute(`cdk-focus-region-${t}`) &&
                console.warn(
                  `Found use of deprecated attribute 'cdk-focus-region-${t}', ` +
                    `use 'cdkFocusRegion${t}' instead. The deprecated attribute ` +
                    'will be removed in 8.0.0.',
                  e[n]
                );
          return 'start' == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement() {
          const t = this._element.querySelector('[cdk-focus-initial], [cdkFocusInitial]');
          return t
            ? (t.hasAttribute('cdk-focus-initial') &&
                console.warn(
                  "Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0",
                  t
                ),
              Object(r.bb)() &&
                !this._checker.isFocusable(t) &&
                console.warn("Element matching '[cdkFocusInitial]' is not focusable.", t),
              t.focus(),
              !0)
            : this.focusFirstTabbableElement();
        }
        focusFirstTabbableElement() {
          const t = this._getRegionBoundary('start');
          return t && t.focus(), !!t;
        }
        focusLastTabbableElement() {
          const t = this._getRegionBoundary('end');
          return t && t.focus(), !!t;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
          let e = t.children || t.childNodes;
          for (let n = 0; n < e.length; n++) {
            let t = e[n].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(e[n]) : null;
            if (t) return t;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
          let e = t.children || t.childNodes;
          for (let n = e.length - 1; n >= 0; n--) {
            let t = e[n].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(e[n]) : null;
            if (t) return t;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add('cdk-visually-hidden'),
            t.classList.add('cdk-focus-trap-anchor'),
            t.setAttribute('aria-hidden', 'true'),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute('tabindex', '0') : e.removeAttribute('tabindex');
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor), this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable ? t() : this._ngZone.onStable.asObservable().pipe(Object(p.a)(1)).subscribe(t);
        }
      }
      let k = (() => {
          class t {
            constructor(t, e, n) {
              (this._checker = t), (this._ngZone = e), (this._document = n);
            }
            create(t, e = !1) {
              return new C(t, this._checker, this._ngZone, this._document, e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(v), r.fc(r.B), r.fc(i.d));
            }),
            (t.ɵprov = Object(r.Rb)({
              factory: function () {
                return new t(Object(r.fc)(v), Object(r.fc)(r.B), Object(r.fc)(i.d));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        O = (() => {
          class t {
            constructor(t, e, n) {
              (this._elementRef = t),
                (this._focusTrapFactory = e),
                (this._previouslyFocusedElement = null),
                (this._document = n),
                (this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, !0));
            }
            get enabled() {
              return this.focusTrap.enabled;
            }
            set enabled(t) {
              this.focusTrap.enabled = Object(f.c)(t);
            }
            get autoCapture() {
              return this._autoCapture;
            }
            set autoCapture(t) {
              this._autoCapture = Object(f.c)(t);
            }
            ngOnDestroy() {
              this.focusTrap.destroy(),
                this._previouslyFocusedElement &&
                  (this._previouslyFocusedElement.focus(), (this._previouslyFocusedElement = null));
            }
            ngAfterContentInit() {
              this.focusTrap.attachAnchors(),
                this.autoCapture &&
                  ((this._previouslyFocusedElement = this._document.activeElement),
                  this.focusTrap.focusInitialElementWhenReady());
            }
            ngDoCheck() {
              this.focusTrap.hasAttached() || this.focusTrap.attachAnchors();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m), r.Vb(k), r.Vb(i.d));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'cdkTrapFocus', '']],
              inputs: { enabled: ['cdkTrapFocus', 'enabled'], autoCapture: ['cdkTrapFocusAutoCapture', 'autoCapture'] },
              exportAs: ['cdkTrapFocus'],
            })),
            t
          );
        })();
      'undefined' != typeof Element && Element;
      const S = new r.s('liveAnnouncerElement', {
          providedIn: 'root',
          factory: function () {
            return null;
          },
        }),
        E = new r.s('LIVE_ANNOUNCER_DEFAULT_OPTIONS');
      let T = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._ngZone = e),
                (this._defaultOptions = i),
                (this._document = n),
                (this._liveElement = t || this._createLiveElement());
            }
            announce(t, ...e) {
              const n = this._defaultOptions;
              let i, r;
              return (
                1 === e.length && 'number' == typeof e[0] ? (r = e[0]) : ([i, r] = e),
                this.clear(),
                clearTimeout(this._previousTimeout),
                i || (i = n && n.politeness ? n.politeness : 'polite'),
                null == r && n && (r = n.duration),
                this._liveElement.setAttribute('aria-live', i),
                this._ngZone.runOutsideAngular(
                  () =>
                    new Promise((e) => {
                      clearTimeout(this._previousTimeout),
                        (this._previousTimeout = setTimeout(() => {
                          (this._liveElement.textContent = t),
                            e(),
                            'number' == typeof r && (this._previousTimeout = setTimeout(() => this.clear(), r));
                        }, 100));
                    })
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = '');
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement &&
                  this._liveElement.parentNode &&
                  (this._liveElement.parentNode.removeChild(this._liveElement), (this._liveElement = null));
            }
            _createLiveElement() {
              const t = this._document.getElementsByClassName('cdk-live-announcer-element'),
                e = this._document.createElement('div');
              for (let n = 0; n < t.length; n++) t[n].parentNode.removeChild(t[n]);
              return (
                e.classList.add('cdk-live-announcer-element'),
                e.classList.add('cdk-visually-hidden'),
                e.setAttribute('aria-atomic', 'true'),
                e.setAttribute('aria-live', 'polite'),
                this._document.body.appendChild(e),
                e
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(S, 8), r.fc(r.B), r.fc(i.d), r.fc(E, 8));
            }),
            (t.ɵprov = Object(r.Rb)({
              factory: function () {
                return new t(Object(r.fc)(S, 8), Object(r.fc)(r.B), Object(r.fc)(i.d), Object(r.fc)(E, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        I = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._elementRef = t),
                (this._liveAnnouncer = e),
                (this._contentObserver = n),
                (this._ngZone = i),
                (this._politeness = 'off');
            }
            get politeness() {
              return this._politeness;
            }
            set politeness(t) {
              (this._politeness = 'polite' === t || 'assertive' === t ? t : 'off'),
                'off' === this._politeness
                  ? this._subscription && (this._subscription.unsubscribe(), (this._subscription = null))
                  : this._subscription ||
                    (this._subscription = this._ngZone.runOutsideAngular(() =>
                      this._contentObserver.observe(this._elementRef).subscribe(() => {
                        const t = this._elementRef.nativeElement.textContent;
                        t !== this._previousAnnouncedText &&
                          (this._liveAnnouncer.announce(t, this._politeness), (this._previousAnnouncedText = t));
                      })
                    ));
            }
            ngOnDestroy() {
              this._subscription && this._subscription.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m), r.Vb(T), r.Vb(g.b), r.Vb(r.B));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [['', 'cdkAriaLive', '']],
              inputs: { politeness: ['cdkAriaLive', 'politeness'] },
              exportAs: ['cdkAriaLive'],
            })),
            t
          );
        })();
      function A(t) {
        return 0 === t.buttons;
      }
      const D = new r.s('cdk-focus-monitor-default-options'),
        j = Object(m.f)({ passive: !0, capture: !0 });
      let R = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._ngZone = t),
              (this._platform = e),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._documentKeydownListener = () => {
                (this._lastTouchTarget = null), this._setOriginForCurrentEventQueue('keyboard');
              }),
              (this._documentMousedownListener = (t) => {
                if (!this._lastTouchTarget) {
                  const e = A(t) ? 'keyboard' : 'mouse';
                  this._setOriginForCurrentEventQueue(e);
                }
              }),
              (this._documentTouchstartListener = (t) => {
                null != this._touchTimeoutId && clearTimeout(this._touchTimeoutId),
                  (this._lastTouchTarget = P(t)),
                  (this._touchTimeoutId = setTimeout(() => (this._lastTouchTarget = null), 650));
              }),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0), (this._windowFocusTimeoutId = setTimeout(() => (this._windowFocused = !1)));
              }),
              (this._rootNodeFocusAndBlurListener = (t) => {
                const e = P(t),
                  n = 'focus' === t.type ? this._onFocus : this._onBlur;
                for (let i = e; i; i = i.parentElement) n.call(this, t, i);
              }),
              (this._document = n),
              (this._detectionMode = (null == i ? void 0 : i.detectionMode) || 0);
          }
          monitor(t, e = !1) {
            if (!this._platform.isBrowser) return Object(a.a)(null);
            const n = Object(f.e)(t),
              i = Object(m.c)(n) || this._getDocument(),
              r = this._elementInfo.get(n);
            if (r) return e && (r.checkChildren = !0), r.subject.asObservable();
            const o = { checkChildren: e, subject: new s.a(), rootNode: i };
            return this._elementInfo.set(n, o), this._registerGlobalListeners(o), o.subject.asObservable();
          }
          stopMonitoring(t) {
            const e = Object(f.e)(t),
              n = this._elementInfo.get(e);
            n &&
              (n.subject.complete(), this._setClasses(e), this._elementInfo.delete(e), this._removeGlobalListeners(n));
          }
          focusVia(t, e, n) {
            const i = Object(f.e)(t);
            this._setOriginForCurrentEventQueue(e), 'function' == typeof i.focus && i.focus(n);
          }
          ngOnDestroy() {
            this._elementInfo.forEach((t, e) => this.stopMonitoring(e));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _toggleClass(t, e, n) {
            n ? t.classList.add(e) : t.classList.remove(e);
          }
          _getFocusOrigin(t) {
            return this._origin
              ? this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : this._wasCausedByTouch(t)
              ? 'touch'
              : 'program';
          }
          _setClasses(t, e) {
            this._toggleClass(t, 'cdk-focused', !!e),
              this._toggleClass(t, 'cdk-touch-focused', 'touch' === e),
              this._toggleClass(t, 'cdk-keyboard-focused', 'keyboard' === e),
              this._toggleClass(t, 'cdk-mouse-focused', 'mouse' === e),
              this._toggleClass(t, 'cdk-program-focused', 'program' === e);
          }
          _setOriginForCurrentEventQueue(t) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = t),
                0 === this._detectionMode && (this._originTimeoutId = setTimeout(() => (this._origin = null), 1));
            });
          }
          _wasCausedByTouch(t) {
            const e = P(t);
            return (
              this._lastTouchTarget instanceof Node &&
              e instanceof Node &&
              (e === this._lastTouchTarget || e.contains(this._lastTouchTarget))
            );
          }
          _onFocus(t, e) {
            const n = this._elementInfo.get(e);
            if (!n || (!n.checkChildren && e !== P(t))) return;
            const i = this._getFocusOrigin(t);
            this._setClasses(e, i), this._emitOrigin(n.subject, i), (this._lastFocusOrigin = i);
          }
          _onBlur(t, e) {
            const n = this._elementInfo.get(e);
            !n ||
              (n.checkChildren && t.relatedTarget instanceof Node && e.contains(t.relatedTarget)) ||
              (this._setClasses(e), this._emitOrigin(n.subject, null));
          }
          _emitOrigin(t, e) {
            this._ngZone.run(() => t.next(e));
          }
          _registerGlobalListeners(t) {
            if (!this._platform.isBrowser) return;
            const e = t.rootNode,
              n = this._rootNodeFocusListenerCount.get(e) || 0;
            n ||
              this._ngZone.runOutsideAngular(() => {
                e.addEventListener('focus', this._rootNodeFocusAndBlurListener, j),
                  e.addEventListener('blur', this._rootNodeFocusAndBlurListener, j);
              }),
              this._rootNodeFocusListenerCount.set(e, n + 1),
              1 == ++this._monitoredElementCount &&
                this._ngZone.runOutsideAngular(() => {
                  const t = this._getDocument(),
                    e = this._getWindow();
                  t.addEventListener('keydown', this._documentKeydownListener, j),
                    t.addEventListener('mousedown', this._documentMousedownListener, j),
                    t.addEventListener('touchstart', this._documentTouchstartListener, j),
                    e.addEventListener('focus', this._windowFocusListener);
                });
          }
          _removeGlobalListeners(t) {
            const e = t.rootNode;
            if (this._rootNodeFocusListenerCount.has(e)) {
              const t = this._rootNodeFocusListenerCount.get(e);
              t > 1
                ? this._rootNodeFocusListenerCount.set(e, t - 1)
                : (e.removeEventListener('focus', this._rootNodeFocusAndBlurListener, j),
                  e.removeEventListener('blur', this._rootNodeFocusAndBlurListener, j),
                  this._rootNodeFocusListenerCount.delete(e));
            }
            if (!--this._monitoredElementCount) {
              const t = this._getDocument(),
                e = this._getWindow();
              t.removeEventListener('keydown', this._documentKeydownListener, j),
                t.removeEventListener('mousedown', this._documentMousedownListener, j),
                t.removeEventListener('touchstart', this._documentTouchstartListener, j),
                e.removeEventListener('focus', this._windowFocusListener),
                clearTimeout(this._windowFocusTimeoutId),
                clearTimeout(this._touchTimeoutId),
                clearTimeout(this._originTimeoutId);
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(r.fc(r.B), r.fc(m.a), r.fc(i.d, 8), r.fc(D, 8));
          }),
          (t.ɵprov = Object(r.Rb)({
            factory: function () {
              return new t(Object(r.fc)(r.B), Object(r.fc)(m.a), Object(r.fc)(i.d, 8), Object(r.fc)(D, 8));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function P(t) {
        return t.composedPath ? t.composedPath()[0] : t.target;
      }
      let M = (() => {
          class t {
            constructor(t, e) {
              (this._elementRef = t),
                (this._focusMonitor = e),
                (this.cdkFocusChange = new r.p()),
                (this._monitorSubscription = this._focusMonitor
                  .monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))
                  .subscribe((t) => this.cdkFocusChange.emit(t)));
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef), this._monitorSubscription.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.Vb(r.m), r.Vb(R));
            }),
            (t.ɵdir = r.Qb({
              type: t,
              selectors: [
                ['', 'cdkMonitorElementFocus', ''],
                ['', 'cdkMonitorSubtreeFocus', ''],
              ],
              outputs: { cdkFocusChange: 'cdkFocusChange' },
            })),
            t
          );
        })(),
        F = (() => {
          class t {
            constructor(t, e) {
              (this._platform = t), (this._document = e);
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const t = this._document.createElement('div');
              (t.style.backgroundColor = 'rgb(1,2,3)'),
                (t.style.position = 'absolute'),
                this._document.body.appendChild(t);
              const e = this._document.defaultView || window,
                n = e && e.getComputedStyle ? e.getComputedStyle(t) : null,
                i = ((n && n.backgroundColor) || '').replace(/ /g, '');
              switch ((this._document.body.removeChild(t), i)) {
                case 'rgb(0,0,0)':
                  return 2;
                case 'rgb(255,255,255)':
                  return 1;
              }
              return 0;
            }
            _applyBodyHighContrastModeCssClasses() {
              if (this._platform.isBrowser && this._document.body) {
                const t = this._document.body.classList;
                t.remove('cdk-high-contrast-active'),
                  t.remove('cdk-high-contrast-black-on-white'),
                  t.remove('cdk-high-contrast-white-on-black');
                const e = this.getHighContrastMode();
                1 === e
                  ? (t.add('cdk-high-contrast-active'), t.add('cdk-high-contrast-black-on-white'))
                  : 2 === e && (t.add('cdk-high-contrast-active'), t.add('cdk-high-contrast-white-on-black'));
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(r.fc(m.a), r.fc(i.d));
            }),
            (t.ɵprov = Object(r.Rb)({
              factory: function () {
                return new t(Object(r.fc)(m.a), Object(r.fc)(i.d));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        N = (() => {
          class t {
            constructor(t) {
              t._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (t.ɵmod = r.Tb({ type: t })),
            (t.ɵinj = r.Sb({
              factory: function (e) {
                return new (e || t)(r.fc(F));
              },
              imports: [[m.b, g.c]],
            })),
            t
          );
        })();
    },
    vD0D: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return p;
      }),
        n.d(e, 'b', function () {
          return d;
        });
      var i = n('mrSG'),
        r = n('fXoL'),
        s = n('mxbh'),
        o = n('srgo'),
        a = n('Nwf9'),
        c = n('71bx'),
        l = n('HDdC'),
        u = n('lJxs');
      let h = (() => {
          class t {
            constructor() {
              (this.isInitialised = !1), (this.isBootstrapped = !1), (this._dirty = !0);
            }
            get dirty() {
              return this._dirty;
            }
            set dirty(t) {
              this._dirty = t;
            }
            ngxsOnChanges(t) {
              var e;
              this.dirty &&
                this.isBootstrapped &&
                ((this.dirty = !1), null === (e = this.ngxsDataDoCheck) || void 0 === e || e.call(this));
            }
            ngxsOnInit() {
              this.isInitialised = !0;
            }
            ngxsAfterBootstrap() {
              var t;
              (this.isBootstrapped = !0),
                this.dirty && ((this.dirty = !1), null === (t = this.ngxsDataDoCheck) || void 0 === t || t.call(this));
            }
            markAsDirtyAfterReset() {
              var t;
              (this.dirty = !0), null === (t = this.ngxsDataAfterReset) || void 0 === t || t.call(this);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        d = (() => {
          class t extends h {
            get snapshot() {
              return Object(o.p)(this.getState());
            }
            get ctx() {
              return Object(o.n)(this.context);
            }
            getState() {
              return this.ctx.getState();
            }
            dispatch(t) {
              return this.ctx.dispatch(t);
            }
            patchState(t) {
              this.ctx.patchState(t);
            }
            setState(t) {
              this.ctx.setState(t);
            }
            reset() {
              this.ctx.setState(this.initialState), this.markAsDirtyAfterReset();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return f(e || t);
            }),
            (t.ɵprov = r.Rb({ token: t, factory: t.ɵfac })),
            Object(i.b)(
              [Object(s.a)(), Object(i.c)('design:type', Object), Object(i.c)('design:paramtypes', [])],
              t.prototype,
              'snapshot',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('patchValue')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'patchState',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('stateValue')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'setState',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', []),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'reset',
              null
            ),
            t
          );
        })(),
        p = (() => {
          class t extends h {
            constructor() {
              super(...arguments), (this.primaryKey = 'id'), (this.comparator = null);
            }
            get snapshot() {
              return Object(o.p)(this.getState());
            }
            get ids() {
              return this.snapshot.ids;
            }
            get entities() {
              return this.snapshot.entities;
            }
            get ids$() {
              return this.state$.pipe(Object(u.a)((t) => t.ids));
            }
            get entities$() {
              return this.state$.pipe(Object(u.a)((t) => t.entities));
            }
            get ctx() {
              return Object(o.n)(this.context);
            }
            setComparator(t) {
              return (this.comparator = t), this;
            }
            dispatch(t) {
              return this.ctx.dispatch(t);
            }
            getState() {
              return this.ctx.getState();
            }
            selectId(t) {
              var e;
              return null === (e = t) || void 0 === e ? void 0 : e[this.primaryKey];
            }
            selectOne(t) {
              var e;
              return null !== (e = this.snapshot.entities[t]) && void 0 !== e ? e : null;
            }
            selectAll() {
              const t = this.getState();
              return t.ids.map((e) => t.entities[e]);
            }
            reset() {
              this.setEntitiesState(this.initialState), this.markAsDirtyAfterReset();
            }
            addOne(t) {
              this.addEntityOne(t);
            }
            addMany(t) {
              this.addEntitiesMany(t);
            }
            setOne(t) {
              this.setEntityOne(t);
            }
            setMany(t) {
              this.setEntitiesMany(t);
            }
            setAll(t) {
              this.setEntitiesAll(t);
            }
            updateOne(t) {
              this.updateEntitiesMany([t]);
            }
            updateMany(t) {
              this.updateEntitiesMany(t);
            }
            upsertOne(t) {
              this.upsertEntitiesMany([t]);
            }
            upsertMany(t) {
              this.upsertEntitiesMany(t);
            }
            removeOne(t) {
              this.removeEntitiesMany([t]);
            }
            removeMany(t) {
              this.removeEntitiesMany(t);
            }
            removeByEntity(t) {
              const e = this.selectId(t);
              this.removeEntitiesMany([e]);
            }
            removeByEntities(t) {
              const e = [];
              for (const n of t) {
                const t = this.selectId(n);
                e.push(t);
              }
              this.removeEntitiesMany(e);
            }
            removeAll() {
              this.setEntitiesState(this.initialState);
            }
            sort(t) {
              (this.comparator = null != t ? t : this.comparator),
                Object(o.v)(this.comparator) ? console.warn(a.c.NGXS_COMPARE) : this.setEntitiesState(this.getState());
            }
            addEntityOne(t) {
              const e = this.getState(),
                n = this.selectIdValue(t);
              n in e.entities ||
                this.setEntitiesState(
                  Object.assign(Object.assign({}, e), {
                    ids: [...e.ids, n],
                    entities: Object.assign(Object.assign({}, e.entities), { [n]: t }),
                  })
                );
            }
            addEntitiesMany(t) {
              const e = this.getState(),
                n = {},
                i = [];
              for (const r of t) {
                const t = this.selectIdValue(r);
                t in e.entities || t in n || (i.push(t), (n[t] = r));
              }
              i.length &&
                this.setEntitiesState(
                  Object.assign(Object.assign({}, e), {
                    ids: [...e.ids, ...i],
                    entities: Object.assign(Object.assign({}, e.entities), n),
                  })
                );
            }
            setEntitiesAll(t) {
              const e = this.getState(),
                n = {},
                i = [];
              for (const r of t) {
                const t = this.selectIdValue(r);
                t in n || (i.push(t), (n[t] = r));
              }
              this.setEntitiesState(Object.assign(Object.assign({}, e), { ids: i, entities: n }));
            }
            setEntityOne(t) {
              const e = this.getState(),
                n = this.selectIdValue(t);
              this.setEntitiesState(
                Object.assign(
                  Object.assign({}, e),
                  n in e.entities
                    ? { entities: Object.assign(Object.assign({}, e.entities), { [n]: t }) }
                    : { ids: [...e.ids, n], entities: Object.assign(Object.assign({}, e.entities), { [n]: t }) }
                )
              );
            }
            setEntitiesMany(t) {
              for (const e of t) this.setEntityOne(e);
            }
            updateEntitiesMany(t) {
              const e = this.getState();
              if (0 === (t = t.filter((t) => t.id in e.entities)).length) return;
              const n = this.generateKeyMap(e),
                i = Object.assign({}, e.entities);
              for (const r of t) {
                const t = this.updateOrigin(i, r),
                  e = this.selectIdValue(t);
                e !== r.id && (delete n[r.id], delete i[r.id]), (n[r.id] = e), (i[e] = t);
              }
              this.setEntitiesState(
                Object.assign(Object.assign({}, e), {
                  ids: e.ids.map((t) => {
                    var e;
                    return null !== (e = n[t]) && void 0 !== e ? e : t;
                  }),
                  entities: i,
                })
              );
            }
            upsertEntitiesMany(t) {
              const e = this.getState(),
                n = [],
                i = [];
              for (const r of t) {
                const t = this.selectIdValue(r);
                t in e.entities ? n.push({ id: t, changes: r }) : i.push(r);
              }
              this.updateMany(n), this.addMany(i);
            }
            removeEntitiesMany(t) {
              const e = this.getState(),
                n = this.generateKeyMap(e),
                i = Object.assign({}, e.entities);
              for (const r of t) r in i && (delete n[r], delete i[r]);
              this.setEntitiesState(
                Object.assign(Object.assign({}, e), { ids: e.ids.filter((t) => t in n), entities: i })
              );
            }
            setEntitiesState(t) {
              const e = this.sortKeysByComparator(t.ids, t.entities);
              this.ctx.setState(Object.assign(Object.assign({}, t), { ids: e, entities: t.entities }));
            }
            sortKeysByComparator(t, e) {
              if (Object(o.v)(this.comparator)) return t;
              const n = t.slice(),
                i = this.comparator;
              return 'function' == typeof i ? n.sort((t, n) => i(e[t], e[n])) : this.sortByComparatorOptions(n, i, e);
            }
            sortByComparatorOptions(t, e, n) {
              switch (null == e ? void 0 : e.sortByOrder) {
                case 'asc':
                  return t.sort((t, i) => Object(c.b)(null == e ? void 0 : e.sortBy, n[t], n[i]));
                case 'desc':
                  return t.sort((t, i) => Object(c.c)(null == e ? void 0 : e.sortBy, n[t], n[i]));
                default:
                  return (
                    Object(r.bb)() &&
                      console.warn(
                        `Invalid --\x3e { sortByOrder: "${null == e ? void 0 : e.sortByOrder}" } not supported!`
                      ),
                    t
                  );
              }
            }
            generateKeyMap(t) {
              return t.ids.reduce((t, e) => ((t[e] = e), t), {});
            }
            updateOrigin(t, e) {
              return Object.assign(Object.assign({}, t[e.id]), e.changes);
            }
            selectIdValue(t) {
              const e = this.selectId(t);
              return (
                Object(o.v)(e) &&
                  Object(r.bb)() &&
                  console.warn(
                    `The entity passed to the 'selectId' implementation returned ${e}.`,
                    "You should probably provide your own 'selectId' implementation.",
                    'The entity that was passed:',
                    t,
                    'The current `selectId` implementation: (entity: V): K => entity.id'
                  ),
                e
              );
            }
          }
          return (
            Object(i.b)(
              [Object(s.a)(), Object(i.c)('design:type', Object), Object(i.c)('design:paramtypes', [])],
              t.prototype,
              'snapshot',
              null
            ),
            Object(i.b)(
              [Object(s.a)(), Object(i.c)('design:type', Array), Object(i.c)('design:paramtypes', [])],
              t.prototype,
              'ids',
              null
            ),
            Object(i.b)(
              [Object(s.a)(), Object(i.c)('design:type', Object), Object(i.c)('design:paramtypes', [])],
              t.prototype,
              'entities',
              null
            ),
            Object(i.b)(
              [Object(s.a)(), Object(i.c)('design:type', l.a), Object(i.c)('design:paramtypes', [])],
              t.prototype,
              'ids$',
              null
            ),
            Object(i.b)(
              [Object(s.a)(), Object(i.c)('design:type', l.a), Object(i.c)('design:paramtypes', [])],
              t.prototype,
              'entities$',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', []),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'reset',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entity')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'addOne',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entities')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Array]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'addMany',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entity')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'setOne',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entities')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Array]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'setMany',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entities')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Array]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'setAll',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('update')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'updateOne',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('updates')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Array]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'updateMany',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entity')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'upsertOne',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entities')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Array]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'upsertMany',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('id')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'removeOne',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('ids')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Array]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'removeMany',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entity')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'removeByEntity',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('entities')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Array]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'removeByEntities',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', []),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'removeAll',
              null
            ),
            Object(i.b)(
              [
                Object(s.b)(),
                Object(i.d)(0, Object(s.c)('comparator')),
                Object(i.c)('design:type', Function),
                Object(i.c)('design:paramtypes', [Object]),
                Object(i.c)('design:returntype', void 0),
              ],
              t.prototype,
              'sort',
              null
            ),
            t
          );
        })();
      const f = r.dc(d);
    },
    vkgz: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('7o/Q');
      function r() {}
      var s = n('n6bG');
      function o(t, e, n) {
        return function (i) {
          return i.lift(new a(t, e, n));
        };
      }
      class a {
        constructor(t, e, n) {
          (this.nextOrObserver = t), (this.error = e), (this.complete = n);
        }
        call(t, e) {
          return e.subscribe(new c(t, this.nextOrObserver, this.error, this.complete));
        }
      }
      class c extends i.a {
        constructor(t, e, n, i) {
          super(t),
            (this._tapNext = r),
            (this._tapError = r),
            (this._tapComplete = r),
            (this._tapError = n || r),
            (this._tapComplete = i || r),
            Object(s.a)(e)
              ? ((this._context = this), (this._tapNext = e))
              : e &&
                ((this._context = e),
                (this._tapNext = e.next || r),
                (this._tapError = e.error || r),
                (this._tapComplete = e.complete || r));
        }
        _next(t) {
          try {
            this._tapNext.call(this._context, t);
          } catch (e) {
            return void this.destination.error(e);
          }
          this.destination.next(t);
        }
        _error(t) {
          try {
            this._tapError.call(this._context, t);
          } catch (t) {
            return void this.destination.error(t);
          }
          this.destination.error(t);
        }
        _complete() {
          try {
            this._tapComplete.call(this._context);
          } catch (t) {
            return void this.destination.error(t);
          }
          return this.destination.complete();
        }
      }
    },
    vxfF: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return g;
      }),
        n.d(e, 'b', function () {
          return _;
        }),
        n.d(e, 'c', function () {
          return m;
        }),
        n.d(e, 'd', function () {
          return y;
        }),
        n.d(e, 'e', function () {
          return b;
        }),
        n('8LU1');
      var i = n('fXoL'),
        r = n('XNiG'),
        s = n('LRne'),
        o = n('HDdC'),
        a = n('xgIS'),
        c = n('VRyK'),
        l = (n('eNwd'), n('7Hc7'), n('quSY'), n('7+OI'), n('/uUt'), n('3UWI')),
        u = n('pLZG'),
        h = n('1G5W');
      n('JX91'), n('7o/Q'), n('eIep'), n('UXun');
      var d = n('nLfN'),
        p = n('ofXK'),
        f = n('cH1L');
      n('0EQZ');
      let m = (() => {
          class t {
            constructor(t, e, n) {
              (this._ngZone = t),
                (this._platform = e),
                (this._scrolled = new r.a()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = n);
            }
            register(t) {
              this.scrollContainers.has(t) ||
                this.scrollContainers.set(
                  t,
                  t.elementScrolled().subscribe(() => this._scrolled.next(t))
                );
            }
            deregister(t) {
              const e = this.scrollContainers.get(t);
              e && (e.unsubscribe(), this.scrollContainers.delete(t));
            }
            scrolled(t = 20) {
              return this._platform.isBrowser
                ? new o.a((e) => {
                    this._globalSubscription || this._addGlobalListener();
                    const n = t > 0 ? this._scrolled.pipe(Object(l.a)(t)).subscribe(e) : this._scrolled.subscribe(e);
                    return (
                      this._scrolledCount++,
                      () => {
                        n.unsubscribe(), this._scrolledCount--, this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : Object(s.a)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((t, e) => this.deregister(e)),
                this._scrolled.complete();
            }
            ancestorScrolled(t, e) {
              const n = this.getAncestorScrollContainers(t);
              return this.scrolled(e).pipe(Object(u.a)((t) => !t || n.indexOf(t) > -1));
            }
            getAncestorScrollContainers(t) {
              const e = [];
              return (
                this.scrollContainers.forEach((n, i) => {
                  this._scrollableContainsElement(i, t) && e.push(i);
                }),
                e
              );
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _scrollableContainsElement(t, e) {
              let n = e.nativeElement,
                i = t.getElementRef().nativeElement;
              do {
                if (n == i) return !0;
              } while ((n = n.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() => {
                const t = this._getWindow();
                return Object(a.a)(t.document, 'scroll').subscribe(() => this._scrolled.next());
              });
            }
            _removeGlobalListener() {
              this._globalSubscription && (this._globalSubscription.unsubscribe(), (this._globalSubscription = null));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(i.B), i.fc(d.a), i.fc(p.d, 8));
            }),
            (t.ɵprov = Object(i.Rb)({
              factory: function () {
                return new t(Object(i.fc)(i.B), Object(i.fc)(d.a), Object(i.fc)(p.d, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        g = (() => {
          class t {
            constructor(t, e, n, i) {
              (this.elementRef = t),
                (this.scrollDispatcher = e),
                (this.ngZone = n),
                (this.dir = i),
                (this._destroyed = new r.a()),
                (this._elementScrolled = new o.a((t) =>
                  this.ngZone.runOutsideAngular(() =>
                    Object(a.a)(this.elementRef.nativeElement, 'scroll').pipe(Object(h.a)(this._destroyed)).subscribe(t)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this), this._destroyed.next(), this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(t) {
              const e = this.elementRef.nativeElement,
                n = this.dir && 'rtl' == this.dir.value;
              null == t.left && (t.left = n ? t.end : t.start),
                null == t.right && (t.right = n ? t.start : t.end),
                null != t.bottom && (t.top = e.scrollHeight - e.clientHeight - t.bottom),
                n && 0 != Object(d.d)()
                  ? (null != t.left && (t.right = e.scrollWidth - e.clientWidth - t.left),
                    2 == Object(d.d)()
                      ? (t.left = t.right)
                      : 1 == Object(d.d)() && (t.left = t.right ? -t.right : t.right))
                  : null != t.right && (t.left = e.scrollWidth - e.clientWidth - t.right),
                this._applyScrollToOptions(t);
            }
            _applyScrollToOptions(t) {
              const e = this.elementRef.nativeElement;
              Object(d.g)()
                ? e.scrollTo(t)
                : (null != t.top && (e.scrollTop = t.top), null != t.left && (e.scrollLeft = t.left));
            }
            measureScrollOffset(t) {
              const e = this.elementRef.nativeElement;
              if ('top' == t) return e.scrollTop;
              if ('bottom' == t) return e.scrollHeight - e.clientHeight - e.scrollTop;
              const n = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == t ? (t = n ? 'right' : 'left') : 'end' == t && (t = n ? 'left' : 'right'),
                n && 2 == Object(d.d)()
                  ? 'left' == t
                    ? e.scrollWidth - e.clientWidth - e.scrollLeft
                    : e.scrollLeft
                  : n && 1 == Object(d.d)()
                  ? 'left' == t
                    ? e.scrollLeft + e.scrollWidth - e.clientWidth
                    : -e.scrollLeft
                  : 'left' == t
                  ? e.scrollLeft
                  : e.scrollWidth - e.clientWidth - e.scrollLeft
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Vb(i.m), i.Vb(m), i.Vb(i.B), i.Vb(f.b, 8));
            }),
            (t.ɵdir = i.Qb({
              type: t,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
            })),
            t
          );
        })(),
        b = (() => {
          class t {
            constructor(t, e, n) {
              (this._platform = t),
                (this._document = n),
                e.runOutsideAngular(() => {
                  const e = this._getWindow();
                  (this._change = t.isBrowser
                    ? Object(c.a)(Object(a.a)(e, 'resize'), Object(a.a)(e, 'orientationchange'))
                    : Object(s.a)()),
                    (this._invalidateCache = this.change().subscribe(() => this._updateViewportSize()));
                });
            }
            ngOnDestroy() {
              this._invalidateCache.unsubscribe();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const t = { width: this._viewportSize.width, height: this._viewportSize.height };
              return this._platform.isBrowser || (this._viewportSize = null), t;
            }
            getViewportRect() {
              const t = this.getViewportScrollPosition(),
                { width: e, height: n } = this.getViewportSize();
              return { top: t.top, left: t.left, bottom: t.top + n, right: t.left + e, height: n, width: e };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const t = this._getDocument(),
                e = this._getWindow(),
                n = t.documentElement,
                i = n.getBoundingClientRect();
              return {
                top: -i.top || t.body.scrollTop || e.scrollY || n.scrollTop || 0,
                left: -i.left || t.body.scrollLeft || e.scrollX || n.scrollLeft || 0,
              };
            }
            change(t = 20) {
              return t > 0 ? this._change.pipe(Object(l.a)(t)) : this._change;
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _updateViewportSize() {
              const t = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: t.innerWidth, height: t.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(d.a), i.fc(i.B), i.fc(p.d, 8));
            }),
            (t.ɵprov = Object(i.Rb)({
              factory: function () {
                return new t(Object(i.fc)(d.a), Object(i.fc)(i.B), Object(i.fc)(p.d, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        _ = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        y = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[f.a, d.b, _], f.a, _],
            })),
            t
          );
        })();
    },
    w1tV: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return f;
      });
      var i = n('XNiG'),
        r = n('HDdC'),
        s = n('7o/Q'),
        o = n('quSY');
      function a() {
        return function (t) {
          return t.lift(new c(t));
        };
      }
      class c {
        constructor(t) {
          this.connectable = t;
        }
        call(t, e) {
          const { connectable: n } = this;
          n._refCount++;
          const i = new l(t, n),
            r = e.subscribe(i);
          return i.closed || (i.connection = n.connect()), r;
        }
      }
      class l extends s.a {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _unsubscribe() {
          const { connectable: t } = this;
          if (!t) return void (this.connection = null);
          this.connectable = null;
          const e = t._refCount;
          if (e <= 0) return void (this.connection = null);
          if (((t._refCount = e - 1), e > 1)) return void (this.connection = null);
          const { connection: n } = this,
            i = t._connection;
          (this.connection = null), !i || (n && i !== n) || i.unsubscribe();
        }
      }
      class u extends r.a {
        constructor(t, e) {
          super(), (this.source = t), (this.subjectFactory = e), (this._refCount = 0), (this._isComplete = !1);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (t && !t.isStopped) || (this._subject = this.subjectFactory()), this._subject;
        }
        connect() {
          let t = this._connection;
          return (
            t ||
              ((this._isComplete = !1),
              (t = this._connection = new o.a()),
              t.add(this.source.subscribe(new d(this.getSubject(), this))),
              t.closed && ((this._connection = null), (t = o.a.EMPTY))),
            t
          );
        }
        refCount() {
          return a()(this);
        }
      }
      const h = (() => {
        const t = u.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: t._subscribe },
          _isComplete: { value: t._isComplete, writable: !0 },
          getSubject: { value: t.getSubject },
          connect: { value: t.connect },
          refCount: { value: t.refCount },
        };
      })();
      class d extends i.b {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _error(t) {
          this._unsubscribe(), super._error(t);
        }
        _complete() {
          (this.connectable._isComplete = !0), this._unsubscribe(), super._complete();
        }
        _unsubscribe() {
          const t = this.connectable;
          if (t) {
            this.connectable = null;
            const e = t._connection;
            (t._refCount = 0), (t._subject = null), (t._connection = null), e && e.unsubscribe();
          }
        }
      }
      function p() {
        return new i.a();
      }
      function f() {
        return (t) => {
          return a()(
            ((e = p),
            function (t) {
              let n;
              n =
                'function' == typeof e
                  ? e
                  : function () {
                      return e;
                    };
              const i = Object.create(t, h);
              return (i.source = t), (i.subjectFactory = n), i;
            })(t)
          );
          var e;
        };
      }
    },
    wZkO: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return K;
      }),
        n.d(e, 'b', function () {
          return U;
        }),
        n.d(e, 'c', function () {
          return ot;
        }),
        n.d(e, 'd', function () {
          return ft;
        });
      var i = n('u47x'),
        r = n('GU7r'),
        s = n('+rOU'),
        o = n('ofXK'),
        a = n('fXoL'),
        c = n('FKr1'),
        l = n('R1ws'),
        u = n('XNiG'),
        h = n('quSY'),
        d = n('VRyK'),
        p = n('xgIS'),
        f = n('LRne'),
        m = n('PqYM'),
        g = n('R0Ic'),
        b = n('JX91'),
        _ = n('/uUt'),
        y = n('1G5W'),
        v = n('8LU1'),
        w = n('nLfN'),
        x = n('FtGj'),
        C = n('cH1L'),
        k = n('vxfF');
      function O(t, e) {
        1 & t && a.tc(0);
      }
      const S = ['*'];
      function E(t, e) {}
      const T = function (t) {
          return { animationDuration: t };
        },
        I = function (t, e) {
          return { value: t, params: e };
        },
        A = ['tabBodyWrapper'],
        D = ['tabHeader'];
      function j(t, e) {}
      function R(t, e) {
        if ((1 & t && a.Kc(0, j, 0, 0, 'ng-template', 9), 2 & t)) {
          const t = a.nc().$implicit;
          a.vc('cdkPortalOutlet', t.templateLabel);
        }
      }
      function P(t, e) {
        if ((1 & t && a.Mc(0), 2 & t)) {
          const t = a.nc().$implicit;
          a.Nc(t.textLabel);
        }
      }
      function M(t, e) {
        if (1 & t) {
          const t = a.cc();
          a.bc(0, 'div', 6),
            a.jc('click', function () {
              a.Dc(t);
              const n = e.$implicit,
                i = e.index,
                r = a.nc(),
                s = a.Bc(1);
              return r._handleClick(n, s, i);
            }),
            a.bc(1, 'div', 7),
            a.Kc(2, R, 1, 1, 'ng-template', 8),
            a.Kc(3, P, 1, 1, 'ng-template', 8),
            a.ac(),
            a.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = e.index,
            i = a.nc();
          a.Mb('mat-tab-label-active', i.selectedIndex == n),
            a.vc('id', i._getTabLabelId(n))('disabled', t.disabled)('matRippleDisabled', t.disabled || i.disableRipple),
            a.Jb('tabIndex', i._getTabIndex(t, n))('aria-posinset', n + 1)('aria-setsize', i._tabs.length)(
              'aria-controls',
              i._getTabContentId(n)
            )('aria-selected', i.selectedIndex == n)('aria-label', t.ariaLabel || null)(
              'aria-labelledby',
              !t.ariaLabel && t.ariaLabelledby ? t.ariaLabelledby : null
            ),
            a.Ib(2),
            a.vc('ngIf', t.templateLabel),
            a.Ib(1),
            a.vc('ngIf', !t.templateLabel);
        }
      }
      function F(t, e) {
        if (1 & t) {
          const t = a.cc();
          a.bc(0, 'mat-tab-body', 10),
            a.jc('_onCentered', function () {
              return a.Dc(t), a.nc()._removeTabBodyWrapperHeight();
            })('_onCentering', function (e) {
              return a.Dc(t), a.nc()._setTabBodyWrapperHeight(e);
            }),
            a.ac();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = e.index,
            i = a.nc();
          a.Mb('mat-tab-body-active', i.selectedIndex == n),
            a.vc('id', i._getTabContentId(n))('content', t.content)('position', t.position)('origin', t.origin)(
              'animationDuration',
              i.animationDuration
            ),
            a.Jb('aria-labelledby', i._getTabLabelId(n));
        }
      }
      const N = ['tabListContainer'],
        V = ['tabList'],
        L = ['nextPaginator'],
        H = ['previousPaginator'],
        z = new a.s('MatInkBarPositioner', {
          providedIn: 'root',
          factory: function () {
            return (t) => ({
              left: t ? (t.offsetLeft || 0) + 'px' : '0',
              width: t ? (t.offsetWidth || 0) + 'px' : '0',
            });
          },
        });
      let B = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._elementRef = t), (this._ngZone = e), (this._inkBarPositioner = n), (this._animationMode = i);
            }
            alignToElement(t) {
              this.show(),
                'undefined' != typeof requestAnimationFrame
                  ? this._ngZone.runOutsideAngular(() => {
                      requestAnimationFrame(() => this._setStyles(t));
                    })
                  : this._setStyles(t);
            }
            show() {
              this._elementRef.nativeElement.style.visibility = 'visible';
            }
            hide() {
              this._elementRef.nativeElement.style.visibility = 'hidden';
            }
            _setStyles(t) {
              const e = this._inkBarPositioner(t),
                n = this._elementRef.nativeElement;
              (n.style.left = e.left), (n.style.width = e.width);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(a.B), a.Vb(z), a.Vb(l.a, 8));
            }),
            (t.ɵdir = a.Qb({
              type: t,
              selectors: [['mat-ink-bar']],
              hostAttrs: [1, 'mat-ink-bar'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && a.Mb('_mat-animation-noopable', 'NoopAnimations' === e._animationMode);
              },
            })),
            t
          );
        })(),
        U = (() => {
          class t {
            constructor(t) {
              this.template = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.O));
            }),
            (t.ɵdir = a.Qb({ type: t, selectors: [['', 'matTabContent', '']] })),
            t
          );
        })(),
        W = (() => {
          class t extends s.b {}
          return (
            (t.ɵfac = function (e) {
              return $(e || t);
            }),
            (t.ɵdir = a.Qb({
              type: t,
              selectors: [
                ['', 'mat-tab-label', ''],
                ['', 'matTabLabel', ''],
              ],
              features: [a.Fb],
            })),
            t
          );
        })();
      const $ = a.dc(W);
      class q {}
      const G = Object(c.x)(q),
        X = new a.s('MAT_TAB_GROUP');
      let K = (() => {
        class t extends G {
          constructor(t, e) {
            super(),
              (this._viewContainerRef = t),
              (this._closestTabGroup = e),
              (this.textLabel = ''),
              (this._contentPortal = null),
              (this._stateChanges = new u.a()),
              (this.position = null),
              (this.origin = null),
              (this.isActive = !1);
          }
          get templateLabel() {
            return this._templateLabel;
          }
          set templateLabel(t) {
            t && (this._templateLabel = t);
          }
          get content() {
            return this._contentPortal;
          }
          ngOnChanges(t) {
            (t.hasOwnProperty('textLabel') || t.hasOwnProperty('disabled')) && this._stateChanges.next();
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
          ngOnInit() {
            this._contentPortal = new s.h(this._explicitContent || this._implicitContent, this._viewContainerRef);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(a.Vb(a.S), a.Vb(X, 8));
          }),
          (t.ɵcmp = a.Pb({
            type: t,
            selectors: [['mat-tab']],
            contentQueries: function (t, e, n) {
              var i;
              1 & t && (a.Ob(n, W, !0), a.Hc(n, U, !0, a.O)),
                2 & t &&
                  (a.Ac((i = a.kc())) && (e.templateLabel = i.first),
                  a.Ac((i = a.kc())) && (e._explicitContent = i.first));
            },
            viewQuery: function (t, e) {
              var n;
              1 & t && a.Ic(a.O, !0), 2 & t && a.Ac((n = a.kc())) && (e._implicitContent = n.first);
            },
            inputs: {
              disabled: 'disabled',
              textLabel: ['label', 'textLabel'],
              ariaLabel: ['aria-label', 'ariaLabel'],
              ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
            },
            exportAs: ['matTab'],
            features: [a.Fb, a.Gb],
            ngContentSelectors: S,
            decls: 1,
            vars: 0,
            template: function (t, e) {
              1 & t && (a.uc(), a.Kc(0, O, 1, 0, 'ng-template'));
            },
            encapsulation: 2,
          })),
          t
        );
      })();
      const Y = {
        translateTab: Object(g.m)('translateTab', [
          Object(g.j)('center, void, left-origin-center, right-origin-center', Object(g.k)({ transform: 'none' })),
          Object(g.j)('left', Object(g.k)({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),
          Object(g.j)('right', Object(g.k)({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),
          Object(g.l)(
            '* => left, * => right, left => center, right => center',
            Object(g.e)('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')
          ),
          Object(g.l)('void => left-origin-center', [
            Object(g.k)({ transform: 'translate3d(-100%, 0, 0)' }),
            Object(g.e)('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),
          ]),
          Object(g.l)('void => right-origin-center', [
            Object(g.k)({ transform: 'translate3d(100%, 0, 0)' }),
            Object(g.e)('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),
          ]),
        ]),
      };
      let Z = (() => {
          class t extends s.c {
            constructor(t, e, n, i) {
              super(t, e, i), (this._host = n), (this._centeringSub = h.a.EMPTY), (this._leavingSub = h.a.EMPTY);
            }
            ngOnInit() {
              super.ngOnInit(),
                (this._centeringSub = this._host._beforeCentering
                  .pipe(Object(b.a)(this._host._isCenterPosition(this._host._position)))
                  .subscribe((t) => {
                    t && !this.hasAttached() && this.attach(this._host._content);
                  })),
                (this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {
                  this.detach();
                }));
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this._centeringSub.unsubscribe(), this._leavingSub.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.k), a.Vb(a.S), a.Vb(Object(a.Y)(() => J)), a.Vb(o.d));
            }),
            (t.ɵdir = a.Qb({ type: t, selectors: [['', 'matTabBodyHost', '']], features: [a.Fb] })),
            t
          );
        })(),
        Q = (() => {
          class t {
            constructor(t, e, n) {
              (this._elementRef = t),
                (this._dir = e),
                (this._dirChangeSubscription = h.a.EMPTY),
                (this._translateTabComplete = new u.a()),
                (this._onCentering = new a.p()),
                (this._beforeCentering = new a.p()),
                (this._afterLeavingCenter = new a.p()),
                (this._onCentered = new a.p(!0)),
                (this.animationDuration = '500ms'),
                e &&
                  (this._dirChangeSubscription = e.change.subscribe((t) => {
                    this._computePositionAnimationState(t), n.markForCheck();
                  })),
                this._translateTabComplete
                  .pipe(Object(_.a)((t, e) => t.fromState === e.fromState && t.toState === e.toState))
                  .subscribe((t) => {
                    this._isCenterPosition(t.toState) &&
                      this._isCenterPosition(this._position) &&
                      this._onCentered.emit(),
                      this._isCenterPosition(t.fromState) &&
                        !this._isCenterPosition(this._position) &&
                        this._afterLeavingCenter.emit();
                  });
            }
            set position(t) {
              (this._positionIndex = t), this._computePositionAnimationState();
            }
            ngOnInit() {
              'center' == this._position &&
                null != this.origin &&
                (this._position = this._computePositionFromOrigin(this.origin));
            }
            ngOnDestroy() {
              this._dirChangeSubscription.unsubscribe(), this._translateTabComplete.complete();
            }
            _onTranslateTabStarted(t) {
              const e = this._isCenterPosition(t.toState);
              this._beforeCentering.emit(e), e && this._onCentering.emit(this._elementRef.nativeElement.clientHeight);
            }
            _getLayoutDirection() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            _isCenterPosition(t) {
              return 'center' == t || 'left-origin-center' == t || 'right-origin-center' == t;
            }
            _computePositionAnimationState(t = this._getLayoutDirection()) {
              this._position =
                this._positionIndex < 0
                  ? 'ltr' == t
                    ? 'left'
                    : 'right'
                  : this._positionIndex > 0
                  ? 'ltr' == t
                    ? 'right'
                    : 'left'
                  : 'center';
            }
            _computePositionFromOrigin(t) {
              const e = this._getLayoutDirection();
              return ('ltr' == e && t <= 0) || ('rtl' == e && t > 0) ? 'left-origin-center' : 'right-origin-center';
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(C.b, 8), a.Vb(a.i));
            }),
            (t.ɵdir = a.Qb({
              type: t,
              inputs: {
                animationDuration: 'animationDuration',
                position: 'position',
                _content: ['content', '_content'],
                origin: 'origin',
              },
              outputs: {
                _onCentering: '_onCentering',
                _beforeCentering: '_beforeCentering',
                _afterLeavingCenter: '_afterLeavingCenter',
                _onCentered: '_onCentered',
              },
            })),
            t
          );
        })(),
        J = (() => {
          class t extends Q {
            constructor(t, e, n) {
              super(t, e, n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(C.b, 8), a.Vb(a.i));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-tab-body']],
              viewQuery: function (t, e) {
                var n;
                1 & t && a.Rc(s.f, !0), 2 & t && a.Ac((n = a.kc())) && (e._portalHost = n.first);
              },
              hostAttrs: [1, 'mat-tab-body'],
              features: [a.Fb],
              decls: 3,
              vars: 6,
              consts: [
                [1, 'mat-tab-body-content'],
                ['content', ''],
                ['matTabBodyHost', ''],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.bc(0, 'div', 0, 1),
                  a.jc('@translateTab.start', function (t) {
                    return e._onTranslateTabStarted(t);
                  })('@translateTab.done', function (t) {
                    return e._translateTabComplete.next(t);
                  }),
                  a.Kc(2, E, 0, 0, 'ng-template', 2),
                  a.ac()),
                  2 & t && a.vc('@translateTab', a.yc(3, I, e._position, a.xc(1, T, e.animationDuration)));
              },
              directives: [Z],
              styles: [
                '.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\n',
              ],
              encapsulation: 2,
              data: { animation: [Y.translateTab] },
            })),
            t
          );
        })();
      const tt = new a.s('MAT_TABS_CONFIG');
      let et = 0;
      class nt {}
      class it {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const rt = Object(c.v)(Object(c.w)(it), 'primary');
      let st = (() => {
          class t extends rt {
            constructor(t, e, n, i) {
              super(t),
                (this._changeDetectorRef = e),
                (this._animationMode = i),
                (this._tabs = new a.F()),
                (this._indexToSelect = 0),
                (this._tabBodyWrapperHeight = 0),
                (this._tabsSubscription = h.a.EMPTY),
                (this._tabLabelSubscription = h.a.EMPTY),
                (this._dynamicHeight = !1),
                (this._selectedIndex = null),
                (this.headerPosition = 'above'),
                (this.selectedIndexChange = new a.p()),
                (this.focusChange = new a.p()),
                (this.animationDone = new a.p()),
                (this.selectedTabChange = new a.p(!0)),
                (this._groupId = et++),
                (this.animationDuration = n && n.animationDuration ? n.animationDuration : '500ms'),
                (this.disablePagination = !(!n || null == n.disablePagination) && n.disablePagination);
            }
            get dynamicHeight() {
              return this._dynamicHeight;
            }
            set dynamicHeight(t) {
              this._dynamicHeight = Object(v.c)(t);
            }
            get selectedIndex() {
              return this._selectedIndex;
            }
            set selectedIndex(t) {
              this._indexToSelect = Object(v.f)(t, null);
            }
            get animationDuration() {
              return this._animationDuration;
            }
            set animationDuration(t) {
              this._animationDuration = /^\d+$/.test(t) ? t + 'ms' : t;
            }
            get backgroundColor() {
              return this._backgroundColor;
            }
            set backgroundColor(t) {
              const e = this._elementRef.nativeElement;
              e.classList.remove(`mat-background-${this.backgroundColor}`),
                t && e.classList.add(`mat-background-${t}`),
                (this._backgroundColor = t);
            }
            ngAfterContentChecked() {
              const t = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));
              if (this._selectedIndex != t) {
                const e = null == this._selectedIndex;
                e || this.selectedTabChange.emit(this._createChangeEvent(t)),
                  Promise.resolve().then(() => {
                    this._tabs.forEach((e, n) => (e.isActive = n === t)), e || this.selectedIndexChange.emit(t);
                  });
              }
              this._tabs.forEach((e, n) => {
                (e.position = n - t),
                  null == this._selectedIndex || 0 != e.position || e.origin || (e.origin = t - this._selectedIndex);
              }),
                this._selectedIndex !== t && ((this._selectedIndex = t), this._changeDetectorRef.markForCheck());
            }
            ngAfterContentInit() {
              this._subscribeToAllTabChanges(),
                this._subscribeToTabLabels(),
                (this._tabsSubscription = this._tabs.changes.subscribe(() => {
                  if (this._clampTabIndex(this._indexToSelect) === this._selectedIndex) {
                    const t = this._tabs.toArray();
                    for (let e = 0; e < t.length; e++)
                      if (t[e].isActive) {
                        this._indexToSelect = this._selectedIndex = e;
                        break;
                      }
                  }
                  this._changeDetectorRef.markForCheck();
                }));
            }
            _subscribeToAllTabChanges() {
              this._allTabs.changes.pipe(Object(b.a)(this._allTabs)).subscribe((t) => {
                this._tabs.reset(t.filter((t) => !t._closestTabGroup || t._closestTabGroup === this)),
                  this._tabs.notifyOnChanges();
              });
            }
            ngOnDestroy() {
              this._tabs.destroy(), this._tabsSubscription.unsubscribe(), this._tabLabelSubscription.unsubscribe();
            }
            realignInkBar() {
              this._tabHeader && this._tabHeader._alignInkBarToSelectedTab();
            }
            _focusChanged(t) {
              this.focusChange.emit(this._createChangeEvent(t));
            }
            _createChangeEvent(t) {
              const e = new nt();
              return (e.index = t), this._tabs && this._tabs.length && (e.tab = this._tabs.toArray()[t]), e;
            }
            _subscribeToTabLabels() {
              this._tabLabelSubscription && this._tabLabelSubscription.unsubscribe(),
                (this._tabLabelSubscription = Object(d.a)(...this._tabs.map((t) => t._stateChanges)).subscribe(() =>
                  this._changeDetectorRef.markForCheck()
                ));
            }
            _clampTabIndex(t) {
              return Math.min(this._tabs.length - 1, Math.max(t || 0, 0));
            }
            _getTabLabelId(t) {
              return `mat-tab-label-${this._groupId}-${t}`;
            }
            _getTabContentId(t) {
              return `mat-tab-content-${this._groupId}-${t}`;
            }
            _setTabBodyWrapperHeight(t) {
              if (!this._dynamicHeight || !this._tabBodyWrapperHeight) return;
              const e = this._tabBodyWrapper.nativeElement;
              (e.style.height = this._tabBodyWrapperHeight + 'px'),
                this._tabBodyWrapper.nativeElement.offsetHeight && (e.style.height = t + 'px');
            }
            _removeTabBodyWrapperHeight() {
              const t = this._tabBodyWrapper.nativeElement;
              (this._tabBodyWrapperHeight = t.clientHeight), (t.style.height = ''), this.animationDone.emit();
            }
            _handleClick(t, e, n) {
              t.disabled || (this.selectedIndex = e.focusIndex = n);
            }
            _getTabIndex(t, e) {
              return t.disabled ? null : this.selectedIndex === e ? 0 : -1;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(a.i), a.Vb(tt, 8), a.Vb(l.a, 8));
            }),
            (t.ɵdir = a.Qb({
              type: t,
              inputs: {
                headerPosition: 'headerPosition',
                animationDuration: 'animationDuration',
                disablePagination: 'disablePagination',
                dynamicHeight: 'dynamicHeight',
                selectedIndex: 'selectedIndex',
                backgroundColor: 'backgroundColor',
              },
              outputs: {
                selectedIndexChange: 'selectedIndexChange',
                focusChange: 'focusChange',
                animationDone: 'animationDone',
                selectedTabChange: 'selectedTabChange',
              },
              features: [a.Fb],
            })),
            t
          );
        })(),
        ot = (() => {
          class t extends st {
            constructor(t, e, n, i) {
              super(t, e, n, i);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(a.i), a.Vb(tt, 8), a.Vb(l.a, 8));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-tab-group']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && a.Ob(n, K, !0), 2 & t && a.Ac((i = a.kc())) && (e._allTabs = i);
              },
              viewQuery: function (t, e) {
                var n;
                1 & t && (a.Rc(A, !0), a.Rc(D, !0)),
                  2 & t &&
                    (a.Ac((n = a.kc())) && (e._tabBodyWrapper = n.first),
                    a.Ac((n = a.kc())) && (e._tabHeader = n.first));
              },
              hostAttrs: [1, 'mat-tab-group'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  a.Mb('mat-tab-group-dynamic-height', e.dynamicHeight)(
                    'mat-tab-group-inverted-header',
                    'below' === e.headerPosition
                  );
              },
              inputs: { color: 'color', disableRipple: 'disableRipple' },
              exportAs: ['matTabGroup'],
              features: [a.Hb([{ provide: X, useExisting: t }]), a.Fb],
              decls: 6,
              vars: 7,
              consts: [
                [3, 'selectedIndex', 'disableRipple', 'disablePagination', 'indexFocused', 'selectFocusedIndex'],
                ['tabHeader', ''],
                [
                  'class',
                  'mat-tab-label mat-focus-indicator',
                  'role',
                  'tab',
                  'matTabLabelWrapper',
                  '',
                  'mat-ripple',
                  '',
                  'cdkMonitorElementFocus',
                  '',
                  3,
                  'id',
                  'mat-tab-label-active',
                  'disabled',
                  'matRippleDisabled',
                  'click',
                  4,
                  'ngFor',
                  'ngForOf',
                ],
                [1, 'mat-tab-body-wrapper'],
                ['tabBodyWrapper', ''],
                [
                  'role',
                  'tabpanel',
                  3,
                  'id',
                  'mat-tab-body-active',
                  'content',
                  'position',
                  'origin',
                  'animationDuration',
                  '_onCentered',
                  '_onCentering',
                  4,
                  'ngFor',
                  'ngForOf',
                ],
                [
                  'role',
                  'tab',
                  'matTabLabelWrapper',
                  '',
                  'mat-ripple',
                  '',
                  'cdkMonitorElementFocus',
                  '',
                  1,
                  'mat-tab-label',
                  'mat-focus-indicator',
                  3,
                  'id',
                  'disabled',
                  'matRippleDisabled',
                  'click',
                ],
                [1, 'mat-tab-label-content'],
                [3, 'ngIf'],
                [3, 'cdkPortalOutlet'],
                [
                  'role',
                  'tabpanel',
                  3,
                  'id',
                  'content',
                  'position',
                  'origin',
                  'animationDuration',
                  '_onCentered',
                  '_onCentering',
                ],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.bc(0, 'mat-tab-header', 0, 1),
                  a.jc('indexFocused', function (t) {
                    return e._focusChanged(t);
                  })('selectFocusedIndex', function (t) {
                    return (e.selectedIndex = t);
                  }),
                  a.Kc(2, M, 4, 14, 'div', 2),
                  a.ac(),
                  a.bc(3, 'div', 3, 4),
                  a.Kc(5, F, 1, 8, 'mat-tab-body', 5),
                  a.ac()),
                  2 & t &&
                    (a.vc('selectedIndex', e.selectedIndex || 0)('disableRipple', e.disableRipple)(
                      'disablePagination',
                      e.disablePagination
                    ),
                    a.Ib(2),
                    a.vc('ngForOf', e._tabs),
                    a.Ib(1),
                    a.Mb('_mat-animation-noopable', 'NoopAnimations' === e._animationMode),
                    a.Ib(2),
                    a.vc('ngForOf', e._tabs));
              },
              directives: function () {
                return [pt, o.k, lt, c.q, i.d, o.l, s.c, J];
              },
              styles: [
                '.mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\n',
              ],
              encapsulation: 2,
            })),
            t
          );
        })();
      class at {}
      const ct = Object(c.x)(at);
      let lt = (() => {
        class t extends ct {
          constructor(t) {
            super(), (this.elementRef = t);
          }
          focus() {
            this.elementRef.nativeElement.focus();
          }
          getOffsetLeft() {
            return this.elementRef.nativeElement.offsetLeft;
          }
          getOffsetWidth() {
            return this.elementRef.nativeElement.offsetWidth;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(a.Vb(a.m));
          }),
          (t.ɵdir = a.Qb({
            type: t,
            selectors: [['', 'matTabLabelWrapper', '']],
            hostVars: 3,
            hostBindings: function (t, e) {
              2 & t && (a.Jb('aria-disabled', !!e.disabled), a.Mb('mat-tab-disabled', e.disabled));
            },
            inputs: { disabled: 'disabled' },
            features: [a.Fb],
          })),
          t
        );
      })();
      const ut = Object(w.f)({ passive: !0 });
      let ht = (() => {
          class t {
            constructor(t, e, n, i, r, s, o) {
              (this._elementRef = t),
                (this._changeDetectorRef = e),
                (this._viewportRuler = n),
                (this._dir = i),
                (this._ngZone = r),
                (this._platform = s),
                (this._animationMode = o),
                (this._scrollDistance = 0),
                (this._selectedIndexChanged = !1),
                (this._destroyed = new u.a()),
                (this._showPaginationControls = !1),
                (this._disableScrollAfter = !0),
                (this._disableScrollBefore = !0),
                (this._stopScrolling = new u.a()),
                (this.disablePagination = !1),
                (this._selectedIndex = 0),
                (this.selectFocusedIndex = new a.p()),
                (this.indexFocused = new a.p()),
                r.runOutsideAngular(() => {
                  Object(p.a)(t.nativeElement, 'mouseleave')
                    .pipe(Object(y.a)(this._destroyed))
                    .subscribe(() => {
                      this._stopInterval();
                    });
                });
            }
            get selectedIndex() {
              return this._selectedIndex;
            }
            set selectedIndex(t) {
              (t = Object(v.f)(t)),
                this._selectedIndex != t &&
                  ((this._selectedIndexChanged = !0),
                  (this._selectedIndex = t),
                  this._keyManager && this._keyManager.updateActiveItem(t));
            }
            ngAfterViewInit() {
              Object(p.a)(this._previousPaginator.nativeElement, 'touchstart', ut)
                .pipe(Object(y.a)(this._destroyed))
                .subscribe(() => {
                  this._handlePaginatorPress('before');
                }),
                Object(p.a)(this._nextPaginator.nativeElement, 'touchstart', ut)
                  .pipe(Object(y.a)(this._destroyed))
                  .subscribe(() => {
                    this._handlePaginatorPress('after');
                  });
            }
            ngAfterContentInit() {
              const t = this._dir ? this._dir.change : Object(f.a)(null),
                e = this._viewportRuler.change(150),
                n = () => {
                  this.updatePagination(), this._alignInkBarToSelectedTab();
                };
              (this._keyManager = new i.f(this._items)
                .withHorizontalOrientation(this._getLayoutDirection())
                .withWrap()),
                this._keyManager.updateActiveItem(0),
                'undefined' != typeof requestAnimationFrame ? requestAnimationFrame(n) : n(),
                Object(d.a)(t, e, this._items.changes)
                  .pipe(Object(y.a)(this._destroyed))
                  .subscribe(() => {
                    Promise.resolve().then(n), this._keyManager.withHorizontalOrientation(this._getLayoutDirection());
                  }),
                this._keyManager.change.pipe(Object(y.a)(this._destroyed)).subscribe((t) => {
                  this.indexFocused.emit(t), this._setTabFocus(t);
                });
            }
            ngAfterContentChecked() {
              this._tabLabelCount != this._items.length &&
                (this.updatePagination(),
                (this._tabLabelCount = this._items.length),
                this._changeDetectorRef.markForCheck()),
                this._selectedIndexChanged &&
                  (this._scrollToLabel(this._selectedIndex),
                  this._checkScrollingControls(),
                  this._alignInkBarToSelectedTab(),
                  (this._selectedIndexChanged = !1),
                  this._changeDetectorRef.markForCheck()),
                this._scrollDistanceChanged &&
                  (this._updateTabScrollPosition(),
                  (this._scrollDistanceChanged = !1),
                  this._changeDetectorRef.markForCheck());
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete(), this._stopScrolling.complete();
            }
            _handleKeydown(t) {
              if (!Object(x.s)(t))
                switch (t.keyCode) {
                  case x.h:
                    this._keyManager.setFirstItemActive(), t.preventDefault();
                    break;
                  case x.e:
                    this._keyManager.setLastItemActive(), t.preventDefault();
                    break;
                  case x.f:
                  case x.n:
                    this.focusIndex !== this.selectedIndex &&
                      (this.selectFocusedIndex.emit(this.focusIndex), this._itemSelected(t));
                    break;
                  default:
                    this._keyManager.onKeydown(t);
                }
            }
            _onContentChanges() {
              const t = this._elementRef.nativeElement.textContent;
              t !== this._currentTextContent &&
                ((this._currentTextContent = t || ''),
                this._ngZone.run(() => {
                  this.updatePagination(), this._alignInkBarToSelectedTab(), this._changeDetectorRef.markForCheck();
                }));
            }
            updatePagination() {
              this._checkPaginationEnabled(), this._checkScrollingControls(), this._updateTabScrollPosition();
            }
            get focusIndex() {
              return this._keyManager ? this._keyManager.activeItemIndex : 0;
            }
            set focusIndex(t) {
              this._isValidIndex(t) && this.focusIndex !== t && this._keyManager && this._keyManager.setActiveItem(t);
            }
            _isValidIndex(t) {
              if (!this._items) return !0;
              const e = this._items ? this._items.toArray()[t] : null;
              return !!e && !e.disabled;
            }
            _setTabFocus(t) {
              if ((this._showPaginationControls && this._scrollToLabel(t), this._items && this._items.length)) {
                this._items.toArray()[t].focus();
                const e = this._tabListContainer.nativeElement,
                  n = this._getLayoutDirection();
                e.scrollLeft = 'ltr' == n ? 0 : e.scrollWidth - e.offsetWidth;
              }
            }
            _getLayoutDirection() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            _updateTabScrollPosition() {
              if (this.disablePagination) return;
              const t = this.scrollDistance,
                e = this._platform,
                n = 'ltr' === this._getLayoutDirection() ? -t : t;
              (this._tabList.nativeElement.style.transform = `translateX(${Math.round(n)}px)`),
                e && (e.TRIDENT || e.EDGE) && (this._tabListContainer.nativeElement.scrollLeft = 0);
            }
            get scrollDistance() {
              return this._scrollDistance;
            }
            set scrollDistance(t) {
              this._scrollTo(t);
            }
            _scrollHeader(t) {
              return this._scrollTo(
                this._scrollDistance + (('before' == t ? -1 : 1) * this._tabListContainer.nativeElement.offsetWidth) / 3
              );
            }
            _handlePaginatorClick(t) {
              this._stopInterval(), this._scrollHeader(t);
            }
            _scrollToLabel(t) {
              if (this.disablePagination) return;
              const e = this._items ? this._items.toArray()[t] : null;
              if (!e) return;
              const n = this._tabListContainer.nativeElement.offsetWidth,
                { offsetLeft: i, offsetWidth: r } = e.elementRef.nativeElement;
              let s, o;
              'ltr' == this._getLayoutDirection()
                ? ((s = i), (o = s + r))
                : ((o = this._tabList.nativeElement.offsetWidth - i), (s = o - r));
              const a = this.scrollDistance,
                c = this.scrollDistance + n;
              s < a ? (this.scrollDistance -= a - s + 60) : o > c && (this.scrollDistance += o - c + 60);
            }
            _checkPaginationEnabled() {
              if (this.disablePagination) this._showPaginationControls = !1;
              else {
                const t = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;
                t || (this.scrollDistance = 0),
                  t !== this._showPaginationControls && this._changeDetectorRef.markForCheck(),
                  (this._showPaginationControls = t);
              }
            }
            _checkScrollingControls() {
              this.disablePagination
                ? (this._disableScrollAfter = this._disableScrollBefore = !0)
                : ((this._disableScrollBefore = 0 == this.scrollDistance),
                  (this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance()),
                  this._changeDetectorRef.markForCheck());
            }
            _getMaxScrollDistance() {
              return this._tabList.nativeElement.scrollWidth - this._tabListContainer.nativeElement.offsetWidth || 0;
            }
            _alignInkBarToSelectedTab() {
              const t = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null,
                e = t ? t.elementRef.nativeElement : null;
              e ? this._inkBar.alignToElement(e) : this._inkBar.hide();
            }
            _stopInterval() {
              this._stopScrolling.next();
            }
            _handlePaginatorPress(t, e) {
              (e && null != e.button && 0 !== e.button) ||
                (this._stopInterval(),
                Object(m.a)(650, 100)
                  .pipe(Object(y.a)(Object(d.a)(this._stopScrolling, this._destroyed)))
                  .subscribe(() => {
                    const { maxScrollDistance: e, distance: n } = this._scrollHeader(t);
                    (0 === n || n >= e) && this._stopInterval();
                  }));
            }
            _scrollTo(t) {
              if (this.disablePagination) return { maxScrollDistance: 0, distance: 0 };
              const e = this._getMaxScrollDistance();
              return (
                (this._scrollDistance = Math.max(0, Math.min(e, t))),
                (this._scrollDistanceChanged = !0),
                this._checkScrollingControls(),
                { maxScrollDistance: e, distance: this._scrollDistance }
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(a.i), a.Vb(k.e), a.Vb(C.b, 8), a.Vb(a.B), a.Vb(w.a), a.Vb(l.a, 8));
            }),
            (t.ɵdir = a.Qb({ type: t, inputs: { disablePagination: 'disablePagination' } })),
            t
          );
        })(),
        dt = (() => {
          class t extends ht {
            constructor(t, e, n, i, r, s, o) {
              super(t, e, n, i, r, s, o), (this._disableRipple = !1);
            }
            get disableRipple() {
              return this._disableRipple;
            }
            set disableRipple(t) {
              this._disableRipple = Object(v.c)(t);
            }
            _itemSelected(t) {
              t.preventDefault();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(a.i), a.Vb(k.e), a.Vb(C.b, 8), a.Vb(a.B), a.Vb(w.a), a.Vb(l.a, 8));
            }),
            (t.ɵdir = a.Qb({ type: t, inputs: { disableRipple: 'disableRipple' }, features: [a.Fb] })),
            t
          );
        })(),
        pt = (() => {
          class t extends dt {
            constructor(t, e, n, i, r, s, o) {
              super(t, e, n, i, r, s, o);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(a.Vb(a.m), a.Vb(a.i), a.Vb(k.e), a.Vb(C.b, 8), a.Vb(a.B), a.Vb(w.a), a.Vb(l.a, 8));
            }),
            (t.ɵcmp = a.Pb({
              type: t,
              selectors: [['mat-tab-header']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && a.Ob(n, lt, !1), 2 & t && a.Ac((i = a.kc())) && (e._items = i);
              },
              viewQuery: function (t, e) {
                var n;
                1 & t && (a.Ic(B, !0), a.Ic(N, !0), a.Ic(V, !0), a.Rc(L, !0), a.Rc(H, !0)),
                  2 & t &&
                    (a.Ac((n = a.kc())) && (e._inkBar = n.first),
                    a.Ac((n = a.kc())) && (e._tabListContainer = n.first),
                    a.Ac((n = a.kc())) && (e._tabList = n.first),
                    a.Ac((n = a.kc())) && (e._nextPaginator = n.first),
                    a.Ac((n = a.kc())) && (e._previousPaginator = n.first));
              },
              hostAttrs: [1, 'mat-tab-header'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  a.Mb('mat-tab-header-pagination-controls-enabled', e._showPaginationControls)(
                    'mat-tab-header-rtl',
                    'rtl' == e._getLayoutDirection()
                  );
              },
              inputs: { selectedIndex: 'selectedIndex' },
              outputs: { selectFocusedIndex: 'selectFocusedIndex', indexFocused: 'indexFocused' },
              features: [a.Fb],
              ngContentSelectors: S,
              decls: 13,
              vars: 8,
              consts: [
                [
                  'aria-hidden',
                  'true',
                  'mat-ripple',
                  '',
                  1,
                  'mat-tab-header-pagination',
                  'mat-tab-header-pagination-before',
                  'mat-elevation-z4',
                  3,
                  'matRippleDisabled',
                  'click',
                  'mousedown',
                  'touchend',
                ],
                ['previousPaginator', ''],
                [1, 'mat-tab-header-pagination-chevron'],
                [1, 'mat-tab-label-container', 3, 'keydown'],
                ['tabListContainer', ''],
                ['role', 'tablist', 1, 'mat-tab-list', 3, 'cdkObserveContent'],
                ['tabList', ''],
                [1, 'mat-tab-labels'],
                [
                  'aria-hidden',
                  'true',
                  'mat-ripple',
                  '',
                  1,
                  'mat-tab-header-pagination',
                  'mat-tab-header-pagination-after',
                  'mat-elevation-z4',
                  3,
                  'matRippleDisabled',
                  'mousedown',
                  'click',
                  'touchend',
                ],
                ['nextPaginator', ''],
              ],
              template: function (t, e) {
                1 & t &&
                  (a.uc(),
                  a.bc(0, 'div', 0, 1),
                  a.jc('click', function () {
                    return e._handlePaginatorClick('before');
                  })('mousedown', function (t) {
                    return e._handlePaginatorPress('before', t);
                  })('touchend', function () {
                    return e._stopInterval();
                  }),
                  a.Wb(2, 'div', 2),
                  a.ac(),
                  a.bc(3, 'div', 3, 4),
                  a.jc('keydown', function (t) {
                    return e._handleKeydown(t);
                  }),
                  a.bc(5, 'div', 5, 6),
                  a.jc('cdkObserveContent', function () {
                    return e._onContentChanges();
                  }),
                  a.bc(7, 'div', 7),
                  a.tc(8),
                  a.ac(),
                  a.Wb(9, 'mat-ink-bar'),
                  a.ac(),
                  a.ac(),
                  a.bc(10, 'div', 8, 9),
                  a.jc('mousedown', function (t) {
                    return e._handlePaginatorPress('after', t);
                  })('click', function () {
                    return e._handlePaginatorClick('after');
                  })('touchend', function () {
                    return e._stopInterval();
                  }),
                  a.Wb(12, 'div', 2),
                  a.ac()),
                  2 & t &&
                    (a.Mb('mat-tab-header-pagination-disabled', e._disableScrollBefore),
                    a.vc('matRippleDisabled', e._disableScrollBefore || e.disableRipple),
                    a.Ib(5),
                    a.Mb('_mat-animation-noopable', 'NoopAnimations' === e._animationMode),
                    a.Ib(5),
                    a.Mb('mat-tab-header-pagination-disabled', e._disableScrollAfter),
                    a.vc('matRippleDisabled', e._disableScrollAfter || e.disableRipple));
              },
              directives: [c.q, r.a, B],
              styles: [
                '.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:"";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\n',
              ],
              encapsulation: 2,
            })),
            t
          );
        })(),
        ft = (() => {
          class t {}
          return (
            (t.ɵmod = a.Tb({ type: t })),
            (t.ɵinj = a.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[o.c, c.g, s.g, c.r, r.c, i.a], c.g],
            })),
            t
          );
        })();
    },
    xQIH: function (t, e, n) {
      'use strict';
      n.d(e, 'b', function () {
        return u;
      }),
        n.d(e, 'd', function () {
          return p;
        }),
        n.d(e, 'c', function () {
          return g;
        }),
        n.d(e, 'a', function () {
          return y;
        });
      var i = n('mrSG'),
        r = n('AcyG'),
        s = n('mxbh'),
        o = n('71bx'),
        a = n('Blkl'),
        c = n('fXoL');
      const l = Object(o.a)();
      let u = (() => {
        let t = class extends a.a {};
        return (
          (t.ɵfac = function (e) {
            return h(e || t);
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          (t = Object(i.b)(
            [
              Object(s.d)(),
              Object(r.d)({ name: 'games', defaults: Object.assign(Object.assign({}, l), { total: 0 }) }),
            ],
            t
          )),
          t
        );
      })();
      const h = c.dc(u),
        d = Object(o.a)();
      let p = (() => {
        let t = class extends a.a {};
        return (
          (t.ɵfac = function (e) {
            return f(e || t);
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          (t = Object(i.b)(
            [
              Object(s.d)(),
              Object(r.d)({ name: 'rounds', defaults: Object.assign(Object.assign({}, d), { total: 0 }) }),
            ],
            t
          )),
          t
        );
      })();
      const f = c.dc(p),
        m = Object(o.a)();
      let g = (() => {
        let t = class extends a.a {};
        return (
          (t.ɵfac = function (e) {
            return b(e || t);
          }),
          (t.ɵprov = c.Rb({ token: t, factory: t.ɵfac })),
          (t = Object(i.b)(
            [
              Object(s.d)(),
              Object(r.d)({ name: 'questions', defaults: Object.assign(Object.assign({}, m), { total: 0 }) }),
            ],
            t
          )),
          t
        );
      })();
      const b = c.dc(g);
      var _ = n('aVjK');
      const y = [u, p, g, _.a];
    },
    xbPD: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('7o/Q');
      function r(t = null) {
        return (e) => e.lift(new s(t));
      }
      class s {
        constructor(t) {
          this.defaultValue = t;
        }
        call(t, e) {
          return e.subscribe(new o(t, this.defaultValue));
        }
      }
      class o extends i.a {
        constructor(t, e) {
          super(t), (this.defaultValue = e), (this.isEmpty = !0);
        }
        _next(t) {
          (this.isEmpty = !1), this.destination.next(t);
        }
        _complete() {
          this.isEmpty && this.destination.next(this.defaultValue), this.destination.complete();
        }
      }
    },
    xgIS: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('HDdC'),
        r = n('DH7j'),
        s = n('n6bG'),
        o = n('lJxs');
      function a(t, e, n, c) {
        return (
          Object(s.a)(n) && ((c = n), (n = void 0)),
          c
            ? a(t, e, n).pipe(Object(o.a)((t) => (Object(r.a)(t) ? c(...t) : c(t))))
            : new i.a((i) => {
                !(function t(e, n, i, r, s) {
                  let o;
                  if (
                    (function (t) {
                      return t && 'function' == typeof t.addEventListener && 'function' == typeof t.removeEventListener;
                    })(e)
                  ) {
                    const t = e;
                    e.addEventListener(n, i, s), (o = () => t.removeEventListener(n, i, s));
                  } else if (
                    (function (t) {
                      return t && 'function' == typeof t.on && 'function' == typeof t.off;
                    })(e)
                  ) {
                    const t = e;
                    e.on(n, i), (o = () => t.off(n, i));
                  } else if (
                    (function (t) {
                      return t && 'function' == typeof t.addListener && 'function' == typeof t.removeListener;
                    })(e)
                  ) {
                    const t = e;
                    e.addListener(n, i), (o = () => t.removeListener(n, i));
                  } else {
                    if (!e || !e.length) throw new TypeError('Invalid event target');
                    for (let o = 0, a = e.length; o < a; o++) t(e[o], n, i, r, s);
                  }
                  r.add(o);
                })(
                  t,
                  e,
                  function (t) {
                    i.next(arguments.length > 1 ? Array.prototype.slice.call(arguments) : t);
                  },
                  i,
                  n
                );
              })
        );
      }
    },
    yCtX: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('HDdC'),
        r = n('ngJS'),
        s = n('jZKg');
      function o(t, e) {
        return e ? Object(s.a)(t, e) : new i.a(Object(r.a)(t));
      }
    },
    'z+Ro': function (t, e, n) {
      'use strict';
      function i(t) {
        return t && 'function' == typeof t.schedule;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    z5Zb: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return u;
      }),
        n.d(e, 'b', function () {
          return h;
        }),
        n.d(e, 'c', function () {
          return d;
        }),
        n.d(e, 'd', function () {
          return p;
        }),
        n.d(e, 'e', function () {
          return l;
        }),
        n.d(e, 'f', function () {
          return c;
        }),
        n.d(e, 'g', function () {
          return a;
        });
      var i = n('fXoL'),
        r = n('jtHE');
      function s(t, e) {
        return t === e;
      }
      function o(t, e, n) {
        if (null === e || null === n || e.length !== n.length) return !1;
        const i = e.length;
        for (let r = 0; r < i; r++) if (!t(e[r], n[r])) return !1;
        return !0;
      }
      function a(t, e = s) {
        let n = null,
          i = null;
        function r() {
          return o(e, n, arguments) || (i = t.apply(null, arguments)), (n = arguments), i;
        }
        return (
          (r.reset = function () {
            (n = null), (i = null);
          }),
          r
        );
      }
      const c = a(function () {
        const t = Object(i.Z)();
        if (!t) return !1;
        const e = t.injector.get(i.h, null);
        return (
          !!e &&
          e.some((t) =>
            ((t && t.providers) || []).some((t) => (t && t.provide && 'MockNgModuleResolver' === t.provide.name) || !1)
          )
        );
      });
      let l = (() => {
        class t {
          constructor() {
            this.bootstrap$ = new r.a(1);
          }
          get appBootstrapped$() {
            return this.bootstrap$.asObservable();
          }
          bootstrap() {
            this.bootstrap$.next(!0), this.bootstrap$.complete();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const u = new i.s('INITIAL_STATE_TOKEN');
      let h = (() => {
        class t {
          static set(t) {
            this.value = t;
          }
          static pop() {
            const t = this.value;
            return (this.value = {}), t;
          }
        }
        return (t.value = {}), t;
      })();
      const d = new i.s('Internals.StateContextFactory'),
        p = new i.s('Internals.StateFactory');
    },
    z6cu: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('HDdC');
      function r(t, e) {
        return new i.a(e ? (n) => e.schedule(s, 0, { error: t, subscriber: n }) : (e) => e.error(t));
      }
      function s({ error: t, subscriber: e }) {
        e.error(t);
      }
    },
    zM63: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return A;
      }),
        n.d(e, 'b', function () {
          return j;
        });
      var i = n('XNiG'),
        r = n('quSY'),
        s = n('2Vo4'),
        o = n('itXk'),
        a = n('PqYM'),
        c = n('EY2u'),
        l = n('LRne'),
        u = n('pLZG'),
        h = n('l7GE'),
        d = n('ZUHj');
      class p {
        constructor(t) {
          this.durationSelector = t;
        }
        call(t, e) {
          return e.subscribe(new f(t, this.durationSelector));
        }
      }
      class f extends h.a {
        constructor(t, e) {
          super(t), (this.durationSelector = e), (this.hasValue = !1), (this.durationSubscription = null);
        }
        _next(t) {
          try {
            const e = this.durationSelector.call(this, t);
            e && this._tryNext(t, e);
          } catch (e) {
            this.destination.error(e);
          }
        }
        _complete() {
          this.emitValue(), this.destination.complete();
        }
        _tryNext(t, e) {
          let n = this.durationSubscription;
          (this.value = t),
            (this.hasValue = !0),
            n && (n.unsubscribe(), this.remove(n)),
            (n = Object(d.a)(this, e)),
            n && !n.closed && this.add((this.durationSubscription = n));
        }
        notifyNext(t, e, n, i, r) {
          this.emitValue();
        }
        notifyComplete() {
          this.emitValue();
        }
        emitValue() {
          if (this.hasValue) {
            const t = this.value,
              e = this.durationSubscription;
            e && ((this.durationSubscription = null), e.unsubscribe(), this.remove(e)),
              (this.value = null),
              (this.hasValue = !1),
              super._next(t);
          }
        }
      }
      var m = n('eIep'),
        g = n('vkgz'),
        b = n('3E0/'),
        _ = n('nYR2'),
        y = n('1G5W'),
        v = n('lJxs'),
        w = n('fXoL'),
        x = n('ofXK');
      function C(t, e) {
        if ((1 & t && w.Wb(0, 'div', 6), 2 & t)) {
          const t = w.nc(2);
          w.Jc('box-shadow', '0 0 10px ' + t.color + ', 0 0 5px ' + t.color);
        }
      }
      function k(t, e) {
        if ((1 & t && (w.bc(0, 'div', 7), w.Wb(1, 'div', 8), w.ac()), 2 & t)) {
          const t = w.nc(2);
          w.Ib(1), w.Jc('border-top-color', t.color)('border-left-color', t.color);
        }
      }
      function O(t, e) {
        if (
          (1 & t &&
            (w.Zb(0),
            w.bc(1, 'div', 1),
            w.bc(2, 'div', 2),
            w.bc(3, 'div', 3),
            w.Kc(4, C, 1, 2, 'div', 4),
            w.ac(),
            w.ac(),
            w.Kc(5, k, 2, 4, 'div', 5),
            w.ac(),
            w.Yb()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = w.nc();
          w.Ib(1),
            w.Jc('transition', 'opacity ' + n.speed + 'ms ' + n.ease),
            w.Jb('active', t.active),
            w.Ib(2),
            w.Jc('transform', t.transform)('background-color', n.color)(
              'transition',
              t.active ? 'all ' + n.speed + 'ms ' + n.ease : 'none'
            ),
            w.Ib(1),
            w.vc('ngIf', n.meteor),
            w.Ib(1),
            w.vc('ngIf', n.spinner);
        }
      }
      class S {
        constructor(t, e) {
          var n;
          (this._onDestroyCallback = e),
            (this._started = new i.a()),
            (this.started = this._started.pipe(Object(u.a)(() => !this.isStarted))),
            (this._completed = new i.a()),
            (this.completed = this._completed.pipe(Object(u.a)(() => this.isStarted))),
            (this._trickling = new i.a()),
            (this._worker = r.a.EMPTY),
            (this._state = new s.a({ active: !1, value: 0 })),
            (this._config = new s.a(t)),
            (this.state = this._state.asObservable()),
            (this.config = this._state.asObservable()),
            (this._worker = Object(o.a)(this._trickling, this._config)
              .pipe(
                ((n = ([t, e]) => Object(a.a)(t ? e.debounceTime : 0)), (t) => t.lift(new p(n))),
                Object(m.a)(([t, e]) => (t ? this.onTrickling(e) : this.onComplete(e)))
              )
              .subscribe());
        }
        get currState() {
          return this._state.value;
        }
        get isStarted() {
          return this.currState.active;
        }
        start() {
          this._started.next(), this._trickling.next(!0);
        }
        complete() {
          this._trickling.next(!1);
        }
        inc(t) {
          const e = this.currState.value;
          this.isStarted
            ? ('number' != typeof t && (t = this._config.value.trickleFunc(e)), this.set(e + t))
            : this.start();
        }
        set(t) {
          this.setState({ value: this.clamp(t), active: !0 });
        }
        setConfig(t) {
          this._config.next(Object.assign(Object.assign({}, this._config.value), t));
        }
        destroy() {
          this._worker.unsubscribe(),
            this._trickling.complete(),
            this._state.complete(),
            this._config.complete(),
            this._started.complete(),
            this._completed.complete(),
            this._onDestroyCallback();
        }
        setState(t) {
          this._state.next(Object.assign(Object.assign({}, this.currState), t));
        }
        clamp(t) {
          return Math.max(this._config.value.min, Math.min(this._config.value.max, t));
        }
        onTrickling(t) {
          return (
            this.isStarted || this.set(this._config.value.min),
            Object(a.a)(0, t.trickleSpeed).pipe(Object(g.a)(() => this.inc()))
          );
        }
        onComplete(t) {
          return (
            this._completed.next(),
            this.isStarted
              ? Object(l.a)({}).pipe(
                  Object(g.a)(() => this.setState({ value: 100 })),
                  Object(b.a)(1.7 * t.speed),
                  Object(g.a)(() => this.setState({ active: !1 })),
                  Object(b.a)(t.speed),
                  Object(_.a)(() => this.setState({ value: 0 })),
                  Object(y.a)(this._started)
                )
              : c.a
          );
        }
      }
      const E = new w.s('ngProgressConfig'),
        T = {
          min: 8,
          max: 100,
          speed: 200,
          debounceTime: 0,
          trickleSpeed: 300,
          fixed: !0,
          meteor: !0,
          thick: !1,
          spinner: !0,
          ease: 'linear',
          color: '#1B95E0',
          direction: 'ltr+',
          spinnerPosition: 'right',
          trickleFunc: (t) =>
            t >= 0 && t < 20 ? 10 : t >= 20 && t < 50 ? 4 : t >= 50 && t < 80 ? 2 : t >= 80 && t < 99 ? 0.5 : 0,
        };
      let I = (() => {
          let t = class {
            constructor(t) {
              (this._instances = new Map()), (this.config = t ? Object.assign(Object.assign({}, T), t) : T);
            }
            ref(t = 'root', e) {
              if (this._instances.has(t)) {
                const n = this._instances.get(t);
                return e && n.setConfig(Object.assign(Object.assign({}, this.config), e)), n;
              }
              {
                const n = new S(Object.assign(Object.assign({}, this.config), e), this.deleteInstance(t));
                return this._instances.set(t, n).get(t);
              }
            }
            destroyAll() {
              this._instances.forEach((t) => t.destroy());
            }
            deleteInstance(t) {
              return () => {
                this._instances.delete(t);
              };
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(w.fc(E, 8));
            }),
            (t.ɵprov = Object(w.Rb)({
              factory: function () {
                return new t(Object(w.fc)(E, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        A = (() => {
          let t = class {
            constructor(t) {
              (this._ngProgress = t),
                (this._started = r.a.EMPTY),
                (this._completed = r.a.EMPTY),
                (this.id = 'root'),
                (this.min = this._ngProgress.config.min),
                (this.max = this._ngProgress.config.max),
                (this.ease = this._ngProgress.config.ease),
                (this.color = this._ngProgress.config.color),
                (this.speed = this._ngProgress.config.speed),
                (this.thick = this._ngProgress.config.thick),
                (this.fixed = this._ngProgress.config.fixed),
                (this.meteor = this._ngProgress.config.meteor),
                (this.spinner = this._ngProgress.config.spinner),
                (this.trickleSpeed = this._ngProgress.config.trickleSpeed),
                (this.debounceTime = this._ngProgress.config.debounceTime),
                (this.trickleFunc = this._ngProgress.config.trickleFunc),
                (this.spinnerPosition = this._ngProgress.config.spinnerPosition),
                (this.direction = this._ngProgress.config.direction),
                (this.started = new w.p()),
                (this.completed = new w.p());
            }
            get isStarted() {
              return this.progressRef.isStarted;
            }
            ngOnChanges() {
              this.progressRef instanceof S &&
                this.progressRef.setConfig({
                  max: this.max > 0 && this.max <= 100 ? this.max : 100,
                  min: this.min < 100 && this.min >= 0 ? this.min : 0,
                  speed: this.speed,
                  trickleSpeed: this.trickleSpeed,
                  trickleFunc: this.trickleFunc,
                  debounceTime: this.debounceTime,
                });
            }
            ngOnInit() {
              (this.progressRef = this._ngProgress.ref(this.id, {
                max: this.max,
                min: this.min,
                speed: this.speed,
                trickleSpeed: this.trickleSpeed,
                debounceTime: this.debounceTime,
              })),
                (this.state$ = this.progressRef.state.pipe(
                  Object(v.a)((t) => ({ active: t.active, transform: `translate3d(${t.value}%,0,0)` }))
                )),
                this.started.observers.length &&
                  (this._started = this.progressRef.started.subscribe(() => this.started.emit())),
                this.completed.observers.length &&
                  (this._completed = this.progressRef.completed.subscribe(() => this.completed.emit()));
            }
            ngOnDestroy() {
              this._started.unsubscribe(),
                this._completed.unsubscribe(),
                this.progressRef instanceof S && this.progressRef.destroy();
            }
            start() {
              this.progressRef.start();
            }
            complete() {
              this.progressRef.complete();
            }
            inc(t) {
              this.progressRef.inc(t);
            }
            set(t) {
              this.progressRef.set(t);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(w.Vb(I));
            }),
            (t.ɵcmp = w.Pb({
              type: t,
              selectors: [['ng-progress']],
              hostAttrs: ['role', 'progressbar'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  w.Jb('spinnerPosition', e.spinnerPosition)('dir', e.direction)('thick', e.thick)('fixed', e.fixed);
              },
              inputs: {
                id: 'id',
                min: 'min',
                max: 'max',
                ease: 'ease',
                color: 'color',
                speed: 'speed',
                thick: 'thick',
                fixed: 'fixed',
                meteor: 'meteor',
                spinner: 'spinner',
                trickleSpeed: 'trickleSpeed',
                debounceTime: 'debounceTime',
                trickleFunc: 'trickleFunc',
                spinnerPosition: 'spinnerPosition',
                direction: 'direction',
              },
              outputs: { started: 'started', completed: 'completed' },
              features: [w.Gb],
              decls: 2,
              vars: 3,
              consts: [
                [4, 'ngIf'],
                [1, 'ng-progress-bar'],
                [1, 'ng-bar-placeholder'],
                [1, 'ng-bar'],
                ['class', 'ng-meteor', 3, 'boxShadow', 4, 'ngIf'],
                ['class', 'ng-spinner', 4, 'ngIf'],
                [1, 'ng-meteor'],
                [1, 'ng-spinner'],
                [1, 'ng-spinner-icon'],
              ],
              template: function (t, e) {
                1 & t && (w.Kc(0, O, 6, 11, 'ng-container', 0), w.oc(1, 'async')),
                  2 & t && w.vc('ngIf', w.pc(1, 1, e.state$));
              },
              directives: [x.l],
              pipes: [x.b],
              styles: [
                '[_nghost-%COMP%]{z-index:999999;pointer-events:none}[fixed=true][_nghost-%COMP%]   .ng-progress-bar[_ngcontent-%COMP%], [fixed=true][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{top:15px}[fixed=true][spinnerPosition=left][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{left:15px}[fixed=true][spinnerPosition=right][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{right:15px}[thick=true][_nghost-%COMP%]   .ng-spinner-icon[_ngcontent-%COMP%]{width:24px;height:24px;border-width:3px}[thick=true][_nghost-%COMP%]   .ng-bar-placeholder[_ngcontent-%COMP%]{height:3px!important}[dir="ltr+"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=ltr-][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{transform:rotate(3deg)}[dir="ltr+"][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=ltr-][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{transform:rotate(4deg)}[dir="ltr+"][_nghost-%COMP%]   .ng-bar[_ngcontent-%COMP%], [dir="rtl+"][_nghost-%COMP%]   .ng-bar[_ngcontent-%COMP%]{margin-left:-100%}[dir="ltr+"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir="rtl+"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{right:0}[dir="ltr+"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=rtl-][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{top:-3px}[dir="ltr+"][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=rtl-][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{top:-4px}[dir="rtl+"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=ltr-][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{bottom:-3px}[dir="rtl+"][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=ltr-][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{bottom:-4px}[dir="rtl+"][_nghost-%COMP%]   .ng-bar-placeholder[_ngcontent-%COMP%], [dir=ltr-][_nghost-%COMP%]   .ng-bar-placeholder[_ngcontent-%COMP%]{transform:rotate(180deg)}[dir="rtl+"][_nghost-%COMP%]   .ng-spinner-icon[_ngcontent-%COMP%], [dir=ltr-][_nghost-%COMP%]   .ng-spinner-icon[_ngcontent-%COMP%]{animation-direction:reverse}[dir="rtl+"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=rtl-][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{transform:rotate(-3deg)}[dir="rtl+"][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=rtl-][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{transform:rotate(-4deg)}[spinnerPosition=left][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{left:10px}[spinnerPosition=right][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{right:10px}.ng-progress-bar[_ngcontent-%COMP%]{position:relative;z-index:999999;top:0;left:0;width:100%;zoom:1;opacity:0}.ng-progress-bar[active=true][_ngcontent-%COMP%]{opacity:1;transition:none}.ng-bar-placeholder[_ngcontent-%COMP%]{position:absolute;height:2px;width:100%}.ng-bar[_ngcontent-%COMP%]{width:100%;height:100%;transform:translate(-100%,0,0)}.ng-meteor[_ngcontent-%COMP%]{display:block;position:absolute;width:100px;height:100%;opacity:1}.ng-spinner[_ngcontent-%COMP%]{position:absolute;display:block;z-index:1031;top:10px}.ng-spinner-icon[_ngcontent-%COMP%]{width:18px;height:18px;box-sizing:border-box;-webkit-animation:250ms linear infinite spinner-animation;animation:250ms linear infinite spinner-animation;border:2px solid transparent;border-radius:50%}@-webkit-keyframes spinner-animation{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes spinner-animation{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}',
              ],
              changeDetection: 0,
            })),
            t
          );
        })();
      var D;
      let j = (() => {
        let t = (D = class {
          static withConfig(t) {
            return { ngModule: D, providers: [{ provide: E, useValue: t }] };
          }
        });
        return (
          (t.ɵmod = w.Tb({ type: t })),
          (t.ɵinj = w.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [[x.c]],
          })),
          t
        );
      })();
    },
    zO53: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      });
      var i = n('0IaG'),
        r = n('Mjy2'),
        s = n('fXoL'),
        o = n('36jV'),
        a = n('sYmb');
      let c = (() => {
        class t {
          constructor(t, e) {
            (this._dialogRef = t),
              (this.data = e),
              (this.closePopup = (t) => this._dialogRef.close(t)),
              (this.showDelete = () => this.type === r.b.EDIT);
          }
          get title() {
            return this.data ? this.data.title : '';
          }
          get type() {
            return this.data ? this.data.type : '';
          }
          get model() {
            return this.data ? this.data.model : {};
          }
          get fields() {
            return this.data ? this.data.fields : [];
          }
          onSubmit(t) {
            this.closePopup({ action: r.a.SUBMIT, data: t });
          }
          onDelete() {
            this.closePopup({ action: r.a.DELETE });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Vb(i.d), s.Vb(i.a));
          }),
          (t.ɵcmp = s.Pb({
            type: t,
            selectors: [['app-popup-form']],
            decls: 6,
            vars: 8,
            consts: [
              ['mat-dialog-title', ''],
              ['mat-dialog-content', ''],
              [3, 'fields', 'model', 'showDelete', 'submited', 'deleted'],
            ],
            template: function (t, e) {
              1 & t &&
                (s.bc(0, 'h1', 0),
                s.Mc(1),
                s.oc(2, 'translate'),
                s.oc(3, 'translate'),
                s.ac(),
                s.bc(4, 'div', 1),
                s.bc(5, 'app-formly-form', 2),
                s.jc('submited', function (t) {
                  return e.onSubmit(t);
                })('deleted', function () {
                  return e.onDelete();
                }),
                s.ac(),
                s.ac()),
                2 & t &&
                  (s.Ib(1),
                  s.Nc(s.pc(2, 4, 'MODAL.' + e.type) + ' ' + s.pc(3, 6, e.title)),
                  s.Ib(4),
                  s.vc('fields', e.fields)('model', e.model)('showDelete', e.showDelete()));
            },
            directives: [o.a],
            pipes: [a.d],
            styles: [
              '.buttons[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%]:first-child{margin-right:10px}.buttons[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%]:last-child{margin-left:10px}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    zUnb: function (t, e, n) {
      'use strict';
      n.r(e);
      var i = n('fXoL'),
        r = n('AytR'),
        s = n('jhN1');
      const o = ['name'],
        a = {
          user: ['firstName', 'lastName'],
          quiz: ['name', 'logo', 'preview', 'background'],
          quest: ['name'],
          quiz_round: ['name'],
          quest_round: ['name'],
          quest_settings: ['name', { key: 'private', type: 'app-checkbox' }],
          quiz_settings: ['name', 'logo', 'preview', 'background', { key: 'private', type: 'app-checkbox' }],
          quest_messages: {
            hi: {
              label: '\u041f\u0440\u0438\u0432\u0435\u0442\u0441\u0432\u0438\u0435',
              group: ['title', 'description'],
            },
            bye: { label: '\u041f\u0440\u043e\u0449\u0430\u043d\u0438\u0435', group: ['title', 'description'] },
            wrongs: { label: '\u041e\u0448\u0438\u0431\u043a\u0438', array: 'title' },
          },
          quest_round_hints: { hints: { array: 'title' } },
          quest_round_settings: ['name', { key: 'active', type: 'app-checkbox' }],
          quiz_round_settins: o,
          quest_round_answer: { correctAnswer: { label: 'FORM.ANSWER', placeholder: 'FORM.ANSWER_PLACEHOLDER' } },
          quest_round_question: { question: { key: 'title', type: 'textarea' }, medias: { defaultValue: [] } },
          quiz_round_question: ['title'],
          quiz_round_settings: o,
        },
        c = Object.assign(
          Object.assign(
            {},
            {
              sign_in: ['name', 'password'],
              sign_up: ['name', 'password'],
              restore_password: ['name'],
              token: ['token'],
            }
          ),
          a
        );
      var l = n('sYmb'),
        u = n('0FS3');
      let h = (() => {
        class t {
          constructor(t, e) {
            (this._translateService = t), (this._formlyConfig = e);
          }
          init() {
            this._formlyConfig.addValidatorMessage('required', () =>
              this._translateService.instant('VALIDATORS.REQUIRED')
            ),
              this._formlyConfig.addValidatorMessage('email', () => this._translateService.instant('VALIDATORS.EMAIL')),
              this._formlyConfig.addValidatorMessage('autocomplete', () =>
                this._translateService.instant('VALIDATORS.AUTOCOMPLETE')
              );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(l.e), i.fc(u.f));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const d = [h];
      var p = n('ptKI'),
        f = n('tyNb');
      let m = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._formlyValidation = t),
              (this._translateService = e),
              (this._appConfigsService = n),
              (this._appFormlyService = i),
              this._appFormlyService.setForms(c),
              this._formlyValidation.init(),
              this.setDefaultLanguage();
          }
          setDefaultLanguage() {
            this._translateService.addLangs(['en', 'ru']);
            const t = this._translateService.getLangs(),
              e = this._appConfigsService.get('language'),
              n = this._translateService.getBrowserLang();
            this._translateService.use(e || n || t[0]);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Vb(h), i.Vb(l.e), i.Vb(p.b), i.Vb(p.c));
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-core']],
            decls: 1,
            vars: 0,
            template: function (t, e) {
              1 & t && i.Wb(0, 'router-outlet');
            },
            directives: [f.g],
            styles: [''],
          })),
          t
        );
      })();
      var g = n('R1ws'),
        b = n('ofXK'),
        _ = n('tk/3'),
        y = n('AcyG'),
        v = n('vkgz'),
        w = n('JIr8');
      const x = new i.s('NGXS_LOGGER_PLUGIN_OPTIONS'),
        C = (t, e) => {
          return (n = e - t.toString().length), new Array(n + 1).join('0') + t;
          var n;
        };
      class k {
        constructor(t, e, n) {
          (this.action = t), (this.store = e), (this.logWriter = n);
        }
        dispatched(t) {
          const e = Object(y.h)(this.action),
            n =
              ((i = new Date()),
              C(i.getHours(), 2) +
                ':' +
                C(i.getMinutes(), 2) +
                ':' +
                C(i.getSeconds(), 2) +
                '.' +
                C(i.getMilliseconds(), 3));
          var i;
          this.logWriter.startGroup(`action ${e} @ ${n}`),
            this._hasPayload(this.action) && this.logWriter.logGrey('payload', Object.assign({}, this.action)),
            this.logWriter.logGrey('prev state', t);
        }
        completed(t) {
          this.logWriter.logGreen('next state', t), this.logWriter.endGroup();
        }
        errored(t) {
          this.logWriter.logRedish('next state after error', this.store.snapshot()),
            this.logWriter.logRedish('error', t),
            this.logWriter.endGroup();
        }
        _hasPayload(t) {
          return this._getNonEmptyProperties(t).length > 0;
        }
        _getNonEmptyProperties(t) {
          return Object.keys(t)
            .map((e) => t[e])
            .filter((t) => !!t);
        }
      }
      class O {
        constructor(t) {
          (this.options = t), (this.options = this.options || {}), (this.logger = t.logger || console);
        }
        startGroup(t) {
          const e = this.options.collapsed ? this.logger.groupCollapsed : this.logger.group;
          try {
            e.call(this.logger, t);
          } catch (n) {
            console.log(t);
          }
        }
        endGroup() {
          try {
            this.logger.groupEnd();
          } catch (t) {
            this.logger.log('\u2014\u2014 log end \u2014\u2014');
          }
        }
        logGrey(t, e) {
          this.log(t, 'color: #9E9E9E; font-weight: bold', e);
        }
        logGreen(t, e) {
          this.log(t, 'color: #4CAF50; font-weight: bold', e);
        }
        logRedish(t, e) {
          this.log(t, 'color: #FD8182; font-weight: bold', e);
        }
        log(t, e, n) {
          this.isIE() ? this.logger.log(t, n) : this.logger.log('%c ' + t, e, n);
        }
        isIE() {
          const t = 'undefined' != typeof window && window.navigator.userAgent ? window.navigator.userAgent : '';
          let e = !1;
          const n = t.indexOf('MSIE '),
            i = t.indexOf('Trident/');
          return (n > -1 || i > -1) && (e = !0), e;
        }
      }
      let S = (() => {
        class t {
          constructor(t, e) {
            (this._options = t), (this._injector = e);
          }
          handle(t, e, n) {
            if (this._options.disabled) return n(t, e);
            const i = new O(this._options),
              r = this._injector.get(y.e),
              s = new k(e, r, i);
            return (
              s.dispatched(t),
              n(t, e).pipe(
                Object(v.a)((t) => {
                  s.completed(t);
                }),
                Object(w.a)((t) => {
                  throw (s.errored(t), t);
                })
              )
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(x), i.fc(i.t));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const E = new i.s('LOGGER_USER_OPTIONS');
      function T(t) {
        const e = { logger: console, collapsed: !1, disabled: !1 };
        return Object.assign({}, e, t);
      }
      let I = (() => {
        class t {
          static forRoot(e) {
            return {
              ngModule: t,
              providers: [
                { provide: y.b, useClass: S, multi: !0 },
                { provide: E, useValue: e },
                { provide: x, useFactory: T, deps: [E] },
              ],
            };
          }
        }
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
          })),
          t
        );
      })();
      const A = new i.s('NGXS_DEVTOOLS_OPTIONS');
      let D = (() => {
        class t {
          constructor(t, e) {
            (this._options = t),
              (this._injector = e),
              (this.devtoolsExtension = null),
              (this.windowObj = 'undefined' != typeof window ? window : {});
            const n = this.windowObj.__REDUX_DEVTOOLS_EXTENSION__ || this.windowObj.devToolsExtension;
            n && ((this.devtoolsExtension = n.connect(t)), this.devtoolsExtension.subscribe((t) => this.dispatched(t)));
          }
          get store() {
            return this._injector.get(y.e);
          }
          handle(t, e, n) {
            return !this.devtoolsExtension || (this._options && this._options.disabled)
              ? n(t, e)
              : n(t, e).pipe(
                  Object(w.a)((n) => {
                    const i = this.store.snapshot();
                    throw (this.sendToDevTools(t, e, i), n);
                  }),
                  Object(v.a)((n) => {
                    this.sendToDevTools(t, e, n);
                  })
                );
          }
          sendToDevTools(t, e, n) {
            const i = Object(y.h)(e);
            '@@INIT' === i
              ? this.devtoolsExtension.init(t)
              : this.devtoolsExtension.send(Object.assign({}, e, { type: i }), n);
          }
          dispatched(t) {
            if ('DISPATCH' === t.type) {
              if ('JUMP_TO_ACTION' === t.payload.type || 'JUMP_TO_STATE' === t.payload.type) {
                const e = JSON.parse(t.state);
                this.store.reset(e);
              } else if ('TOGGLE_ACTION' === t.payload.type) console.warn('Skip is not supported at this time.');
              else if ('IMPORT_STATE' === t.payload.type) {
                const { actionsById: e, computedStates: n, currentStateIndex: i } = t.payload.nextLiftedState;
                this.devtoolsExtension.init(n[0].state),
                  Object.keys(e)
                    .filter((t) => '0' !== t)
                    .forEach((t) => this.devtoolsExtension.send(e[t], n[t].state)),
                  this.store.reset(n[i].state);
              }
            } else if ('ACTION' === t.type) {
              const e = JSON.parse(t.payload);
              this.store.dispatch(e);
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(A), i.fc(i.t));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function j(t) {
        return Object.assign({ name: 'NGXS' }, t);
      }
      const R = new i.s('USER_OPTIONS');
      let P = (() => {
        class t {
          static forRoot(e) {
            return {
              ngModule: t,
              providers: [
                { provide: y.b, useClass: D, multi: !0 },
                { provide: R, useValue: e },
                { provide: A, useFactory: j, deps: [R] },
              ],
            };
          }
        }
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
          })),
          t
        );
      })();
      var M = n('srgo');
      let F = (() => {
        class t {
          constructor(t, e) {
            (this.accessor = t), (this.injector = e);
          }
          static forRoot(e = []) {
            return { ngModule: t, providers: [M.b, M.c, M.d, ...e] };
          }
        }
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)(i.fc(M.b, 2), i.fc(M.c, 2));
            },
          })),
          t
        );
      })();
      var N = n('5eHb'),
        V = n('zM63'),
        L = n('5+tZ'),
        H = n('CxY0'),
        z = n('Cfvw');
      const B = new i.s('JWT_OPTIONS');
      let U = (() => {
          let t = class {
            constructor(t = null) {
              this.tokenGetter = (t && t.tokenGetter) || function () {};
            }
            urlBase64Decode(t) {
              let e = t.replace(/-/g, '+').replace(/_/g, '/');
              switch (e.length % 4) {
                case 0:
                  break;
                case 2:
                  e += '==';
                  break;
                case 3:
                  e += '=';
                  break;
                default:
                  throw new Error('Illegal base64url string!');
              }
              return this.b64DecodeUnicode(e);
            }
            b64decode(t) {
              let e = '';
              if ((t = String(t).replace(/=+$/, '')).length % 4 == 1)
                throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
              for (
                let n, i, r = 0, s = 0;
                (i = t.charAt(s++));
                ~i && ((n = r % 4 ? 64 * n + i : i), r++ % 4)
                  ? (e += String.fromCharCode(255 & (n >> ((-2 * r) & 6))))
                  : 0
              )
                i = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.indexOf(i);
              return e;
            }
            b64DecodeUnicode(t) {
              return decodeURIComponent(
                Array.prototype.map
                  .call(this.b64decode(t), (t) => '%' + ('00' + t.charCodeAt(0).toString(16)).slice(-2))
                  .join('')
              );
            }
            decodeToken(t = this.tokenGetter()) {
              if (!t || '' === t) return null;
              const e = t.split('.');
              if (3 !== e.length)
                throw new Error(
                  "The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more."
                );
              const n = this.urlBase64Decode(e[1]);
              if (!n) throw new Error('Cannot decode the token.');
              return JSON.parse(n);
            }
            getTokenExpirationDate(t = this.tokenGetter()) {
              let e;
              if (((e = this.decodeToken(t)), !e || !e.hasOwnProperty('exp'))) return null;
              const n = new Date(0);
              return n.setUTCSeconds(e.exp), n;
            }
            isTokenExpired(t = this.tokenGetter(), e) {
              if (!t || '' === t) return !0;
              const n = this.getTokenExpirationDate(t);
              return (e = e || 0), null !== n && !(n.valueOf() > new Date().valueOf() + 1e3 * e);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(B));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        W = (() => {
          let t = class {
            constructor(t, e) {
              (this.jwtHelper = e),
                (this.standardPorts = ['80', '443']),
                (this.tokenGetter = t.tokenGetter),
                (this.headerName = t.headerName || 'Authorization'),
                (this.authScheme = t.authScheme || '' === t.authScheme ? t.authScheme : 'Bearer '),
                (this.whitelistedDomains = t.whitelistedDomains || []),
                (this.blacklistedRoutes = t.blacklistedRoutes || []),
                (this.throwNoTokenError = t.throwNoTokenError || !1),
                (this.skipWhenExpired = t.skipWhenExpired);
            }
            isWhitelistedDomain(t) {
              const e = Object(H.parse)(t.url, !1, !0),
                n =
                  null !== e.hostname
                    ? `${e.hostname}${e.port && !this.standardPorts.includes(e.port) ? ':' + e.port : ''}`
                    : e.hostname;
              return (
                null === n ||
                this.whitelistedDomains.findIndex((t) =>
                  'string' == typeof t ? t === n : t instanceof RegExp && t.test(n)
                ) > -1
              );
            }
            isBlacklistedRoute(t) {
              const e = Object(H.parse)(t.url, !1, !0);
              return (
                this.blacklistedRoutes.findIndex((n) => {
                  if ('string' == typeof n) {
                    const t = Object(H.parse)(n, !1, !0);
                    return t.hostname === e.hostname && t.path === e.path;
                  }
                  return n instanceof RegExp && n.test(t.url);
                }) > -1
              );
            }
            handleInterception(t, e, n) {
              let i = !1;
              if (!t && this.throwNoTokenError) throw new Error('Could not get token from tokenGetter function.');
              return (
                this.skipWhenExpired && (i = !t || this.jwtHelper.isTokenExpired(t)),
                t && i && this.skipWhenExpired
                  ? (e = e.clone())
                  : t && (e = e.clone({ setHeaders: { [this.headerName]: `${this.authScheme}${t}` } })),
                n.handle(e)
              );
            }
            intercept(t, e) {
              if (!this.isWhitelistedDomain(t) || this.isBlacklistedRoute(t)) return e.handle(t);
              const n = this.tokenGetter(t);
              return n instanceof Promise
                ? Object(z.a)(n).pipe(Object(L.a)((n) => this.handleInterception(n, t, e)))
                : this.handleInterception(n, t, e);
            }
          };
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(B), i.fc(U));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      var $;
      let q = (() => {
        let t = ($ = class {
          constructor(t) {
            if (t)
              throw new Error(
                "JwtModule is already loaded. It should only be imported in your application's main module."
              );
          }
          static forRoot(t) {
            return {
              ngModule: $,
              providers: [
                { provide: _.a, useClass: W, multi: !0 },
                t.jwtOptionsProvider || { provide: B, useValue: t.config },
                U,
              ],
            };
          }
        });
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)(i.fc(t, 12));
            },
          })),
          t
        );
      })();
      const G = { developmentMode: !r.a.production };
      var X = n('LRne'),
        K = n('cp0P'),
        Y = n('lJxs'),
        Z = function (t) {
          return (
            (function (t) {
              return !!t && 'object' == typeof t;
            })(t) &&
            !(function (t) {
              var e = Object.prototype.toString.call(t);
              return (
                '[object RegExp]' === e ||
                '[object Date]' === e ||
                (function (t) {
                  return t.$$typeof === Q;
                })(t)
              );
            })(t)
          );
        },
        Q = 'function' == typeof Symbol && Symbol.for ? Symbol.for('react.element') : 60103;
      function J(t, e) {
        return !1 !== e.clone && e.isMergeableObject(t) ? et(Array.isArray(t) ? [] : {}, t, e) : t;
      }
      function tt(t, e, n) {
        return t.concat(e).map(function (t) {
          return J(t, n);
        });
      }
      function et(t, e, n) {
        ((n = n || {}).arrayMerge = n.arrayMerge || tt), (n.isMergeableObject = n.isMergeableObject || Z);
        var i = Array.isArray(e);
        return i === Array.isArray(t)
          ? i
            ? n.arrayMerge(t, e, n)
            : (function (t, e, n) {
                var i = {};
                return (
                  n.isMergeableObject(t) &&
                    Object.keys(t).forEach(function (e) {
                      i[e] = J(t[e], n);
                    }),
                  Object.keys(e).forEach(function (r) {
                    i[r] = n.isMergeableObject(e[r]) && t[r] ? et(t[r], e[r], n) : J(e[r], n);
                  }),
                  i
                );
              })(t, e, n)
          : J(e, n);
      }
      et.all = function (t, e) {
        if (!Array.isArray(t)) throw new Error('first argument should be an array');
        return t.reduce(function (t, n) {
          return et(t, n, e);
        }, {});
      };
      var nt = et;
      class it {
        constructor(t, e) {
          (this.http = t), (this.resources = e);
        }
        getTranslation(t) {
          const e = this.resources.map((e) => {
            const n = e.prefix + t + e.suffix;
            return this.http
              .get(n)
              .pipe(Object(w.a)((t) => (console.error('Could not find translation file:', n), Object(X.a)({}))));
          });
          return Object(K.a)(e).pipe(Object(Y.a)((t) => nt.all(t)));
        }
      }
      const rt = {
          loader: {
            provide: l.b,
            useFactory: function (t) {
              return new it(t, [
                { prefix: './assets/i18n/core/', suffix: '.json' },
                { prefix: './assets/i18n/auth/', suffix: '.json' },
                { prefix: './assets/i18n/admin/', suffix: '.json' },
              ]);
            },
            deps: [_.b],
          },
        },
        st = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      var ot = n('tmyf'),
        at = n('Dd7e');
      const ct = {
          wrappers: [{ name: 'group', component: ot.g }],
          types: [
            { name: 'app-checkbox', component: at.a },
            { name: 'game', component: ot.f },
            { name: 'email', extends: 'input', defaultOptions: { validators: { email: (t) => st.test(t.value) } } },
            { name: 'password', extends: 'input', defaultOptions: { templateOptions: { type: 'password' } } },
            { name: 'repeat', component: ot.i },
            { name: 'file', component: ot.d },
            { name: 'hide', component: ot.h },
            { name: 'autocomplete', component: ot.b, wrappers: ['form-field'] },
            { name: 'time', component: ot.j, wrappers: ['form-field'] },
            { name: 'date', component: ot.c, wrappers: ['form-field'] },
          ],
        },
        lt = {
          config: {
            tokenGetter: function () {
              const t = localStorage.getItem('configs'),
                e = JSON.parse(t);
              return null == e ? void 0 : e.token;
            },
            whitelistedDomains: r.a.jwtWhitelist,
          },
        },
        ut = {
          accessToken: r.a.rollbarToken,
          captureUncaught: !0,
          captureUnhandledRejections: !0,
          environment: r.a.production ? 'production' : 'develop',
          enabled: r.a.production,
        },
        ht = { provide: n('kmnG').b, useValue: { appearance: 'outline' } };
      class dt {
        constructor(t) {
          this.translate = t;
        }
        prePopulate(t) {
          const e = t.templateOptions || {};
          e.translate &&
            !e._translated &&
            ((e._translated = !0),
            (t.expressionProperties = Object.assign(Object.assign({}, t.expressionProperties || {}), {
              'templateOptions.label': this.translate.stream(e.label),
              'templateOptions.placeholder': this.translate.stream(e.placeholder),
            })));
        }
      }
      const pt = [
        ht,
        {
          provide: u.a,
          multi: !0,
          useFactory: function (t) {
            return { extensions: [{ name: 'translate', extension: new dt(t) }] };
          },
          deps: [l.e],
        },
      ];
      var ft = n('z6cu'),
        mt = n('7o/Q');
      class gt {
        constructor(t, e) {
          (this.count = t), (this.source = e);
        }
        call(t, e) {
          return e.subscribe(new bt(t, this.count, this.source));
        }
      }
      class bt extends mt.a {
        constructor(t, e, n) {
          super(t), (this.count = e), (this.source = n);
        }
        error(t) {
          if (!this.isStopped) {
            const { source: e, count: n } = this;
            if (0 === n) return super.error(t);
            n > -1 && (this.count = n - 1), e.subscribe(this._unsubscribeAndRecycle());
          }
        }
      }
      let _t = (() => {
          class t {
            constructor(t) {
              (this._injector = t),
                setTimeout(() => {
                  this._appNotificationService = this._injector.get(p.e);
                });
            }
            intercept(t, e) {
              return e.handle(t).pipe(
                (function (t = -1) {
                  return (e) => e.lift(new gt(t, e));
                })(1),
                Object(w.a)((t) => (this._appNotificationService.showError(t.status, t.status), Object(ft.a)(t)))
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(i.t));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        yt = (() => {
          class t {
            constructor(t) {
              (this._injector = t),
                (this._showMethods = ['PATCH', 'POST', 'PUT', 'DELETE']),
                setTimeout(() => {
                  this._appNotificationService = this._injector.get(p.e);
                });
            }
            intercept(t, e) {
              return e.handle(t).pipe(
                Object(v.a)((e) => {
                  e instanceof _.d &&
                    this._showMethods.includes(t.method) &&
                    (201 === e.status || 200 === e.status) &&
                    this._appNotificationService.showSuccess(t.method, e.status);
                })
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.fc(i.t));
            }),
            (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      var vt = n('g5Ei');
      let wt = (() => {
        class t {
          constructor(t) {
            this.rollbar = t;
          }
          handleError(t) {
            this.rollbar.error(t.originalError || t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.fc(xt));
          }),
          (t.ɵprov = i.Rb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const xt = new i.s('rollbar'),
        Ct = [
          { provide: _.a, useClass: _t, multi: !0 },
          { provide: _.a, useClass: yt, multi: !0 },
          { provide: i.o, useClass: wt },
          {
            provide: xt,
            useFactory: function () {
              return new vt(ut);
            },
          },
        ];
      var kt = n('M2ul'),
        Ot = n('bRMp'),
        St = n('auXs');
      const Et = [
        {
          path: Ot.a.AUTH.path,
          loadChildren: () =>
            Promise.all([n.e(2), n.e(1), n.e(8)])
              .then(n.bind(null, '53Xx'))
              .then((t) => t.AuthModule),
        },
        {
          path: Ot.a.ADMIN.path,
          canActivate: [St.a],
          data: { expectedRole: 'company' },
          loadChildren: () =>
            Promise.all([n.e(2), n.e(1), n.e(7)])
              .then(n.bind(null, '+cuU'))
              .then((t) => t.AdminModule),
        },
        {
          path: Ot.a.CLIENT.path,
          loadChildren: () =>
            Promise.all([n.e(2), n.e(1), n.e(9)])
              .then(n.bind(null, 'OQXL'))
              .then((t) => t.ClientModule),
        },
        { path: '**', redirectTo: Ot.a.CLIENT.path },
      ];
      let Tt = (() => {
        class t {}
        return (
          (t.ɵmod = i.Tb({ type: t })),
          (t.ɵinj = i.Sb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [[f.f.forRoot(Et, { preloadingStrategy: f.b })], f.f],
          })),
          t
        );
      })();
      var It = n('+AvP'),
        At = n('0IaG');
      const Dt = [
          b.c,
          Tt,
          _.c,
          u.i.forRoot(ct),
          l.c.forRoot(rt),
          N.a.forRoot({ maxOpened: 5 }),
          q.forRoot(lt),
          V.b.withConfig({ trickleSpeed: 200, min: 20, meteor: !1 }),
          y.c.forRoot(kt.b, G),
          I.forRoot(),
          P.forRoot(),
          F.forRoot(),
          At.c,
        ],
        jt = [...p.h, ...St.b, ...pt, ...d, ...Ct, ...It.a];
      let Rt = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: jt,
              imports: [Dt],
            })),
            t
          );
        })(),
        Pt = (() => {
          class t {}
          return (
            (t.ɵmod = i.Tb({ type: t, bootstrap: [m] })),
            (t.ɵinj = i.Sb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[s.a, g.b, Rt]],
            })),
            t
          );
        })();
      r.a.production && Object(i.X)(),
        s
          .d()
          .bootstrapModule(Pt)
          .catch((t) => console.error(t));
    },
    zZcV: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return p;
      });
      var i = n('fXoL'),
        r = n('MutI'),
        s = n('NFeN'),
        o = n('ofXK'),
        a = n('tyNb'),
        c = n('sYmb');
      function l(t, e) {
        1 & t && (i.bc(0, 'p'), i.Mc(1), i.oc(2, 'translate'), i.ac()),
          2 & t && (i.Ib(1), i.Nc(i.pc(2, 1, 'SIDENAV.APP')));
      }
      function u(t, e) {
        if ((1 & t && (i.bc(0, 'p'), i.Mc(1), i.oc(2, 'translate'), i.ac()), 2 & t)) {
          const t = i.nc().$implicit;
          i.Ib(1), i.Nc(i.pc(2, 1, 'SIDENAV.' + t.title));
        }
      }
      function h(t, e) {
        if (
          (1 & t && (i.bc(0, 'a', 5), i.bc(1, 'mat-icon'), i.Mc(2), i.ac(), i.Kc(3, u, 3, 3, 'p', 1), i.ac()), 2 & t)
        ) {
          const t = e.$implicit,
            n = i.nc();
          i.vc('routerLink', t.fullPath), i.Ib(2), i.Nc(t.icon), i.Ib(1), i.vc('ngIf', n.showTitle);
        }
      }
      function d(t, e) {
        1 & t && (i.bc(0, 'p'), i.Mc(1), i.oc(2, 'translate'), i.ac()),
          2 & t && (i.Ib(1), i.Nc(i.pc(2, 1, 'SIDENAV.EXIT')));
      }
      let p = (() => {
        class t {
          constructor() {
            (this.burgerClicked = new i.p()),
              (this.exitClicked = new i.p()),
              (this.onBurgerClick = () => this.burgerClicked.emit()),
              (this.onExitClick = () => this.exitClicked.emit());
          }
          trackByFn(t, e) {
            return t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = i.Pb({
            type: t,
            selectors: [['app-sidenav']],
            inputs: { navLinks: 'navLinks', showTitle: 'showTitle' },
            outputs: { burgerClicked: 'burgerClicked', exitClicked: 'exitClicked' },
            decls: 11,
            vars: 5,
            consts: [
              [1, 'list-item', 'header', 3, 'click'],
              [4, 'ngIf'],
              [1, 'pages'],
              [
                'class',
                'list-item',
                'routerLinkActive',
                'active',
                3,
                'routerLink',
                4,
                'ngFor',
                'ngForOf',
                'ngForTrackBy',
              ],
              [1, 'list-item', 'footer', 3, 'click'],
              ['routerLinkActive', 'active', 1, 'list-item', 3, 'routerLink'],
            ],
            template: function (t, e) {
              1 & t &&
                (i.bc(0, 'mat-nav-list'),
                i.bc(1, 'div', 0),
                i.jc('click', function () {
                  return e.onBurgerClick();
                }),
                i.bc(2, 'mat-icon'),
                i.Mc(3),
                i.ac(),
                i.Kc(4, l, 3, 3, 'p', 1),
                i.ac(),
                i.bc(5, 'div', 2),
                i.Kc(6, h, 4, 3, 'a', 3),
                i.ac(),
                i.bc(7, 'div', 4),
                i.jc('click', function () {
                  return e.onExitClick();
                }),
                i.bc(8, 'mat-icon'),
                i.Mc(9, 'exit_to_app'),
                i.ac(),
                i.Kc(10, d, 3, 3, 'p', 1),
                i.ac(),
                i.ac()),
                2 & t &&
                  (i.Ib(3),
                  i.Nc(e.showTitle ? 'menu_open' : 'menu'),
                  i.Ib(1),
                  i.vc('ngIf', e.showTitle),
                  i.Ib(2),
                  i.vc('ngForOf', e.navLinks)('ngForTrackBy', e.trackByFn),
                  i.Ib(4),
                  i.vc('ngIf', e.showTitle));
            },
            directives: [r.c, s.a, o.l, o.k, a.e, a.d],
            pipes: [c.d],
            styles: [
              'mat-nav-list[_ngcontent-%COMP%]{padding-top:0;background-color:#2d323e;height:100%;display:flex;flex-direction:column;justify-content:space-between}mat-nav-list[_ngcontent-%COMP%]   .pages[_ngcontent-%COMP%]{flex:1}mat-nav-list[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]{display:flex;align-items:center;opacity:.5;padding:0 16px;height:56px;color:#fff;cursor:pointer}mat-nav-list[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;padding-left:16px;font-size:16px}mat-nav-list[_ngcontent-%COMP%]   .list-item.active[_ngcontent-%COMP%], mat-nav-list[_ngcontent-%COMP%]   .list-item[_ngcontent-%COMP%]:hover{opacity:1}mat-nav-list[_ngcontent-%COMP%]   .list-item.footer[_ngcontent-%COMP%], mat-nav-list[_ngcontent-%COMP%]   .list-item.header[_ngcontent-%COMP%]{opacity:1;height:64px!important;background-color:#1e2129}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
    },
    zn8P: function (t, e) {
      function n(t) {
        return Promise.resolve().then(function () {
          var e = new Error("Cannot find module '" + t + "'");
          throw ((e.code = 'MODULE_NOT_FOUND'), e);
        });
      }
      (n.keys = function () {
        return [];
      }),
        (n.resolve = n),
        (t.exports = n),
        (n.id = 'zn8P');
    },
  },
  [[0, 0]],
]);
